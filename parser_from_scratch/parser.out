Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CONST
    GOTO
    UNCLOSED_CHAR
    UNCLOSED_STR

Grammar

Rule 0     S' -> start
Rule 1     empty -> <empty>
Rule 2     Literal -> BOOL_LIT
Rule 3     Literal -> NULL_LIT
Rule 4     Literal -> DECIMAL_LIT
Rule 5     Literal -> HEX_LIT
Rule 6     Literal -> OCTAL_LIT
Rule 7     Literal -> BINARY_LIT
Rule 8     Literal -> FLOAT_DEC_LIT
Rule 9     Literal -> FLOAT_HEX_LIT
Rule 10    Literal -> STRING_LIT
Rule 11    Literal -> CHAR_LIT
Rule 12    InterfaceDeclaration -> NormalInterfaceDeclaration
Rule 13    InterfaceDeclaration -> AnnotationTypeDeclaration
Rule 14    NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
Rule 15    ZooTypeParameters -> TypeParameters
Rule 16    ZooTypeParameters -> empty
Rule 17    ZooExtendsInterfaces -> ExtendsInterfaces
Rule 18    ZooExtendsInterfaces -> empty
Rule 19    InterfaceModifierS -> InterfaceModifier InterfaceModifierS
Rule 20    InterfaceModifierS -> empty
Rule 21    InterfaceModifier -> Annotation
Rule 22    InterfaceModifier -> PUBLIC
Rule 23    InterfaceModifier -> PROTECTED
Rule 24    InterfaceModifier -> PRIVATE
Rule 25    InterfaceModifier -> ABSTRACT
Rule 26    InterfaceModifier -> STATIC
Rule 27    InterfaceModifier -> STRICTFP
Rule 28    ExtendsInterfaces -> EXTENDS InterfaceTypeList
Rule 29    InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE
Rule 30    InterfaceMemberDeclarationS -> InterfaceMemberDeclaration InterfaceMemberDeclarationS
Rule 31    InterfaceMemberDeclarationS -> empty
Rule 32    InterfaceMemberDeclaration -> ConstantDeclaration
Rule 33    InterfaceMemberDeclaration -> InterfaceMethodDeclaration
Rule 34    InterfaceMemberDeclaration -> ClassDeclaration
Rule 35    InterfaceMemberDeclaration -> InterfaceDeclaration
Rule 36    InterfaceMemberDeclaration -> SEMICOLON
Rule 37    ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
Rule 38    ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON
Rule 39    ConstantModifierS -> ConstantModifier ConstantModifierS
Rule 40    ConstantModifierS -> empty
Rule 41    ConstantModifier -> Annotation
Rule 42    ConstantModifier -> PUBLIC
Rule 43    ConstantModifier -> STATIC
Rule 44    ConstantModifier -> FINAL
Rule 45    InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody
Rule 46    InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS
Rule 47    InterfaceMethodModifierS -> empty
Rule 48    InterfaceMethodModifier -> Annotation
Rule 49    InterfaceMethodModifier -> PUBLIC
Rule 50    InterfaceMethodModifier -> ABSTRACT
Rule 51    InterfaceMethodModifier -> DEFAULT
Rule 52    InterfaceMethodModifier -> STATIC
Rule 53    InterfaceMethodModifier -> STRICTFP
Rule 54    AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
Rule 55    AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE
Rule 56    AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS
Rule 57    AnnotationTypeMemberDeclarationS -> empty
Rule 58    AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration
Rule 59    AnnotationTypeMemberDeclaration -> ConstantDeclaration
Rule 60    AnnotationTypeMemberDeclaration -> ClassDeclaration
Rule 61    AnnotationTypeMemberDeclaration -> InterfaceDeclaration
Rule 62    AnnotationTypeMemberDeclaration -> SEMICOLON
Rule 63    AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
Rule 64    AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
Rule 65    ZooDims -> Dims
Rule 66    ZooDims -> empty
Rule 67    ZooDefaultValue -> DefaultValue
Rule 68    ZooDefaultValue -> empty
Rule 69    AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS
Rule 70    AnnotationTypeElementModifierS -> empty
Rule 71    AnnotationTypeElementModifier -> Annotation
Rule 72    AnnotationTypeElementModifier -> PUBLIC
Rule 73    AnnotationTypeElementModifier -> ABSTRACT
Rule 74    DefaultValue -> DEFAULT ElementValue
Rule 75    Annotation -> NormalAnnotation
Rule 76    Annotation -> MarkerAnnotation
Rule 77    Annotation -> SingleElementAnnotation
Rule 78    NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
Rule 79    ZooElementValuePairList -> ElementValuePairList
Rule 80    ZooElementValuePairList -> empty
Rule 81    ElementValuePairList -> ElementValuePair COMMAElementValuePairS
Rule 82    COMMAElementValuePairS -> COMMA ElementValuePair COMMAElementValuePairS
Rule 83    COMMAElementValuePairS -> empty
Rule 84    ElementValuePair -> IDENT ASSIGN ElementValue
Rule 85    ElementValue -> ConditionalExpression
Rule 86    ElementValue -> ElementValueArrayInitializer
Rule 87    ElementValue -> Annotation
Rule 88    ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE
Rule 89    ZooElementValueList -> ElementValueList
Rule 90    ZooElementValueList -> empty
Rule 91    ElementValueList -> ElementValue COMMAElementValueS
Rule 92    COMMAElementValueS -> COMMA ElementValue COMMAElementValueS
Rule 93    COMMAElementValueS -> empty
Rule 94    MarkerAnnotation -> ATRATE TypeName
Rule 95    SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN
Rule 96    ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
Rule 97    ZooVariableInitializerList -> VariableInitializerList
Rule 98    ZooVariableInitializerList -> empty
Rule 99    VariableInitializerList -> VariableInitializer COMMAVariableInitializerS
Rule 100   COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS
Rule 101   COMMAVariableInitializerS -> empty
Rule 102   Primary -> PrimaryNoNewArray
Rule 103   Primary -> ArrayCreationExpression
Rule 104   PrimaryNoNewArray -> Literal
Rule 105   PrimaryNoNewArray -> ClassLiteral
Rule 106   PrimaryNoNewArray -> THIS
Rule 107   PrimaryNoNewArray -> TypeName PERIOD THIS
Rule 108   PrimaryNoNewArray -> LPAREN Expression RPAREN
Rule 109   PrimaryNoNewArray -> ClassInstanceCreationExpression
Rule 110   PrimaryNoNewArray -> FieldAccess
Rule 111   PrimaryNoNewArray -> ArrayAccess
Rule 112   PrimaryNoNewArray -> MethodInvocation
Rule 113   PrimaryNoNewArray -> MethodReference
Rule 114   ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS
Rule 115   ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS
Rule 116   ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS
Rule 117   ClassLiteral -> VOID PERIOD CLASS
Rule 118   LBRACKRBRACKS -> LBRACK RBRACK LBRACKRBRACKS
Rule 119   LBRACKRBRACKS -> empty
Rule 120   ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression
Rule 121   ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
Rule 122   ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression
Rule 123   ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression
Rule 124   UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
Rule 125   ZooTypeArguments -> TypeArguments
Rule 126   ZooTypeArguments -> empty
Rule 127   ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
Rule 128   ClassOrInterfaceTypeToInstantiate -> IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
Rule 129   AnnotationS -> Annotation AnnotationS
Rule 130   AnnotationS -> Annotation
Rule 131   ZooTypeArgumentsOrDiamond -> TypeArgumentsOrDiamond
Rule 132   ZooTypeArgumentsOrDiamond -> empty
Rule 133   PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
Rule 134   PERIODAnnotationSIDENTS -> PERIOD IDENT PERIODAnnotationSIDENTS
Rule 135   PERIODAnnotationSIDENTS -> empty
Rule 136   TypeArgumentsOrDiamond -> TypeArguments
Rule 137   TypeArgumentsOrDiamond -> LSS GTR
Rule 138   FieldAccess -> Primary PERIOD IDENT
Rule 139   FieldAccess -> SUPER PERIOD IDENT
Rule 140   FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT
Rule 141   ArrayAccess -> ExpressionName LBRACK Expression RBRACK
Rule 142   ArrayAccess -> IDENT LBRACK Expression RBRACK
Rule 143   ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK
Rule 144   MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN
Rule 145   MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 146   MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 147   MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 148   MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 149   MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 150   MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 151   ArgumentList -> Expression COMMAExpressionS
Rule 152   COMMAExpressionS -> COMMA Expression COMMAExpressionS
Rule 153   COMMAExpressionS -> empty
Rule 154   MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT
Rule 155   MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT
Rule 156   MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT
Rule 157   MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT
Rule 158   MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT
Rule 159   MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
Rule 160   MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW
Rule 161   MethodReference -> ArrayType COLON_SEP NEW
Rule 162   ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims
Rule 163   ArrayCreationExpression -> NEW ClassType DimExprs ZooDims
Rule 164   ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer
Rule 165   ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer
Rule 166   DimExprs -> DimExpr DimExprS
Rule 167   DimExprS -> DimExpr DimExprS
Rule 168   DimExprS -> empty
Rule 169   DimExpr -> AnnotationS LBRACK Expression RBRACK
Rule 170   DimExpr -> LBRACK Expression RBRACK
Rule 171   Expression -> LambdaExpression
Rule 172   Expression -> AssignmentExpression
Rule 173   LambdaExpression -> LambdaParameters ARROW LambdaBody
Rule 174   LambdaParameters -> IDENT
Rule 175   LambdaParameters -> LPAREN ZooFormalParameterList RPAREN
Rule 176   LambdaParameters -> LPAREN InferredFormalParameterList RPAREN
Rule 177   InferredFormalParameterList -> IDENT COMMAIDENTS
Rule 178   COMMAIDENTS -> COMMA IDENT COMMAIDENTS
Rule 179   COMMAIDENTS -> empty
Rule 180   LambdaBody -> Expression
Rule 181   LambdaBody -> Block
Rule 182   AssignmentExpression -> ConditionalExpression
Rule 183   AssignmentExpression -> Assignment
Rule 184   Assignment -> LeftHandSide AssignmentOperator Expression
Rule 185   LeftHandSide -> ExpressionName
Rule 186   LeftHandSide -> IDENT
Rule 187   LeftHandSide -> FieldAccess
Rule 188   LeftHandSide -> ArrayAccess
Rule 189   AssignmentOperator -> ASSIGN
Rule 190   AssignmentOperator -> MUL_ASSIGN
Rule 191   AssignmentOperator -> QUO_ASSIGN
Rule 192   AssignmentOperator -> REM_ASSIGN
Rule 193   AssignmentOperator -> ADD_ASSIGN
Rule 194   AssignmentOperator -> SUB_ASSIGN
Rule 195   AssignmentOperator -> SHL_ASSIGN
Rule 196   AssignmentOperator -> SHR_ASSIGN
Rule 197   AssignmentOperator -> SHR_UN_ASSIGN
Rule 198   AssignmentOperator -> AND_ASSIGN
Rule 199   AssignmentOperator -> XOR_ASSIGN
Rule 200   AssignmentOperator -> OR_ASSIGN
Rule 201   ConditionalExpression -> ConditionalOrExpression
Rule 202   ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression
Rule 203   ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression
Rule 204   ConditionalOrExpression -> ConditionalAndExpression
Rule 205   ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression
Rule 206   ConditionalAndExpression -> InclusiveOrExpression
Rule 207   ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression
Rule 208   InclusiveOrExpression -> ExclusiveOrExpression
Rule 209   InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression
Rule 210   ExclusiveOrExpression -> AndExpression
Rule 211   ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression
Rule 212   AndExpression -> EqualityExpression
Rule 213   AndExpression -> AndExpression AND EqualityExpression
Rule 214   EqualityExpression -> RelationalExpression
Rule 215   EqualityExpression -> EqualityExpression EQL RelationalExpression
Rule 216   EqualityExpression -> EqualityExpression NEQ RelationalExpression
Rule 217   RelationalExpression -> ShiftExpression
Rule 218   RelationalExpression -> RelationalExpression LSS ShiftExpression
Rule 219   RelationalExpression -> RelationalExpression GTR ShiftExpression
Rule 220   RelationalExpression -> RelationalExpression LEQ ShiftExpression
Rule 221   RelationalExpression -> RelationalExpression GEQ ShiftExpression
Rule 222   RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType
Rule 223   ShiftExpression -> AdditiveExpression
Rule 224   ShiftExpression -> ShiftExpression SHL AdditiveExpression
Rule 225   ShiftExpression -> ShiftExpression SHR AdditiveExpression
Rule 226   ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression
Rule 227   AdditiveExpression -> MultiplicativeExpression
Rule 228   AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression
Rule 229   AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression
Rule 230   MultiplicativeExpression -> UnaryExpression
Rule 231   MultiplicativeExpression -> IDENT
Rule 232   MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression
Rule 233   MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression
Rule 234   MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression
Rule 235   MultiplicativeExpression -> MultiplicativeExpression MUL IDENT
Rule 236   MultiplicativeExpression -> MultiplicativeExpression QUO IDENT
Rule 237   MultiplicativeExpression -> MultiplicativeExpression REM IDENT
Rule 238   UnaryExpression -> PreIncrementExpression
Rule 239   UnaryExpression -> PreDecrementExpression
Rule 240   UnaryExpression -> ADD UnaryExpression
Rule 241   UnaryExpression -> SUB UnaryExpression
Rule 242   UnaryExpression -> UnaryExpressionNotPlusMinus
Rule 243   PreIncrementExpression -> INC UnaryExpression
Rule 244   PreIncrementExpression -> INC IDENT
Rule 245   PreDecrementExpression -> DEC UnaryExpression
Rule 246   PreDecrementExpression -> DEC IDENT
Rule 247   UnaryExpressionNotPlusMinus -> PostfixExpression
Rule 248   UnaryExpressionNotPlusMinus -> LNOT UnaryExpression
Rule 249   UnaryExpressionNotPlusMinus -> NOT UnaryExpression
Rule 250   UnaryExpressionNotPlusMinus -> LNOT IDENT
Rule 251   UnaryExpressionNotPlusMinus -> NOT IDENT
Rule 252   UnaryExpressionNotPlusMinus -> CastExpression
Rule 253   PostfixExpression -> Primary
Rule 254   PostfixExpression -> ExpressionName
Rule 255   PostfixExpression -> PostIncrementExpression
Rule 256   PostfixExpression -> PostDecrementExpression
Rule 257   PostIncrementExpression -> PostfixExpression INC
Rule 258   PostIncrementExpression -> IDENT INC
Rule 259   PostDecrementExpression -> PostfixExpression DEC
Rule 260   PostDecrementExpression -> IDENT DEC
Rule 261   CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression
Rule 262   CastExpression -> LPAREN PrimitiveType RPAREN IDENT
Rule 263   CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
Rule 264   CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
Rule 265   CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
Rule 266   AdditionalBoundS -> AdditionalBound AdditionalBoundS
Rule 267   AdditionalBoundS -> empty
Rule 268   ConstantExpression -> Expression
Rule 269   CompilationUnit -> ZooPackageDeclaration ImportDeclarationS TypeDeclarationS
Rule 270   ZooPackageDeclaration -> PackageDeclaration
Rule 271   ZooPackageDeclaration -> empty
Rule 272   ImportDeclarationS -> ImportDeclaration ImportDeclarationS
Rule 273   ImportDeclarationS -> empty
Rule 274   TypeDeclarationS -> TypeDeclaration TypeDeclarationS
Rule 275   TypeDeclarationS -> empty
Rule 276   PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON
Rule 277   PackageModifierS -> PackageModifier PackageModifierS
Rule 278   PackageModifierS -> empty
Rule 279   PERIODIDENTS -> PERIOD IDENT PERIODIDENTS
Rule 280   PERIODIDENTS -> empty
Rule 281   PackageModifier -> Annotation
Rule 282   ImportDeclaration -> SingleTypeImportDeclaration
Rule 283   ImportDeclaration -> TypeImportOnDemandDeclaration
Rule 284   ImportDeclaration -> SingleStaticImportDeclaration
Rule 285   ImportDeclaration -> StaticImportOnDemandDeclaration
Rule 286   SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON
Rule 287   TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON
Rule 288   TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON
Rule 289   SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON
Rule 290   StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON
Rule 291   TypeDeclaration -> ClassDeclaration
Rule 292   TypeDeclaration -> InterfaceDeclaration
Rule 293   TypeDeclaration -> SEMICOLON
Rule 294   TypeName -> ExpressionName
Rule 295   ExpressionName -> PERIOD IDENT
Rule 296   ExpressionName -> ExpressionName PERIOD IDENT
Rule 297   ClassDeclaration -> NormalClassDeclaration
Rule 298   ClassDeclaration -> EnumDeclaration
Rule 299   SuperClass -> EXTENDS ClassType
Rule 300   ZooSuperClass -> SuperClass
Rule 301   ZooSuperClass -> empty
Rule 302   ZooSuperinterfaces -> Superinterfaces
Rule 303   ZooSuperinterfaces -> empty
Rule 304   NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters
Rule 305   NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody
Rule 306   ClassModifier -> InterfaceModifier
Rule 307   ClassModifier -> FINAL
Rule 308   TypeParameters -> LSS TypeParameterList GTR
Rule 309   COMMMATypeParameterS -> COMMA TypeParameter COMMMATypeParameterS
Rule 310   COMMMATypeParameterS -> empty
Rule 311   TypeParameterList -> TypeParameter COMMMATypeParameterS
Rule 312   Superclass -> EXTENDS ClassType
Rule 313   Superinterfaces -> IMPLEMENTS InterfaceTypeList
Rule 314   COMMAInterfaceTypeS -> COMMA ClassType COMMAInterfaceTypeS
Rule 315   COMMAInterfaceTypeS -> empty
Rule 316   InterfaceTypeList -> ClassType COMMAInterfaceTypeS
Rule 317   ClassBodyDeclarationS -> ClassBodyDeclaration ClassBodyDeclarationS
Rule 318   ClassBodyDeclarationS -> empty
Rule 319   ClassBody -> LBRACE ClassBodyDeclarationS RBRACE
Rule 320   ClassBodyDeclaration -> ClassMemberDeclaration
Rule 321   ClassBodyDeclaration -> Block
Rule 322   ClassBodyDeclaration -> StaticInitializer
Rule 323   ClassBodyDeclaration -> ConstructorDeclaration
Rule 324   ClassMemberDeclaration -> FieldDeclaration
Rule 325   ClassMemberDeclaration -> MethodDeclaration
Rule 326   ClassMemberDeclaration -> ClassDeclaration
Rule 327   ClassMemberDeclaration -> InterfaceDeclaration
Rule 328   ClassMemberDeclaration -> SEMICOLON
Rule 329   FieldModifierS -> FieldModifier FieldModifierS
Rule 330   FieldModifierS -> empty
Rule 331   FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON
Rule 332   FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON
Rule 333   FieldModifier -> Annotation
Rule 334   FieldModifier -> PUBLIC
Rule 335   FieldModifier -> PROTECTED
Rule 336   FieldModifier -> PRIVATE
Rule 337   FieldModifier -> STATIC
Rule 338   FieldModifier -> FINAL
Rule 339   FieldModifier -> TRANSIENT
Rule 340   FieldModifier -> VOLATILE
Rule 341   COMMAVariableDeclaratorS -> COMMA VariableDeclarator COMMAVariableDeclaratorS
Rule 342   COMMAVariableDeclaratorS -> empty
Rule 343   VariableDeclaratorList -> VariableDeclarator COMMAVariableDeclaratorS
Rule 344   ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer
Rule 345   ZooASSIGNVariableInitializer -> empty
Rule 346   VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer
Rule 347   VariableDeclaratorId -> IDENT ZooDims
Rule 348   VariableInitializer -> Expression
Rule 349   VariableInitializer -> ArrayInitializer
Rule 350   UnannType -> UnannPrimitiveType
Rule 351   UnannType -> UnannReferenceType
Rule 352   UnannPrimitiveType -> NumericType
Rule 353   UnannPrimitiveType -> BOOLEAN
Rule 354   UnannReferenceType -> UnannClassOrInterfaceType
Rule 355   UnannReferenceType -> UnannArrayType
Rule 356   UnannClassOrInterfaceType -> UnannClassType
Rule 357   UnannClassOrInterfaceType -> UnannInterfaceType
Rule 358   UnannClassType -> IDENT ZooTypeArguments
Rule 359   UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
Rule 360   UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
Rule 361   UnannInterfaceType -> UnannClassType
Rule 362   UnannArrayType -> UnannPrimitiveType Dims
Rule 363   UnannArrayType -> UnannClassOrInterfaceType Dims
Rule 364   UnannArrayType -> IDENT Dims
Rule 365   MethodModifierS -> MethodModifier MethodModifierS
Rule 366   MethodModifierS -> empty
Rule 367   MethodDeclaration -> MethodModifierS MethodHeader MethodBody
Rule 368   MethodModifier -> Annotation
Rule 369   MethodModifier -> PUBLIC
Rule 370   MethodModifier -> PROTECTED
Rule 371   MethodModifier -> PRIVATE
Rule 372   MethodModifier -> ABSTRACT
Rule 373   MethodModifier -> STATIC
Rule 374   MethodModifier -> FINAL
Rule 375   MethodModifier -> SYNCHRONIZED
Rule 376   MethodModifier -> NATIVE
Rule 377   MethodModifier -> STRICTFP
Rule 378   ZooThrows -> Throws
Rule 379   ZooThrows -> empty
Rule 380   MethodHeader -> Result MethodDeclarator ZooThrows
Rule 381   MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows
Rule 382   MethodHeader -> TypeParameters Result MethodDeclarator ZooThrows
Rule 383   Result -> UnannType
Rule 384   Result -> IDENT
Rule 385   Result -> VOID
Rule 386   ZooFormalParameterList -> FormalParameterList
Rule 387   ZooFormalParameterList -> empty
Rule 388   MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims
Rule 389   FormalParameterList -> ReceiverParameter
Rule 390   FormalParameterList -> FormalParameters COMMA LastFormalParameter
Rule 391   FormalParameterList -> LastFormalParameter
Rule 392   COMMAFormalParameterS -> COMMA FormalParameter COMMAFormalParameterS
Rule 393   COMMAFormalParameterS -> empty
Rule 394   FormalParameters -> FormalParameter COMMAFormalParameterS
Rule 395   FormalParameters -> ReceiverParameter COMMAFormalParameterS
Rule 396   ZooVariableModifier -> VariableModifier
Rule 397   ZooVariableModifier -> empty
Rule 398   FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId
Rule 399   FormalParameter -> ZooVariableModifier IDENT VariableDeclaratorId
Rule 400   VariableModifier -> Annotation
Rule 401   VariableModifier -> FINAL
Rule 402   LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
Rule 403   LastFormalParameter -> VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId
Rule 404   LastFormalParameter -> FormalParameter
Rule 405   LastFormalParameter -> VariableModifierS UnannType ELLIPSIS VariableDeclaratorId
Rule 406   LastFormalParameter -> VariableModifierS IDENT ELLIPSIS VariableDeclaratorId
Rule 407   ZooIDENTPERIOD -> IDENT PERIOD
Rule 408   ZooIDENTPERIOD -> empty
Rule 409   ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS
Rule 410   ReceiverParameter -> AnnotationS IDENT ZooIDENTPERIOD THIS
Rule 411   ReceiverParameter -> UnannType ZooIDENTPERIOD THIS
Rule 412   ReceiverParameter -> IDENT ZooIDENTPERIOD THIS
Rule 413   Throws -> THROWS ExceptionTypeList
Rule 414   COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS
Rule 415   COMMAExceptionTypeS -> empty
Rule 416   ExceptionTypeList -> ExceptionType COMMAExceptionTypeS
Rule 417   ExceptionType -> ClassType
Rule 418   ExceptionType -> TypeVariable
Rule 419   ExceptionType -> IDENT
Rule 420   MethodBody -> Block
Rule 421   MethodBody -> SEMICOLON
Rule 422   StaticInitializer -> STATIC Block
Rule 423   ConstructorModifierS -> ConstructorModifier ConstructorModifierS
Rule 424   ConstructorModifierS -> empty
Rule 425   ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
Rule 426   ConstructorModifier -> Annotation
Rule 427   ConstructorModifier -> PUBLIC
Rule 428   ConstructorModifier -> PROTECTED
Rule 429   ConstructorModifier -> PRIVATE
Rule 430   ConstructorDeclarator -> ZooTypeParameters IDENT LPAREN ZooFormalParameterList RPAREN
Rule 431   ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE
Rule 432   ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation
Rule 433   ZooExplicitConstructorInvocation -> empty
Rule 434   ZooArgumentList -> ArgumentList
Rule 435   ZooArgumentList -> empty
Rule 436   ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 437   ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 438   ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 439   ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 440   ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 441   ClassModifierS -> ClassModifier ClassModifierS
Rule 442   ClassModifierS -> empty
Rule 443   EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
Rule 444   ZooEnumConstantList -> EnumConstantList
Rule 445   ZooEnumConstantList -> empty
Rule 446   ZooCOMMA -> COMMA
Rule 447   ZooCOMMA -> empty
Rule 448   ZooEnumBodyDeclarations -> EnumBodyDeclarations
Rule 449   ZooEnumBodyDeclarations -> empty
Rule 450   EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE
Rule 451   COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS
Rule 452   COMMAEnumConstantS -> empty
Rule 453   EnumConstantList -> EnumConstant COMMAEnumConstantS
Rule 454   EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody
Rule 455   EnumConstantModifierS -> EnumConstantModifier EnumConstantModifierS
Rule 456   EnumConstantModifierS -> empty
Rule 457   ZooClassBody -> ClassBody
Rule 458   ZooClassBody -> empty
Rule 459   ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN
Rule 460   ZooLPARENZooArgumentListRPAREN -> empty
Rule 461   EnumConstantModifier -> Annotation
Rule 462   EnumBodyDeclarations -> SEMICOLON ClassBodyDeclarationS
Rule 463   Type -> PrimitiveType
Rule 464   Type -> ReferenceType
Rule 465   PrimitiveType -> AnnotationS NumericType
Rule 466   PrimitiveType -> NumericType
Rule 467   PrimitiveType -> AnnotationS BOOLEAN
Rule 468   PrimitiveType -> BOOLEAN
Rule 469   NumericType -> IntegralType
Rule 470   NumericType -> FloatingPointType
Rule 471   IntegralType -> BYTE
Rule 472   IntegralType -> SHORT
Rule 473   IntegralType -> INT
Rule 474   IntegralType -> LONG
Rule 475   IntegralType -> CHAR
Rule 476   FloatingPointType -> FLOAT
Rule 477   FloatingPointType -> DOUBLE
Rule 478   ReferenceType -> ClassType
Rule 479   ReferenceType -> TypeVariable
Rule 480   ReferenceType -> IDENT
Rule 481   ReferenceType -> ArrayType
Rule 482   ClassType -> TypeVariable ZooTypeArguments
Rule 483   ClassType -> IDENT ZooTypeArguments
Rule 484   ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments
Rule 485   ClassType -> ClassType PERIOD IDENT ZooTypeArguments
Rule 486   TypeVariable -> AnnotationS IDENT
Rule 487   ArrayType -> PrimitiveType Dims
Rule 488   ArrayType -> ClassType Dims
Rule 489   ArrayType -> TypeVariable Dims
Rule 490   ArrayType -> IDENT Dims
Rule 491   Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
Rule 492   Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES
Rule 493   AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
Rule 494   AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES
Rule 495   AnnotationSLBRACERBRACES -> empty
Rule 496   TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound
Rule 497   TypeParameterModifierS -> TypeParameterModifier TypeParameterModifierS
Rule 498   TypeParameterModifierS -> empty
Rule 499   ZooTypeBound -> TypeBound
Rule 500   ZooTypeBound -> empty
Rule 501   TypeParameterModifier -> Annotation
Rule 502   TypeBound -> EXTENDS TypeVariable
Rule 503   TypeBound -> EXTENDS IDENT
Rule 504   TypeBound -> EXTENDS ClassType AdditionalBoundS
Rule 505   AdditionalBound -> AND ClassType
Rule 506   TypeArguments -> LSS TypeArgumentList GTR
Rule 507   TypeArgumentList -> TypeArgument COMMATypeArgumentS
Rule 508   COMMATypeArgumentS -> COMMA TypeArgument COMMATypeArgumentS
Rule 509   COMMATypeArgumentS -> empty
Rule 510   TypeArgument -> ReferenceType
Rule 511   TypeArgument -> Wildcard
Rule 512   Wildcard -> AnnotationS QUES ZooWildcardBounds
Rule 513   Wildcard -> QUES ZooWildcardBounds
Rule 514   ZooWildcardBounds -> WildcardBounds
Rule 515   ZooWildcardBounds -> empty
Rule 516   WildcardBounds -> EXTENDS ReferenceType
Rule 517   WildcardBounds -> SUPER ReferenceType
Rule 518   Block -> LBRACE ZooBlockStatements RBRACE
Rule 519   ZooBlockStatements -> BlockStatements
Rule 520   ZooBlockStatements -> empty
Rule 521   BlockStatements -> BlockStatement BlockStatementS
Rule 522   BlockStatementS -> BlockStatement BlockStatementS
Rule 523   BlockStatementS -> empty
Rule 524   BlockStatement -> LocalVariableDeclarationStatement
Rule 525   BlockStatement -> ClassDeclaration
Rule 526   BlockStatement -> Statement
Rule 527   LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON
Rule 528   LocalVariableDeclaration -> VariableModifierS UnannType VariableDeclaratorList
Rule 529   LocalVariableDeclaration -> VariableModifierS IDENT VariableDeclaratorList
Rule 530   VariableModifierS -> VariableModifier VariableModifierS
Rule 531   VariableModifierS -> empty
Rule 532   Statement -> StatementWithoutTrailingSubstatement
Rule 533   Statement -> LabeledStatement
Rule 534   Statement -> IfThenStatement
Rule 535   Statement -> IfThenElseStatement
Rule 536   Statement -> WhileStatement
Rule 537   Statement -> ForStatement
Rule 538   StatementNoShortIf -> StatementWithoutTrailingSubstatement
Rule 539   StatementNoShortIf -> LabeledStatementNoShortIf
Rule 540   StatementNoShortIf -> IfThenElseStatementNoShortIf
Rule 541   StatementNoShortIf -> WhileStatementNoShortIf
Rule 542   StatementNoShortIf -> ForStatementNoShortIf
Rule 543   StatementWithoutTrailingSubstatement -> Block
Rule 544   StatementWithoutTrailingSubstatement -> EmptyStatement
Rule 545   StatementWithoutTrailingSubstatement -> ExpressionStatement
Rule 546   StatementWithoutTrailingSubstatement -> AssertStatement
Rule 547   StatementWithoutTrailingSubstatement -> SwitchStatement
Rule 548   StatementWithoutTrailingSubstatement -> DoStatement
Rule 549   StatementWithoutTrailingSubstatement -> BreakStatement
Rule 550   StatementWithoutTrailingSubstatement -> ContinueStatement
Rule 551   StatementWithoutTrailingSubstatement -> ReturnStatement
Rule 552   StatementWithoutTrailingSubstatement -> SynchronizedStatement
Rule 553   StatementWithoutTrailingSubstatement -> ThrowStatement
Rule 554   StatementWithoutTrailingSubstatement -> TryStatement
Rule 555   EmptyStatement -> SEMICOLON
Rule 556   LabeledStatement -> IDENT COLON Statement
Rule 557   LabeledStatementNoShortIf -> IDENT COLON StatementNoShortIf
Rule 558   ExpressionStatement -> StatementExpression SEMICOLON
Rule 559   StatementExpression -> Assignment
Rule 560   StatementExpression -> PreIncrementExpression
Rule 561   StatementExpression -> PreDecrementExpression
Rule 562   StatementExpression -> PostIncrementExpression
Rule 563   StatementExpression -> PostDecrementExpression
Rule 564   StatementExpression -> MethodInvocation
Rule 565   StatementExpression -> ClassInstanceCreationExpression
Rule 566   IfThenStatement -> IF LPAREN Expression RPAREN Statement
Rule 567   IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
Rule 568   IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
Rule 569   AssertStatement -> ASSERT Expression SEMICOLON
Rule 570   AssertStatement -> ASSERT Expression COLON Expression SEMICOLON
Rule 571   SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock
Rule 572   SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE
Rule 573   SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS
Rule 574   SwitchBlockStatementGroupS -> empty
Rule 575   SwitchBlockStatementGroup -> SwitchLabels BlockStatements
Rule 576   SwitchLabels -> SwitchLabel SwitchLabelS
Rule 577   SwitchLabelS -> SwitchLabel SwitchLabelS
Rule 578   SwitchLabelS -> empty
Rule 579   SwitchLabel -> CASE ConstantExpression COLON
Rule 580   SwitchLabel -> CASE IDENT COLON
Rule 581   SwitchLabel -> DEFAULT COLON
Rule 582   WhileStatement -> WHILE LPAREN Expression RPAREN Statement
Rule 583   WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN StatementNoShortIf
Rule 584   DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
Rule 585   ForStatement -> BasicForStatement
Rule 586   ForStatement -> EnhancedForStatement
Rule 587   ForStatementNoShortIf -> BasicForStatementNoShortIf
Rule 588   ForStatementNoShortIf -> EnhancedForStatementNoShortIf
Rule 589   BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
Rule 590   ZooForUpdate -> ForUpdate
Rule 591   ZooForUpdate -> empty
Rule 592   ZooExpression -> Expression
Rule 593   ZooExpression -> empty
Rule 594   ZooForInit -> ForInit
Rule 595   ZooForInit -> empty
Rule 596   BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
Rule 597   ForInit -> StatementExpressionList
Rule 598   ForInit -> LocalVariableDeclaration
Rule 599   ForUpdate -> StatementExpressionList
Rule 600   StatementExpressionList -> StatementExpression COMMAStatementExpressionS
Rule 601   COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS
Rule 602   COMMAStatementExpressionS -> empty
Rule 603   EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
Rule 604   EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
Rule 605   EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
Rule 606   EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
Rule 607   BreakStatement -> BREAK ZooIDENT SEMICOLON
Rule 608   ZooIDENT -> IDENT
Rule 609   ZooIDENT -> empty
Rule 610   ContinueStatement -> CONTINUE ZooIDENT SEMICOLON
Rule 611   ReturnStatement -> RETURN ZooExpression SEMICOLON
Rule 612   ThrowStatement -> THROW Expression SEMICOLON
Rule 613   SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block
Rule 614   TryStatement -> TRY Block Catches
Rule 615   TryStatement -> TRY Block ZooCatches Finally
Rule 616   TryStatement -> TryWithResourcesStatement
Rule 617   ZooCatches -> Catches
Rule 618   ZooCatches -> empty
Rule 619   Catches -> CatchClause CatchClauseS
Rule 620   CatchClauseS -> CatchClause CatchClauseS
Rule 621   CatchClauseS -> empty
Rule 622   CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block
Rule 623   CatchFormalParameter -> VariableModifierS CatchType VariableDeclaratorId
Rule 624   CatchType -> UnannClassType ORClassTypeS
Rule 625   ORClassTypeS -> OR ClassType ORClassTypeS
Rule 626   ORClassTypeS -> empty
Rule 627   Finally -> FINALLY Block
Rule 628   TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally
Rule 629   ZooFinally -> Finally
Rule 630   ZooFinally -> empty
Rule 631   ZooSEMICOLON -> SEMICOLON
Rule 632   ZooSEMICOLON -> empty
Rule 633   ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON RPAREN
Rule 634   ResourceList -> Resource SEMICOLONResourceS
Rule 635   SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS
Rule 636   SEMICOLONResourceS -> empty
Rule 637   Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression
Rule 638   Resource -> VariableModifierS IDENT VariableDeclaratorId ASSIGN Expression
Rule 639   start -> INC CompilationUnit

Terminals, with rules where they appear

ABSTRACT             : 25 50 73 372
ADD                  : 228 240
ADD_ASSIGN           : 193
AND                  : 213 505
AND_ASSIGN           : 198
ARROW                : 173
ASSERT               : 569 570
ASSIGN               : 84 189 344 637 638
ATRATE               : 54 78 94 95
BINARY_LIT           : 7
BOOLEAN              : 116 353 467 468
BOOL_LIT             : 2
BREAK                : 607
BYTE                 : 471
CASE                 : 579 580
CATCH                : 622
CHAR                 : 475
CHAR_LIT             : 11
CLASS                : 114 115 116 117 304
COLON                : 202 203 556 557 570 579 580 581 603 604 605 606
COLON_SEP            : 154 155 156 157 158 159 160 161
COMMA                : 82 92 100 152 178 309 314 341 390 392 414 446 451 508 601
COMMENT              : 
CONST                : 
CONTINUE             : 610
DEC                  : 245 246 259 260
DECIMAL_LIT          : 4
DEFAULT              : 51 74 581
DO                   : 584
DOUBLE               : 477
ELLIPSIS             : 402 403 405 406
ELSE                 : 567 568
ENUM                 : 443
EQL                  : 215
EXTENDS              : 28 299 312 502 503 504 516
FINAL                : 44 307 338 374 401
FINALLY              : 627
FLOAT                : 476
FLOAT_DEC_LIT        : 8
FLOAT_HEX_LIT        : 9
FOR                  : 589 596 603 604 605 606
GEQ                  : 221
GOTO                 : 
GTR                  : 137 219 308 506
HEX_LIT              : 5
IDENT                : 14 38 54 63 64 64 84 122 127 128 133 134 138 139 140 142 144 145 146 147 147 148 149 150 154 155 155 156 157 158 159 174 177 178 186 231 235 236 237 244 246 250 251 258 260 262 264 276 279 288 289 295 296 304 332 347 358 359 360 364 384 388 399 403 406 407 410 412 419 430 439 443 454 480 483 485 486 490 496 503 529 556 557 580 604 606 608 638
IF                   : 566 567 568
IMPLEMENTS           : 313
IMPORT               : 286 287 288 289 290
INC                  : 243 244 257 258 639
INSTANCEOF           : 222
INT                  : 473
INTERFACE            : 14 54
LAND                 : 207
LBRACE               : 29 55 88 96 319 431 450 491 492 493 494 518 572
LBRACK               : 118 141 142 143 169 170
LEQ                  : 220
LNOT                 : 248 250
LONG                 : 474
LOR                  : 205
LPAREN               : 63 64 78 95 108 124 144 145 146 147 148 149 150 175 176 261 262 263 264 265 388 430 436 437 438 439 440 459 566 567 568 571 582 583 584 589 596 603 604 605 606 613 622 633
LSS                  : 137 218 308 506
MUL                  : 232 235 287 288 290
MUL_ASSIGN           : 190
NATIVE               : 376
NEQ                  : 216
NEW                  : 124 160 161 162 163 164 165
NOT                  : 249 251
NULL_LIT             : 3
OCTAL_LIT            : 6
OR                   : 209 625
OR_ASSIGN            : 200
PACKAGE              : 276
PERIOD               : 107 114 115 116 117 121 122 123 133 134 138 139 140 140 145 146 147 148 149 150 150 159 279 287 288 289 290 295 296 359 360 407 438 439 440 484 485
PRIVATE              : 24 336 371 429
PROTECTED            : 23 335 370 428
PUBLIC               : 22 42 49 72 334 369 427
QUES                 : 202 203 512 513
QUO                  : 233 236
QUO_ASSIGN           : 191
RBRACE               : 29 55 88 96 319 431 450 491 492 493 494 518 572
RBRACK               : 118 141 142 143 169 170
REM                  : 234 237
REM_ASSIGN           : 192
RETURN               : 611
RPAREN               : 63 64 78 95 108 124 144 145 146 147 148 149 150 175 176 261 262 263 264 265 388 430 436 437 438 439 440 459 566 567 568 571 582 583 584 589 596 603 604 605 606 613 622 633
SEMICOLON            : 36 37 38 62 63 64 276 286 287 288 289 290 293 328 331 332 421 436 437 438 439 440 462 527 555 558 569 570 584 589 589 596 596 607 610 611 612 631 635
SHL                  : 224
SHL_ASSIGN           : 195
SHORT                : 472
SHR                  : 225
SHR_ASSIGN           : 196
SHR_UN               : 226
SHR_UN_ASSIGN        : 197
STATIC               : 26 43 52 289 290 337 373 422
STRICTFP             : 27 53 377
STRING_LIT           : 10
SUB                  : 229 241
SUB_ASSIGN           : 194
SUPER                : 139 140 149 150 158 159 437 438 439 440 517
SWITCH               : 571
SYNCHRONIZED         : 375 613
THIS                 : 106 107 409 410 411 412 436
THROW                : 612
THROWS               : 413
TRANSIENT            : 339
TRY                  : 614 615 628
UNCLOSED_CHAR        : 
UNCLOSED_STR         : 
VOID                 : 117 385
VOLATILE             : 340
WHILE                : 582 583 584
XOR                  : 211
XOR_ASSIGN           : 199
error                : 

Nonterminals, with rules where they appear

AdditionalBound      : 266
AdditionalBoundS     : 263 264 265 266 504
AdditiveExpression   : 223 224 225 226 228 229
AndExpression        : 210 211 213
Annotation           : 21 41 48 71 87 129 130 281 333 368 400 426 461 501
AnnotationS          : 127 129 133 169 360 381 402 403 409 410 465 467 486 491 493 512
AnnotationSLBRACERBRACES : 491 492 493 494
AnnotationTypeBody   : 54
AnnotationTypeDeclaration : 13
AnnotationTypeElementDeclaration : 58
AnnotationTypeElementModifier : 69
AnnotationTypeElementModifierS : 63 64 69
AnnotationTypeMemberDeclaration : 56
AnnotationTypeMemberDeclarationS : 55 56
ArgumentList         : 434
ArrayAccess          : 111 188
ArrayCreationExpression : 103
ArrayInitializer     : 164 165 349
ArrayType            : 161 481
AssertStatement      : 546
Assignment           : 183 559
AssignmentExpression : 172
AssignmentOperator   : 184
BasicForStatement    : 585
BasicForStatementNoShortIf : 587
Block                : 181 321 420 422 543 613 614 615 622 627 628
BlockStatement       : 521 522
BlockStatementS      : 521 522
BlockStatements      : 519 575
BreakStatement       : 549
COMMAElementValuePairS : 81 82
COMMAElementValueS   : 91 92
COMMAEnumConstantS   : 451 453
COMMAExceptionTypeS  : 414 416
COMMAExpressionS     : 151 152
COMMAFormalParameterS : 392 394 395
COMMAIDENTS          : 177 178
COMMAInterfaceTypeS  : 314 316
COMMAStatementExpressionS : 600 601
COMMATypeArgumentS   : 507 508
COMMAVariableDeclaratorS : 341 343
COMMAVariableInitializerS : 99 100
COMMMATypeParameterS : 309 311
CastExpression       : 252
CatchClause          : 619 620
CatchClauseS         : 619 620
CatchFormalParameter : 622
CatchType            : 623
Catches              : 614 617
ClassBody            : 305 457
ClassBodyDeclaration : 317
ClassBodyDeclarationS : 317 319 462
ClassDeclaration     : 34 60 291 326 525
ClassInstanceCreationExpression : 109 565
ClassLiteral         : 105
ClassMemberDeclaration : 320
ClassModifier        : 441
ClassModifierS       : 304 441 443
ClassOrInterfaceTypeToInstantiate : 124
ClassType            : 160 163 165 299 312 314 316 417 478 484 485 488 504 505 625
CompilationUnit      : 639
ConditionalAndExpression : 204 205 207
ConditionalExpression : 85 182 202
ConditionalOrExpression : 201 202 203 205
ConstantDeclaration  : 32 59
ConstantExpression   : 579
ConstantModifier     : 39
ConstantModifierS    : 37 38 39
ConstructorBody      : 425
ConstructorDeclaration : 323
ConstructorDeclarator : 425
ConstructorModifier  : 423
ConstructorModifierS : 423 425
ContinueStatement    : 550
DefaultValue         : 67
DimExpr              : 166 167
DimExprS             : 166 167
DimExprs             : 162 163
Dims                 : 65 164 165 362 363 364 487 488 489 490
DoStatement          : 548
ElementValue         : 74 84 91 92 95
ElementValueArrayInitializer : 86
ElementValueList     : 89
ElementValuePair     : 81 82
ElementValuePairList : 79
EmptyStatement       : 544
EnhancedForStatement : 586
EnhancedForStatementNoShortIf : 588
EnumBody             : 443
EnumBodyDeclarations : 448
EnumConstant         : 451 453
EnumConstantList     : 444
EnumConstantModifier : 455
EnumConstantModifierS : 454 455
EnumDeclaration      : 298
EqualityExpression   : 212 213 215 216
ExceptionType        : 414 416
ExceptionTypeList    : 413
ExclusiveOrExpression : 208 209 211
ExplicitConstructorInvocation : 432
Expression           : 108 141 142 143 151 152 169 170 180 184 202 203 268 348 566 567 568 569 570 570 571 582 583 584 592 603 604 605 606 612 613 637 638
ExpressionName       : 121 141 146 154 185 254 287 294 296 438
ExpressionStatement  : 545
ExtendsInterfaces    : 17
FieldAccess          : 110 187
FieldDeclaration     : 324
FieldModifier        : 329
FieldModifierS       : 329 331 332
Finally              : 615 629
FloatingPointType    : 470
ForInit              : 594
ForStatement         : 537
ForStatementNoShortIf : 542
ForUpdate            : 590
FormalParameter      : 392 394 404
FormalParameterList  : 386
FormalParameters     : 390
IfThenElseStatement  : 535
IfThenElseStatementNoShortIf : 540
IfThenStatement      : 534
ImportDeclaration    : 272
ImportDeclarationS   : 269 272
InclusiveOrExpression : 206 207 209
InferredFormalParameterList : 176
IntegralType         : 469
InterfaceBody        : 14
InterfaceDeclaration : 35 61 292 327
InterfaceMemberDeclaration : 30
InterfaceMemberDeclarationS : 29 30
InterfaceMethodDeclaration : 33
InterfaceMethodModifier : 46
InterfaceMethodModifierS : 45 46
InterfaceModifier    : 19 306
InterfaceModifierS   : 14 19 54
InterfaceTypeList    : 28 313
LBRACKRBRACKS        : 114 115 116 118
LabeledStatement     : 533
LabeledStatementNoShortIf : 539
LambdaBody           : 173
LambdaExpression     : 171 203 265
LambdaParameters     : 173
LastFormalParameter  : 390 391
LeftHandSide         : 184
Literal              : 104
LocalVariableDeclaration : 527 598
LocalVariableDeclarationStatement : 524
MarkerAnnotation     : 76
MethodBody           : 45 367
MethodDeclaration    : 325
MethodDeclarator     : 380 381 382
MethodHeader         : 45 367
MethodInvocation     : 112 564
MethodModifier       : 365
MethodModifierS      : 365 367
MethodReference      : 113
MultiplicativeExpression : 227 228 229 232 233 234 235 236 237
NormalAnnotation     : 75
NormalClassDeclaration : 297
NormalInterfaceDeclaration : 12
NumericType          : 115 352 465 466
ORClassTypeS         : 624 625
PERIODAnnotationSIDENTS : 127 128 133 134
PERIODIDENTS         : 276 279
PackageDeclaration   : 270
PackageModifier      : 277
PackageModifierS     : 276 277
PostDecrementExpression : 256 563
PostIncrementExpression : 255 562
PostfixExpression    : 247 257 259
PreDecrementExpression : 239 561
PreIncrementExpression : 238 560
Primary              : 123 138 148 157 253 440
PrimaryNoNewArray    : 102 143
PrimitiveType        : 162 164 261 262 463 487
ReceiverParameter    : 389 395
ReferenceType        : 156 222 263 264 265 464 510 516 517
RelationalExpression : 214 215 216 218 219 220 221 222
Resource             : 634 635
ResourceList         : 633
ResourceSpecification : 628
Result               : 380 381 382
ReturnStatement      : 551
SEMICOLONResourceS   : 634 635
ShiftExpression      : 217 218 219 220 221 224 225 226
SingleElementAnnotation : 77
SingleStaticImportDeclaration : 284
SingleTypeImportDeclaration : 282
Statement            : 526 556 566 567 582 584 589 603 604
StatementExpression  : 558 600 601
StatementExpressionList : 597 599
StatementNoShortIf   : 557 567 568 568 583 596 605 606
StatementWithoutTrailingSubstatement : 532 538
StaticImportOnDemandDeclaration : 285
StaticInitializer    : 322
SuperClass           : 300
Superclass           : 
Superinterfaces      : 302
SwitchBlock          : 571
SwitchBlockStatementGroup : 573
SwitchBlockStatementGroupS : 572 573
SwitchLabel          : 576 577
SwitchLabelS         : 572 576 577
SwitchLabels         : 575
SwitchStatement      : 547
SynchronizedStatement : 552
ThrowStatement       : 553
Throws               : 378
TryStatement         : 554
TryWithResourcesStatement : 616
Type                 : 
TypeArgument         : 507 508
TypeArgumentList     : 506
TypeArguments        : 125 136
TypeArgumentsOrDiamond : 131
TypeBound            : 499
TypeDeclaration      : 274
TypeDeclarationS     : 269 274
TypeImportOnDemandDeclaration : 283
TypeName             : 78 94 95 107 114 140 145 150 159 286 289 290
TypeParameter        : 309 311
TypeParameterList    : 308
TypeParameterModifier : 497
TypeParameterModifierS : 496 497
TypeParameters       : 15 381 382
TypeVariable         : 418 479 482 484 489 502
UnannArrayType       : 355
UnannClassOrInterfaceType : 354 359 360 363
UnannClassType       : 356 361 624
UnannInterfaceType   : 357
UnannPrimitiveType   : 350 362
UnannReferenceType   : 351
UnannType            : 37 63 331 383 398 402 405 409 411 528 603 605 637
UnaryExpression      : 230 232 233 234 240 241 243 245 248 249 261
UnaryExpressionNotPlusMinus : 242 263
UnqualifiedClassInstanceCreationExpression : 120 121 122 123
VariableDeclarator   : 341 343
VariableDeclaratorId : 346 398 399 402 403 405 406 603 604 605 606 623 637 638
VariableDeclaratorList : 37 38 331 332 528 529
VariableInitializer  : 99 100 344
VariableInitializerList : 97
VariableModifier     : 396 530
VariableModifierS    : 402 403 405 406 528 529 530 603 604 605 606 623 637 638
WhileStatement       : 536
WhileStatementNoShortIf : 541
Wildcard             : 511
WildcardBounds       : 514
ZooASSIGNVariableInitializer : 346
ZooArgumentList      : 124 144 145 146 147 148 149 150 436 437 438 439 440 459
ZooBlockStatements   : 431 518
ZooCOMMA             : 88 96 450
ZooCatches           : 615 628
ZooClassBody         : 124 454
ZooDefaultValue      : 63 64
ZooDims              : 63 64 162 163 347 388
ZooElementValueList  : 88
ZooElementValuePairList : 78
ZooEnumBodyDeclarations : 450
ZooEnumConstantList  : 450
ZooExplicitConstructorInvocation : 431
ZooExpression        : 589 596 611
ZooExtendsInterfaces : 14
ZooFinally           : 628
ZooForInit           : 589 596
ZooForUpdate         : 589 596
ZooFormalParameterList : 175 388 430
ZooIDENT             : 607 610
ZooIDENTPERIOD       : 409 410 411 412
ZooLPARENZooArgumentListRPAREN : 454
ZooPackageDeclaration : 269
ZooSEMICOLON         : 633
ZooSuperClass        : 305
ZooSuperinterfaces   : 305 443
ZooThrows            : 380 381 382 425
ZooTypeArguments     : 124 145 146 147 148 149 150 154 155 156 157 158 159 160 358 359 360 436 437 438 439 440 482 483 484 485
ZooTypeArgumentsOrDiamond : 127 128
ZooTypeBound         : 496
ZooTypeParameters    : 14 304 430
ZooVariableInitializerList : 96
ZooVariableModifier  : 398 399
ZooWildcardBounds    : 512 513
empty                : 16 18 20 31 40 47 57 66 68 70 80 83 90 93 98 101 119 126 132 135 153 168 179 267 271 273 275 278 280 301 303 310 315 318 330 342 345 366 379 387 393 397 408 415 424 433 435 442 445 447 449 452 456 458 460 495 498 500 509 515 520 523 531 574 578 591 593 595 602 609 618 621 626 630 632 636
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (639) start -> . INC CompilationUnit

    INC             shift and go to state 2

    start                          shift and go to state 1

state 1

    (0) S' -> start .



state 2

    (639) start -> INC . CompilationUnit
    (269) CompilationUnit -> . ZooPackageDeclaration ImportDeclarationS TypeDeclarationS
    (270) ZooPackageDeclaration -> . PackageDeclaration
    (271) ZooPackageDeclaration -> . empty
    (276) PackageDeclaration -> . PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON
    (1) empty -> .
    (277) PackageModifierS -> . PackageModifier PackageModifierS
    (278) PackageModifierS -> . empty
    (281) PackageModifier -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    IMPORT          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    PACKAGE         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    CompilationUnit                shift and go to state 3
    ZooPackageDeclaration          shift and go to state 4
    PackageDeclaration             shift and go to state 5
    empty                          shift and go to state 6
    PackageModifierS               shift and go to state 7
    PackageModifier                shift and go to state 8
    Annotation                     shift and go to state 9
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 3

    (639) start -> INC CompilationUnit .

    $end            reduce using rule 639 (start -> INC CompilationUnit .)


state 4

    (269) CompilationUnit -> ZooPackageDeclaration . ImportDeclarationS TypeDeclarationS
    (272) ImportDeclarationS -> . ImportDeclaration ImportDeclarationS
    (273) ImportDeclarationS -> . empty
    (282) ImportDeclaration -> . SingleTypeImportDeclaration
    (283) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (284) ImportDeclaration -> . SingleStaticImportDeclaration
    (285) ImportDeclaration -> . StaticImportOnDemandDeclaration
    (1) empty -> .
    (286) SingleTypeImportDeclaration -> . IMPORT TypeName SEMICOLON
    (287) TypeImportOnDemandDeclaration -> . IMPORT ExpressionName PERIOD MUL SEMICOLON
    (288) TypeImportOnDemandDeclaration -> . IMPORT IDENT PERIOD MUL SEMICOLON
    (289) SingleStaticImportDeclaration -> . IMPORT STATIC TypeName PERIOD IDENT SEMICOLON
    (290) StaticImportOnDemandDeclaration -> . IMPORT STATIC TypeName PERIOD MUL SEMICOLON

    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    IMPORT          shift and go to state 21

    ImportDeclarationS             shift and go to state 14
    ImportDeclaration              shift and go to state 15
    empty                          shift and go to state 16
    SingleTypeImportDeclaration    shift and go to state 17
    TypeImportOnDemandDeclaration  shift and go to state 18
    SingleStaticImportDeclaration  shift and go to state 19
    StaticImportOnDemandDeclaration shift and go to state 20

state 5

    (270) ZooPackageDeclaration -> PackageDeclaration .

    IMPORT          reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    SEMICOLON       reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    FINAL           reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    EXTENDS         reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    PUBLIC          reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    PROTECTED       reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    PRIVATE         reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    ABSTRACT        reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    STATIC          reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    STRICTFP        reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    ATRATE          reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    CLASS           reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    ENUM            reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    IMPLEMENTS      reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    LBRACE          reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    INTERFACE       reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)
    $end            reduce using rule 270 (ZooPackageDeclaration -> PackageDeclaration .)


state 6

    (271) ZooPackageDeclaration -> empty .
    (278) PackageModifierS -> empty .

    IMPORT          reduce using rule 271 (ZooPackageDeclaration -> empty .)
    SEMICOLON       reduce using rule 271 (ZooPackageDeclaration -> empty .)
    FINAL           reduce using rule 271 (ZooPackageDeclaration -> empty .)
    EXTENDS         reduce using rule 271 (ZooPackageDeclaration -> empty .)
    PUBLIC          reduce using rule 271 (ZooPackageDeclaration -> empty .)
    PROTECTED       reduce using rule 271 (ZooPackageDeclaration -> empty .)
    PRIVATE         reduce using rule 271 (ZooPackageDeclaration -> empty .)
    ABSTRACT        reduce using rule 271 (ZooPackageDeclaration -> empty .)
    STATIC          reduce using rule 271 (ZooPackageDeclaration -> empty .)
    STRICTFP        reduce using rule 271 (ZooPackageDeclaration -> empty .)
    ATRATE          reduce using rule 271 (ZooPackageDeclaration -> empty .)
    CLASS           reduce using rule 271 (ZooPackageDeclaration -> empty .)
    ENUM            reduce using rule 271 (ZooPackageDeclaration -> empty .)
    IMPLEMENTS      reduce using rule 271 (ZooPackageDeclaration -> empty .)
    LBRACE          reduce using rule 271 (ZooPackageDeclaration -> empty .)
    INTERFACE       reduce using rule 271 (ZooPackageDeclaration -> empty .)
    $end            reduce using rule 271 (ZooPackageDeclaration -> empty .)
    PACKAGE         reduce using rule 278 (PackageModifierS -> empty .)


state 7

    (276) PackageDeclaration -> PackageModifierS . PACKAGE IDENT PERIODIDENTS SEMICOLON

    PACKAGE         shift and go to state 22


state 8

    (277) PackageModifierS -> PackageModifier . PackageModifierS
    (277) PackageModifierS -> . PackageModifier PackageModifierS
    (278) PackageModifierS -> . empty
    (281) PackageModifier -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PACKAGE         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    PackageModifier                shift and go to state 8
    PackageModifierS               shift and go to state 23
    empty                          shift and go to state 24
    Annotation                     shift and go to state 9
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 9

    (281) PackageModifier -> Annotation .

    ATRATE          reduce using rule 281 (PackageModifier -> Annotation .)
    PACKAGE         reduce using rule 281 (PackageModifier -> Annotation .)


state 10

    (75) Annotation -> NormalAnnotation .

    ATRATE          reduce using rule 75 (Annotation -> NormalAnnotation .)
    PACKAGE         reduce using rule 75 (Annotation -> NormalAnnotation .)
    PUBLIC          reduce using rule 75 (Annotation -> NormalAnnotation .)
    PROTECTED       reduce using rule 75 (Annotation -> NormalAnnotation .)
    PRIVATE         reduce using rule 75 (Annotation -> NormalAnnotation .)
    ABSTRACT        reduce using rule 75 (Annotation -> NormalAnnotation .)
    STATIC          reduce using rule 75 (Annotation -> NormalAnnotation .)
    STRICTFP        reduce using rule 75 (Annotation -> NormalAnnotation .)
    INTERFACE       reduce using rule 75 (Annotation -> NormalAnnotation .)
    FINAL           reduce using rule 75 (Annotation -> NormalAnnotation .)
    CLASS           reduce using rule 75 (Annotation -> NormalAnnotation .)
    ENUM            reduce using rule 75 (Annotation -> NormalAnnotation .)
    IDENT           reduce using rule 75 (Annotation -> NormalAnnotation .)
    RPAREN          reduce using rule 75 (Annotation -> NormalAnnotation .)
    BOOLEAN         reduce using rule 75 (Annotation -> NormalAnnotation .)
    BYTE            reduce using rule 75 (Annotation -> NormalAnnotation .)
    SHORT           reduce using rule 75 (Annotation -> NormalAnnotation .)
    INT             reduce using rule 75 (Annotation -> NormalAnnotation .)
    LONG            reduce using rule 75 (Annotation -> NormalAnnotation .)
    CHAR            reduce using rule 75 (Annotation -> NormalAnnotation .)
    FLOAT           reduce using rule 75 (Annotation -> NormalAnnotation .)
    DOUBLE          reduce using rule 75 (Annotation -> NormalAnnotation .)
    LBRACE          reduce using rule 75 (Annotation -> NormalAnnotation .)
    QUES            reduce using rule 75 (Annotation -> NormalAnnotation .)
    LBRACK          reduce using rule 75 (Annotation -> NormalAnnotation .)
    VOID            reduce using rule 75 (Annotation -> NormalAnnotation .)
    ELLIPSIS        reduce using rule 75 (Annotation -> NormalAnnotation .)
    COMMA           reduce using rule 75 (Annotation -> NormalAnnotation .)
    RBRACE          reduce using rule 75 (Annotation -> NormalAnnotation .)
    LSS             reduce using rule 75 (Annotation -> NormalAnnotation .)
    TRANSIENT       reduce using rule 75 (Annotation -> NormalAnnotation .)
    VOLATILE        reduce using rule 75 (Annotation -> NormalAnnotation .)
    SYNCHRONIZED    reduce using rule 75 (Annotation -> NormalAnnotation .)
    NATIVE          reduce using rule 75 (Annotation -> NormalAnnotation .)
    DEFAULT         reduce using rule 75 (Annotation -> NormalAnnotation .)
    SEMICOLON       reduce using rule 75 (Annotation -> NormalAnnotation .)


state 11

    (76) Annotation -> MarkerAnnotation .

    ATRATE          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    PACKAGE         reduce using rule 76 (Annotation -> MarkerAnnotation .)
    PUBLIC          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    PROTECTED       reduce using rule 76 (Annotation -> MarkerAnnotation .)
    PRIVATE         reduce using rule 76 (Annotation -> MarkerAnnotation .)
    ABSTRACT        reduce using rule 76 (Annotation -> MarkerAnnotation .)
    STATIC          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    STRICTFP        reduce using rule 76 (Annotation -> MarkerAnnotation .)
    INTERFACE       reduce using rule 76 (Annotation -> MarkerAnnotation .)
    FINAL           reduce using rule 76 (Annotation -> MarkerAnnotation .)
    CLASS           reduce using rule 76 (Annotation -> MarkerAnnotation .)
    ENUM            reduce using rule 76 (Annotation -> MarkerAnnotation .)
    IDENT           reduce using rule 76 (Annotation -> MarkerAnnotation .)
    RPAREN          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    BOOLEAN         reduce using rule 76 (Annotation -> MarkerAnnotation .)
    BYTE            reduce using rule 76 (Annotation -> MarkerAnnotation .)
    SHORT           reduce using rule 76 (Annotation -> MarkerAnnotation .)
    INT             reduce using rule 76 (Annotation -> MarkerAnnotation .)
    LONG            reduce using rule 76 (Annotation -> MarkerAnnotation .)
    CHAR            reduce using rule 76 (Annotation -> MarkerAnnotation .)
    FLOAT           reduce using rule 76 (Annotation -> MarkerAnnotation .)
    DOUBLE          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    LBRACE          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    QUES            reduce using rule 76 (Annotation -> MarkerAnnotation .)
    LBRACK          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    VOID            reduce using rule 76 (Annotation -> MarkerAnnotation .)
    ELLIPSIS        reduce using rule 76 (Annotation -> MarkerAnnotation .)
    COMMA           reduce using rule 76 (Annotation -> MarkerAnnotation .)
    RBRACE          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    LSS             reduce using rule 76 (Annotation -> MarkerAnnotation .)
    TRANSIENT       reduce using rule 76 (Annotation -> MarkerAnnotation .)
    VOLATILE        reduce using rule 76 (Annotation -> MarkerAnnotation .)
    SYNCHRONIZED    reduce using rule 76 (Annotation -> MarkerAnnotation .)
    NATIVE          reduce using rule 76 (Annotation -> MarkerAnnotation .)
    DEFAULT         reduce using rule 76 (Annotation -> MarkerAnnotation .)
    SEMICOLON       reduce using rule 76 (Annotation -> MarkerAnnotation .)


state 12

    (77) Annotation -> SingleElementAnnotation .

    ATRATE          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    PACKAGE         reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    PUBLIC          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    PROTECTED       reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    PRIVATE         reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    ABSTRACT        reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    STATIC          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    STRICTFP        reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    INTERFACE       reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    FINAL           reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    CLASS           reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    ENUM            reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    IDENT           reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    RPAREN          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    BOOLEAN         reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    BYTE            reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    SHORT           reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    INT             reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    LONG            reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    CHAR            reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    FLOAT           reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    DOUBLE          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    LBRACE          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    QUES            reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    LBRACK          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    VOID            reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    ELLIPSIS        reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    COMMA           reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    RBRACE          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    LSS             reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    TRANSIENT       reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    VOLATILE        reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    SYNCHRONIZED    reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    NATIVE          reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    DEFAULT         reduce using rule 77 (Annotation -> SingleElementAnnotation .)
    SEMICOLON       reduce using rule 77 (Annotation -> SingleElementAnnotation .)


state 13

    (78) NormalAnnotation -> ATRATE . TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> ATRATE . TypeName
    (95) SingleElementAnnotation -> ATRATE . TypeName LPAREN ElementValue RPAREN
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT

    PERIOD          shift and go to state 27

    TypeName                       shift and go to state 25
    ExpressionName                 shift and go to state 26

state 14

    (269) CompilationUnit -> ZooPackageDeclaration ImportDeclarationS . TypeDeclarationS
    (274) TypeDeclarationS -> . TypeDeclaration TypeDeclarationS
    (275) TypeDeclarationS -> . empty
    (291) TypeDeclaration -> . ClassDeclaration
    (292) TypeDeclaration -> . InterfaceDeclaration
    (293) TypeDeclaration -> . SEMICOLON
    (1) empty -> .
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 33
    $end            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 44
    EXTENDS         shift and go to state 45
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    TypeDeclarationS               shift and go to state 28
    TypeDeclaration                shift and go to state 29
    empty                          shift and go to state 30
    ClassDeclaration               shift and go to state 31
    InterfaceDeclaration           shift and go to state 32
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    Annotation                     shift and go to state 46
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 15

    (272) ImportDeclarationS -> ImportDeclaration . ImportDeclarationS
    (272) ImportDeclarationS -> . ImportDeclaration ImportDeclarationS
    (273) ImportDeclarationS -> . empty
    (282) ImportDeclaration -> . SingleTypeImportDeclaration
    (283) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (284) ImportDeclaration -> . SingleStaticImportDeclaration
    (285) ImportDeclaration -> . StaticImportOnDemandDeclaration
    (1) empty -> .
    (286) SingleTypeImportDeclaration -> . IMPORT TypeName SEMICOLON
    (287) TypeImportOnDemandDeclaration -> . IMPORT ExpressionName PERIOD MUL SEMICOLON
    (288) TypeImportOnDemandDeclaration -> . IMPORT IDENT PERIOD MUL SEMICOLON
    (289) SingleStaticImportDeclaration -> . IMPORT STATIC TypeName PERIOD IDENT SEMICOLON
    (290) StaticImportOnDemandDeclaration -> . IMPORT STATIC TypeName PERIOD MUL SEMICOLON

    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    IMPORT          shift and go to state 21

    ImportDeclaration              shift and go to state 15
    ImportDeclarationS             shift and go to state 53
    empty                          shift and go to state 16
    SingleTypeImportDeclaration    shift and go to state 17
    TypeImportOnDemandDeclaration  shift and go to state 18
    SingleStaticImportDeclaration  shift and go to state 19
    StaticImportOnDemandDeclaration shift and go to state 20

state 16

    (273) ImportDeclarationS -> empty .

    SEMICOLON       reduce using rule 273 (ImportDeclarationS -> empty .)
    FINAL           reduce using rule 273 (ImportDeclarationS -> empty .)
    EXTENDS         reduce using rule 273 (ImportDeclarationS -> empty .)
    PUBLIC          reduce using rule 273 (ImportDeclarationS -> empty .)
    PROTECTED       reduce using rule 273 (ImportDeclarationS -> empty .)
    PRIVATE         reduce using rule 273 (ImportDeclarationS -> empty .)
    ABSTRACT        reduce using rule 273 (ImportDeclarationS -> empty .)
    STATIC          reduce using rule 273 (ImportDeclarationS -> empty .)
    STRICTFP        reduce using rule 273 (ImportDeclarationS -> empty .)
    ATRATE          reduce using rule 273 (ImportDeclarationS -> empty .)
    CLASS           reduce using rule 273 (ImportDeclarationS -> empty .)
    ENUM            reduce using rule 273 (ImportDeclarationS -> empty .)
    IMPLEMENTS      reduce using rule 273 (ImportDeclarationS -> empty .)
    LBRACE          reduce using rule 273 (ImportDeclarationS -> empty .)
    INTERFACE       reduce using rule 273 (ImportDeclarationS -> empty .)
    $end            reduce using rule 273 (ImportDeclarationS -> empty .)


state 17

    (282) ImportDeclaration -> SingleTypeImportDeclaration .

    IMPORT          reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    SEMICOLON       reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    FINAL           reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    EXTENDS         reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PUBLIC          reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PROTECTED       reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PRIVATE         reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    ABSTRACT        reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    STATIC          reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    STRICTFP        reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    ATRATE          reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    CLASS           reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    ENUM            reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    IMPLEMENTS      reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    LBRACE          reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    INTERFACE       reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)
    $end            reduce using rule 282 (ImportDeclaration -> SingleTypeImportDeclaration .)


state 18

    (283) ImportDeclaration -> TypeImportOnDemandDeclaration .

    IMPORT          reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    SEMICOLON       reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    FINAL           reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    EXTENDS         reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    ABSTRACT        reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    STATIC          reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    STRICTFP        reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    ATRATE          reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    CLASS           reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    ENUM            reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    IMPLEMENTS      reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    LBRACE          reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    INTERFACE       reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    $end            reduce using rule 283 (ImportDeclaration -> TypeImportOnDemandDeclaration .)


state 19

    (284) ImportDeclaration -> SingleStaticImportDeclaration .

    IMPORT          reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    SEMICOLON       reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    FINAL           reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    EXTENDS         reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    PUBLIC          reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    PROTECTED       reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    PRIVATE         reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    ABSTRACT        reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    STATIC          reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    STRICTFP        reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    ATRATE          reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    CLASS           reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    ENUM            reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    IMPLEMENTS      reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    LBRACE          reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    INTERFACE       reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)
    $end            reduce using rule 284 (ImportDeclaration -> SingleStaticImportDeclaration .)


state 20

    (285) ImportDeclaration -> StaticImportOnDemandDeclaration .

    IMPORT          reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    SEMICOLON       reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    FINAL           reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    EXTENDS         reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    ABSTRACT        reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    STATIC          reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    STRICTFP        reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    ATRATE          reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    CLASS           reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    ENUM            reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    IMPLEMENTS      reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    LBRACE          reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    INTERFACE       reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    $end            reduce using rule 285 (ImportDeclaration -> StaticImportOnDemandDeclaration .)


state 21

    (286) SingleTypeImportDeclaration -> IMPORT . TypeName SEMICOLON
    (287) TypeImportOnDemandDeclaration -> IMPORT . ExpressionName PERIOD MUL SEMICOLON
    (288) TypeImportOnDemandDeclaration -> IMPORT . IDENT PERIOD MUL SEMICOLON
    (289) SingleStaticImportDeclaration -> IMPORT . STATIC TypeName PERIOD IDENT SEMICOLON
    (290) StaticImportOnDemandDeclaration -> IMPORT . STATIC TypeName PERIOD MUL SEMICOLON
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT

    IDENT           shift and go to state 56
    STATIC          shift and go to state 57
    PERIOD          shift and go to state 27

    TypeName                       shift and go to state 54
    ExpressionName                 shift and go to state 55

state 22

    (276) PackageDeclaration -> PackageModifierS PACKAGE . IDENT PERIODIDENTS SEMICOLON

    IDENT           shift and go to state 58


state 23

    (277) PackageModifierS -> PackageModifier PackageModifierS .

    PACKAGE         reduce using rule 277 (PackageModifierS -> PackageModifier PackageModifierS .)


state 24

    (278) PackageModifierS -> empty .

    PACKAGE         reduce using rule 278 (PackageModifierS -> empty .)


state 25

    (78) NormalAnnotation -> ATRATE TypeName . LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> ATRATE TypeName .
    (95) SingleElementAnnotation -> ATRATE TypeName . LPAREN ElementValue RPAREN

    LPAREN          shift and go to state 59
    ATRATE          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    PACKAGE         reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    PUBLIC          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    PROTECTED       reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    PRIVATE         reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    ABSTRACT        reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    STATIC          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    STRICTFP        reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    INTERFACE       reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    FINAL           reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    CLASS           reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    ENUM            reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    IDENT           reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    RPAREN          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    BOOLEAN         reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    BYTE            reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    SHORT           reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    INT             reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    LONG            reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    CHAR            reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    FLOAT           reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    DOUBLE          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    LBRACE          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    QUES            reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    LBRACK          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    VOID            reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    ELLIPSIS        reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    COMMA           reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    RBRACE          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    LSS             reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    TRANSIENT       reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    VOLATILE        reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    SYNCHRONIZED    reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    NATIVE          reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    DEFAULT         reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)
    SEMICOLON       reduce using rule 94 (MarkerAnnotation -> ATRATE TypeName .)


state 26

    (294) TypeName -> ExpressionName .
    (296) ExpressionName -> ExpressionName . PERIOD IDENT

  ! shift/reduce conflict for PERIOD resolved as shift
    LPAREN          reduce using rule 294 (TypeName -> ExpressionName .)
    ATRATE          reduce using rule 294 (TypeName -> ExpressionName .)
    PACKAGE         reduce using rule 294 (TypeName -> ExpressionName .)
    PUBLIC          reduce using rule 294 (TypeName -> ExpressionName .)
    PROTECTED       reduce using rule 294 (TypeName -> ExpressionName .)
    PRIVATE         reduce using rule 294 (TypeName -> ExpressionName .)
    ABSTRACT        reduce using rule 294 (TypeName -> ExpressionName .)
    STATIC          reduce using rule 294 (TypeName -> ExpressionName .)
    STRICTFP        reduce using rule 294 (TypeName -> ExpressionName .)
    INTERFACE       reduce using rule 294 (TypeName -> ExpressionName .)
    FINAL           reduce using rule 294 (TypeName -> ExpressionName .)
    CLASS           reduce using rule 294 (TypeName -> ExpressionName .)
    ENUM            reduce using rule 294 (TypeName -> ExpressionName .)
    IDENT           reduce using rule 294 (TypeName -> ExpressionName .)
    RPAREN          reduce using rule 294 (TypeName -> ExpressionName .)
    BOOLEAN         reduce using rule 294 (TypeName -> ExpressionName .)
    BYTE            reduce using rule 294 (TypeName -> ExpressionName .)
    SHORT           reduce using rule 294 (TypeName -> ExpressionName .)
    INT             reduce using rule 294 (TypeName -> ExpressionName .)
    LONG            reduce using rule 294 (TypeName -> ExpressionName .)
    CHAR            reduce using rule 294 (TypeName -> ExpressionName .)
    FLOAT           reduce using rule 294 (TypeName -> ExpressionName .)
    DOUBLE          reduce using rule 294 (TypeName -> ExpressionName .)
    LBRACE          reduce using rule 294 (TypeName -> ExpressionName .)
    QUES            reduce using rule 294 (TypeName -> ExpressionName .)
    LBRACK          reduce using rule 294 (TypeName -> ExpressionName .)
    VOID            reduce using rule 294 (TypeName -> ExpressionName .)
    ELLIPSIS        reduce using rule 294 (TypeName -> ExpressionName .)
    COMMA           reduce using rule 294 (TypeName -> ExpressionName .)
    RBRACE          reduce using rule 294 (TypeName -> ExpressionName .)
    LSS             reduce using rule 294 (TypeName -> ExpressionName .)
    TRANSIENT       reduce using rule 294 (TypeName -> ExpressionName .)
    VOLATILE        reduce using rule 294 (TypeName -> ExpressionName .)
    SYNCHRONIZED    reduce using rule 294 (TypeName -> ExpressionName .)
    NATIVE          reduce using rule 294 (TypeName -> ExpressionName .)
    DEFAULT         reduce using rule 294 (TypeName -> ExpressionName .)
    SEMICOLON       reduce using rule 294 (TypeName -> ExpressionName .)
    PERIOD          shift and go to state 60

  ! PERIOD          [ reduce using rule 294 (TypeName -> ExpressionName .) ]


state 27

    (295) ExpressionName -> PERIOD . IDENT

    IDENT           shift and go to state 61


state 28

    (269) CompilationUnit -> ZooPackageDeclaration ImportDeclarationS TypeDeclarationS .

    $end            reduce using rule 269 (CompilationUnit -> ZooPackageDeclaration ImportDeclarationS TypeDeclarationS .)


state 29

    (274) TypeDeclarationS -> TypeDeclaration . TypeDeclarationS
    (274) TypeDeclarationS -> . TypeDeclaration TypeDeclarationS
    (275) TypeDeclarationS -> . empty
    (291) TypeDeclaration -> . ClassDeclaration
    (292) TypeDeclaration -> . InterfaceDeclaration
    (293) TypeDeclaration -> . SEMICOLON
    (1) empty -> .
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 33
    $end            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 44
    EXTENDS         shift and go to state 45
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    TypeDeclaration                shift and go to state 29
    TypeDeclarationS               shift and go to state 62
    empty                          shift and go to state 30
    ClassDeclaration               shift and go to state 31
    InterfaceDeclaration           shift and go to state 32
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    Annotation                     shift and go to state 46
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 30

    (275) TypeDeclarationS -> empty .
    (442) ClassModifierS -> empty .
    (301) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

    $end            reduce using rule 275 (TypeDeclarationS -> empty .)
    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 301 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 301 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)


state 31

    (291) TypeDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)
    $end            reduce using rule 291 (TypeDeclaration -> ClassDeclaration .)


state 32

    (292) TypeDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)
    $end            reduce using rule 292 (TypeDeclaration -> InterfaceDeclaration .)


state 33

    (293) TypeDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 293 (TypeDeclaration -> SEMICOLON .)
    $end            reduce using rule 293 (TypeDeclaration -> SEMICOLON .)


state 34

    (297) ClassDeclaration -> NormalClassDeclaration .

    SEMICOLON       reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    FINAL           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    EXTENDS         reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    PUBLIC          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    PROTECTED       reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    PRIVATE         reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    ABSTRACT        reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    STATIC          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    STRICTFP        reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    ATRATE          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    CLASS           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    ENUM            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    IMPLEMENTS      reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    LBRACE          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    INTERFACE       reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    $end            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    TRANSIENT       reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    VOLATILE        reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    SYNCHRONIZED    reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    NATIVE          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    LSS             reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    IDENT           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    BOOLEAN         reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    BYTE            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    SHORT           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    INT             reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    LONG            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    CHAR            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    FLOAT           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    DOUBLE          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    VOID            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    RBRACE          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    IF              reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    WHILE           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    ASSERT          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    SWITCH          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    DO              reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    BREAK           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    CONTINUE        reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    RETURN          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    THROW           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    TRY             reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    FOR             reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    INC             reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    DEC             reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    SUPER           reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    PERIOD          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    NEW             reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    THIS            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    LPAREN          reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    BOOL_LIT        reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    NULL_LIT        reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    DECIMAL_LIT     reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    HEX_LIT         reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    OCTAL_LIT       reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    BINARY_LIT      reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    FLOAT_DEC_LIT   reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    FLOAT_HEX_LIT   reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    STRING_LIT      reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    CHAR_LIT        reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    CASE            reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)
    DEFAULT         reduce using rule 297 (ClassDeclaration -> NormalClassDeclaration .)


state 35

    (298) ClassDeclaration -> EnumDeclaration .

    SEMICOLON       reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    FINAL           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    EXTENDS         reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    PUBLIC          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    PROTECTED       reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    PRIVATE         reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    ABSTRACT        reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    STATIC          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    STRICTFP        reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    ATRATE          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    CLASS           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    ENUM            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    IMPLEMENTS      reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    LBRACE          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    INTERFACE       reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    $end            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    TRANSIENT       reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    VOLATILE        reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    SYNCHRONIZED    reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    NATIVE          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    LSS             reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    IDENT           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    BOOLEAN         reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    BYTE            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    SHORT           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    INT             reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    LONG            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    CHAR            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    FLOAT           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    DOUBLE          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    VOID            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    RBRACE          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    IF              reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    WHILE           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    ASSERT          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    SWITCH          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    DO              reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    BREAK           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    CONTINUE        reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    RETURN          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    THROW           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    TRY             reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    FOR             reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    INC             reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    DEC             reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    SUPER           reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    PERIOD          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    NEW             reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    THIS            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    LPAREN          reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    BOOL_LIT        reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    NULL_LIT        reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    DECIMAL_LIT     reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    HEX_LIT         reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    OCTAL_LIT       reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    BINARY_LIT      reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    FLOAT_DEC_LIT   reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    FLOAT_HEX_LIT   reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    STRING_LIT      reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    CHAR_LIT        reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    CASE            reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)
    DEFAULT         reduce using rule 298 (ClassDeclaration -> EnumDeclaration .)


state 36

    (12) InterfaceDeclaration -> NormalInterfaceDeclaration .

    SEMICOLON       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    FINAL           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    EXTENDS         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    PUBLIC          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    PROTECTED       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    PRIVATE         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    ABSTRACT        reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    STATIC          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    STRICTFP        reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    ATRATE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    CLASS           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    ENUM            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    LBRACE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    INTERFACE       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    $end            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    TRANSIENT       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    VOLATILE        reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    NATIVE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    LSS             reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    IDENT           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    BOOLEAN         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    BYTE            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    SHORT           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    INT             reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    LONG            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    CHAR            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    FLOAT           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    DOUBLE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    VOID            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    RBRACE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    DEFAULT         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)


state 37

    (13) InterfaceDeclaration -> AnnotationTypeDeclaration .

    SEMICOLON       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    FINAL           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    EXTENDS         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    PUBLIC          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    PROTECTED       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    PRIVATE         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    ABSTRACT        reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    STATIC          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    STRICTFP        reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    ATRATE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    CLASS           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    ENUM            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    IMPLEMENTS      reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    LBRACE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    INTERFACE       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    $end            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    TRANSIENT       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    VOLATILE        reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    NATIVE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    LSS             reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    IDENT           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    BOOLEAN         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    BYTE            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    SHORT           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    INT             reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    LONG            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    CHAR            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    FLOAT           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    DOUBLE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    VOID            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    RBRACE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    DEFAULT         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)


state 38

    (304) NormalClassDeclaration -> ClassModifierS . CLASS IDENT ZooTypeParameters
    (443) EnumDeclaration -> ClassModifierS . ENUM IDENT ZooSuperinterfaces EnumBody

    CLASS           shift and go to state 63
    ENUM            shift and go to state 64


state 39

    (305) NormalClassDeclaration -> ZooSuperClass . ZooSuperinterfaces ClassBody
    (302) ZooSuperinterfaces -> . Superinterfaces
    (303) ZooSuperinterfaces -> . empty
    (313) Superinterfaces -> . IMPLEMENTS InterfaceTypeList
    (1) empty -> .

    IMPLEMENTS      shift and go to state 68
    LBRACE          reduce using rule 1 (empty -> .)

    ZooSuperinterfaces             shift and go to state 65
    Superinterfaces                shift and go to state 66
    empty                          shift and go to state 67

state 40

    (14) NormalInterfaceDeclaration -> InterfaceModifierS . INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> InterfaceModifierS . ATRATE INTERFACE IDENT AnnotationTypeBody

    INTERFACE       shift and go to state 69
    ATRATE          shift and go to state 70


state 41

    (441) ClassModifierS -> ClassModifier . ClassModifierS
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (1) empty -> .
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 44
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    ATRATE          shift and go to state 13

    ClassModifier                  shift and go to state 41
    ClassModifierS                 shift and go to state 71
    empty                          shift and go to state 72
    InterfaceModifier              shift and go to state 73
    Annotation                     shift and go to state 46
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 42

    (300) ZooSuperClass -> SuperClass .

    IMPLEMENTS      reduce using rule 300 (ZooSuperClass -> SuperClass .)
    LBRACE          reduce using rule 300 (ZooSuperClass -> SuperClass .)


state 43

    (19) InterfaceModifierS -> InterfaceModifier . InterfaceModifierS
    (306) ClassModifier -> InterfaceModifier .
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for ABSTRACT resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for STRICTFP resolved as shift
  ! reduce/reduce conflict for ATRATE resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    FINAL           reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    CLASS           reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    ENUM            reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    INTERFACE       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! PUBLIC          [ reduce using rule 306 (ClassModifier -> InterfaceModifier .) ]
  ! PROTECTED       [ reduce using rule 306 (ClassModifier -> InterfaceModifier .) ]
  ! PRIVATE         [ reduce using rule 306 (ClassModifier -> InterfaceModifier .) ]
  ! ABSTRACT        [ reduce using rule 306 (ClassModifier -> InterfaceModifier .) ]
  ! STATIC          [ reduce using rule 306 (ClassModifier -> InterfaceModifier .) ]
  ! STRICTFP        [ reduce using rule 306 (ClassModifier -> InterfaceModifier .) ]
  ! ATRATE          [ reduce using rule 306 (ClassModifier -> InterfaceModifier .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    InterfaceModifier              shift and go to state 74
    InterfaceModifierS             shift and go to state 75
    empty                          shift and go to state 76
    Annotation                     shift and go to state 46
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 44

    (307) ClassModifier -> FINAL .

    FINAL           reduce using rule 307 (ClassModifier -> FINAL .)
    PUBLIC          reduce using rule 307 (ClassModifier -> FINAL .)
    PROTECTED       reduce using rule 307 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 307 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 307 (ClassModifier -> FINAL .)
    STATIC          reduce using rule 307 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 307 (ClassModifier -> FINAL .)
    ATRATE          reduce using rule 307 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 307 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 307 (ClassModifier -> FINAL .)


state 45

    (299) SuperClass -> EXTENDS . ClassType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 79
    ATRATE          shift and go to state 13

    ClassType                      shift and go to state 77
    TypeVariable                   shift and go to state 78
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 46

    (21) InterfaceModifier -> Annotation .

    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)
    FINAL           reduce using rule 21 (InterfaceModifier -> Annotation .)
    CLASS           reduce using rule 21 (InterfaceModifier -> Annotation .)
    ENUM            reduce using rule 21 (InterfaceModifier -> Annotation .)


state 47

    (22) InterfaceModifier -> PUBLIC .

    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    CLASS           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ENUM            reduce using rule 22 (InterfaceModifier -> PUBLIC .)


state 48

    (23) InterfaceModifier -> PROTECTED .

    PUBLIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PROTECTED       reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PRIVATE         reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STATIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STRICTFP        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ATRATE          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    INTERFACE       reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    FINAL           reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    CLASS           reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ENUM            reduce using rule 23 (InterfaceModifier -> PROTECTED .)


state 49

    (24) InterfaceModifier -> PRIVATE .

    PUBLIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PROTECTED       reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PRIVATE         reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STATIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STRICTFP        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ATRATE          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    INTERFACE       reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    FINAL           reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    CLASS           reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ENUM            reduce using rule 24 (InterfaceModifier -> PRIVATE .)


state 50

    (25) InterfaceModifier -> ABSTRACT .

    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    FINAL           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    CLASS           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ENUM            reduce using rule 25 (InterfaceModifier -> ABSTRACT .)


state 51

    (26) InterfaceModifier -> STATIC .

    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)
    FINAL           reduce using rule 26 (InterfaceModifier -> STATIC .)
    CLASS           reduce using rule 26 (InterfaceModifier -> STATIC .)
    ENUM            reduce using rule 26 (InterfaceModifier -> STATIC .)


state 52

    (27) InterfaceModifier -> STRICTFP .

    PUBLIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ATRATE          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    FINAL           reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    CLASS           reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ENUM            reduce using rule 27 (InterfaceModifier -> STRICTFP .)


state 53

    (272) ImportDeclarationS -> ImportDeclaration ImportDeclarationS .

    SEMICOLON       reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    FINAL           reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    EXTENDS         reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    PUBLIC          reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    PROTECTED       reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    PRIVATE         reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    ABSTRACT        reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    STATIC          reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    STRICTFP        reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    ATRATE          reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    CLASS           reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    ENUM            reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    IMPLEMENTS      reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    LBRACE          reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    INTERFACE       reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    $end            reduce using rule 272 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)


state 54

    (286) SingleTypeImportDeclaration -> IMPORT TypeName . SEMICOLON

    SEMICOLON       shift and go to state 82


state 55

    (287) TypeImportOnDemandDeclaration -> IMPORT ExpressionName . PERIOD MUL SEMICOLON
    (294) TypeName -> ExpressionName .
    (296) ExpressionName -> ExpressionName . PERIOD IDENT

    PERIOD          shift and go to state 83
    SEMICOLON       reduce using rule 294 (TypeName -> ExpressionName .)


state 56

    (288) TypeImportOnDemandDeclaration -> IMPORT IDENT . PERIOD MUL SEMICOLON

    PERIOD          shift and go to state 84


state 57

    (289) SingleStaticImportDeclaration -> IMPORT STATIC . TypeName PERIOD IDENT SEMICOLON
    (290) StaticImportOnDemandDeclaration -> IMPORT STATIC . TypeName PERIOD MUL SEMICOLON
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT

    PERIOD          shift and go to state 27

    TypeName                       shift and go to state 85
    ExpressionName                 shift and go to state 26

state 58

    (276) PackageDeclaration -> PackageModifierS PACKAGE IDENT . PERIODIDENTS SEMICOLON
    (279) PERIODIDENTS -> . PERIOD IDENT PERIODIDENTS
    (280) PERIODIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 87
    SEMICOLON       reduce using rule 1 (empty -> .)

    PERIODIDENTS                   shift and go to state 86
    empty                          shift and go to state 88

state 59

    (78) NormalAnnotation -> ATRATE TypeName LPAREN . ZooElementValuePairList RPAREN
    (95) SingleElementAnnotation -> ATRATE TypeName LPAREN . ElementValue RPAREN
    (79) ZooElementValuePairList -> . ElementValuePairList
    (80) ZooElementValuePairList -> . empty
    (85) ElementValue -> . ConditionalExpression
    (86) ElementValue -> . ElementValueArrayInitializer
    (87) ElementValue -> . Annotation
    (81) ElementValuePairList -> . ElementValuePair COMMAElementValuePairS
    (1) empty -> .
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (88) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (84) ElementValuePair -> . IDENT ASSIGN ElementValue
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

    RPAREN          reduce using rule 1 (empty -> .)
    LBRACE          shift and go to state 100
    IDENT           shift and go to state 101
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    TypeName                       shift and go to state 89
    ZooElementValuePairList        shift and go to state 91
    ElementValue                   shift and go to state 92
    ElementValuePairList           shift and go to state 93
    empty                          shift and go to state 94
    ConditionalExpression          shift and go to state 95
    ElementValueArrayInitializer   shift and go to state 96
    Annotation                     shift and go to state 97
    ElementValuePair               shift and go to state 98
    ConditionalOrExpression        shift and go to state 99
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 102
    InclusiveOrExpression          shift and go to state 103
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 60

    (296) ExpressionName -> ExpressionName PERIOD . IDENT

    IDENT           shift and go to state 168


state 61

    (295) ExpressionName -> PERIOD IDENT .

    PERIOD          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LPAREN          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    ATRATE          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    PACKAGE         reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    PUBLIC          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    PROTECTED       reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    PRIVATE         reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    ABSTRACT        reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    STATIC          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    STRICTFP        reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    INTERFACE       reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    FINAL           reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    CLASS           reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    ENUM            reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    IDENT           reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    RPAREN          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    BOOLEAN         reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    BYTE            reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SHORT           reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    INT             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LONG            reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    CHAR            reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    FLOAT           reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    DOUBLE          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LBRACE          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    QUES            reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LBRACK          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    VOID            reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    ELLIPSIS        reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    COMMA           reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    RBRACE          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LSS             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    TRANSIENT       reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    VOLATILE        reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SYNCHRONIZED    reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    NATIVE          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    DEFAULT         reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    COLON_SEP       reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    INC             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    DEC             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    MUL             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    QUO             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    REM             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    ADD             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SUB             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SHL             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SHR             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SHR_UN          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    GTR             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LEQ             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    GEQ             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    INSTANCEOF      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    EQL             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    NEQ             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    AND             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    XOR             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    OR              reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LAND            reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    LOR             reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    ASSIGN          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    COLON           reduce using rule 295 (ExpressionName -> PERIOD IDENT .)
    RBRACK          reduce using rule 295 (ExpressionName -> PERIOD IDENT .)


state 62

    (274) TypeDeclarationS -> TypeDeclaration TypeDeclarationS .

    $end            reduce using rule 274 (TypeDeclarationS -> TypeDeclaration TypeDeclarationS .)


state 63

    (304) NormalClassDeclaration -> ClassModifierS CLASS . IDENT ZooTypeParameters

    IDENT           shift and go to state 169


state 64

    (443) EnumDeclaration -> ClassModifierS ENUM . IDENT ZooSuperinterfaces EnumBody

    IDENT           shift and go to state 170


state 65

    (305) NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces . ClassBody
    (319) ClassBody -> . LBRACE ClassBodyDeclarationS RBRACE

    LBRACE          shift and go to state 172

    ClassBody                      shift and go to state 171

state 66

    (302) ZooSuperinterfaces -> Superinterfaces .

    LBRACE          reduce using rule 302 (ZooSuperinterfaces -> Superinterfaces .)


state 67

    (303) ZooSuperinterfaces -> empty .

    LBRACE          reduce using rule 303 (ZooSuperinterfaces -> empty .)


state 68

    (313) Superinterfaces -> IMPLEMENTS . InterfaceTypeList
    (316) InterfaceTypeList -> . ClassType COMMAInterfaceTypeS
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 79
    ATRATE          shift and go to state 13

    InterfaceTypeList              shift and go to state 173
    ClassType                      shift and go to state 174
    TypeVariable                   shift and go to state 78
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 69

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE . IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody

    IDENT           shift and go to state 175


state 70

    (54) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE . INTERFACE IDENT AnnotationTypeBody

    INTERFACE       shift and go to state 176


state 71

    (441) ClassModifierS -> ClassModifier ClassModifierS .

    CLASS           reduce using rule 441 (ClassModifierS -> ClassModifier ClassModifierS .)
    ENUM            reduce using rule 441 (ClassModifierS -> ClassModifier ClassModifierS .)


state 72

    (442) ClassModifierS -> empty .

    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)


state 73

    (306) ClassModifier -> InterfaceModifier .

    FINAL           reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    PUBLIC          reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    PROTECTED       reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    PRIVATE         reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    ABSTRACT        reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    STATIC          reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    STRICTFP        reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    ATRATE          reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    CLASS           reduce using rule 306 (ClassModifier -> InterfaceModifier .)
    ENUM            reduce using rule 306 (ClassModifier -> InterfaceModifier .)


state 74

    (19) InterfaceModifierS -> InterfaceModifier . InterfaceModifierS
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    INTERFACE       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    InterfaceModifier              shift and go to state 74
    InterfaceModifierS             shift and go to state 75
    empty                          shift and go to state 76
    Annotation                     shift and go to state 46
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 75

    (19) InterfaceModifierS -> InterfaceModifier InterfaceModifierS .

    INTERFACE       reduce using rule 19 (InterfaceModifierS -> InterfaceModifier InterfaceModifierS .)
    ATRATE          reduce using rule 19 (InterfaceModifierS -> InterfaceModifier InterfaceModifierS .)


state 76

    (20) InterfaceModifierS -> empty .

    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)


state 77

    (299) SuperClass -> EXTENDS ClassType .
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments

    IMPLEMENTS      reduce using rule 299 (SuperClass -> EXTENDS ClassType .)
    LBRACE          reduce using rule 299 (SuperClass -> EXTENDS ClassType .)
    PERIOD          shift and go to state 177


state 78

    (482) ClassType -> TypeVariable . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 178
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 79

    (483) ClassType -> IDENT . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 182
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 80

    (486) TypeVariable -> AnnotationS . IDENT

    IDENT           shift and go to state 183


state 81

    (129) AnnotationS -> Annotation . AnnotationS
    (130) AnnotationS -> Annotation .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 130 (AnnotationS -> Annotation .)
    BOOLEAN         reduce using rule 130 (AnnotationS -> Annotation .)
    BYTE            reduce using rule 130 (AnnotationS -> Annotation .)
    SHORT           reduce using rule 130 (AnnotationS -> Annotation .)
    INT             reduce using rule 130 (AnnotationS -> Annotation .)
    LONG            reduce using rule 130 (AnnotationS -> Annotation .)
    CHAR            reduce using rule 130 (AnnotationS -> Annotation .)
    FLOAT           reduce using rule 130 (AnnotationS -> Annotation .)
    DOUBLE          reduce using rule 130 (AnnotationS -> Annotation .)
    LBRACE          reduce using rule 130 (AnnotationS -> Annotation .)
    QUES            reduce using rule 130 (AnnotationS -> Annotation .)
    LBRACK          reduce using rule 130 (AnnotationS -> Annotation .)
    VOID            reduce using rule 130 (AnnotationS -> Annotation .)
    ELLIPSIS        reduce using rule 130 (AnnotationS -> Annotation .)
    ATRATE          shift and go to state 13

    Annotation                     shift and go to state 81
    AnnotationS                    shift and go to state 184
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 82

    (286) SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .

    IMPORT          reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    SEMICOLON       reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    FINAL           reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    EXTENDS         reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    PUBLIC          reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    PROTECTED       reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    PRIVATE         reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    ABSTRACT        reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    STATIC          reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    STRICTFP        reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    ATRATE          reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    CLASS           reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    ENUM            reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    IMPLEMENTS      reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    LBRACE          reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    INTERFACE       reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    $end            reduce using rule 286 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)


state 83

    (287) TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD . MUL SEMICOLON
    (296) ExpressionName -> ExpressionName PERIOD . IDENT

    MUL             shift and go to state 185
    IDENT           shift and go to state 168


state 84

    (288) TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD . MUL SEMICOLON

    MUL             shift and go to state 186


state 85

    (289) SingleStaticImportDeclaration -> IMPORT STATIC TypeName . PERIOD IDENT SEMICOLON
    (290) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName . PERIOD MUL SEMICOLON

    PERIOD          shift and go to state 187


state 86

    (276) PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS . SEMICOLON

    SEMICOLON       shift and go to state 188


state 87

    (279) PERIODIDENTS -> PERIOD . IDENT PERIODIDENTS

    IDENT           shift and go to state 189


state 88

    (280) PERIODIDENTS -> empty .

    SEMICOLON       reduce using rule 280 (PERIODIDENTS -> empty .)


state 89

    (107) PrimaryNoNewArray -> TypeName . PERIOD THIS
    (114) ClassLiteral -> TypeName . LBRACKRBRACKS PERIOD CLASS
    (140) FieldAccess -> TypeName . PERIOD SUPER PERIOD IDENT
    (145) MethodInvocation -> TypeName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> TypeName . PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (159) MethodReference -> TypeName . PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for PERIOD resolved as shift
    PERIOD          shift and go to state 190
    LBRACK          shift and go to state 192

  ! PERIOD          [ reduce using rule 1 (empty -> .) ]

    LBRACKRBRACKS                  shift and go to state 191
    empty                          shift and go to state 193

state 90

    (261) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> LPAREN . PrimitiveType RPAREN IDENT
    (263) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (108) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    BOOLEAN         shift and go to state 202
    IDENT           shift and go to state 196
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    LPAREN          shift and go to state 194
    ATRATE          shift and go to state 13
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    VOID            shift and go to state 153
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    PrimitiveType                  shift and go to state 195
    UnaryExpression                shift and go to state 114
    ReferenceType                  shift and go to state 197
    UnaryExpressionNotPlusMinus    shift and go to state 117
    LambdaExpression               shift and go to state 198
    Expression                     shift and go to state 199
    AnnotationS                    shift and go to state 200
    NumericType                    shift and go to state 201
    ClassType                      shift and go to state 203
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 204
    AssignmentExpression           shift and go to state 205
    Annotation                     shift and go to state 81
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    TypeName                       shift and go to state 210
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 91

    (78) NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList . RPAREN

    RPAREN          shift and go to state 216


state 92

    (95) SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue . RPAREN

    RPAREN          shift and go to state 217


state 93

    (79) ZooElementValuePairList -> ElementValuePairList .

    RPAREN          reduce using rule 79 (ZooElementValuePairList -> ElementValuePairList .)


state 94

    (80) ZooElementValuePairList -> empty .

    RPAREN          reduce using rule 80 (ZooElementValuePairList -> empty .)


state 95

    (85) ElementValue -> ConditionalExpression .

    RPAREN          reduce using rule 85 (ElementValue -> ConditionalExpression .)
    COMMA           reduce using rule 85 (ElementValue -> ConditionalExpression .)
    RBRACE          reduce using rule 85 (ElementValue -> ConditionalExpression .)
    SEMICOLON       reduce using rule 85 (ElementValue -> ConditionalExpression .)


state 96

    (86) ElementValue -> ElementValueArrayInitializer .

    RPAREN          reduce using rule 86 (ElementValue -> ElementValueArrayInitializer .)
    COMMA           reduce using rule 86 (ElementValue -> ElementValueArrayInitializer .)
    RBRACE          reduce using rule 86 (ElementValue -> ElementValueArrayInitializer .)
    SEMICOLON       reduce using rule 86 (ElementValue -> ElementValueArrayInitializer .)


state 97

    (87) ElementValue -> Annotation .
    (129) AnnotationS -> Annotation . AnnotationS
    (130) AnnotationS -> Annotation .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          reduce using rule 87 (ElementValue -> Annotation .)
    COMMA           reduce using rule 87 (ElementValue -> Annotation .)
    RBRACE          reduce using rule 87 (ElementValue -> Annotation .)
    SEMICOLON       reduce using rule 87 (ElementValue -> Annotation .)
    IDENT           reduce using rule 130 (AnnotationS -> Annotation .)
    BOOLEAN         reduce using rule 130 (AnnotationS -> Annotation .)
    BYTE            reduce using rule 130 (AnnotationS -> Annotation .)
    SHORT           reduce using rule 130 (AnnotationS -> Annotation .)
    INT             reduce using rule 130 (AnnotationS -> Annotation .)
    LONG            reduce using rule 130 (AnnotationS -> Annotation .)
    CHAR            reduce using rule 130 (AnnotationS -> Annotation .)
    FLOAT           reduce using rule 130 (AnnotationS -> Annotation .)
    DOUBLE          reduce using rule 130 (AnnotationS -> Annotation .)
    ATRATE          shift and go to state 13

    Annotation                     shift and go to state 81
    AnnotationS                    shift and go to state 184
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 98

    (81) ElementValuePairList -> ElementValuePair . COMMAElementValuePairS
    (82) COMMAElementValuePairS -> . COMMA ElementValuePair COMMAElementValuePairS
    (83) COMMAElementValuePairS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 219
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAElementValuePairS         shift and go to state 218
    empty                          shift and go to state 220

state 99

    (201) ConditionalExpression -> ConditionalOrExpression .
    (202) ConditionalExpression -> ConditionalOrExpression . QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> ConditionalOrExpression . QUES Expression COLON LambdaExpression
    (205) ConditionalOrExpression -> ConditionalOrExpression . LOR ConditionalAndExpression

  ! shift/reduce conflict for QUES resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    RPAREN          reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    COMMA           reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACE          reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    COLON           reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACK          reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    MUL             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    QUO             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    REM             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    ADD             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    SUB             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    SHL             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    SHR             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    SHR_UN          reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    LSS             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    GTR             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    LEQ             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    GEQ             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    INSTANCEOF      reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    EQL             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    NEQ             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    AND             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    XOR             reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    OR              reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    LAND            reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    SEMICOLON       reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .)
    QUES            shift and go to state 221
    LOR             shift and go to state 222

  ! QUES            [ reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .) ]
  ! LOR             [ reduce using rule 201 (ConditionalExpression -> ConditionalOrExpression .) ]


state 100

    (88) ElementValueArrayInitializer -> LBRACE . ZooElementValueList ZooCOMMA RBRACE
    (89) ZooElementValueList -> . ElementValueList
    (90) ZooElementValueList -> . empty
    (91) ElementValueList -> . ElementValue COMMAElementValueS
    (1) empty -> .
    (85) ElementValue -> . ConditionalExpression
    (86) ElementValue -> . ElementValueArrayInitializer
    (87) ElementValue -> . Annotation
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (88) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    LBRACE          shift and go to state 100
    ATRATE          shift and go to state 13
    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    ZooElementValueList            shift and go to state 223
    ElementValueList               shift and go to state 224
    empty                          shift and go to state 225
    ElementValue                   shift and go to state 226
    ConditionalExpression          shift and go to state 95
    ElementValueArrayInitializer   shift and go to state 96
    Annotation                     shift and go to state 97
    ConditionalOrExpression        shift and go to state 99
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 102
    TypeName                       shift and go to state 89
    InclusiveOrExpression          shift and go to state 103
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 101

    (84) ElementValuePair -> IDENT . ASSIGN ElementValue
    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    ASSIGN          shift and go to state 228
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    AND             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RPAREN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 102

    (204) ConditionalOrExpression -> ConditionalAndExpression .
    (207) ConditionalAndExpression -> ConditionalAndExpression . LAND InclusiveOrExpression

  ! shift/reduce conflict for LAND resolved as shift
    QUES            reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    LOR             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    RPAREN          reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    COMMA           reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACE          reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    COLON           reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACK          reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    MUL             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    QUO             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    REM             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    ADD             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    SUB             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    SHL             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    SHR             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    SHR_UN          reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    LSS             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    GTR             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    LEQ             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    GEQ             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    INSTANCEOF      reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    EQL             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    NEQ             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    AND             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    XOR             reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    OR              reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    SEMICOLON       reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .)
    LAND            shift and go to state 238

  ! LAND            [ reduce using rule 204 (ConditionalOrExpression -> ConditionalAndExpression .) ]


state 103

    (206) ConditionalAndExpression -> InclusiveOrExpression .
    (209) InclusiveOrExpression -> InclusiveOrExpression . OR ExclusiveOrExpression

  ! shift/reduce conflict for OR resolved as shift
    LAND            reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    QUES            reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    LOR             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    RPAREN          reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    COMMA           reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACE          reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    COLON           reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    MUL             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    QUO             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    REM             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    ADD             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    SUB             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    SHL             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    SHR             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    SHR_UN          reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    LSS             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    GTR             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    LEQ             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    GEQ             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    INSTANCEOF      reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    EQL             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    NEQ             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    AND             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    XOR             reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACK          reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    SEMICOLON       reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .)
    OR              shift and go to state 239

  ! OR              [ reduce using rule 206 (ConditionalAndExpression -> InclusiveOrExpression .) ]


state 104

    (208) InclusiveOrExpression -> ExclusiveOrExpression .
    (211) ExclusiveOrExpression -> ExclusiveOrExpression . XOR AndExpression

  ! shift/reduce conflict for XOR resolved as shift
    OR              reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LAND            reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    QUES            reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LOR             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RPAREN          reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COMMA           reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACE          reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COLON           reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    MUL             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    QUO             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    REM             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    ADD             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SUB             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SHL             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SHR             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SHR_UN          reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LSS             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    GTR             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LEQ             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    GEQ             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    INSTANCEOF      reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    EQL             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    NEQ             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    AND             reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACK          reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SEMICOLON       reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .)
    XOR             shift and go to state 240

  ! XOR             [ reduce using rule 208 (InclusiveOrExpression -> ExclusiveOrExpression .) ]


state 105

    (210) ExclusiveOrExpression -> AndExpression .
    (213) AndExpression -> AndExpression . AND EqualityExpression

  ! shift/reduce conflict for AND resolved as shift
    XOR             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    OR              reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    LAND            reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    QUES            reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    LOR             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    RPAREN          reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    COMMA           reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    RBRACE          reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    COLON           reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    MUL             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    QUO             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    REM             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    ADD             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    SUB             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    SHL             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    SHR             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    SHR_UN          reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    LSS             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    GTR             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    LEQ             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    GEQ             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    INSTANCEOF      reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    EQL             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    NEQ             reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    RBRACK          reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    SEMICOLON       reduce using rule 210 (ExclusiveOrExpression -> AndExpression .)
    AND             shift and go to state 241

  ! AND             [ reduce using rule 210 (ExclusiveOrExpression -> AndExpression .) ]


state 106

    (212) AndExpression -> EqualityExpression .
    (215) EqualityExpression -> EqualityExpression . EQL RelationalExpression
    (216) EqualityExpression -> EqualityExpression . NEQ RelationalExpression

  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    AND             reduce using rule 212 (AndExpression -> EqualityExpression .)
    XOR             reduce using rule 212 (AndExpression -> EqualityExpression .)
    OR              reduce using rule 212 (AndExpression -> EqualityExpression .)
    LAND            reduce using rule 212 (AndExpression -> EqualityExpression .)
    QUES            reduce using rule 212 (AndExpression -> EqualityExpression .)
    LOR             reduce using rule 212 (AndExpression -> EqualityExpression .)
    RPAREN          reduce using rule 212 (AndExpression -> EqualityExpression .)
    COMMA           reduce using rule 212 (AndExpression -> EqualityExpression .)
    RBRACE          reduce using rule 212 (AndExpression -> EqualityExpression .)
    COLON           reduce using rule 212 (AndExpression -> EqualityExpression .)
    MUL             reduce using rule 212 (AndExpression -> EqualityExpression .)
    QUO             reduce using rule 212 (AndExpression -> EqualityExpression .)
    REM             reduce using rule 212 (AndExpression -> EqualityExpression .)
    ADD             reduce using rule 212 (AndExpression -> EqualityExpression .)
    SUB             reduce using rule 212 (AndExpression -> EqualityExpression .)
    SHL             reduce using rule 212 (AndExpression -> EqualityExpression .)
    SHR             reduce using rule 212 (AndExpression -> EqualityExpression .)
    SHR_UN          reduce using rule 212 (AndExpression -> EqualityExpression .)
    LSS             reduce using rule 212 (AndExpression -> EqualityExpression .)
    GTR             reduce using rule 212 (AndExpression -> EqualityExpression .)
    LEQ             reduce using rule 212 (AndExpression -> EqualityExpression .)
    GEQ             reduce using rule 212 (AndExpression -> EqualityExpression .)
    INSTANCEOF      reduce using rule 212 (AndExpression -> EqualityExpression .)
    RBRACK          reduce using rule 212 (AndExpression -> EqualityExpression .)
    SEMICOLON       reduce using rule 212 (AndExpression -> EqualityExpression .)
    EQL             shift and go to state 242
    NEQ             shift and go to state 243

  ! EQL             [ reduce using rule 212 (AndExpression -> EqualityExpression .) ]
  ! NEQ             [ reduce using rule 212 (AndExpression -> EqualityExpression .) ]


state 107

    (214) EqualityExpression -> RelationalExpression .
    (218) RelationalExpression -> RelationalExpression . LSS ShiftExpression
    (219) RelationalExpression -> RelationalExpression . GTR ShiftExpression
    (220) RelationalExpression -> RelationalExpression . LEQ ShiftExpression
    (221) RelationalExpression -> RelationalExpression . GEQ ShiftExpression
    (222) RelationalExpression -> RelationalExpression . INSTANCEOF ReferenceType

  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for INSTANCEOF resolved as shift
    EQL             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    NEQ             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    AND             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    XOR             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    OR              reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    LAND            reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    QUES            reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    LOR             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    RPAREN          reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    COMMA           reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    RBRACE          reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    COLON           reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    MUL             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    QUO             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    REM             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    ADD             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    SUB             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    SHL             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    SHR             reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    SHR_UN          reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    RBRACK          reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    SEMICOLON       reduce using rule 214 (EqualityExpression -> RelationalExpression .)
    LSS             shift and go to state 244
    GTR             shift and go to state 245
    LEQ             shift and go to state 246
    GEQ             shift and go to state 247
    INSTANCEOF      shift and go to state 248

  ! LSS             [ reduce using rule 214 (EqualityExpression -> RelationalExpression .) ]
  ! GTR             [ reduce using rule 214 (EqualityExpression -> RelationalExpression .) ]
  ! LEQ             [ reduce using rule 214 (EqualityExpression -> RelationalExpression .) ]
  ! GEQ             [ reduce using rule 214 (EqualityExpression -> RelationalExpression .) ]
  ! INSTANCEOF      [ reduce using rule 214 (EqualityExpression -> RelationalExpression .) ]


state 108

    (217) RelationalExpression -> ShiftExpression .
    (224) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (225) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (226) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    GTR             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    LEQ             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    GEQ             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    INSTANCEOF      reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    EQL             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    NEQ             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    AND             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    XOR             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    OR              reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    LAND            reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    QUES            reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    LOR             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    RPAREN          reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    COMMA           reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    RBRACE          reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    COLON           reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    MUL             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    QUO             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    REM             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    ADD             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    SUB             reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    RBRACK          reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    SEMICOLON       reduce using rule 217 (RelationalExpression -> ShiftExpression .)
    SHL             shift and go to state 249
    SHR             shift and go to state 250
    SHR_UN          shift and go to state 251

  ! SHL             [ reduce using rule 217 (RelationalExpression -> ShiftExpression .) ]
  ! SHR             [ reduce using rule 217 (RelationalExpression -> ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 217 (RelationalExpression -> ShiftExpression .) ]


state 109

    (156) MethodReference -> ReferenceType . COLON_SEP ZooTypeArguments IDENT

    COLON_SEP       shift and go to state 252


state 110

    (223) ShiftExpression -> AdditiveExpression .
    (228) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (229) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    SHR             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    SHR_UN          reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    LSS             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    GTR             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    LEQ             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    GEQ             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    INSTANCEOF      reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    EQL             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    NEQ             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    AND             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    XOR             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    OR              reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    LAND            reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    QUES            reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    LOR             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    RPAREN          reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    COMMA           reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    RBRACE          reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    COLON           reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    MUL             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    QUO             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    REM             reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    RBRACK          reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    SEMICOLON       reduce using rule 223 (ShiftExpression -> AdditiveExpression .)
    ADD             shift and go to state 253
    SUB             shift and go to state 254

  ! ADD             [ reduce using rule 223 (ShiftExpression -> AdditiveExpression .) ]
  ! SUB             [ reduce using rule 223 (ShiftExpression -> AdditiveExpression .) ]


state 111

    (227) AdditiveExpression -> MultiplicativeExpression .
    (232) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (233) MultiplicativeExpression -> MultiplicativeExpression . QUO UnaryExpression
    (234) MultiplicativeExpression -> MultiplicativeExpression . REM UnaryExpression
    (235) MultiplicativeExpression -> MultiplicativeExpression . MUL IDENT
    (236) MultiplicativeExpression -> MultiplicativeExpression . QUO IDENT
    (237) MultiplicativeExpression -> MultiplicativeExpression . REM IDENT

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
    ADD             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    SUB             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    SHL             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    SHR             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    SHR_UN          reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    LSS             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    GTR             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    LEQ             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    GEQ             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    INSTANCEOF      reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    EQL             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    NEQ             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    AND             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    XOR             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    OR              reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    LAND            reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    QUES            reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    LOR             reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    RPAREN          reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    COMMA           reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACE          reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    COLON           reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACK          reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    SEMICOLON       reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .)
    MUL             shift and go to state 255
    QUO             shift and go to state 256
    REM             shift and go to state 257

  ! MUL             [ reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .) ]
  ! QUO             [ reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .) ]
  ! REM             [ reduce using rule 227 (AdditiveExpression -> MultiplicativeExpression .) ]


state 112

    (240) UnaryExpression -> ADD . UnaryExpression
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    IDENT           shift and go to state 259
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 258
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 113

    (241) UnaryExpression -> SUB . UnaryExpression
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    IDENT           shift and go to state 259
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 260
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 114

    (230) MultiplicativeExpression -> UnaryExpression .

    MUL             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    QUO             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    REM             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    ADD             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    SUB             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    SHL             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    SHR             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    SHR_UN          reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    LSS             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    GTR             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    LEQ             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    GEQ             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    INSTANCEOF      reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    EQL             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    NEQ             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    AND             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    XOR             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    OR              reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    LAND            reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    QUES            reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    LOR             reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    RPAREN          reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    COMMA           reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    RBRACE          reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    COLON           reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    RBRACK          reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)
    SEMICOLON       reduce using rule 230 (MultiplicativeExpression -> UnaryExpression .)


state 115

    (238) UnaryExpression -> PreIncrementExpression .

    MUL             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    QUO             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    REM             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    ADD             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    SUB             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    SHL             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    SHR             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    SHR_UN          reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    LSS             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    GTR             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    LEQ             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    GEQ             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    INSTANCEOF      reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    EQL             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    NEQ             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    AND             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    XOR             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    OR              reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    LAND            reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    QUES            reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    LOR             reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    RBRACE          reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    COLON           reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    RBRACK          reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)
    SEMICOLON       reduce using rule 238 (UnaryExpression -> PreIncrementExpression .)


state 116

    (239) UnaryExpression -> PreDecrementExpression .

    MUL             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    QUO             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    REM             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    ADD             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    SUB             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    SHL             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    SHR             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    SHR_UN          reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    LSS             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    GTR             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    LEQ             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    GEQ             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    INSTANCEOF      reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    EQL             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    NEQ             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    AND             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    XOR             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    OR              reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    LAND            reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    QUES            reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    LOR             reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    RBRACE          reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    COLON           reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    RBRACK          reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)
    SEMICOLON       reduce using rule 239 (UnaryExpression -> PreDecrementExpression .)


state 117

    (242) UnaryExpression -> UnaryExpressionNotPlusMinus .

    MUL             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    QUO             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    REM             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    ADD             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SUB             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SHL             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SHR             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SHR_UN          reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LSS             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    GTR             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LEQ             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    GEQ             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    EQL             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    NEQ             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    AND             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    XOR             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    OR              reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LAND            reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    QUES            reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LOR             reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    RBRACE          reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    COLON           reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    RBRACK          reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SEMICOLON       reduce using rule 242 (UnaryExpression -> UnaryExpressionNotPlusMinus .)


state 118

    (243) PreIncrementExpression -> INC . UnaryExpression
    (244) PreIncrementExpression -> INC . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 262
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 261
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 119

    (245) PreDecrementExpression -> DEC . UnaryExpression
    (246) PreDecrementExpression -> DEC . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 264
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 263
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 120

    (247) UnaryExpressionNotPlusMinus -> PostfixExpression .
    (257) PostIncrementExpression -> PostfixExpression . INC
    (259) PostDecrementExpression -> PostfixExpression . DEC

    MUL             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    QUO             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    REM             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    ADD             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SUB             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SHL             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SHR             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SHR_UN          reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LSS             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    GTR             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LEQ             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    GEQ             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    INSTANCEOF      reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    EQL             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    NEQ             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    AND             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    XOR             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    OR              reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LAND            reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    QUES            reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LOR             reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    RPAREN          reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    COMMA           reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    RBRACE          reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    COLON           reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    RBRACK          reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SEMICOLON       reduce using rule 247 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    INC             shift and go to state 265
    DEC             shift and go to state 266


state 121

    (248) UnaryExpressionNotPlusMinus -> LNOT . UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> LNOT . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 268
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 267
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 122

    (249) UnaryExpressionNotPlusMinus -> NOT . UnaryExpression
    (251) UnaryExpressionNotPlusMinus -> NOT . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 270
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 269
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 123

    (252) UnaryExpressionNotPlusMinus -> CastExpression .

    MUL             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    QUO             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    REM             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    ADD             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SUB             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SHL             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SHR             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SHR_UN          reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LSS             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    GTR             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LEQ             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    GEQ             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    INSTANCEOF      reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    EQL             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    NEQ             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    AND             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    XOR             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    OR              reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LAND            reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    QUES            reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LOR             reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    RPAREN          reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    COMMA           reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    RBRACE          reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    COLON           reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    RBRACK          reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SEMICOLON       reduce using rule 252 (UnaryExpressionNotPlusMinus -> CastExpression .)


state 124

    (253) PostfixExpression -> Primary .
    (123) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> Primary . PERIOD IDENT
    (148) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (157) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT

    INC             reduce using rule 253 (PostfixExpression -> Primary .)
    DEC             reduce using rule 253 (PostfixExpression -> Primary .)
    MUL             reduce using rule 253 (PostfixExpression -> Primary .)
    QUO             reduce using rule 253 (PostfixExpression -> Primary .)
    REM             reduce using rule 253 (PostfixExpression -> Primary .)
    ADD             reduce using rule 253 (PostfixExpression -> Primary .)
    SUB             reduce using rule 253 (PostfixExpression -> Primary .)
    SHL             reduce using rule 253 (PostfixExpression -> Primary .)
    SHR             reduce using rule 253 (PostfixExpression -> Primary .)
    SHR_UN          reduce using rule 253 (PostfixExpression -> Primary .)
    LSS             reduce using rule 253 (PostfixExpression -> Primary .)
    GTR             reduce using rule 253 (PostfixExpression -> Primary .)
    LEQ             reduce using rule 253 (PostfixExpression -> Primary .)
    GEQ             reduce using rule 253 (PostfixExpression -> Primary .)
    INSTANCEOF      reduce using rule 253 (PostfixExpression -> Primary .)
    EQL             reduce using rule 253 (PostfixExpression -> Primary .)
    NEQ             reduce using rule 253 (PostfixExpression -> Primary .)
    AND             reduce using rule 253 (PostfixExpression -> Primary .)
    XOR             reduce using rule 253 (PostfixExpression -> Primary .)
    OR              reduce using rule 253 (PostfixExpression -> Primary .)
    LAND            reduce using rule 253 (PostfixExpression -> Primary .)
    QUES            reduce using rule 253 (PostfixExpression -> Primary .)
    LOR             reduce using rule 253 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 253 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 253 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 253 (PostfixExpression -> Primary .)
    COLON           reduce using rule 253 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 253 (PostfixExpression -> Primary .)
    SEMICOLON       reduce using rule 253 (PostfixExpression -> Primary .)
    PERIOD          shift and go to state 271
    COLON_SEP       shift and go to state 272


state 125

    (254) PostfixExpression -> ExpressionName .
    (296) ExpressionName -> ExpressionName . PERIOD IDENT
    (294) TypeName -> ExpressionName .
    (121) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (141) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (146) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
    INC             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    DEC             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    MUL             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    QUO             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    REM             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    ADD             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SUB             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SHL             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SHR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SHR_UN          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LSS             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    GTR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LEQ             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    GEQ             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    INSTANCEOF      reduce using rule 254 (PostfixExpression -> ExpressionName .)
    EQL             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    NEQ             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    AND             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    XOR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    OR              reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LAND            reduce using rule 254 (PostfixExpression -> ExpressionName .)
    QUES            reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LOR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    RPAREN          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    COMMA           reduce using rule 254 (PostfixExpression -> ExpressionName .)
    RBRACE          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    COLON           reduce using rule 254 (PostfixExpression -> ExpressionName .)
    RBRACK          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SEMICOLON       reduce using rule 254 (PostfixExpression -> ExpressionName .)
    PERIOD          shift and go to state 273
    LBRACK          shift and go to state 274
    COLON_SEP       shift and go to state 275

  ! PERIOD          [ reduce using rule 294 (TypeName -> ExpressionName .) ]
  ! LBRACK          [ reduce using rule 294 (TypeName -> ExpressionName .) ]


state 126

    (255) PostfixExpression -> PostIncrementExpression .

    INC             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    MUL             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    QUO             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    REM             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    ADD             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    SUB             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    SHL             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    SHR             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    SHR_UN          reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    LSS             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    GTR             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    LEQ             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    GEQ             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    INSTANCEOF      reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    EQL             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    NEQ             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    AND             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    XOR             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    OR              reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    LAND            reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    QUES            reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    LOR             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    RBRACE          reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    COLON           reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    RBRACK          reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    SEMICOLON       reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)


state 127

    (256) PostfixExpression -> PostDecrementExpression .

    INC             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    MUL             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    QUO             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    REM             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    ADD             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    SUB             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    SHL             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    SHR             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    SHR_UN          reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    LSS             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    GTR             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    LEQ             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    GEQ             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    INSTANCEOF      reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    EQL             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    NEQ             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    AND             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    XOR             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    OR              reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    LAND            reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    QUES            reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    LOR             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    RBRACE          reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    COLON           reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    RBRACK          reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    SEMICOLON       reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)


state 128

    (487) ArrayType -> PrimitiveType . Dims
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          shift and go to state 237
    ATRATE          shift and go to state 13

    Dims                           shift and go to state 276
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 129

    (102) Primary -> PrimaryNoNewArray .
    (143) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK

    PERIOD          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    COLON_SEP       reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    QUO             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    REM             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SHL             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SHR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SHR_UN          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LSS             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    GTR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LEQ             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    GEQ             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    INSTANCEOF      reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    EQL             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    NEQ             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    XOR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LAND            reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    QUES            reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LOR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SEMICOLON       reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LBRACK          shift and go to state 277


state 130

    (103) Primary -> ArrayCreationExpression .

    PERIOD          reduce using rule 103 (Primary -> ArrayCreationExpression .)
    COLON_SEP       reduce using rule 103 (Primary -> ArrayCreationExpression .)
    INC             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    DEC             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    MUL             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    QUO             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    REM             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    ADD             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    SUB             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    SHL             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    SHR             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    SHR_UN          reduce using rule 103 (Primary -> ArrayCreationExpression .)
    LSS             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    GTR             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    LEQ             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    GEQ             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    INSTANCEOF      reduce using rule 103 (Primary -> ArrayCreationExpression .)
    EQL             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    NEQ             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    AND             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    XOR             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    OR              reduce using rule 103 (Primary -> ArrayCreationExpression .)
    LAND            reduce using rule 103 (Primary -> ArrayCreationExpression .)
    QUES            reduce using rule 103 (Primary -> ArrayCreationExpression .)
    LOR             reduce using rule 103 (Primary -> ArrayCreationExpression .)
    RPAREN          reduce using rule 103 (Primary -> ArrayCreationExpression .)
    COMMA           reduce using rule 103 (Primary -> ArrayCreationExpression .)
    RBRACE          reduce using rule 103 (Primary -> ArrayCreationExpression .)
    COLON           reduce using rule 103 (Primary -> ArrayCreationExpression .)
    RBRACK          reduce using rule 103 (Primary -> ArrayCreationExpression .)
    SEMICOLON       reduce using rule 103 (Primary -> ArrayCreationExpression .)


state 131

    (104) PrimaryNoNewArray -> Literal .

    LBRACK          reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    PERIOD          reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    COLON_SEP       reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    INC             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    DEC             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    MUL             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    QUO             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    REM             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    ADD             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    SUB             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    SHL             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    SHR             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    SHR_UN          reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    LSS             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    GTR             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    LEQ             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    GEQ             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    INSTANCEOF      reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    EQL             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    NEQ             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    AND             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    XOR             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    OR              reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    LAND            reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    QUES            reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    LOR             reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    RPAREN          reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    COMMA           reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    RBRACE          reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    COLON           reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    RBRACK          reduce using rule 104 (PrimaryNoNewArray -> Literal .)
    SEMICOLON       reduce using rule 104 (PrimaryNoNewArray -> Literal .)


state 132

    (105) PrimaryNoNewArray -> ClassLiteral .

    LBRACK          reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    PERIOD          reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    COLON_SEP       reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    INC             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    DEC             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    MUL             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    QUO             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    REM             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    ADD             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    SUB             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    SHL             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    SHR             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    SHR_UN          reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    LSS             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    GTR             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    LEQ             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    GEQ             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    INSTANCEOF      reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    EQL             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    NEQ             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    AND             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    XOR             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    OR              reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    LAND            reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    QUES            reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    LOR             reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    RPAREN          reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    COMMA           reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    RBRACE          reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    COLON           reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    RBRACK          reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)
    SEMICOLON       reduce using rule 105 (PrimaryNoNewArray -> ClassLiteral .)


state 133

    (106) PrimaryNoNewArray -> THIS .

    LBRACK          reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    PERIOD          reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    COLON_SEP       reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    INC             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    DEC             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    MUL             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    QUO             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    REM             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    ADD             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    SUB             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    SHL             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    SHR             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    SHR_UN          reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    LSS             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    GTR             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    LEQ             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    GEQ             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    INSTANCEOF      reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    EQL             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    NEQ             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    AND             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    XOR             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    OR              reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    LAND            reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    QUES            reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    LOR             reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    RPAREN          reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    COMMA           reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    RBRACE          reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    COLON           reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    RBRACK          reduce using rule 106 (PrimaryNoNewArray -> THIS .)
    SEMICOLON       reduce using rule 106 (PrimaryNoNewArray -> THIS .)


state 134

    (109) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    LBRACK          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    PERIOD          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    MUL             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    QUO             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    REM             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    ADD             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SUB             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SHL             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SHR             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LSS             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GTR             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LEQ             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GEQ             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    EQL             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    NEQ             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    AND             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    XOR             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    OR              reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LAND            reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    QUES            reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LOR             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACE          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON           reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACK          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 135

    (110) PrimaryNoNewArray -> FieldAccess .

    LBRACK          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    PERIOD          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    COLON_SEP       reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    QUO             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    REM             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SHL             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SHR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SHR_UN          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LSS             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    GTR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LEQ             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    GEQ             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    INSTANCEOF      reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    EQL             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    NEQ             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    XOR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LAND            reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    QUES            reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LOR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SEMICOLON       reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)


state 136

    (111) PrimaryNoNewArray -> ArrayAccess .

    LBRACK          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    PERIOD          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    COLON_SEP       reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    QUO             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    REM             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SHL             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SHR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SHR_UN          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LSS             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    GTR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LEQ             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    GEQ             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    INSTANCEOF      reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    EQL             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    NEQ             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    XOR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LAND            reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    QUES            reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LOR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SEMICOLON       reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)


state 137

    (112) PrimaryNoNewArray -> MethodInvocation .

    LBRACK          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    PERIOD          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    COLON_SEP       reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    MUL             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    QUO             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    REM             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    ADD             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    SUB             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    SHL             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    SHR             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    SHR_UN          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    LSS             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    GTR             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    LEQ             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    GEQ             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    INSTANCEOF      reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    EQL             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    NEQ             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    AND             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    XOR             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    OR              reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    LAND            reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    QUES            reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    LOR             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    RPAREN          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    COMMA           reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACE          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    COLON           reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACK          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    SEMICOLON       reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)


state 138

    (113) PrimaryNoNewArray -> MethodReference .

    LBRACK          reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    PERIOD          reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    COLON_SEP       reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    INC             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    DEC             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    MUL             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    QUO             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    REM             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    ADD             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    SUB             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    SHL             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    SHR             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    SHR_UN          reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    LSS             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    GTR             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    LEQ             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    GEQ             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    INSTANCEOF      reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    EQL             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    NEQ             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    AND             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    XOR             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    OR              reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    LAND            reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    QUES            reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    LOR             reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    RPAREN          reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    COMMA           reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    RBRACE          reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    COLON           reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    RBRACK          reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)
    SEMICOLON       reduce using rule 113 (PrimaryNoNewArray -> MethodReference .)


state 139

    (162) ArrayCreationExpression -> NEW . PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> NEW . ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> NEW . PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> NEW . ClassType Dims ArrayInitializer
    (124) UnqualifiedClassInstanceCreationExpression -> NEW . ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (486) TypeVariable -> . AnnotationS IDENT
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    BOOLEAN         shift and go to state 282
    IDENT           shift and go to state 79
    LSS             shift and go to state 181
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    PrimitiveType                  shift and go to state 278
    ClassType                      shift and go to state 279
    ZooTypeArguments               shift and go to state 280
    AnnotationS                    shift and go to state 200
    NumericType                    shift and go to state 281
    TypeVariable                   shift and go to state 78
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    Annotation                     shift and go to state 81
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 140

    (160) MethodReference -> ClassType . COLON_SEP ZooTypeArguments NEW
    (478) ReferenceType -> ClassType .
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (488) ArrayType -> ClassType . Dims
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
    COLON_SEP       shift and go to state 283
    PERIOD          shift and go to state 177
    LBRACE          shift and go to state 237
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 478 (ReferenceType -> ClassType .) ]

    Dims                           shift and go to state 284
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 141

    (2) Literal -> BOOL_LIT .

    LBRACK          reduce using rule 2 (Literal -> BOOL_LIT .)
    PERIOD          reduce using rule 2 (Literal -> BOOL_LIT .)
    COLON_SEP       reduce using rule 2 (Literal -> BOOL_LIT .)
    INC             reduce using rule 2 (Literal -> BOOL_LIT .)
    DEC             reduce using rule 2 (Literal -> BOOL_LIT .)
    MUL             reduce using rule 2 (Literal -> BOOL_LIT .)
    QUO             reduce using rule 2 (Literal -> BOOL_LIT .)
    REM             reduce using rule 2 (Literal -> BOOL_LIT .)
    ADD             reduce using rule 2 (Literal -> BOOL_LIT .)
    SUB             reduce using rule 2 (Literal -> BOOL_LIT .)
    SHL             reduce using rule 2 (Literal -> BOOL_LIT .)
    SHR             reduce using rule 2 (Literal -> BOOL_LIT .)
    SHR_UN          reduce using rule 2 (Literal -> BOOL_LIT .)
    LSS             reduce using rule 2 (Literal -> BOOL_LIT .)
    GTR             reduce using rule 2 (Literal -> BOOL_LIT .)
    LEQ             reduce using rule 2 (Literal -> BOOL_LIT .)
    GEQ             reduce using rule 2 (Literal -> BOOL_LIT .)
    INSTANCEOF      reduce using rule 2 (Literal -> BOOL_LIT .)
    EQL             reduce using rule 2 (Literal -> BOOL_LIT .)
    NEQ             reduce using rule 2 (Literal -> BOOL_LIT .)
    AND             reduce using rule 2 (Literal -> BOOL_LIT .)
    XOR             reduce using rule 2 (Literal -> BOOL_LIT .)
    OR              reduce using rule 2 (Literal -> BOOL_LIT .)
    LAND            reduce using rule 2 (Literal -> BOOL_LIT .)
    QUES            reduce using rule 2 (Literal -> BOOL_LIT .)
    LOR             reduce using rule 2 (Literal -> BOOL_LIT .)
    RPAREN          reduce using rule 2 (Literal -> BOOL_LIT .)
    COMMA           reduce using rule 2 (Literal -> BOOL_LIT .)
    RBRACE          reduce using rule 2 (Literal -> BOOL_LIT .)
    COLON           reduce using rule 2 (Literal -> BOOL_LIT .)
    RBRACK          reduce using rule 2 (Literal -> BOOL_LIT .)
    SEMICOLON       reduce using rule 2 (Literal -> BOOL_LIT .)


state 142

    (3) Literal -> NULL_LIT .

    LBRACK          reduce using rule 3 (Literal -> NULL_LIT .)
    PERIOD          reduce using rule 3 (Literal -> NULL_LIT .)
    COLON_SEP       reduce using rule 3 (Literal -> NULL_LIT .)
    INC             reduce using rule 3 (Literal -> NULL_LIT .)
    DEC             reduce using rule 3 (Literal -> NULL_LIT .)
    MUL             reduce using rule 3 (Literal -> NULL_LIT .)
    QUO             reduce using rule 3 (Literal -> NULL_LIT .)
    REM             reduce using rule 3 (Literal -> NULL_LIT .)
    ADD             reduce using rule 3 (Literal -> NULL_LIT .)
    SUB             reduce using rule 3 (Literal -> NULL_LIT .)
    SHL             reduce using rule 3 (Literal -> NULL_LIT .)
    SHR             reduce using rule 3 (Literal -> NULL_LIT .)
    SHR_UN          reduce using rule 3 (Literal -> NULL_LIT .)
    LSS             reduce using rule 3 (Literal -> NULL_LIT .)
    GTR             reduce using rule 3 (Literal -> NULL_LIT .)
    LEQ             reduce using rule 3 (Literal -> NULL_LIT .)
    GEQ             reduce using rule 3 (Literal -> NULL_LIT .)
    INSTANCEOF      reduce using rule 3 (Literal -> NULL_LIT .)
    EQL             reduce using rule 3 (Literal -> NULL_LIT .)
    NEQ             reduce using rule 3 (Literal -> NULL_LIT .)
    AND             reduce using rule 3 (Literal -> NULL_LIT .)
    XOR             reduce using rule 3 (Literal -> NULL_LIT .)
    OR              reduce using rule 3 (Literal -> NULL_LIT .)
    LAND            reduce using rule 3 (Literal -> NULL_LIT .)
    QUES            reduce using rule 3 (Literal -> NULL_LIT .)
    LOR             reduce using rule 3 (Literal -> NULL_LIT .)
    RPAREN          reduce using rule 3 (Literal -> NULL_LIT .)
    COMMA           reduce using rule 3 (Literal -> NULL_LIT .)
    RBRACE          reduce using rule 3 (Literal -> NULL_LIT .)
    COLON           reduce using rule 3 (Literal -> NULL_LIT .)
    RBRACK          reduce using rule 3 (Literal -> NULL_LIT .)
    SEMICOLON       reduce using rule 3 (Literal -> NULL_LIT .)


state 143

    (4) Literal -> DECIMAL_LIT .

    LBRACK          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    PERIOD          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    COLON_SEP       reduce using rule 4 (Literal -> DECIMAL_LIT .)
    INC             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    DEC             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    MUL             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    QUO             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    REM             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    ADD             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SUB             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SHL             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SHR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SHR_UN          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LSS             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    GTR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LEQ             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    GEQ             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    INSTANCEOF      reduce using rule 4 (Literal -> DECIMAL_LIT .)
    EQL             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    NEQ             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    AND             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    XOR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    OR              reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LAND            reduce using rule 4 (Literal -> DECIMAL_LIT .)
    QUES            reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LOR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    RPAREN          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    COMMA           reduce using rule 4 (Literal -> DECIMAL_LIT .)
    RBRACE          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    COLON           reduce using rule 4 (Literal -> DECIMAL_LIT .)
    RBRACK          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SEMICOLON       reduce using rule 4 (Literal -> DECIMAL_LIT .)


state 144

    (5) Literal -> HEX_LIT .

    LBRACK          reduce using rule 5 (Literal -> HEX_LIT .)
    PERIOD          reduce using rule 5 (Literal -> HEX_LIT .)
    COLON_SEP       reduce using rule 5 (Literal -> HEX_LIT .)
    INC             reduce using rule 5 (Literal -> HEX_LIT .)
    DEC             reduce using rule 5 (Literal -> HEX_LIT .)
    MUL             reduce using rule 5 (Literal -> HEX_LIT .)
    QUO             reduce using rule 5 (Literal -> HEX_LIT .)
    REM             reduce using rule 5 (Literal -> HEX_LIT .)
    ADD             reduce using rule 5 (Literal -> HEX_LIT .)
    SUB             reduce using rule 5 (Literal -> HEX_LIT .)
    SHL             reduce using rule 5 (Literal -> HEX_LIT .)
    SHR             reduce using rule 5 (Literal -> HEX_LIT .)
    SHR_UN          reduce using rule 5 (Literal -> HEX_LIT .)
    LSS             reduce using rule 5 (Literal -> HEX_LIT .)
    GTR             reduce using rule 5 (Literal -> HEX_LIT .)
    LEQ             reduce using rule 5 (Literal -> HEX_LIT .)
    GEQ             reduce using rule 5 (Literal -> HEX_LIT .)
    INSTANCEOF      reduce using rule 5 (Literal -> HEX_LIT .)
    EQL             reduce using rule 5 (Literal -> HEX_LIT .)
    NEQ             reduce using rule 5 (Literal -> HEX_LIT .)
    AND             reduce using rule 5 (Literal -> HEX_LIT .)
    XOR             reduce using rule 5 (Literal -> HEX_LIT .)
    OR              reduce using rule 5 (Literal -> HEX_LIT .)
    LAND            reduce using rule 5 (Literal -> HEX_LIT .)
    QUES            reduce using rule 5 (Literal -> HEX_LIT .)
    LOR             reduce using rule 5 (Literal -> HEX_LIT .)
    RPAREN          reduce using rule 5 (Literal -> HEX_LIT .)
    COMMA           reduce using rule 5 (Literal -> HEX_LIT .)
    RBRACE          reduce using rule 5 (Literal -> HEX_LIT .)
    COLON           reduce using rule 5 (Literal -> HEX_LIT .)
    RBRACK          reduce using rule 5 (Literal -> HEX_LIT .)
    SEMICOLON       reduce using rule 5 (Literal -> HEX_LIT .)


state 145

    (6) Literal -> OCTAL_LIT .

    LBRACK          reduce using rule 6 (Literal -> OCTAL_LIT .)
    PERIOD          reduce using rule 6 (Literal -> OCTAL_LIT .)
    COLON_SEP       reduce using rule 6 (Literal -> OCTAL_LIT .)
    INC             reduce using rule 6 (Literal -> OCTAL_LIT .)
    DEC             reduce using rule 6 (Literal -> OCTAL_LIT .)
    MUL             reduce using rule 6 (Literal -> OCTAL_LIT .)
    QUO             reduce using rule 6 (Literal -> OCTAL_LIT .)
    REM             reduce using rule 6 (Literal -> OCTAL_LIT .)
    ADD             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SUB             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SHL             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SHR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SHR_UN          reduce using rule 6 (Literal -> OCTAL_LIT .)
    LSS             reduce using rule 6 (Literal -> OCTAL_LIT .)
    GTR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    LEQ             reduce using rule 6 (Literal -> OCTAL_LIT .)
    GEQ             reduce using rule 6 (Literal -> OCTAL_LIT .)
    INSTANCEOF      reduce using rule 6 (Literal -> OCTAL_LIT .)
    EQL             reduce using rule 6 (Literal -> OCTAL_LIT .)
    NEQ             reduce using rule 6 (Literal -> OCTAL_LIT .)
    AND             reduce using rule 6 (Literal -> OCTAL_LIT .)
    XOR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    OR              reduce using rule 6 (Literal -> OCTAL_LIT .)
    LAND            reduce using rule 6 (Literal -> OCTAL_LIT .)
    QUES            reduce using rule 6 (Literal -> OCTAL_LIT .)
    LOR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    RPAREN          reduce using rule 6 (Literal -> OCTAL_LIT .)
    COMMA           reduce using rule 6 (Literal -> OCTAL_LIT .)
    RBRACE          reduce using rule 6 (Literal -> OCTAL_LIT .)
    COLON           reduce using rule 6 (Literal -> OCTAL_LIT .)
    RBRACK          reduce using rule 6 (Literal -> OCTAL_LIT .)
    SEMICOLON       reduce using rule 6 (Literal -> OCTAL_LIT .)


state 146

    (7) Literal -> BINARY_LIT .

    LBRACK          reduce using rule 7 (Literal -> BINARY_LIT .)
    PERIOD          reduce using rule 7 (Literal -> BINARY_LIT .)
    COLON_SEP       reduce using rule 7 (Literal -> BINARY_LIT .)
    INC             reduce using rule 7 (Literal -> BINARY_LIT .)
    DEC             reduce using rule 7 (Literal -> BINARY_LIT .)
    MUL             reduce using rule 7 (Literal -> BINARY_LIT .)
    QUO             reduce using rule 7 (Literal -> BINARY_LIT .)
    REM             reduce using rule 7 (Literal -> BINARY_LIT .)
    ADD             reduce using rule 7 (Literal -> BINARY_LIT .)
    SUB             reduce using rule 7 (Literal -> BINARY_LIT .)
    SHL             reduce using rule 7 (Literal -> BINARY_LIT .)
    SHR             reduce using rule 7 (Literal -> BINARY_LIT .)
    SHR_UN          reduce using rule 7 (Literal -> BINARY_LIT .)
    LSS             reduce using rule 7 (Literal -> BINARY_LIT .)
    GTR             reduce using rule 7 (Literal -> BINARY_LIT .)
    LEQ             reduce using rule 7 (Literal -> BINARY_LIT .)
    GEQ             reduce using rule 7 (Literal -> BINARY_LIT .)
    INSTANCEOF      reduce using rule 7 (Literal -> BINARY_LIT .)
    EQL             reduce using rule 7 (Literal -> BINARY_LIT .)
    NEQ             reduce using rule 7 (Literal -> BINARY_LIT .)
    AND             reduce using rule 7 (Literal -> BINARY_LIT .)
    XOR             reduce using rule 7 (Literal -> BINARY_LIT .)
    OR              reduce using rule 7 (Literal -> BINARY_LIT .)
    LAND            reduce using rule 7 (Literal -> BINARY_LIT .)
    QUES            reduce using rule 7 (Literal -> BINARY_LIT .)
    LOR             reduce using rule 7 (Literal -> BINARY_LIT .)
    RPAREN          reduce using rule 7 (Literal -> BINARY_LIT .)
    COMMA           reduce using rule 7 (Literal -> BINARY_LIT .)
    RBRACE          reduce using rule 7 (Literal -> BINARY_LIT .)
    COLON           reduce using rule 7 (Literal -> BINARY_LIT .)
    RBRACK          reduce using rule 7 (Literal -> BINARY_LIT .)
    SEMICOLON       reduce using rule 7 (Literal -> BINARY_LIT .)


state 147

    (8) Literal -> FLOAT_DEC_LIT .

    LBRACK          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    PERIOD          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    COLON_SEP       reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    INC             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    DEC             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    MUL             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    QUO             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    REM             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    ADD             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SUB             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SHL             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SHR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SHR_UN          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LSS             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    GTR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LEQ             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    GEQ             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    INSTANCEOF      reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    EQL             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    NEQ             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    AND             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    XOR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    OR              reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LAND            reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    QUES            reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LOR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    RPAREN          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    COMMA           reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    RBRACE          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    COLON           reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    RBRACK          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SEMICOLON       reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)


state 148

    (9) Literal -> FLOAT_HEX_LIT .

    LBRACK          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    PERIOD          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    COLON_SEP       reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    INC             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    DEC             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    MUL             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    QUO             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    REM             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    ADD             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SUB             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SHL             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SHR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SHR_UN          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LSS             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    GTR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LEQ             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    GEQ             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    INSTANCEOF      reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    EQL             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    NEQ             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    AND             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    XOR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    OR              reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LAND            reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    QUES            reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LOR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    RPAREN          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    COMMA           reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    RBRACE          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    COLON           reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    RBRACK          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SEMICOLON       reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)


state 149

    (10) Literal -> STRING_LIT .

    LBRACK          reduce using rule 10 (Literal -> STRING_LIT .)
    PERIOD          reduce using rule 10 (Literal -> STRING_LIT .)
    COLON_SEP       reduce using rule 10 (Literal -> STRING_LIT .)
    INC             reduce using rule 10 (Literal -> STRING_LIT .)
    DEC             reduce using rule 10 (Literal -> STRING_LIT .)
    MUL             reduce using rule 10 (Literal -> STRING_LIT .)
    QUO             reduce using rule 10 (Literal -> STRING_LIT .)
    REM             reduce using rule 10 (Literal -> STRING_LIT .)
    ADD             reduce using rule 10 (Literal -> STRING_LIT .)
    SUB             reduce using rule 10 (Literal -> STRING_LIT .)
    SHL             reduce using rule 10 (Literal -> STRING_LIT .)
    SHR             reduce using rule 10 (Literal -> STRING_LIT .)
    SHR_UN          reduce using rule 10 (Literal -> STRING_LIT .)
    LSS             reduce using rule 10 (Literal -> STRING_LIT .)
    GTR             reduce using rule 10 (Literal -> STRING_LIT .)
    LEQ             reduce using rule 10 (Literal -> STRING_LIT .)
    GEQ             reduce using rule 10 (Literal -> STRING_LIT .)
    INSTANCEOF      reduce using rule 10 (Literal -> STRING_LIT .)
    EQL             reduce using rule 10 (Literal -> STRING_LIT .)
    NEQ             reduce using rule 10 (Literal -> STRING_LIT .)
    AND             reduce using rule 10 (Literal -> STRING_LIT .)
    XOR             reduce using rule 10 (Literal -> STRING_LIT .)
    OR              reduce using rule 10 (Literal -> STRING_LIT .)
    LAND            reduce using rule 10 (Literal -> STRING_LIT .)
    QUES            reduce using rule 10 (Literal -> STRING_LIT .)
    LOR             reduce using rule 10 (Literal -> STRING_LIT .)
    RPAREN          reduce using rule 10 (Literal -> STRING_LIT .)
    COMMA           reduce using rule 10 (Literal -> STRING_LIT .)
    RBRACE          reduce using rule 10 (Literal -> STRING_LIT .)
    COLON           reduce using rule 10 (Literal -> STRING_LIT .)
    RBRACK          reduce using rule 10 (Literal -> STRING_LIT .)
    SEMICOLON       reduce using rule 10 (Literal -> STRING_LIT .)


state 150

    (11) Literal -> CHAR_LIT .

    LBRACK          reduce using rule 11 (Literal -> CHAR_LIT .)
    PERIOD          reduce using rule 11 (Literal -> CHAR_LIT .)
    COLON_SEP       reduce using rule 11 (Literal -> CHAR_LIT .)
    INC             reduce using rule 11 (Literal -> CHAR_LIT .)
    DEC             reduce using rule 11 (Literal -> CHAR_LIT .)
    MUL             reduce using rule 11 (Literal -> CHAR_LIT .)
    QUO             reduce using rule 11 (Literal -> CHAR_LIT .)
    REM             reduce using rule 11 (Literal -> CHAR_LIT .)
    ADD             reduce using rule 11 (Literal -> CHAR_LIT .)
    SUB             reduce using rule 11 (Literal -> CHAR_LIT .)
    SHL             reduce using rule 11 (Literal -> CHAR_LIT .)
    SHR             reduce using rule 11 (Literal -> CHAR_LIT .)
    SHR_UN          reduce using rule 11 (Literal -> CHAR_LIT .)
    LSS             reduce using rule 11 (Literal -> CHAR_LIT .)
    GTR             reduce using rule 11 (Literal -> CHAR_LIT .)
    LEQ             reduce using rule 11 (Literal -> CHAR_LIT .)
    GEQ             reduce using rule 11 (Literal -> CHAR_LIT .)
    INSTANCEOF      reduce using rule 11 (Literal -> CHAR_LIT .)
    EQL             reduce using rule 11 (Literal -> CHAR_LIT .)
    NEQ             reduce using rule 11 (Literal -> CHAR_LIT .)
    AND             reduce using rule 11 (Literal -> CHAR_LIT .)
    XOR             reduce using rule 11 (Literal -> CHAR_LIT .)
    OR              reduce using rule 11 (Literal -> CHAR_LIT .)
    LAND            reduce using rule 11 (Literal -> CHAR_LIT .)
    QUES            reduce using rule 11 (Literal -> CHAR_LIT .)
    LOR             reduce using rule 11 (Literal -> CHAR_LIT .)
    RPAREN          reduce using rule 11 (Literal -> CHAR_LIT .)
    COMMA           reduce using rule 11 (Literal -> CHAR_LIT .)
    RBRACE          reduce using rule 11 (Literal -> CHAR_LIT .)
    COLON           reduce using rule 11 (Literal -> CHAR_LIT .)
    RBRACK          reduce using rule 11 (Literal -> CHAR_LIT .)
    SEMICOLON       reduce using rule 11 (Literal -> CHAR_LIT .)


state 151

    (115) ClassLiteral -> NumericType . LBRACKRBRACKS PERIOD CLASS
    (466) PrimitiveType -> NumericType .
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

    LBRACE          reduce using rule 466 (PrimitiveType -> NumericType .)
    ATRATE          reduce using rule 466 (PrimitiveType -> NumericType .)
    LBRACK          shift and go to state 192
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 285
    empty                          shift and go to state 193

state 152

    (116) ClassLiteral -> BOOLEAN . LBRACKRBRACKS PERIOD CLASS
    (468) PrimitiveType -> BOOLEAN .
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

    LBRACE          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    ATRATE          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    LBRACK          shift and go to state 192
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 286
    empty                          shift and go to state 193

state 153

    (117) ClassLiteral -> VOID . PERIOD CLASS

    PERIOD          shift and go to state 287


state 154

    (120) ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .

    LBRACK          reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    PERIOD          reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    INC             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    DEC             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    MUL             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    QUO             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    REM             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    ADD             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SUB             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SHL             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SHR             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LSS             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    GTR             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LEQ             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    GEQ             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    EQL             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    NEQ             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    AND             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    XOR             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    OR              reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LAND            reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    QUES            reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LOR             reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    RPAREN          reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    COMMA           reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    RBRACE          reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    COLON           reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    RBRACK          reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 120 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)


state 155

    (139) FieldAccess -> SUPER . PERIOD IDENT
    (149) MethodInvocation -> SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (158) MethodReference -> SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 288
    COLON_SEP       shift and go to state 289


state 156

    (161) MethodReference -> ArrayType . COLON_SEP NEW
    (481) ReferenceType -> ArrayType .

  ! shift/reduce conflict for COLON_SEP resolved as shift
    COLON_SEP       shift and go to state 290

  ! COLON_SEP       [ reduce using rule 481 (ReferenceType -> ArrayType .) ]


state 157

    (469) NumericType -> IntegralType .

    LBRACK          reduce using rule 469 (NumericType -> IntegralType .)
    PERIOD          reduce using rule 469 (NumericType -> IntegralType .)
    LBRACE          reduce using rule 469 (NumericType -> IntegralType .)
    ATRATE          reduce using rule 469 (NumericType -> IntegralType .)
    RPAREN          reduce using rule 469 (NumericType -> IntegralType .)
    IDENT           reduce using rule 469 (NumericType -> IntegralType .)
    THIS            reduce using rule 469 (NumericType -> IntegralType .)
    ELLIPSIS        reduce using rule 469 (NumericType -> IntegralType .)


state 158

    (470) NumericType -> FloatingPointType .

    LBRACK          reduce using rule 470 (NumericType -> FloatingPointType .)
    PERIOD          reduce using rule 470 (NumericType -> FloatingPointType .)
    LBRACE          reduce using rule 470 (NumericType -> FloatingPointType .)
    ATRATE          reduce using rule 470 (NumericType -> FloatingPointType .)
    RPAREN          reduce using rule 470 (NumericType -> FloatingPointType .)
    IDENT           reduce using rule 470 (NumericType -> FloatingPointType .)
    THIS            reduce using rule 470 (NumericType -> FloatingPointType .)
    ELLIPSIS        reduce using rule 470 (NumericType -> FloatingPointType .)


state 159

    (479) ReferenceType -> TypeVariable .
    (482) ClassType -> TypeVariable . ZooTypeArguments
    (489) ArrayType -> TypeVariable . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LSS resolved as shift
  ! reduce/reduce conflict for COLON_SEP resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for GTR resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for LSS resolved as shift
  ! reduce/reduce conflict for LEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for GEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INSTANCEOF resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for EQL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for NEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for XOR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LAND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for QUES resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LOR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for COLON resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for MUL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for QUO resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for REM resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for ADD resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SUB resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHR_UN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RBRACK resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    COLON_SEP       reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! AND             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! RPAREN          [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! COMMA           [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! GTR             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! LSS             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! LEQ             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! GEQ             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! INSTANCEOF      [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! EQL             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! NEQ             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! XOR             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! OR              [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! LAND            [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! QUES            [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! LOR             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! RBRACE          [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! COLON           [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! MUL             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! QUO             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! REM             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! ADD             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! SUB             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! SHL             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! SHR             [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! SHR_UN          [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! RBRACK          [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! SEMICOLON       [ reduce using rule 479 (ReferenceType -> TypeVariable .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 178
    Dims                           shift and go to state 291
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 160

    (471) IntegralType -> BYTE .

    LBRACK          reduce using rule 471 (IntegralType -> BYTE .)
    PERIOD          reduce using rule 471 (IntegralType -> BYTE .)
    LBRACE          reduce using rule 471 (IntegralType -> BYTE .)
    ATRATE          reduce using rule 471 (IntegralType -> BYTE .)
    RPAREN          reduce using rule 471 (IntegralType -> BYTE .)
    IDENT           reduce using rule 471 (IntegralType -> BYTE .)
    THIS            reduce using rule 471 (IntegralType -> BYTE .)
    ELLIPSIS        reduce using rule 471 (IntegralType -> BYTE .)


state 161

    (472) IntegralType -> SHORT .

    LBRACK          reduce using rule 472 (IntegralType -> SHORT .)
    PERIOD          reduce using rule 472 (IntegralType -> SHORT .)
    LBRACE          reduce using rule 472 (IntegralType -> SHORT .)
    ATRATE          reduce using rule 472 (IntegralType -> SHORT .)
    RPAREN          reduce using rule 472 (IntegralType -> SHORT .)
    IDENT           reduce using rule 472 (IntegralType -> SHORT .)
    THIS            reduce using rule 472 (IntegralType -> SHORT .)
    ELLIPSIS        reduce using rule 472 (IntegralType -> SHORT .)


state 162

    (473) IntegralType -> INT .

    LBRACK          reduce using rule 473 (IntegralType -> INT .)
    PERIOD          reduce using rule 473 (IntegralType -> INT .)
    LBRACE          reduce using rule 473 (IntegralType -> INT .)
    ATRATE          reduce using rule 473 (IntegralType -> INT .)
    RPAREN          reduce using rule 473 (IntegralType -> INT .)
    IDENT           reduce using rule 473 (IntegralType -> INT .)
    THIS            reduce using rule 473 (IntegralType -> INT .)
    ELLIPSIS        reduce using rule 473 (IntegralType -> INT .)


state 163

    (474) IntegralType -> LONG .

    LBRACK          reduce using rule 474 (IntegralType -> LONG .)
    PERIOD          reduce using rule 474 (IntegralType -> LONG .)
    LBRACE          reduce using rule 474 (IntegralType -> LONG .)
    ATRATE          reduce using rule 474 (IntegralType -> LONG .)
    RPAREN          reduce using rule 474 (IntegralType -> LONG .)
    IDENT           reduce using rule 474 (IntegralType -> LONG .)
    THIS            reduce using rule 474 (IntegralType -> LONG .)
    ELLIPSIS        reduce using rule 474 (IntegralType -> LONG .)


state 164

    (475) IntegralType -> CHAR .

    LBRACK          reduce using rule 475 (IntegralType -> CHAR .)
    PERIOD          reduce using rule 475 (IntegralType -> CHAR .)
    LBRACE          reduce using rule 475 (IntegralType -> CHAR .)
    ATRATE          reduce using rule 475 (IntegralType -> CHAR .)
    RPAREN          reduce using rule 475 (IntegralType -> CHAR .)
    IDENT           reduce using rule 475 (IntegralType -> CHAR .)
    THIS            reduce using rule 475 (IntegralType -> CHAR .)
    ELLIPSIS        reduce using rule 475 (IntegralType -> CHAR .)


state 165

    (476) FloatingPointType -> FLOAT .

    LBRACK          reduce using rule 476 (FloatingPointType -> FLOAT .)
    PERIOD          reduce using rule 476 (FloatingPointType -> FLOAT .)
    LBRACE          reduce using rule 476 (FloatingPointType -> FLOAT .)
    ATRATE          reduce using rule 476 (FloatingPointType -> FLOAT .)
    RPAREN          reduce using rule 476 (FloatingPointType -> FLOAT .)
    IDENT           reduce using rule 476 (FloatingPointType -> FLOAT .)
    THIS            reduce using rule 476 (FloatingPointType -> FLOAT .)
    ELLIPSIS        reduce using rule 476 (FloatingPointType -> FLOAT .)


state 166

    (477) FloatingPointType -> DOUBLE .

    LBRACK          reduce using rule 477 (FloatingPointType -> DOUBLE .)
    PERIOD          reduce using rule 477 (FloatingPointType -> DOUBLE .)
    LBRACE          reduce using rule 477 (FloatingPointType -> DOUBLE .)
    ATRATE          reduce using rule 477 (FloatingPointType -> DOUBLE .)
    RPAREN          reduce using rule 477 (FloatingPointType -> DOUBLE .)
    IDENT           reduce using rule 477 (FloatingPointType -> DOUBLE .)
    THIS            reduce using rule 477 (FloatingPointType -> DOUBLE .)
    ELLIPSIS        reduce using rule 477 (FloatingPointType -> DOUBLE .)


state 167

    (486) TypeVariable -> AnnotationS . IDENT
    (465) PrimitiveType -> AnnotationS . NumericType
    (467) PrimitiveType -> AnnotationS . BOOLEAN
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 183
    BOOLEAN         shift and go to state 293
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 168

    (296) ExpressionName -> ExpressionName PERIOD IDENT .

    PERIOD          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LPAREN          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    ATRATE          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    PACKAGE         reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    PUBLIC          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    PROTECTED       reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    PRIVATE         reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    ABSTRACT        reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    STATIC          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    STRICTFP        reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    INTERFACE       reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    FINAL           reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    CLASS           reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    ENUM            reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    IDENT           reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    RPAREN          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    BOOLEAN         reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    BYTE            reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SHORT           reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    INT             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LONG            reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    CHAR            reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    FLOAT           reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    DOUBLE          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LBRACE          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    QUES            reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LBRACK          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    VOID            reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    ELLIPSIS        reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    COMMA           reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    RBRACE          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LSS             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    TRANSIENT       reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    VOLATILE        reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SYNCHRONIZED    reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    NATIVE          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    DEFAULT         reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SEMICOLON       reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    COLON_SEP       reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    INC             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    DEC             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    MUL             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    QUO             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    REM             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    ADD             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SUB             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SHL             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SHR             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SHR_UN          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    GTR             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LEQ             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    GEQ             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    INSTANCEOF      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    EQL             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    NEQ             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    AND             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    XOR             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    OR              reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LAND            reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    LOR             reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    ASSIGN          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    COLON           reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)
    RBRACK          reduce using rule 296 (ExpressionName -> ExpressionName PERIOD IDENT .)


state 169

    (304) NormalClassDeclaration -> ClassModifierS CLASS IDENT . ZooTypeParameters
    (15) ZooTypeParameters -> . TypeParameters
    (16) ZooTypeParameters -> . empty
    (308) TypeParameters -> . LSS TypeParameterList GTR
    (1) empty -> .

  ! shift/reduce conflict for LSS resolved as shift
    LSS             shift and go to state 297
    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    TRANSIENT       reduce using rule 1 (empty -> .)
    VOLATILE        reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    NATIVE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)

  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeParameters              shift and go to state 294
    TypeParameters                 shift and go to state 295
    empty                          shift and go to state 296

state 170

    (443) EnumDeclaration -> ClassModifierS ENUM IDENT . ZooSuperinterfaces EnumBody
    (302) ZooSuperinterfaces -> . Superinterfaces
    (303) ZooSuperinterfaces -> . empty
    (313) Superinterfaces -> . IMPLEMENTS InterfaceTypeList
    (1) empty -> .

    IMPLEMENTS      shift and go to state 68
    LBRACE          reduce using rule 1 (empty -> .)

    ZooSuperinterfaces             shift and go to state 298
    Superinterfaces                shift and go to state 66
    empty                          shift and go to state 67

state 171

    (305) NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .

    SEMICOLON       reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FINAL           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    EXTENDS         reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    PUBLIC          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    PROTECTED       reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    PRIVATE         reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ABSTRACT        reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    STATIC          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    STRICTFP        reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ATRATE          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CLASS           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ENUM            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    IMPLEMENTS      reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LBRACE          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    INTERFACE       reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    $end            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    TRANSIENT       reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    VOLATILE        reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SYNCHRONIZED    reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    NATIVE          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LSS             reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    IDENT           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BOOLEAN         reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BYTE            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SHORT           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    INT             reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LONG            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CHAR            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FLOAT           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DOUBLE          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    VOID            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    RBRACE          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    IF              reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    WHILE           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ASSERT          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SWITCH          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DO              reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BREAK           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CONTINUE        reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    RETURN          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    THROW           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    TRY             reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FOR             reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    INC             reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DEC             reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SUPER           reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    PERIOD          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    NEW             reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    THIS            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LPAREN          reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BOOL_LIT        reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    NULL_LIT        reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DECIMAL_LIT     reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    HEX_LIT         reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    OCTAL_LIT       reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BINARY_LIT      reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FLOAT_DEC_LIT   reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FLOAT_HEX_LIT   reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    STRING_LIT      reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CHAR_LIT        reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CASE            reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DEFAULT         reduce using rule 305 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)


state 172

    (319) ClassBody -> LBRACE . ClassBodyDeclarationS RBRACE
    (317) ClassBodyDeclarationS -> . ClassBodyDeclaration ClassBodyDeclarationS
    (318) ClassBodyDeclarationS -> . empty
    (320) ClassBodyDeclaration -> . ClassMemberDeclaration
    (321) ClassBodyDeclaration -> . Block
    (322) ClassBodyDeclaration -> . StaticInitializer
    (323) ClassBodyDeclaration -> . ConstructorDeclaration
    (1) empty -> .
    (324) ClassMemberDeclaration -> . FieldDeclaration
    (325) ClassMemberDeclaration -> . MethodDeclaration
    (326) ClassMemberDeclaration -> . ClassDeclaration
    (327) ClassMemberDeclaration -> . InterfaceDeclaration
    (328) ClassMemberDeclaration -> . SEMICOLON
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (422) StaticInitializer -> . STATIC Block
    (425) ConstructorDeclaration -> . ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
    (331) FieldDeclaration -> . FieldModifierS UnannType VariableDeclaratorList SEMICOLON
    (332) FieldDeclaration -> . FieldModifierS IDENT VariableDeclaratorList SEMICOLON
    (367) MethodDeclaration -> . MethodModifierS MethodHeader MethodBody
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (423) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (424) ConstructorModifierS -> . empty
    (329) FieldModifierS -> . FieldModifier FieldModifierS
    (330) FieldModifierS -> . empty
    (365) MethodModifierS -> . MethodModifier MethodModifierS
    (366) MethodModifierS -> . empty
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (426) ConstructorModifier -> . Annotation
    (427) ConstructorModifier -> . PUBLIC
    (428) ConstructorModifier -> . PROTECTED
    (429) ConstructorModifier -> . PRIVATE
    (333) FieldModifier -> . Annotation
    (334) FieldModifier -> . PUBLIC
    (335) FieldModifier -> . PROTECTED
    (336) FieldModifier -> . PRIVATE
    (337) FieldModifier -> . STATIC
    (338) FieldModifier -> . FINAL
    (339) FieldModifier -> . TRANSIENT
    (340) FieldModifier -> . VOLATILE
    (368) MethodModifier -> . Annotation
    (369) MethodModifier -> . PUBLIC
    (370) MethodModifier -> . PROTECTED
    (371) MethodModifier -> . PRIVATE
    (372) MethodModifier -> . ABSTRACT
    (373) MethodModifier -> . STATIC
    (374) MethodModifier -> . FINAL
    (375) MethodModifier -> . SYNCHRONIZED
    (376) MethodModifier -> . NATIVE
    (377) MethodModifier -> . STRICTFP
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    SEMICOLON       shift and go to state 311
    LBRACE          shift and go to state 299
    STATIC          shift and go to state 312
    PUBLIC          shift and go to state 320
    PROTECTED       shift and go to state 321
    PRIVATE         shift and go to state 322
    FINAL           shift and go to state 323
    TRANSIENT       shift and go to state 324
    VOLATILE        shift and go to state 325
    ABSTRACT        shift and go to state 326
    SYNCHRONIZED    shift and go to state 327
    NATIVE          shift and go to state 328
    STRICTFP        shift and go to state 329
    EXTENDS         shift and go to state 45
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ClassBodyDeclarationS          shift and go to state 300
    ClassBodyDeclaration           shift and go to state 301
    empty                          shift and go to state 302
    ClassMemberDeclaration         shift and go to state 303
    Block                          shift and go to state 304
    StaticInitializer              shift and go to state 305
    ConstructorDeclaration         shift and go to state 306
    FieldDeclaration               shift and go to state 307
    MethodDeclaration              shift and go to state 308
    ClassDeclaration               shift and go to state 309
    InterfaceDeclaration           shift and go to state 310
    ConstructorModifierS           shift and go to state 313
    FieldModifierS                 shift and go to state 314
    MethodModifierS                shift and go to state 315
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstructorModifier            shift and go to state 316
    FieldModifier                  shift and go to state 317
    MethodModifier                 shift and go to state 318
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 319
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 173

    (313) Superinterfaces -> IMPLEMENTS InterfaceTypeList .

    LBRACE          reduce using rule 313 (Superinterfaces -> IMPLEMENTS InterfaceTypeList .)


state 174

    (316) InterfaceTypeList -> ClassType . COMMAInterfaceTypeS
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (314) COMMAInterfaceTypeS -> . COMMA ClassType COMMAInterfaceTypeS
    (315) COMMAInterfaceTypeS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 177
    COMMA           shift and go to state 331
    LBRACE          reduce using rule 1 (empty -> .)

    COMMAInterfaceTypeS            shift and go to state 330
    empty                          shift and go to state 332

state 175

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT . ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (15) ZooTypeParameters -> . TypeParameters
    (16) ZooTypeParameters -> . empty
    (308) TypeParameters -> . LSS TypeParameterList GTR
    (1) empty -> .

    LSS             shift and go to state 297
    EXTENDS         reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    ZooTypeParameters              shift and go to state 333
    TypeParameters                 shift and go to state 295
    empty                          shift and go to state 296

state 176

    (54) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE . IDENT AnnotationTypeBody

    IDENT           shift and go to state 334


state 177

    (484) ClassType -> ClassType PERIOD . TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType PERIOD . IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 336
    ATRATE          shift and go to state 13

    TypeVariable                   shift and go to state 335
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 178

    (482) ClassType -> TypeVariable ZooTypeArguments .

    PERIOD          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    IMPLEMENTS      reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    LBRACE          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    COLON_SEP       reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    ATRATE          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    COMMA           reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    AND             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    RPAREN          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    LBRACK          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    GTR             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    LSS             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    LEQ             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    GEQ             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    INSTANCEOF      reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    EQL             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    NEQ             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    XOR             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    OR              reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    LAND            reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    QUES            reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    LOR             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    RBRACE          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    COLON           reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    MUL             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    QUO             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    REM             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    ADD             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    SUB             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    SHL             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    SHR             reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    SHR_UN          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    RBRACK          reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    SEMICOLON       reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)
    IDENT           reduce using rule 482 (ClassType -> TypeVariable ZooTypeArguments .)


state 179

    (125) ZooTypeArguments -> TypeArguments .

    PERIOD          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    IMPLEMENTS      reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    LBRACE          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    COMMA           reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    LBRACK          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    ATRATE          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    AND             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    RPAREN          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    GTR             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    OR              reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    IDENT           reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    COLON_SEP       reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    LSS             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    LEQ             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    GEQ             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    INSTANCEOF      reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    EQL             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    NEQ             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    XOR             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    LAND            reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    QUES            reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    LOR             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    RBRACE          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    COLON           reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    MUL             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    QUO             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    REM             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    ADD             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    SUB             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    SHL             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    SHR             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    SHR_UN          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    RBRACK          reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    SEMICOLON       reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    NEW             reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    THIS            reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    ELLIPSIS        reduce using rule 125 (ZooTypeArguments -> TypeArguments .)
    SUPER           reduce using rule 125 (ZooTypeArguments -> TypeArguments .)


state 180

    (126) ZooTypeArguments -> empty .

    PERIOD          reduce using rule 126 (ZooTypeArguments -> empty .)
    IMPLEMENTS      reduce using rule 126 (ZooTypeArguments -> empty .)
    LBRACE          reduce using rule 126 (ZooTypeArguments -> empty .)
    COMMA           reduce using rule 126 (ZooTypeArguments -> empty .)
    LBRACK          reduce using rule 126 (ZooTypeArguments -> empty .)
    ATRATE          reduce using rule 126 (ZooTypeArguments -> empty .)
    AND             reduce using rule 126 (ZooTypeArguments -> empty .)
    RPAREN          reduce using rule 126 (ZooTypeArguments -> empty .)
    GTR             reduce using rule 126 (ZooTypeArguments -> empty .)
    OR              reduce using rule 126 (ZooTypeArguments -> empty .)
    IDENT           reduce using rule 126 (ZooTypeArguments -> empty .)
    COLON_SEP       reduce using rule 126 (ZooTypeArguments -> empty .)
    LSS             reduce using rule 126 (ZooTypeArguments -> empty .)
    LEQ             reduce using rule 126 (ZooTypeArguments -> empty .)
    GEQ             reduce using rule 126 (ZooTypeArguments -> empty .)
    INSTANCEOF      reduce using rule 126 (ZooTypeArguments -> empty .)
    EQL             reduce using rule 126 (ZooTypeArguments -> empty .)
    NEQ             reduce using rule 126 (ZooTypeArguments -> empty .)
    XOR             reduce using rule 126 (ZooTypeArguments -> empty .)
    LAND            reduce using rule 126 (ZooTypeArguments -> empty .)
    QUES            reduce using rule 126 (ZooTypeArguments -> empty .)
    LOR             reduce using rule 126 (ZooTypeArguments -> empty .)
    RBRACE          reduce using rule 126 (ZooTypeArguments -> empty .)
    COLON           reduce using rule 126 (ZooTypeArguments -> empty .)
    MUL             reduce using rule 126 (ZooTypeArguments -> empty .)
    QUO             reduce using rule 126 (ZooTypeArguments -> empty .)
    REM             reduce using rule 126 (ZooTypeArguments -> empty .)
    ADD             reduce using rule 126 (ZooTypeArguments -> empty .)
    SUB             reduce using rule 126 (ZooTypeArguments -> empty .)
    SHL             reduce using rule 126 (ZooTypeArguments -> empty .)
    SHR             reduce using rule 126 (ZooTypeArguments -> empty .)
    SHR_UN          reduce using rule 126 (ZooTypeArguments -> empty .)
    RBRACK          reduce using rule 126 (ZooTypeArguments -> empty .)
    SEMICOLON       reduce using rule 126 (ZooTypeArguments -> empty .)
    NEW             reduce using rule 126 (ZooTypeArguments -> empty .)
    ELLIPSIS        reduce using rule 126 (ZooTypeArguments -> empty .)
    THIS            reduce using rule 126 (ZooTypeArguments -> empty .)
    SUPER           reduce using rule 126 (ZooTypeArguments -> empty .)


state 181

    (506) TypeArguments -> LSS . TypeArgumentList GTR
    (507) TypeArgumentList -> . TypeArgument COMMATypeArgumentS
    (510) TypeArgument -> . ReferenceType
    (511) TypeArgument -> . Wildcard
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (512) Wildcard -> . AnnotationS QUES ZooWildcardBounds
    (513) Wildcard -> . QUES ZooWildcardBounds
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 342
    QUES            shift and go to state 345
    BOOLEAN         shift and go to state 282
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    TypeArgumentList               shift and go to state 337
    TypeArgument                   shift and go to state 338
    ReferenceType                  shift and go to state 339
    Wildcard                       shift and go to state 340
    ClassType                      shift and go to state 341
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 343
    AnnotationS                    shift and go to state 344
    PrimitiveType                  shift and go to state 128
    Annotation                     shift and go to state 81
    NumericType                    shift and go to state 281
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 182

    (483) ClassType -> IDENT ZooTypeArguments .

    PERIOD          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    IMPLEMENTS      reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    COLON_SEP       reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    COMMA           reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    AND             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    RPAREN          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    LBRACK          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    GTR             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    LSS             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    LEQ             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    GEQ             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    INSTANCEOF      reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    EQL             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    NEQ             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    XOR             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    OR              reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    LAND            reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    QUES            reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    LOR             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    RBRACE          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    COLON           reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    MUL             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    QUO             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    REM             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    ADD             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    SUB             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    SHL             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    SHR             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    SHR_UN          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    RBRACK          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    SEMICOLON       reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    IDENT           reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)


state 183

    (486) TypeVariable -> AnnotationS IDENT .

    LSS             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    PERIOD          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    IMPLEMENTS      reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    LBRACE          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    ATRATE          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    COLON_SEP       reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    COMMA           reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    AND             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    RPAREN          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    LBRACK          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    GTR             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    LEQ             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    GEQ             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    INSTANCEOF      reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    EQL             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    NEQ             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    XOR             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    OR              reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    LAND            reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    QUES            reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    LOR             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    RBRACE          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    COLON           reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    MUL             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    QUO             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    REM             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    ADD             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    SUB             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    SHL             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    SHR             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    SHR_UN          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    RBRACK          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    SEMICOLON       reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    IDENT           reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)


state 184

    (129) AnnotationS -> Annotation AnnotationS .

    IDENT           reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    BOOLEAN         reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    BYTE            reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    SHORT           reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    INT             reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    LONG            reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    CHAR            reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    FLOAT           reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    DOUBLE          reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    LBRACE          reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    QUES            reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    LBRACK          reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    VOID            reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)
    ELLIPSIS        reduce using rule 129 (AnnotationS -> Annotation AnnotationS .)


state 185

    (287) TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL . SEMICOLON

    SEMICOLON       shift and go to state 346


state 186

    (288) TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL . SEMICOLON

    SEMICOLON       shift and go to state 347


state 187

    (289) SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD . IDENT SEMICOLON
    (290) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD . MUL SEMICOLON

    IDENT           shift and go to state 348
    MUL             shift and go to state 349


state 188

    (276) PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .

    IMPORT          reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    SEMICOLON       reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    FINAL           reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    EXTENDS         reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    PUBLIC          reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    PROTECTED       reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    PRIVATE         reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    ABSTRACT        reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    STATIC          reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    STRICTFP        reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    ATRATE          reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    CLASS           reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    ENUM            reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    IMPLEMENTS      reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    LBRACE          reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    INTERFACE       reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    $end            reduce using rule 276 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)


state 189

    (279) PERIODIDENTS -> PERIOD IDENT . PERIODIDENTS
    (279) PERIODIDENTS -> . PERIOD IDENT PERIODIDENTS
    (280) PERIODIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 87
    SEMICOLON       reduce using rule 1 (empty -> .)

    PERIODIDENTS                   shift and go to state 350
    empty                          shift and go to state 88

state 190

    (107) PrimaryNoNewArray -> TypeName PERIOD . THIS
    (140) FieldAccess -> TypeName PERIOD . SUPER PERIOD IDENT
    (145) MethodInvocation -> TypeName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> TypeName PERIOD . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (159) MethodReference -> TypeName PERIOD . SUPER COLON_SEP ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    THIS            shift and go to state 351
    SUPER           shift and go to state 352
    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 353
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 191

    (114) ClassLiteral -> TypeName LBRACKRBRACKS . PERIOD CLASS

    PERIOD          shift and go to state 354


state 192

    (118) LBRACKRBRACKS -> LBRACK . RBRACK LBRACKRBRACKS

    RBRACK          shift and go to state 355


state 193

    (119) LBRACKRBRACKS -> empty .

    PERIOD          reduce using rule 119 (LBRACKRBRACKS -> empty .)


state 194

    (175) LambdaParameters -> LPAREN . ZooFormalParameterList RPAREN
    (176) LambdaParameters -> LPAREN . InferredFormalParameterList RPAREN
    (108) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (261) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> LPAREN . PrimitiveType RPAREN IDENT
    (263) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (386) ZooFormalParameterList -> . FormalParameterList
    (387) ZooFormalParameterList -> . empty
    (177) InferredFormalParameterList -> . IDENT COMMAIDENTS
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (389) FormalParameterList -> . ReceiverParameter
    (390) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (391) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (409) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (410) ReceiverParameter -> . AnnotationS IDENT ZooIDENTPERIOD THIS
    (411) ReceiverParameter -> . UnannType ZooIDENTPERIOD THIS
    (412) ReceiverParameter -> . IDENT ZooIDENTPERIOD THIS
    (394) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (395) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (402) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (403) LastFormalParameter -> . VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId
    (404) LastFormalParameter -> . FormalParameter
    (405) LastFormalParameter -> . VariableModifierS UnannType ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> . VariableModifierS IDENT ELLIPSIS VariableDeclaratorId
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (398) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (399) FormalParameter -> . ZooVariableModifier IDENT VariableDeclaratorId
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (396) ZooVariableModifier -> . VariableModifier
    (397) ZooVariableModifier -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 358
    BOOLEAN         shift and go to state 363
    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 194
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    FINAL           shift and go to state 377
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    VOID            shift and go to state 153
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooFormalParameterList         shift and go to state 356
    InferredFormalParameterList    shift and go to state 357
    Expression                     shift and go to state 199
    PrimitiveType                  shift and go to state 195
    UnaryExpression                shift and go to state 114
    ReferenceType                  shift and go to state 197
    UnaryExpressionNotPlusMinus    shift and go to state 117
    LambdaExpression               shift and go to state 198
    FormalParameterList            shift and go to state 359
    empty                          shift and go to state 360
    AssignmentExpression           shift and go to state 205
    AnnotationS                    shift and go to state 361
    NumericType                    shift and go to state 362
    ClassType                      shift and go to state 203
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 204
    ReceiverParameter              shift and go to state 364
    FormalParameters               shift and go to state 365
    LastFormalParameter            shift and go to state 366
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    Annotation                     shift and go to state 367
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannType                      shift and go to state 368
    FormalParameter                shift and go to state 369
    VariableModifierS              shift and go to state 370
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    ZooVariableModifier            shift and go to state 373
    VariableModifier               shift and go to state 374
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    TypeName                       shift and go to state 210
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    PrimaryNoNewArray              shift and go to state 215
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 195

    (261) CastExpression -> LPAREN PrimitiveType . RPAREN UnaryExpression
    (262) CastExpression -> LPAREN PrimitiveType . RPAREN IDENT
    (487) ArrayType -> PrimitiveType . Dims
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          shift and go to state 380
    LBRACE          shift and go to state 237
    ATRATE          shift and go to state 13

    Dims                           shift and go to state 276
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 196

    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (174) LambdaParameters -> IDENT .
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 231 (MultiplicativeExpression -> IDENT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 231 (MultiplicativeExpression -> IDENT .)
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    ARROW           reduce using rule 174 (LambdaParameters -> IDENT .)
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    PERIOD          shift and go to state 231
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! AND             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! RPAREN          [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! AND             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! RPAREN          [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 197

    (263) CastExpression -> LPAREN ReferenceType . AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> LPAREN ReferenceType . AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> LPAREN ReferenceType . AdditionalBoundS RPAREN LambdaExpression
    (156) MethodReference -> ReferenceType . COLON_SEP ZooTypeArguments IDENT
    (266) AdditionalBoundS -> . AdditionalBound AdditionalBoundS
    (267) AdditionalBoundS -> . empty
    (505) AdditionalBound -> . AND ClassType
    (1) empty -> .

    COLON_SEP       shift and go to state 252
    AND             shift and go to state 384
    RPAREN          reduce using rule 1 (empty -> .)

    AdditionalBoundS               shift and go to state 381
    AdditionalBound                shift and go to state 382
    empty                          shift and go to state 383

state 198

    (171) Expression -> LambdaExpression .

    RPAREN          reduce using rule 171 (Expression -> LambdaExpression .)
    COLON           reduce using rule 171 (Expression -> LambdaExpression .)
    RBRACK          reduce using rule 171 (Expression -> LambdaExpression .)
    COMMA           reduce using rule 171 (Expression -> LambdaExpression .)
    MUL             reduce using rule 171 (Expression -> LambdaExpression .)
    QUO             reduce using rule 171 (Expression -> LambdaExpression .)
    REM             reduce using rule 171 (Expression -> LambdaExpression .)
    ADD             reduce using rule 171 (Expression -> LambdaExpression .)
    SUB             reduce using rule 171 (Expression -> LambdaExpression .)
    SHL             reduce using rule 171 (Expression -> LambdaExpression .)
    SHR             reduce using rule 171 (Expression -> LambdaExpression .)
    SHR_UN          reduce using rule 171 (Expression -> LambdaExpression .)
    LSS             reduce using rule 171 (Expression -> LambdaExpression .)
    GTR             reduce using rule 171 (Expression -> LambdaExpression .)
    LEQ             reduce using rule 171 (Expression -> LambdaExpression .)
    GEQ             reduce using rule 171 (Expression -> LambdaExpression .)
    INSTANCEOF      reduce using rule 171 (Expression -> LambdaExpression .)
    EQL             reduce using rule 171 (Expression -> LambdaExpression .)
    NEQ             reduce using rule 171 (Expression -> LambdaExpression .)
    AND             reduce using rule 171 (Expression -> LambdaExpression .)
    XOR             reduce using rule 171 (Expression -> LambdaExpression .)
    OR              reduce using rule 171 (Expression -> LambdaExpression .)
    LAND            reduce using rule 171 (Expression -> LambdaExpression .)
    QUES            reduce using rule 171 (Expression -> LambdaExpression .)
    LOR             reduce using rule 171 (Expression -> LambdaExpression .)
    RBRACE          reduce using rule 171 (Expression -> LambdaExpression .)
    SEMICOLON       reduce using rule 171 (Expression -> LambdaExpression .)


state 199

    (108) PrimaryNoNewArray -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 385


state 200

    (465) PrimitiveType -> AnnotationS . NumericType
    (467) PrimitiveType -> AnnotationS . BOOLEAN
    (486) TypeVariable -> AnnotationS . IDENT
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    BOOLEAN         shift and go to state 293
    IDENT           shift and go to state 183
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 201

    (466) PrimitiveType -> NumericType .
    (115) ClassLiteral -> NumericType . LBRACKRBRACKS PERIOD CLASS
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

    RPAREN          reduce using rule 466 (PrimitiveType -> NumericType .)
    LBRACE          reduce using rule 466 (PrimitiveType -> NumericType .)
    ATRATE          reduce using rule 466 (PrimitiveType -> NumericType .)
    LBRACK          shift and go to state 192
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 285
    empty                          shift and go to state 193

state 202

    (468) PrimitiveType -> BOOLEAN .
    (116) ClassLiteral -> BOOLEAN . LBRACKRBRACKS PERIOD CLASS
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

    RPAREN          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    LBRACE          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    ATRATE          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    LBRACK          shift and go to state 192
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 286
    empty                          shift and go to state 193

state 203

    (478) ReferenceType -> ClassType .
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (488) ArrayType -> ClassType . Dims
    (160) MethodReference -> ClassType . COLON_SEP ZooTypeArguments NEW
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
    AND             reduce using rule 478 (ReferenceType -> ClassType .)
    RPAREN          reduce using rule 478 (ReferenceType -> ClassType .)
    PERIOD          shift and go to state 177
    COLON_SEP       shift and go to state 283
    LBRACE          shift and go to state 237
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 478 (ReferenceType -> ClassType .) ]

    Dims                           shift and go to state 284
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 204

    (481) ReferenceType -> ArrayType .
    (161) MethodReference -> ArrayType . COLON_SEP NEW

  ! shift/reduce conflict for COLON_SEP resolved as shift
    AND             reduce using rule 481 (ReferenceType -> ArrayType .)
    RPAREN          reduce using rule 481 (ReferenceType -> ArrayType .)
    COLON_SEP       shift and go to state 290

  ! COLON_SEP       [ reduce using rule 481 (ReferenceType -> ArrayType .) ]


state 205

    (172) Expression -> AssignmentExpression .

    RPAREN          reduce using rule 172 (Expression -> AssignmentExpression .)
    COLON           reduce using rule 172 (Expression -> AssignmentExpression .)
    RBRACK          reduce using rule 172 (Expression -> AssignmentExpression .)
    COMMA           reduce using rule 172 (Expression -> AssignmentExpression .)
    MUL             reduce using rule 172 (Expression -> AssignmentExpression .)
    QUO             reduce using rule 172 (Expression -> AssignmentExpression .)
    REM             reduce using rule 172 (Expression -> AssignmentExpression .)
    ADD             reduce using rule 172 (Expression -> AssignmentExpression .)
    SUB             reduce using rule 172 (Expression -> AssignmentExpression .)
    SHL             reduce using rule 172 (Expression -> AssignmentExpression .)
    SHR             reduce using rule 172 (Expression -> AssignmentExpression .)
    SHR_UN          reduce using rule 172 (Expression -> AssignmentExpression .)
    LSS             reduce using rule 172 (Expression -> AssignmentExpression .)
    GTR             reduce using rule 172 (Expression -> AssignmentExpression .)
    LEQ             reduce using rule 172 (Expression -> AssignmentExpression .)
    GEQ             reduce using rule 172 (Expression -> AssignmentExpression .)
    INSTANCEOF      reduce using rule 172 (Expression -> AssignmentExpression .)
    EQL             reduce using rule 172 (Expression -> AssignmentExpression .)
    NEQ             reduce using rule 172 (Expression -> AssignmentExpression .)
    AND             reduce using rule 172 (Expression -> AssignmentExpression .)
    XOR             reduce using rule 172 (Expression -> AssignmentExpression .)
    OR              reduce using rule 172 (Expression -> AssignmentExpression .)
    LAND            reduce using rule 172 (Expression -> AssignmentExpression .)
    QUES            reduce using rule 172 (Expression -> AssignmentExpression .)
    LOR             reduce using rule 172 (Expression -> AssignmentExpression .)
    RBRACE          reduce using rule 172 (Expression -> AssignmentExpression .)
    SEMICOLON       reduce using rule 172 (Expression -> AssignmentExpression .)


state 206

    (173) LambdaExpression -> LambdaParameters . ARROW LambdaBody

    ARROW           shift and go to state 386


state 207

    (182) AssignmentExpression -> ConditionalExpression .

    RPAREN          reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    COLON           reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    RBRACK          reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    COMMA           reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    MUL             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    QUO             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    REM             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    ADD             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    SUB             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    SHL             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    SHR             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    SHR_UN          reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    LSS             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    GTR             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    LEQ             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    GEQ             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    INSTANCEOF      reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    EQL             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    NEQ             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    AND             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    XOR             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    OR              reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    LAND            reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    QUES            reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    LOR             reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    RBRACE          reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)
    SEMICOLON       reduce using rule 182 (AssignmentExpression -> ConditionalExpression .)


state 208

    (183) AssignmentExpression -> Assignment .

    RPAREN          reduce using rule 183 (AssignmentExpression -> Assignment .)
    COLON           reduce using rule 183 (AssignmentExpression -> Assignment .)
    RBRACK          reduce using rule 183 (AssignmentExpression -> Assignment .)
    COMMA           reduce using rule 183 (AssignmentExpression -> Assignment .)
    MUL             reduce using rule 183 (AssignmentExpression -> Assignment .)
    QUO             reduce using rule 183 (AssignmentExpression -> Assignment .)
    REM             reduce using rule 183 (AssignmentExpression -> Assignment .)
    ADD             reduce using rule 183 (AssignmentExpression -> Assignment .)
    SUB             reduce using rule 183 (AssignmentExpression -> Assignment .)
    SHL             reduce using rule 183 (AssignmentExpression -> Assignment .)
    SHR             reduce using rule 183 (AssignmentExpression -> Assignment .)
    SHR_UN          reduce using rule 183 (AssignmentExpression -> Assignment .)
    LSS             reduce using rule 183 (AssignmentExpression -> Assignment .)
    GTR             reduce using rule 183 (AssignmentExpression -> Assignment .)
    LEQ             reduce using rule 183 (AssignmentExpression -> Assignment .)
    GEQ             reduce using rule 183 (AssignmentExpression -> Assignment .)
    INSTANCEOF      reduce using rule 183 (AssignmentExpression -> Assignment .)
    EQL             reduce using rule 183 (AssignmentExpression -> Assignment .)
    NEQ             reduce using rule 183 (AssignmentExpression -> Assignment .)
    AND             reduce using rule 183 (AssignmentExpression -> Assignment .)
    XOR             reduce using rule 183 (AssignmentExpression -> Assignment .)
    OR              reduce using rule 183 (AssignmentExpression -> Assignment .)
    LAND            reduce using rule 183 (AssignmentExpression -> Assignment .)
    QUES            reduce using rule 183 (AssignmentExpression -> Assignment .)
    LOR             reduce using rule 183 (AssignmentExpression -> Assignment .)
    RBRACE          reduce using rule 183 (AssignmentExpression -> Assignment .)
    SEMICOLON       reduce using rule 183 (AssignmentExpression -> Assignment .)


state 209

    (184) Assignment -> LeftHandSide . AssignmentOperator Expression
    (189) AssignmentOperator -> . ASSIGN
    (190) AssignmentOperator -> . MUL_ASSIGN
    (191) AssignmentOperator -> . QUO_ASSIGN
    (192) AssignmentOperator -> . REM_ASSIGN
    (193) AssignmentOperator -> . ADD_ASSIGN
    (194) AssignmentOperator -> . SUB_ASSIGN
    (195) AssignmentOperator -> . SHL_ASSIGN
    (196) AssignmentOperator -> . SHR_ASSIGN
    (197) AssignmentOperator -> . SHR_UN_ASSIGN
    (198) AssignmentOperator -> . AND_ASSIGN
    (199) AssignmentOperator -> . XOR_ASSIGN
    (200) AssignmentOperator -> . OR_ASSIGN

    ASSIGN          shift and go to state 388
    MUL_ASSIGN      shift and go to state 389
    QUO_ASSIGN      shift and go to state 390
    REM_ASSIGN      shift and go to state 391
    ADD_ASSIGN      shift and go to state 392
    SUB_ASSIGN      shift and go to state 393
    SHL_ASSIGN      shift and go to state 394
    SHR_ASSIGN      shift and go to state 395
    SHR_UN_ASSIGN   shift and go to state 396
    AND_ASSIGN      shift and go to state 397
    XOR_ASSIGN      shift and go to state 398
    OR_ASSIGN       shift and go to state 399

    AssignmentOperator             shift and go to state 387

state 210

    (140) FieldAccess -> TypeName . PERIOD SUPER PERIOD IDENT
    (107) PrimaryNoNewArray -> TypeName . PERIOD THIS
    (114) ClassLiteral -> TypeName . LBRACKRBRACKS PERIOD CLASS
    (145) MethodInvocation -> TypeName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> TypeName . PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (159) MethodReference -> TypeName . PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for PERIOD resolved as shift
    PERIOD          shift and go to state 400
    LBRACK          shift and go to state 192

  ! PERIOD          [ reduce using rule 1 (empty -> .) ]

    LBRACKRBRACKS                  shift and go to state 191
    empty                          shift and go to state 193

state 211

    (185) LeftHandSide -> ExpressionName .
    (296) ExpressionName -> ExpressionName . PERIOD IDENT
    (141) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (294) TypeName -> ExpressionName .
    (121) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (146) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT
    (254) PostfixExpression -> ExpressionName .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
    ASSIGN          reduce using rule 185 (LeftHandSide -> ExpressionName .)
    MUL_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    QUO_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    REM_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    ADD_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SUB_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SHL_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SHR_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SHR_UN_ASSIGN   reduce using rule 185 (LeftHandSide -> ExpressionName .)
    AND_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    XOR_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    OR_ASSIGN       reduce using rule 185 (LeftHandSide -> ExpressionName .)
    PERIOD          shift and go to state 273
    LBRACK          shift and go to state 274
    COLON_SEP       shift and go to state 275
    INC             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    DEC             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    MUL             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    QUO             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    REM             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    ADD             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SUB             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SHL             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SHR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SHR_UN          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LSS             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    GTR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LEQ             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    GEQ             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    INSTANCEOF      reduce using rule 254 (PostfixExpression -> ExpressionName .)
    EQL             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    NEQ             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    AND             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    XOR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    OR              reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LAND            reduce using rule 254 (PostfixExpression -> ExpressionName .)
    QUES            reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LOR             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    RPAREN          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    COLON           reduce using rule 254 (PostfixExpression -> ExpressionName .)
    RBRACK          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    COMMA           reduce using rule 254 (PostfixExpression -> ExpressionName .)
    RBRACE          reduce using rule 254 (PostfixExpression -> ExpressionName .)
    SEMICOLON       reduce using rule 254 (PostfixExpression -> ExpressionName .)

  ! PERIOD          [ reduce using rule 294 (TypeName -> ExpressionName .) ]
  ! LBRACK          [ reduce using rule 294 (TypeName -> ExpressionName .) ]


state 212

    (187) LeftHandSide -> FieldAccess .
    (110) PrimaryNoNewArray -> FieldAccess .

    ASSIGN          reduce using rule 187 (LeftHandSide -> FieldAccess .)
    MUL_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    QUO_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    REM_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    ADD_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    SUB_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    SHL_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    SHR_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    SHR_UN_ASSIGN   reduce using rule 187 (LeftHandSide -> FieldAccess .)
    AND_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    XOR_ASSIGN      reduce using rule 187 (LeftHandSide -> FieldAccess .)
    OR_ASSIGN       reduce using rule 187 (LeftHandSide -> FieldAccess .)
    LBRACK          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    PERIOD          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    COLON_SEP       reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    QUO             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    REM             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SHL             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SHR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SHR_UN          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LSS             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    GTR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LEQ             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    GEQ             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    INSTANCEOF      reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    EQL             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    NEQ             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    XOR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LAND            reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    QUES            reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    LOR             reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)
    SEMICOLON       reduce using rule 110 (PrimaryNoNewArray -> FieldAccess .)


state 213

    (188) LeftHandSide -> ArrayAccess .
    (111) PrimaryNoNewArray -> ArrayAccess .

    ASSIGN          reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    MUL_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    QUO_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    REM_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    ADD_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    SUB_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    SHL_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    SHR_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    SHR_UN_ASSIGN   reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    AND_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    XOR_ASSIGN      reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    OR_ASSIGN       reduce using rule 188 (LeftHandSide -> ArrayAccess .)
    LBRACK          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    PERIOD          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    COLON_SEP       reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    QUO             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    REM             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SHL             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SHR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SHR_UN          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LSS             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    GTR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LEQ             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    GEQ             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    INSTANCEOF      reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    EQL             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    NEQ             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    XOR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LAND            reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    QUES            reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    LOR             reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)
    SEMICOLON       reduce using rule 111 (PrimaryNoNewArray -> ArrayAccess .)


state 214

    (138) FieldAccess -> Primary . PERIOD IDENT
    (123) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (148) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (157) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT
    (253) PostfixExpression -> Primary .

    PERIOD          shift and go to state 401
    COLON_SEP       shift and go to state 272
    INC             reduce using rule 253 (PostfixExpression -> Primary .)
    DEC             reduce using rule 253 (PostfixExpression -> Primary .)
    MUL             reduce using rule 253 (PostfixExpression -> Primary .)
    QUO             reduce using rule 253 (PostfixExpression -> Primary .)
    REM             reduce using rule 253 (PostfixExpression -> Primary .)
    ADD             reduce using rule 253 (PostfixExpression -> Primary .)
    SUB             reduce using rule 253 (PostfixExpression -> Primary .)
    SHL             reduce using rule 253 (PostfixExpression -> Primary .)
    SHR             reduce using rule 253 (PostfixExpression -> Primary .)
    SHR_UN          reduce using rule 253 (PostfixExpression -> Primary .)
    LSS             reduce using rule 253 (PostfixExpression -> Primary .)
    GTR             reduce using rule 253 (PostfixExpression -> Primary .)
    LEQ             reduce using rule 253 (PostfixExpression -> Primary .)
    GEQ             reduce using rule 253 (PostfixExpression -> Primary .)
    INSTANCEOF      reduce using rule 253 (PostfixExpression -> Primary .)
    EQL             reduce using rule 253 (PostfixExpression -> Primary .)
    NEQ             reduce using rule 253 (PostfixExpression -> Primary .)
    AND             reduce using rule 253 (PostfixExpression -> Primary .)
    XOR             reduce using rule 253 (PostfixExpression -> Primary .)
    OR              reduce using rule 253 (PostfixExpression -> Primary .)
    LAND            reduce using rule 253 (PostfixExpression -> Primary .)
    QUES            reduce using rule 253 (PostfixExpression -> Primary .)
    LOR             reduce using rule 253 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 253 (PostfixExpression -> Primary .)
    COLON           reduce using rule 253 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 253 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 253 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 253 (PostfixExpression -> Primary .)
    SEMICOLON       reduce using rule 253 (PostfixExpression -> Primary .)


state 215

    (143) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK
    (102) Primary -> PrimaryNoNewArray .

    LBRACK          shift and go to state 277
    PERIOD          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    COLON_SEP       reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    QUO             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    REM             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SHL             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SHR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SHR_UN          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LSS             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    GTR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LEQ             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    GEQ             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    INSTANCEOF      reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    EQL             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    NEQ             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    XOR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LAND            reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    QUES            reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    LOR             reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 102 (Primary -> PrimaryNoNewArray .)
    SEMICOLON       reduce using rule 102 (Primary -> PrimaryNoNewArray .)


state 216

    (78) NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .

    ATRATE          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PACKAGE         reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PUBLIC          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PROTECTED       reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PRIVATE         reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    ABSTRACT        reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    STATIC          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    STRICTFP        reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    INTERFACE       reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    FINAL           reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    CLASS           reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    ENUM            reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    IDENT           reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    RPAREN          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    BOOLEAN         reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    BYTE            reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    SHORT           reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    INT             reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LONG            reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    CHAR            reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    FLOAT           reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    DOUBLE          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LBRACE          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    QUES            reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LBRACK          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    VOID            reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    ELLIPSIS        reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    COMMA           reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    RBRACE          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LSS             reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    TRANSIENT       reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    VOLATILE        reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    SYNCHRONIZED    reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    NATIVE          reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    DEFAULT         reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    SEMICOLON       reduce using rule 78 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)


state 217

    (95) SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .

    ATRATE          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PACKAGE         reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PUBLIC          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PROTECTED       reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PRIVATE         reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    ABSTRACT        reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    STATIC          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    STRICTFP        reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    INTERFACE       reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    FINAL           reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    CLASS           reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    ENUM            reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    IDENT           reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    RPAREN          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    BOOLEAN         reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    BYTE            reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    SHORT           reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    INT             reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LONG            reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    CHAR            reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    FLOAT           reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    DOUBLE          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LBRACE          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    QUES            reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LBRACK          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    VOID            reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    ELLIPSIS        reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    COMMA           reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    RBRACE          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LSS             reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    TRANSIENT       reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    VOLATILE        reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    SYNCHRONIZED    reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    NATIVE          reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    DEFAULT         reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    SEMICOLON       reduce using rule 95 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)


state 218

    (81) ElementValuePairList -> ElementValuePair COMMAElementValuePairS .

    RPAREN          reduce using rule 81 (ElementValuePairList -> ElementValuePair COMMAElementValuePairS .)


state 219

    (82) COMMAElementValuePairS -> COMMA . ElementValuePair COMMAElementValuePairS
    (84) ElementValuePair -> . IDENT ASSIGN ElementValue

    IDENT           shift and go to state 403

    ElementValuePair               shift and go to state 402

state 220

    (83) COMMAElementValuePairS -> empty .

    RPAREN          reduce using rule 83 (COMMAElementValuePairS -> empty .)


state 221

    (202) ConditionalExpression -> ConditionalOrExpression QUES . Expression COLON ConditionalExpression
    (203) ConditionalExpression -> ConditionalOrExpression QUES . Expression COLON LambdaExpression
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ConditionalOrExpression        shift and go to state 99
    Expression                     shift and go to state 404
    ConditionalExpression          shift and go to state 207
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    Assignment                     shift and go to state 208
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 222

    (205) ConditionalOrExpression -> ConditionalOrExpression LOR . ConditionalAndExpression
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ConditionalAndExpression       shift and go to state 406
    InclusiveOrExpression          shift and go to state 103
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 223

    (88) ElementValueArrayInitializer -> LBRACE ZooElementValueList . ZooCOMMA RBRACE
    (446) ZooCOMMA -> . COMMA
    (447) ZooCOMMA -> . empty
    (1) empty -> .

    COMMA           shift and go to state 408
    RBRACE          reduce using rule 1 (empty -> .)

    ZooCOMMA                       shift and go to state 407
    empty                          shift and go to state 409

state 224

    (89) ZooElementValueList -> ElementValueList .

    COMMA           reduce using rule 89 (ZooElementValueList -> ElementValueList .)
    RBRACE          reduce using rule 89 (ZooElementValueList -> ElementValueList .)


state 225

    (90) ZooElementValueList -> empty .

    COMMA           reduce using rule 90 (ZooElementValueList -> empty .)
    RBRACE          reduce using rule 90 (ZooElementValueList -> empty .)


state 226

    (91) ElementValueList -> ElementValue . COMMAElementValueS
    (92) COMMAElementValueS -> . COMMA ElementValue COMMAElementValueS
    (93) COMMAElementValueS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 411
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAElementValueS             shift and go to state 410
    empty                          shift and go to state 412

state 227

    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    AND             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    COMMA           reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RBRACE          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RPAREN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    COLON           reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RBRACK          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SEMICOLON       reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 228

    (84) ElementValuePair -> IDENT ASSIGN . ElementValue
    (85) ElementValue -> . ConditionalExpression
    (86) ElementValue -> . ElementValueArrayInitializer
    (87) ElementValue -> . Annotation
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (88) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

    LBRACE          shift and go to state 100
    ATRATE          shift and go to state 13
    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    ElementValue                   shift and go to state 413
    ConditionalExpression          shift and go to state 95
    ElementValueArrayInitializer   shift and go to state 96
    Annotation                     shift and go to state 97
    ConditionalOrExpression        shift and go to state 99
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 102
    TypeName                       shift and go to state 89
    InclusiveOrExpression          shift and go to state 103
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 229

    (258) PostIncrementExpression -> IDENT INC .

    INC             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    DEC             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    MUL             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    QUO             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    REM             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    ADD             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    SUB             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    SHL             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    SHR             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    SHR_UN          reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    LSS             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    GTR             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    LEQ             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    GEQ             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    INSTANCEOF      reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    EQL             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    NEQ             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    AND             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    XOR             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    OR              reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    LAND            reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    QUES            reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    LOR             reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    RPAREN          reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    COMMA           reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    RBRACE          reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    COLON           reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    RBRACK          reduce using rule 258 (PostIncrementExpression -> IDENT INC .)
    SEMICOLON       reduce using rule 258 (PostIncrementExpression -> IDENT INC .)


state 230

    (260) PostDecrementExpression -> IDENT DEC .

    INC             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    DEC             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    MUL             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    QUO             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    REM             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    ADD             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    SUB             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    SHL             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    SHR             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    SHR_UN          reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    LSS             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    GTR             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    LEQ             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    GEQ             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    INSTANCEOF      reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    EQL             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    NEQ             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    AND             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    XOR             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    OR              reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    LAND            reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    QUES            reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    LOR             reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    RPAREN          reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    COMMA           reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    RBRACE          reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    COLON           reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    RBRACK          reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)
    SEMICOLON       reduce using rule 260 (PostDecrementExpression -> IDENT DEC .)


state 231

    (122) ClassInstanceCreationExpression -> IDENT PERIOD . UnqualifiedClassInstanceCreationExpression
    (147) MethodInvocation -> IDENT PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    NEW             shift and go to state 416
    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    UnqualifiedClassInstanceCreationExpression shift and go to state 414
    ZooTypeArguments               shift and go to state 415
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 232

    (142) ArrayAccess -> IDENT LBRACK . Expression RBRACK
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 417
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 233

    (144) MethodInvocation -> IDENT LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 418
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 234

    (155) MethodReference -> IDENT COLON_SEP . ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 422
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 235

    (490) ArrayType -> IDENT Dims .

    COLON_SEP       reduce using rule 490 (ArrayType -> IDENT Dims .)
    AND             reduce using rule 490 (ArrayType -> IDENT Dims .)
    RPAREN          reduce using rule 490 (ArrayType -> IDENT Dims .)
    COMMA           reduce using rule 490 (ArrayType -> IDENT Dims .)
    GTR             reduce using rule 490 (ArrayType -> IDENT Dims .)
    LSS             reduce using rule 490 (ArrayType -> IDENT Dims .)
    LEQ             reduce using rule 490 (ArrayType -> IDENT Dims .)
    GEQ             reduce using rule 490 (ArrayType -> IDENT Dims .)
    INSTANCEOF      reduce using rule 490 (ArrayType -> IDENT Dims .)
    EQL             reduce using rule 490 (ArrayType -> IDENT Dims .)
    NEQ             reduce using rule 490 (ArrayType -> IDENT Dims .)
    XOR             reduce using rule 490 (ArrayType -> IDENT Dims .)
    OR              reduce using rule 490 (ArrayType -> IDENT Dims .)
    LAND            reduce using rule 490 (ArrayType -> IDENT Dims .)
    QUES            reduce using rule 490 (ArrayType -> IDENT Dims .)
    LOR             reduce using rule 490 (ArrayType -> IDENT Dims .)
    RBRACE          reduce using rule 490 (ArrayType -> IDENT Dims .)
    COLON           reduce using rule 490 (ArrayType -> IDENT Dims .)
    MUL             reduce using rule 490 (ArrayType -> IDENT Dims .)
    QUO             reduce using rule 490 (ArrayType -> IDENT Dims .)
    REM             reduce using rule 490 (ArrayType -> IDENT Dims .)
    ADD             reduce using rule 490 (ArrayType -> IDENT Dims .)
    SUB             reduce using rule 490 (ArrayType -> IDENT Dims .)
    SHL             reduce using rule 490 (ArrayType -> IDENT Dims .)
    SHR             reduce using rule 490 (ArrayType -> IDENT Dims .)
    SHR_UN          reduce using rule 490 (ArrayType -> IDENT Dims .)
    RBRACK          reduce using rule 490 (ArrayType -> IDENT Dims .)
    SEMICOLON       reduce using rule 490 (ArrayType -> IDENT Dims .)


state 236

    (491) Dims -> AnnotationS . LBRACE RBRACE AnnotationSLBRACERBRACES

    LBRACE          shift and go to state 423


state 237

    (492) Dims -> LBRACE . RBRACE AnnotationSLBRACERBRACES

    RBRACE          shift and go to state 424


state 238

    (207) ConditionalAndExpression -> ConditionalAndExpression LAND . InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    InclusiveOrExpression          shift and go to state 425
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 239

    (209) InclusiveOrExpression -> InclusiveOrExpression OR . ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ExclusiveOrExpression          shift and go to state 426
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 240

    (211) ExclusiveOrExpression -> ExclusiveOrExpression XOR . AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    AndExpression                  shift and go to state 427
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 241

    (213) AndExpression -> AndExpression AND . EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    EqualityExpression             shift and go to state 428
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 242

    (215) EqualityExpression -> EqualityExpression EQL . RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    RelationalExpression           shift and go to state 429
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 243

    (216) EqualityExpression -> EqualityExpression NEQ . RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    RelationalExpression           shift and go to state 430
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 244

    (218) RelationalExpression -> RelationalExpression LSS . ShiftExpression
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ShiftExpression                shift and go to state 431
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 245

    (219) RelationalExpression -> RelationalExpression GTR . ShiftExpression
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ShiftExpression                shift and go to state 432
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 246

    (220) RelationalExpression -> RelationalExpression LEQ . ShiftExpression
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ShiftExpression                shift and go to state 433
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 247

    (221) RelationalExpression -> RelationalExpression GEQ . ShiftExpression
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ShiftExpression                shift and go to state 434
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 248

    (222) RelationalExpression -> RelationalExpression INSTANCEOF . ReferenceType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 342
    BOOLEAN         shift and go to state 282
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    ReferenceType                  shift and go to state 435
    ClassType                      shift and go to state 341
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 343
    AnnotationS                    shift and go to state 167
    PrimitiveType                  shift and go to state 128
    Annotation                     shift and go to state 81
    NumericType                    shift and go to state 281
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 249

    (224) ShiftExpression -> ShiftExpression SHL . AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    AdditiveExpression             shift and go to state 436
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 250

    (225) ShiftExpression -> ShiftExpression SHR . AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    AdditiveExpression             shift and go to state 437
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 251

    (226) ShiftExpression -> ShiftExpression SHR_UN . AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    AdditiveExpression             shift and go to state 438
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 252

    (156) MethodReference -> ReferenceType COLON_SEP . ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 439
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 253

    (228) AdditiveExpression -> AdditiveExpression ADD . MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    MultiplicativeExpression       shift and go to state 440
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 254

    (229) AdditiveExpression -> AdditiveExpression SUB . MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    MultiplicativeExpression       shift and go to state 441
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 255

    (232) MultiplicativeExpression -> MultiplicativeExpression MUL . UnaryExpression
    (235) MultiplicativeExpression -> MultiplicativeExpression MUL . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 443
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 442
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 256

    (233) MultiplicativeExpression -> MultiplicativeExpression QUO . UnaryExpression
    (236) MultiplicativeExpression -> MultiplicativeExpression QUO . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 445
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 444
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 257

    (234) MultiplicativeExpression -> MultiplicativeExpression REM . UnaryExpression
    (237) MultiplicativeExpression -> MultiplicativeExpression REM . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 447
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    UnaryExpression                shift and go to state 446
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 258

    (240) UnaryExpression -> ADD UnaryExpression .

    MUL             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    QUO             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    REM             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    ADD             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    SUB             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    SHL             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    SHR             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    SHR_UN          reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    LSS             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    GTR             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    LEQ             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    GEQ             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    INSTANCEOF      reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    EQL             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    NEQ             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    AND             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    XOR             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    OR              reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    LAND            reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    QUES            reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    LOR             reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    RPAREN          reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    COMMA           reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    RBRACE          reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    COLON           reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    RBRACK          reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)
    SEMICOLON       reduce using rule 240 (UnaryExpression -> ADD UnaryExpression .)


state 259

    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 260

    (241) UnaryExpression -> SUB UnaryExpression .

    MUL             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    QUO             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    REM             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    ADD             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    SUB             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    SHL             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    SHR             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    SHR_UN          reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    LSS             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    GTR             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    LEQ             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    GEQ             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    INSTANCEOF      reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    EQL             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    NEQ             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    AND             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    XOR             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    OR              reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    LAND            reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    QUES            reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    LOR             reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    RPAREN          reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    COMMA           reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    RBRACE          reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    COLON           reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    RBRACK          reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)
    SEMICOLON       reduce using rule 241 (UnaryExpression -> SUB UnaryExpression .)


state 261

    (243) PreIncrementExpression -> INC UnaryExpression .

    MUL             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    QUO             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    REM             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    ADD             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    SUB             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    SHL             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    SHR             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    SHR_UN          reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    LSS             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    GTR             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    LEQ             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    GEQ             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    INSTANCEOF      reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    EQL             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    NEQ             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    AND             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    XOR             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    OR              reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    LAND            reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    QUES            reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    LOR             reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    RPAREN          reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    COMMA           reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACE          reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    COLON           reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACK          reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)
    SEMICOLON       reduce using rule 243 (PreIncrementExpression -> INC UnaryExpression .)


state 262

    (244) PreIncrementExpression -> INC IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    QUO             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    REM             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    ADD             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    SUB             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    SHL             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    SHR             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    SHR_UN          reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    GTR             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    LEQ             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    GEQ             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    INSTANCEOF      reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    EQL             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    NEQ             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    AND             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    XOR             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    OR              reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    LAND            reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    QUES            reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    LOR             reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    RPAREN          reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    COMMA           reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    RBRACE          reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    COLON           reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    RBRACK          reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    SEMICOLON       reduce using rule 244 (PreIncrementExpression -> INC IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 244 (PreIncrementExpression -> INC IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 263

    (245) PreDecrementExpression -> DEC UnaryExpression .

    MUL             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    QUO             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    REM             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    ADD             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    SUB             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    SHL             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    SHR             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    SHR_UN          reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    LSS             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    GTR             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    LEQ             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    GEQ             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    INSTANCEOF      reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    EQL             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    NEQ             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    AND             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    XOR             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    OR              reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    LAND            reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    QUES            reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    LOR             reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    RPAREN          reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    COMMA           reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACE          reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    COLON           reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACK          reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)
    SEMICOLON       reduce using rule 245 (PreDecrementExpression -> DEC UnaryExpression .)


state 264

    (246) PreDecrementExpression -> DEC IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    QUO             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    REM             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    ADD             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    SUB             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    SHL             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    SHR             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    SHR_UN          reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    GTR             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    LEQ             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    GEQ             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    INSTANCEOF      reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    EQL             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    NEQ             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    AND             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    XOR             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    OR              reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    LAND            reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    QUES            reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    LOR             reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    RPAREN          reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    COMMA           reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    RBRACE          reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    COLON           reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    RBRACK          reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    SEMICOLON       reduce using rule 246 (PreDecrementExpression -> DEC IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 246 (PreDecrementExpression -> DEC IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 265

    (257) PostIncrementExpression -> PostfixExpression INC .

    INC             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    DEC             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    MUL             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    QUO             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    REM             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    ADD             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    SUB             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    SHL             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    SHR             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    SHR_UN          reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    LSS             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    GTR             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    LEQ             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    GEQ             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    INSTANCEOF      reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    EQL             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    NEQ             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    AND             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    XOR             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    OR              reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    LAND            reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    QUES            reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    LOR             reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    RPAREN          reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    COMMA           reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACE          reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    COLON           reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACK          reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)
    SEMICOLON       reduce using rule 257 (PostIncrementExpression -> PostfixExpression INC .)


state 266

    (259) PostDecrementExpression -> PostfixExpression DEC .

    INC             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    DEC             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    MUL             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    QUO             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    REM             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    ADD             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    SUB             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    SHL             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    SHR             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    SHR_UN          reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    LSS             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    GTR             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    LEQ             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    GEQ             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    INSTANCEOF      reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    EQL             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    NEQ             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    AND             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    XOR             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    OR              reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    LAND            reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    QUES            reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    LOR             reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    RPAREN          reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    COMMA           reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACE          reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    COLON           reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACK          reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)
    SEMICOLON       reduce using rule 259 (PostDecrementExpression -> PostfixExpression DEC .)


state 267

    (248) UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .

    MUL             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    QUO             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    REM             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    ADD             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SUB             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SHL             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SHR             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SHR_UN          reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LSS             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    GTR             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LEQ             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    GEQ             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    INSTANCEOF      reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    EQL             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    NEQ             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    AND             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    XOR             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    OR              reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LAND            reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    QUES            reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LOR             reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    RPAREN          reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    COMMA           reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    RBRACE          reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    COLON           reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    RBRACK          reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SEMICOLON       reduce using rule 248 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)


state 268

    (250) UnaryExpressionNotPlusMinus -> LNOT IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    QUO             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    REM             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    ADD             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    SUB             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    SHL             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    SHR             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    SHR_UN          reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    GTR             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    LEQ             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    GEQ             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    INSTANCEOF      reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    EQL             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    NEQ             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    AND             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    XOR             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    OR              reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    LAND            reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    QUES            reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    LOR             reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    RPAREN          reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    COMMA           reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    RBRACE          reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    COLON           reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    RBRACK          reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    SEMICOLON       reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 250 (UnaryExpressionNotPlusMinus -> LNOT IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 269

    (249) UnaryExpressionNotPlusMinus -> NOT UnaryExpression .

    MUL             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    QUO             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    REM             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    ADD             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SUB             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SHL             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SHR             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SHR_UN          reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LSS             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    GTR             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LEQ             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    GEQ             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    INSTANCEOF      reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    EQL             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    NEQ             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    AND             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    XOR             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    OR              reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LAND            reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    QUES            reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LOR             reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    RPAREN          reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    COMMA           reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    RBRACE          reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    COLON           reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    RBRACK          reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SEMICOLON       reduce using rule 249 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)


state 270

    (251) UnaryExpressionNotPlusMinus -> NOT IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    QUO             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    REM             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    ADD             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    SUB             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    SHL             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    SHR             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    SHR_UN          reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    GTR             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    LEQ             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    GEQ             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    INSTANCEOF      reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    EQL             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    NEQ             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    AND             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    XOR             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    OR              reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    LAND            reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    QUES            reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    LOR             reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    RPAREN          reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    COMMA           reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    RBRACE          reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    COLON           reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    RBRACK          reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    SEMICOLON       reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 251 (UnaryExpressionNotPlusMinus -> NOT IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 271

    (123) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> Primary PERIOD . IDENT
    (148) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 449
    NEW             shift and go to state 416
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    UnqualifiedClassInstanceCreationExpression shift and go to state 448
    ZooTypeArguments               shift and go to state 450
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 272

    (157) MethodReference -> Primary COLON_SEP . ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 451
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 273

    (296) ExpressionName -> ExpressionName PERIOD . IDENT
    (121) ClassInstanceCreationExpression -> ExpressionName PERIOD . UnqualifiedClassInstanceCreationExpression
    (146) MethodInvocation -> ExpressionName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 168
    NEW             shift and go to state 416
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    UnqualifiedClassInstanceCreationExpression shift and go to state 452
    ZooTypeArguments               shift and go to state 453
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 274

    (141) ArrayAccess -> ExpressionName LBRACK . Expression RBRACK
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ExpressionName                 shift and go to state 211
    Expression                     shift and go to state 454
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 275

    (154) MethodReference -> ExpressionName COLON_SEP . ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 455
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 276

    (487) ArrayType -> PrimitiveType Dims .

    COLON_SEP       reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    AND             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    RPAREN          reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    COMMA           reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    GTR             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    LSS             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    LEQ             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    GEQ             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    INSTANCEOF      reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    EQL             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    NEQ             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    XOR             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    OR              reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    LAND            reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    QUES            reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    LOR             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    RBRACE          reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    COLON           reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    MUL             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    QUO             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    REM             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    ADD             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    SUB             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    SHL             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    SHR             reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    SHR_UN          reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    RBRACK          reduce using rule 487 (ArrayType -> PrimitiveType Dims .)
    SEMICOLON       reduce using rule 487 (ArrayType -> PrimitiveType Dims .)


state 277

    (143) ArrayAccess -> PrimaryNoNewArray LBRACK . Expression RBRACK
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    PrimaryNoNewArray              shift and go to state 215
    Expression                     shift and go to state 456
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 278

    (162) ArrayCreationExpression -> NEW PrimitiveType . DimExprs ZooDims
    (164) ArrayCreationExpression -> NEW PrimitiveType . Dims ArrayInitializer
    (166) DimExprs -> . DimExpr DimExprS
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (169) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (170) DimExpr -> . LBRACK Expression RBRACK
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          shift and go to state 237
    LBRACK          shift and go to state 461
    ATRATE          shift and go to state 13

    DimExprs                       shift and go to state 457
    Dims                           shift and go to state 458
    DimExpr                        shift and go to state 459
    AnnotationS                    shift and go to state 460
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 279

    (163) ArrayCreationExpression -> NEW ClassType . DimExprs ZooDims
    (165) ArrayCreationExpression -> NEW ClassType . Dims ArrayInitializer
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (166) DimExprs -> . DimExpr DimExprS
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (169) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (170) DimExpr -> . LBRACK Expression RBRACK
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PERIOD          shift and go to state 177
    LBRACE          shift and go to state 237
    LBRACK          shift and go to state 461
    ATRATE          shift and go to state 13

    DimExprs                       shift and go to state 462
    Dims                           shift and go to state 463
    DimExpr                        shift and go to state 459
    AnnotationS                    shift and go to state 460
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 280

    (124) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments . ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (127) ClassOrInterfaceTypeToInstantiate -> . AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
    (128) ClassOrInterfaceTypeToInstantiate -> . IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 466
    ATRATE          shift and go to state 13

    ClassOrInterfaceTypeToInstantiate shift and go to state 464
    AnnotationS                    shift and go to state 465
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 281

    (466) PrimitiveType -> NumericType .

    LBRACE          reduce using rule 466 (PrimitiveType -> NumericType .)
    LBRACK          reduce using rule 466 (PrimitiveType -> NumericType .)
    ATRATE          reduce using rule 466 (PrimitiveType -> NumericType .)


state 282

    (468) PrimitiveType -> BOOLEAN .

    LBRACE          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    LBRACK          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    ATRATE          reduce using rule 468 (PrimitiveType -> BOOLEAN .)


state 283

    (160) MethodReference -> ClassType COLON_SEP . ZooTypeArguments NEW
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    NEW             reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 467
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 284

    (488) ArrayType -> ClassType Dims .

    COLON_SEP       reduce using rule 488 (ArrayType -> ClassType Dims .)
    AND             reduce using rule 488 (ArrayType -> ClassType Dims .)
    RPAREN          reduce using rule 488 (ArrayType -> ClassType Dims .)
    COMMA           reduce using rule 488 (ArrayType -> ClassType Dims .)
    GTR             reduce using rule 488 (ArrayType -> ClassType Dims .)
    LSS             reduce using rule 488 (ArrayType -> ClassType Dims .)
    LEQ             reduce using rule 488 (ArrayType -> ClassType Dims .)
    GEQ             reduce using rule 488 (ArrayType -> ClassType Dims .)
    INSTANCEOF      reduce using rule 488 (ArrayType -> ClassType Dims .)
    EQL             reduce using rule 488 (ArrayType -> ClassType Dims .)
    NEQ             reduce using rule 488 (ArrayType -> ClassType Dims .)
    XOR             reduce using rule 488 (ArrayType -> ClassType Dims .)
    OR              reduce using rule 488 (ArrayType -> ClassType Dims .)
    LAND            reduce using rule 488 (ArrayType -> ClassType Dims .)
    QUES            reduce using rule 488 (ArrayType -> ClassType Dims .)
    LOR             reduce using rule 488 (ArrayType -> ClassType Dims .)
    RBRACE          reduce using rule 488 (ArrayType -> ClassType Dims .)
    COLON           reduce using rule 488 (ArrayType -> ClassType Dims .)
    MUL             reduce using rule 488 (ArrayType -> ClassType Dims .)
    QUO             reduce using rule 488 (ArrayType -> ClassType Dims .)
    REM             reduce using rule 488 (ArrayType -> ClassType Dims .)
    ADD             reduce using rule 488 (ArrayType -> ClassType Dims .)
    SUB             reduce using rule 488 (ArrayType -> ClassType Dims .)
    SHL             reduce using rule 488 (ArrayType -> ClassType Dims .)
    SHR             reduce using rule 488 (ArrayType -> ClassType Dims .)
    SHR_UN          reduce using rule 488 (ArrayType -> ClassType Dims .)
    RBRACK          reduce using rule 488 (ArrayType -> ClassType Dims .)
    SEMICOLON       reduce using rule 488 (ArrayType -> ClassType Dims .)


state 285

    (115) ClassLiteral -> NumericType LBRACKRBRACKS . PERIOD CLASS

    PERIOD          shift and go to state 468


state 286

    (116) ClassLiteral -> BOOLEAN LBRACKRBRACKS . PERIOD CLASS

    PERIOD          shift and go to state 469


state 287

    (117) ClassLiteral -> VOID PERIOD . CLASS

    CLASS           shift and go to state 470


state 288

    (139) FieldAccess -> SUPER PERIOD . IDENT
    (149) MethodInvocation -> SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 471
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 472
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 289

    (158) MethodReference -> SUPER COLON_SEP . ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 473
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 290

    (161) MethodReference -> ArrayType COLON_SEP . NEW

    NEW             shift and go to state 474


state 291

    (489) ArrayType -> TypeVariable Dims .

    COLON_SEP       reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    AND             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    RPAREN          reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    COMMA           reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    GTR             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    LSS             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    LEQ             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    GEQ             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    INSTANCEOF      reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    EQL             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    NEQ             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    XOR             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    OR              reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    LAND            reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    QUES            reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    LOR             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    RBRACE          reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    COLON           reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    MUL             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    QUO             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    REM             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    ADD             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    SUB             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    SHL             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    SHR             reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    SHR_UN          reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    RBRACK          reduce using rule 489 (ArrayType -> TypeVariable Dims .)
    SEMICOLON       reduce using rule 489 (ArrayType -> TypeVariable Dims .)


state 292

    (465) PrimitiveType -> AnnotationS NumericType .

    LBRACE          reduce using rule 465 (PrimitiveType -> AnnotationS NumericType .)
    ATRATE          reduce using rule 465 (PrimitiveType -> AnnotationS NumericType .)
    RPAREN          reduce using rule 465 (PrimitiveType -> AnnotationS NumericType .)
    LBRACK          reduce using rule 465 (PrimitiveType -> AnnotationS NumericType .)


state 293

    (467) PrimitiveType -> AnnotationS BOOLEAN .

    LBRACE          reduce using rule 467 (PrimitiveType -> AnnotationS BOOLEAN .)
    ATRATE          reduce using rule 467 (PrimitiveType -> AnnotationS BOOLEAN .)
    RPAREN          reduce using rule 467 (PrimitiveType -> AnnotationS BOOLEAN .)
    LBRACK          reduce using rule 467 (PrimitiveType -> AnnotationS BOOLEAN .)


state 294

    (304) NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .

    SEMICOLON       reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FINAL           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    EXTENDS         reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    PUBLIC          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    PROTECTED       reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    PRIVATE         reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ABSTRACT        reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    STATIC          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    STRICTFP        reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ATRATE          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CLASS           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ENUM            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    IMPLEMENTS      reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LBRACE          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    INTERFACE       reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    $end            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    TRANSIENT       reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    VOLATILE        reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SYNCHRONIZED    reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    NATIVE          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LSS             reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    IDENT           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BOOLEAN         reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BYTE            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SHORT           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    INT             reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LONG            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CHAR            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FLOAT           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DOUBLE          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    VOID            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    RBRACE          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    IF              reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    WHILE           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ASSERT          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SWITCH          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DO              reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BREAK           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CONTINUE        reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    RETURN          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    THROW           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    TRY             reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FOR             reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    INC             reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DEC             reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SUPER           reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    PERIOD          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    NEW             reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    THIS            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LPAREN          reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BOOL_LIT        reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    NULL_LIT        reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DECIMAL_LIT     reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    HEX_LIT         reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    OCTAL_LIT       reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BINARY_LIT      reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FLOAT_DEC_LIT   reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FLOAT_HEX_LIT   reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    STRING_LIT      reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CHAR_LIT        reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CASE            reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DEFAULT         reduce using rule 304 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)


state 295

    (15) ZooTypeParameters -> TypeParameters .

    SEMICOLON       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FINAL           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    EXTENDS         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    PUBLIC          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    PROTECTED       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    PRIVATE         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ABSTRACT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    STATIC          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    STRICTFP        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ATRATE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CLASS           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ENUM            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    IMPLEMENTS      reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LBRACE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    INTERFACE       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    $end            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    TRANSIENT       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    VOLATILE        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SYNCHRONIZED    reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    NATIVE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LSS             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    IDENT           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BOOLEAN         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BYTE            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SHORT           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    INT             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LONG            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CHAR            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FLOAT           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DOUBLE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    VOID            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    RBRACE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    IF              reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    WHILE           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ASSERT          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SWITCH          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DO              reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BREAK           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CONTINUE        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    RETURN          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    THROW           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    TRY             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FOR             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    INC             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DEC             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SUPER           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    PERIOD          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    NEW             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    THIS            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LPAREN          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BOOL_LIT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    NULL_LIT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DECIMAL_LIT     reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    HEX_LIT         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    OCTAL_LIT       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BINARY_LIT      reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FLOAT_DEC_LIT   reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FLOAT_HEX_LIT   reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    STRING_LIT      reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CHAR_LIT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CASE            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DEFAULT         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)


state 296

    (16) ZooTypeParameters -> empty .

    SEMICOLON       reduce using rule 16 (ZooTypeParameters -> empty .)
    FINAL           reduce using rule 16 (ZooTypeParameters -> empty .)
    EXTENDS         reduce using rule 16 (ZooTypeParameters -> empty .)
    PUBLIC          reduce using rule 16 (ZooTypeParameters -> empty .)
    PROTECTED       reduce using rule 16 (ZooTypeParameters -> empty .)
    PRIVATE         reduce using rule 16 (ZooTypeParameters -> empty .)
    ABSTRACT        reduce using rule 16 (ZooTypeParameters -> empty .)
    STATIC          reduce using rule 16 (ZooTypeParameters -> empty .)
    STRICTFP        reduce using rule 16 (ZooTypeParameters -> empty .)
    ATRATE          reduce using rule 16 (ZooTypeParameters -> empty .)
    CLASS           reduce using rule 16 (ZooTypeParameters -> empty .)
    ENUM            reduce using rule 16 (ZooTypeParameters -> empty .)
    IMPLEMENTS      reduce using rule 16 (ZooTypeParameters -> empty .)
    LBRACE          reduce using rule 16 (ZooTypeParameters -> empty .)
    INTERFACE       reduce using rule 16 (ZooTypeParameters -> empty .)
    $end            reduce using rule 16 (ZooTypeParameters -> empty .)
    TRANSIENT       reduce using rule 16 (ZooTypeParameters -> empty .)
    VOLATILE        reduce using rule 16 (ZooTypeParameters -> empty .)
    SYNCHRONIZED    reduce using rule 16 (ZooTypeParameters -> empty .)
    NATIVE          reduce using rule 16 (ZooTypeParameters -> empty .)
    LSS             reduce using rule 16 (ZooTypeParameters -> empty .)
    IDENT           reduce using rule 16 (ZooTypeParameters -> empty .)
    BOOLEAN         reduce using rule 16 (ZooTypeParameters -> empty .)
    BYTE            reduce using rule 16 (ZooTypeParameters -> empty .)
    SHORT           reduce using rule 16 (ZooTypeParameters -> empty .)
    INT             reduce using rule 16 (ZooTypeParameters -> empty .)
    LONG            reduce using rule 16 (ZooTypeParameters -> empty .)
    CHAR            reduce using rule 16 (ZooTypeParameters -> empty .)
    FLOAT           reduce using rule 16 (ZooTypeParameters -> empty .)
    DOUBLE          reduce using rule 16 (ZooTypeParameters -> empty .)
    VOID            reduce using rule 16 (ZooTypeParameters -> empty .)
    RBRACE          reduce using rule 16 (ZooTypeParameters -> empty .)
    IF              reduce using rule 16 (ZooTypeParameters -> empty .)
    WHILE           reduce using rule 16 (ZooTypeParameters -> empty .)
    ASSERT          reduce using rule 16 (ZooTypeParameters -> empty .)
    SWITCH          reduce using rule 16 (ZooTypeParameters -> empty .)
    DO              reduce using rule 16 (ZooTypeParameters -> empty .)
    BREAK           reduce using rule 16 (ZooTypeParameters -> empty .)
    CONTINUE        reduce using rule 16 (ZooTypeParameters -> empty .)
    RETURN          reduce using rule 16 (ZooTypeParameters -> empty .)
    THROW           reduce using rule 16 (ZooTypeParameters -> empty .)
    TRY             reduce using rule 16 (ZooTypeParameters -> empty .)
    FOR             reduce using rule 16 (ZooTypeParameters -> empty .)
    INC             reduce using rule 16 (ZooTypeParameters -> empty .)
    DEC             reduce using rule 16 (ZooTypeParameters -> empty .)
    SUPER           reduce using rule 16 (ZooTypeParameters -> empty .)
    PERIOD          reduce using rule 16 (ZooTypeParameters -> empty .)
    NEW             reduce using rule 16 (ZooTypeParameters -> empty .)
    THIS            reduce using rule 16 (ZooTypeParameters -> empty .)
    LPAREN          reduce using rule 16 (ZooTypeParameters -> empty .)
    BOOL_LIT        reduce using rule 16 (ZooTypeParameters -> empty .)
    NULL_LIT        reduce using rule 16 (ZooTypeParameters -> empty .)
    DECIMAL_LIT     reduce using rule 16 (ZooTypeParameters -> empty .)
    HEX_LIT         reduce using rule 16 (ZooTypeParameters -> empty .)
    OCTAL_LIT       reduce using rule 16 (ZooTypeParameters -> empty .)
    BINARY_LIT      reduce using rule 16 (ZooTypeParameters -> empty .)
    FLOAT_DEC_LIT   reduce using rule 16 (ZooTypeParameters -> empty .)
    FLOAT_HEX_LIT   reduce using rule 16 (ZooTypeParameters -> empty .)
    STRING_LIT      reduce using rule 16 (ZooTypeParameters -> empty .)
    CHAR_LIT        reduce using rule 16 (ZooTypeParameters -> empty .)
    CASE            reduce using rule 16 (ZooTypeParameters -> empty .)
    DEFAULT         reduce using rule 16 (ZooTypeParameters -> empty .)


state 297

    (308) TypeParameters -> LSS . TypeParameterList GTR
    (311) TypeParameterList -> . TypeParameter COMMMATypeParameterS
    (496) TypeParameter -> . TypeParameterModifierS IDENT ZooTypeBound
    (497) TypeParameterModifierS -> . TypeParameterModifier TypeParameterModifierS
    (498) TypeParameterModifierS -> . empty
    (501) TypeParameterModifier -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeParameterList              shift and go to state 475
    TypeParameter                  shift and go to state 476
    TypeParameterModifierS         shift and go to state 477
    TypeParameterModifier          shift and go to state 478
    empty                          shift and go to state 479
    Annotation                     shift and go to state 480
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 298

    (443) EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces . EnumBody
    (450) EnumBody -> . LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE

    LBRACE          shift and go to state 482

    EnumBody                       shift and go to state 481

state 299

    (518) Block -> LBRACE . ZooBlockStatements RBRACE
    (519) ZooBlockStatements -> . BlockStatements
    (520) ZooBlockStatements -> . empty
    (521) BlockStatements -> . BlockStatement BlockStatementS
    (1) empty -> .
    (524) BlockStatement -> . LocalVariableDeclarationStatement
    (525) BlockStatement -> . ClassDeclaration
    (526) BlockStatement -> . Statement
    (527) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (528) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> . VariableModifierS IDENT VariableDeclaratorList
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    FINAL           shift and go to state 531
    EXTENDS         shift and go to state 45
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    ATRATE          shift and go to state 13
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    ZooBlockStatements             shift and go to state 483
    BlockStatements                shift and go to state 484
    empty                          shift and go to state 485
    BlockStatement                 shift and go to state 486
    LocalVariableDeclarationStatement shift and go to state 487
    ClassDeclaration               shift and go to state 488
    Statement                      shift and go to state 489
    LocalVariableDeclaration       shift and go to state 490
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    VariableModifierS              shift and go to state 498
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    VariableModifier               shift and go to state 517
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Annotation                     shift and go to state 530
    InterfaceModifier              shift and go to state 73
    ClassType                      shift and go to state 140
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 300

    (319) ClassBody -> LBRACE ClassBodyDeclarationS . RBRACE

    RBRACE          shift and go to state 545


state 301

    (317) ClassBodyDeclarationS -> ClassBodyDeclaration . ClassBodyDeclarationS
    (317) ClassBodyDeclarationS -> . ClassBodyDeclaration ClassBodyDeclarationS
    (318) ClassBodyDeclarationS -> . empty
    (320) ClassBodyDeclaration -> . ClassMemberDeclaration
    (321) ClassBodyDeclaration -> . Block
    (322) ClassBodyDeclaration -> . StaticInitializer
    (323) ClassBodyDeclaration -> . ConstructorDeclaration
    (1) empty -> .
    (324) ClassMemberDeclaration -> . FieldDeclaration
    (325) ClassMemberDeclaration -> . MethodDeclaration
    (326) ClassMemberDeclaration -> . ClassDeclaration
    (327) ClassMemberDeclaration -> . InterfaceDeclaration
    (328) ClassMemberDeclaration -> . SEMICOLON
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (422) StaticInitializer -> . STATIC Block
    (425) ConstructorDeclaration -> . ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
    (331) FieldDeclaration -> . FieldModifierS UnannType VariableDeclaratorList SEMICOLON
    (332) FieldDeclaration -> . FieldModifierS IDENT VariableDeclaratorList SEMICOLON
    (367) MethodDeclaration -> . MethodModifierS MethodHeader MethodBody
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (423) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (424) ConstructorModifierS -> . empty
    (329) FieldModifierS -> . FieldModifier FieldModifierS
    (330) FieldModifierS -> . empty
    (365) MethodModifierS -> . MethodModifier MethodModifierS
    (366) MethodModifierS -> . empty
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (426) ConstructorModifier -> . Annotation
    (427) ConstructorModifier -> . PUBLIC
    (428) ConstructorModifier -> . PROTECTED
    (429) ConstructorModifier -> . PRIVATE
    (333) FieldModifier -> . Annotation
    (334) FieldModifier -> . PUBLIC
    (335) FieldModifier -> . PROTECTED
    (336) FieldModifier -> . PRIVATE
    (337) FieldModifier -> . STATIC
    (338) FieldModifier -> . FINAL
    (339) FieldModifier -> . TRANSIENT
    (340) FieldModifier -> . VOLATILE
    (368) MethodModifier -> . Annotation
    (369) MethodModifier -> . PUBLIC
    (370) MethodModifier -> . PROTECTED
    (371) MethodModifier -> . PRIVATE
    (372) MethodModifier -> . ABSTRACT
    (373) MethodModifier -> . STATIC
    (374) MethodModifier -> . FINAL
    (375) MethodModifier -> . SYNCHRONIZED
    (376) MethodModifier -> . NATIVE
    (377) MethodModifier -> . STRICTFP
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    SEMICOLON       shift and go to state 311
    LBRACE          shift and go to state 299
    STATIC          shift and go to state 312
    PUBLIC          shift and go to state 320
    PROTECTED       shift and go to state 321
    PRIVATE         shift and go to state 322
    FINAL           shift and go to state 323
    TRANSIENT       shift and go to state 324
    VOLATILE        shift and go to state 325
    ABSTRACT        shift and go to state 326
    SYNCHRONIZED    shift and go to state 327
    NATIVE          shift and go to state 328
    STRICTFP        shift and go to state 329
    EXTENDS         shift and go to state 45
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ClassBodyDeclaration           shift and go to state 301
    ClassBodyDeclarationS          shift and go to state 546
    empty                          shift and go to state 302
    ClassMemberDeclaration         shift and go to state 303
    Block                          shift and go to state 304
    StaticInitializer              shift and go to state 305
    ConstructorDeclaration         shift and go to state 306
    FieldDeclaration               shift and go to state 307
    MethodDeclaration              shift and go to state 308
    ClassDeclaration               shift and go to state 309
    InterfaceDeclaration           shift and go to state 310
    ConstructorModifierS           shift and go to state 313
    FieldModifierS                 shift and go to state 314
    MethodModifierS                shift and go to state 315
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstructorModifier            shift and go to state 316
    FieldModifier                  shift and go to state 317
    MethodModifier                 shift and go to state 318
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 319
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 302

    (318) ClassBodyDeclarationS -> empty .
    (424) ConstructorModifierS -> empty .
    (330) FieldModifierS -> empty .
    (366) MethodModifierS -> empty .
    (442) ClassModifierS -> empty .
    (301) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for LSS resolved using rule 366 (MethodModifierS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 330 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 330 (FieldModifierS -> empty .)
    RBRACE          reduce using rule 318 (ClassBodyDeclarationS -> empty .)
    IDENT           reduce using rule 330 (FieldModifierS -> empty .)
    BOOLEAN         reduce using rule 330 (FieldModifierS -> empty .)
    BYTE            reduce using rule 330 (FieldModifierS -> empty .)
    SHORT           reduce using rule 330 (FieldModifierS -> empty .)
    INT             reduce using rule 330 (FieldModifierS -> empty .)
    LONG            reduce using rule 330 (FieldModifierS -> empty .)
    CHAR            reduce using rule 330 (FieldModifierS -> empty .)
    FLOAT           reduce using rule 330 (FieldModifierS -> empty .)
    DOUBLE          reduce using rule 330 (FieldModifierS -> empty .)
    VOID            reduce using rule 366 (MethodModifierS -> empty .)
    LSS             reduce using rule 366 (MethodModifierS -> empty .)
    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 301 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 301 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)

  ! LSS             [ reduce using rule 424 (ConstructorModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 424 (ConstructorModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! BOOLEAN         [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! INT             [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! LONG            [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 366 (MethodModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 366 (MethodModifierS -> empty .) ]


state 303

    (320) ClassBodyDeclaration -> ClassMemberDeclaration .

    SEMICOLON       reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LBRACE          reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    STATIC          reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PUBLIC          reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PROTECTED       reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PRIVATE         reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FINAL           reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    TRANSIENT       reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    VOLATILE        reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    ABSTRACT        reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    SYNCHRONIZED    reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    NATIVE          reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    STRICTFP        reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    EXTENDS         reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    ATRATE          reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LSS             reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    IDENT           reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BOOLEAN         reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BYTE            reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    SHORT           reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    INT             reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LONG            reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    CHAR            reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FLOAT           reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    DOUBLE          reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    VOID            reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    CLASS           reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    ENUM            reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    IMPLEMENTS      reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    INTERFACE       reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    RBRACE          reduce using rule 320 (ClassBodyDeclaration -> ClassMemberDeclaration .)


state 304

    (321) ClassBodyDeclaration -> Block .

    SEMICOLON       reduce using rule 321 (ClassBodyDeclaration -> Block .)
    LBRACE          reduce using rule 321 (ClassBodyDeclaration -> Block .)
    STATIC          reduce using rule 321 (ClassBodyDeclaration -> Block .)
    PUBLIC          reduce using rule 321 (ClassBodyDeclaration -> Block .)
    PROTECTED       reduce using rule 321 (ClassBodyDeclaration -> Block .)
    PRIVATE         reduce using rule 321 (ClassBodyDeclaration -> Block .)
    FINAL           reduce using rule 321 (ClassBodyDeclaration -> Block .)
    TRANSIENT       reduce using rule 321 (ClassBodyDeclaration -> Block .)
    VOLATILE        reduce using rule 321 (ClassBodyDeclaration -> Block .)
    ABSTRACT        reduce using rule 321 (ClassBodyDeclaration -> Block .)
    SYNCHRONIZED    reduce using rule 321 (ClassBodyDeclaration -> Block .)
    NATIVE          reduce using rule 321 (ClassBodyDeclaration -> Block .)
    STRICTFP        reduce using rule 321 (ClassBodyDeclaration -> Block .)
    EXTENDS         reduce using rule 321 (ClassBodyDeclaration -> Block .)
    ATRATE          reduce using rule 321 (ClassBodyDeclaration -> Block .)
    LSS             reduce using rule 321 (ClassBodyDeclaration -> Block .)
    IDENT           reduce using rule 321 (ClassBodyDeclaration -> Block .)
    BOOLEAN         reduce using rule 321 (ClassBodyDeclaration -> Block .)
    BYTE            reduce using rule 321 (ClassBodyDeclaration -> Block .)
    SHORT           reduce using rule 321 (ClassBodyDeclaration -> Block .)
    INT             reduce using rule 321 (ClassBodyDeclaration -> Block .)
    LONG            reduce using rule 321 (ClassBodyDeclaration -> Block .)
    CHAR            reduce using rule 321 (ClassBodyDeclaration -> Block .)
    FLOAT           reduce using rule 321 (ClassBodyDeclaration -> Block .)
    DOUBLE          reduce using rule 321 (ClassBodyDeclaration -> Block .)
    VOID            reduce using rule 321 (ClassBodyDeclaration -> Block .)
    CLASS           reduce using rule 321 (ClassBodyDeclaration -> Block .)
    ENUM            reduce using rule 321 (ClassBodyDeclaration -> Block .)
    IMPLEMENTS      reduce using rule 321 (ClassBodyDeclaration -> Block .)
    INTERFACE       reduce using rule 321 (ClassBodyDeclaration -> Block .)
    RBRACE          reduce using rule 321 (ClassBodyDeclaration -> Block .)


state 305

    (322) ClassBodyDeclaration -> StaticInitializer .

    SEMICOLON       reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    LBRACE          reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    STATIC          reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    PUBLIC          reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    PROTECTED       reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    PRIVATE         reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    FINAL           reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    TRANSIENT       reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    VOLATILE        reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    ABSTRACT        reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    SYNCHRONIZED    reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    NATIVE          reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    STRICTFP        reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    EXTENDS         reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    ATRATE          reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    LSS             reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    IDENT           reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    BOOLEAN         reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    BYTE            reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    SHORT           reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    INT             reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    LONG            reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    CHAR            reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    FLOAT           reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    DOUBLE          reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    VOID            reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    CLASS           reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    ENUM            reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    IMPLEMENTS      reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    INTERFACE       reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)
    RBRACE          reduce using rule 322 (ClassBodyDeclaration -> StaticInitializer .)


state 306

    (323) ClassBodyDeclaration -> ConstructorDeclaration .

    SEMICOLON       reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LBRACE          reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    STATIC          reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PUBLIC          reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PROTECTED       reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PRIVATE         reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FINAL           reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    TRANSIENT       reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    VOLATILE        reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    ABSTRACT        reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    SYNCHRONIZED    reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    NATIVE          reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    STRICTFP        reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    EXTENDS         reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    ATRATE          reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LSS             reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    IDENT           reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BOOLEAN         reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BYTE            reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    SHORT           reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    INT             reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LONG            reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    CHAR            reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FLOAT           reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    DOUBLE          reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    VOID            reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    CLASS           reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    ENUM            reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    IMPLEMENTS      reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    INTERFACE       reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)
    RBRACE          reduce using rule 323 (ClassBodyDeclaration -> ConstructorDeclaration .)


state 307

    (324) ClassMemberDeclaration -> FieldDeclaration .

    SEMICOLON       reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    LBRACE          reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    STATIC          reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    PUBLIC          reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    PROTECTED       reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    PRIVATE         reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    FINAL           reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    TRANSIENT       reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    VOLATILE        reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    ABSTRACT        reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    SYNCHRONIZED    reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    NATIVE          reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    STRICTFP        reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    EXTENDS         reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    ATRATE          reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    LSS             reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    IDENT           reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    BOOLEAN         reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    BYTE            reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    SHORT           reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    INT             reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    LONG            reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    CHAR            reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    FLOAT           reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    DOUBLE          reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    VOID            reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    CLASS           reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    ENUM            reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    IMPLEMENTS      reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    INTERFACE       reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)
    RBRACE          reduce using rule 324 (ClassMemberDeclaration -> FieldDeclaration .)


state 308

    (325) ClassMemberDeclaration -> MethodDeclaration .

    SEMICOLON       reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    LBRACE          reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    STATIC          reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    PUBLIC          reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    PROTECTED       reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    PRIVATE         reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    FINAL           reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    TRANSIENT       reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    VOLATILE        reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    ABSTRACT        reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    SYNCHRONIZED    reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    NATIVE          reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    STRICTFP        reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    EXTENDS         reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    ATRATE          reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    LSS             reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    IDENT           reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    BOOLEAN         reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    BYTE            reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    SHORT           reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    INT             reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    LONG            reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    CHAR            reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    FLOAT           reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    DOUBLE          reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    VOID            reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    CLASS           reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    ENUM            reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    IMPLEMENTS      reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    INTERFACE       reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)
    RBRACE          reduce using rule 325 (ClassMemberDeclaration -> MethodDeclaration .)


state 309

    (326) ClassMemberDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    TRANSIENT       reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    VOLATILE        reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    SYNCHRONIZED    reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    NATIVE          reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    LSS             reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    IDENT           reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    BOOLEAN         reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    BYTE            reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    SHORT           reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    INT             reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    LONG            reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    CHAR            reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    FLOAT           reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    DOUBLE          reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    VOID            reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)
    RBRACE          reduce using rule 326 (ClassMemberDeclaration -> ClassDeclaration .)


state 310

    (327) ClassMemberDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    TRANSIENT       reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    VOLATILE        reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    NATIVE          reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    LSS             reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    IDENT           reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    BOOLEAN         reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    BYTE            reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    SHORT           reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    INT             reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    LONG            reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    CHAR            reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    FLOAT           reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    DOUBLE          reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    VOID            reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)
    RBRACE          reduce using rule 327 (ClassMemberDeclaration -> InterfaceDeclaration .)


state 311

    (328) ClassMemberDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    TRANSIENT       reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    VOLATILE        reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    SYNCHRONIZED    reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    NATIVE          reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    LSS             reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    IDENT           reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    BOOLEAN         reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    BYTE            reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    SHORT           reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    INT             reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    LONG            reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    CHAR            reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    FLOAT           reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    DOUBLE          reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    VOID            reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)
    RBRACE          reduce using rule 328 (ClassMemberDeclaration -> SEMICOLON .)


state 312

    (422) StaticInitializer -> STATIC . Block
    (337) FieldModifier -> STATIC .
    (373) MethodModifier -> STATIC .
    (26) InterfaceModifier -> STATIC .
    (518) Block -> . LBRACE ZooBlockStatements RBRACE

  ! reduce/reduce conflict for PUBLIC resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for INT resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for LONG resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 337 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 26 (InterfaceModifier -> STATIC .)
    TRANSIENT       reduce using rule 337 (FieldModifier -> STATIC .)
    VOLATILE        reduce using rule 337 (FieldModifier -> STATIC .)
    IDENT           reduce using rule 337 (FieldModifier -> STATIC .)
    BOOLEAN         reduce using rule 337 (FieldModifier -> STATIC .)
    BYTE            reduce using rule 337 (FieldModifier -> STATIC .)
    SHORT           reduce using rule 337 (FieldModifier -> STATIC .)
    INT             reduce using rule 337 (FieldModifier -> STATIC .)
    LONG            reduce using rule 337 (FieldModifier -> STATIC .)
    CHAR            reduce using rule 337 (FieldModifier -> STATIC .)
    FLOAT           reduce using rule 337 (FieldModifier -> STATIC .)
    DOUBLE          reduce using rule 337 (FieldModifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 373 (MethodModifier -> STATIC .)
    NATIVE          reduce using rule 373 (MethodModifier -> STATIC .)
    VOID            reduce using rule 373 (MethodModifier -> STATIC .)
    LSS             reduce using rule 373 (MethodModifier -> STATIC .)
    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)
    FINAL           reduce using rule 26 (InterfaceModifier -> STATIC .)
    CLASS           reduce using rule 26 (InterfaceModifier -> STATIC .)
    ENUM            reduce using rule 26 (InterfaceModifier -> STATIC .)
    LBRACE          shift and go to state 299

  ! PUBLIC          [ reduce using rule 337 (FieldModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 337 (FieldModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 337 (FieldModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 337 (FieldModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 337 (FieldModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 337 (FieldModifier -> STATIC .) ]
  ! PUBLIC          [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! IDENT           [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! BOOLEAN         [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! BYTE            [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! SHORT           [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! INT             [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! LONG            [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! CHAR            [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! FLOAT           [ reduce using rule 373 (MethodModifier -> STATIC .) ]
  ! DOUBLE          [ reduce using rule 373 (MethodModifier -> STATIC .) ]

    Block                          shift and go to state 547

state 313

    (425) ConstructorDeclaration -> ConstructorModifierS . ConstructorDeclarator ZooThrows ConstructorBody
    (430) ConstructorDeclarator -> . ZooTypeParameters IDENT LPAREN ZooFormalParameterList RPAREN
    (15) ZooTypeParameters -> . TypeParameters
    (16) ZooTypeParameters -> . empty
    (308) TypeParameters -> . LSS TypeParameterList GTR
    (1) empty -> .

    LSS             shift and go to state 297
    IDENT           reduce using rule 1 (empty -> .)

    ConstructorDeclarator          shift and go to state 548
    ZooTypeParameters              shift and go to state 549
    TypeParameters                 shift and go to state 295
    empty                          shift and go to state 296

state 314

    (331) FieldDeclaration -> FieldModifierS . UnannType VariableDeclaratorList SEMICOLON
    (332) FieldDeclaration -> FieldModifierS . IDENT VariableDeclaratorList SEMICOLON
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 551
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 550
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 315

    (367) MethodDeclaration -> MethodModifierS . MethodHeader MethodBody
    (380) MethodHeader -> . Result MethodDeclarator ZooThrows
    (381) MethodHeader -> . TypeParameters AnnotationS Result MethodDeclarator ZooThrows
    (382) MethodHeader -> . TypeParameters Result MethodDeclarator ZooThrows
    (383) Result -> . UnannType
    (384) Result -> . IDENT
    (385) Result -> . VOID
    (308) TypeParameters -> . LSS TypeParameterList GTR
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 558
    VOID            shift and go to state 559
    LSS             shift and go to state 297
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    MethodHeader                   shift and go to state 554
    Result                         shift and go to state 555
    TypeParameters                 shift and go to state 556
    UnannType                      shift and go to state 557
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 316

    (423) ConstructorModifierS -> ConstructorModifier . ConstructorModifierS
    (423) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (424) ConstructorModifierS -> . empty
    (426) ConstructorModifier -> . Annotation
    (427) ConstructorModifier -> . PUBLIC
    (428) ConstructorModifier -> . PROTECTED
    (429) ConstructorModifier -> . PRIVATE
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 563
    PROTECTED       shift and go to state 564
    PRIVATE         shift and go to state 565
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ConstructorModifier            shift and go to state 316
    ConstructorModifierS           shift and go to state 560
    empty                          shift and go to state 561
    Annotation                     shift and go to state 562
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 317

    (329) FieldModifierS -> FieldModifier . FieldModifierS
    (329) FieldModifierS -> . FieldModifier FieldModifierS
    (330) FieldModifierS -> . empty
    (333) FieldModifier -> . Annotation
    (334) FieldModifier -> . PUBLIC
    (335) FieldModifier -> . PROTECTED
    (336) FieldModifier -> . PRIVATE
    (337) FieldModifier -> . STATIC
    (338) FieldModifier -> . FINAL
    (339) FieldModifier -> . TRANSIENT
    (340) FieldModifier -> . VOLATILE
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 569
    PROTECTED       shift and go to state 570
    PRIVATE         shift and go to state 571
    STATIC          shift and go to state 572
    FINAL           shift and go to state 573
    TRANSIENT       shift and go to state 324
    VOLATILE        shift and go to state 325
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    FieldModifier                  shift and go to state 317
    FieldModifierS                 shift and go to state 566
    empty                          shift and go to state 567
    Annotation                     shift and go to state 568
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 318

    (365) MethodModifierS -> MethodModifier . MethodModifierS
    (365) MethodModifierS -> . MethodModifier MethodModifierS
    (366) MethodModifierS -> . empty
    (368) MethodModifier -> . Annotation
    (369) MethodModifier -> . PUBLIC
    (370) MethodModifier -> . PROTECTED
    (371) MethodModifier -> . PRIVATE
    (372) MethodModifier -> . ABSTRACT
    (373) MethodModifier -> . STATIC
    (374) MethodModifier -> . FINAL
    (375) MethodModifier -> . SYNCHRONIZED
    (376) MethodModifier -> . NATIVE
    (377) MethodModifier -> . STRICTFP
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 577
    PROTECTED       shift and go to state 578
    PRIVATE         shift and go to state 579
    ABSTRACT        shift and go to state 580
    STATIC          shift and go to state 581
    FINAL           shift and go to state 582
    SYNCHRONIZED    shift and go to state 327
    NATIVE          shift and go to state 328
    STRICTFP        shift and go to state 583
    IDENT           reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    MethodModifier                 shift and go to state 318
    MethodModifierS                shift and go to state 574
    empty                          shift and go to state 575
    Annotation                     shift and go to state 576
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 319

    (426) ConstructorModifier -> Annotation .
    (333) FieldModifier -> Annotation .
    (368) MethodModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for LSS resolved using rule 368 (MethodModifier -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 333 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 21 (InterfaceModifier -> Annotation .)
    TRANSIENT       reduce using rule 333 (FieldModifier -> Annotation .)
    VOLATILE        reduce using rule 333 (FieldModifier -> Annotation .)
    IDENT           reduce using rule 333 (FieldModifier -> Annotation .)
    BOOLEAN         reduce using rule 333 (FieldModifier -> Annotation .)
    BYTE            reduce using rule 333 (FieldModifier -> Annotation .)
    SHORT           reduce using rule 333 (FieldModifier -> Annotation .)
    INT             reduce using rule 333 (FieldModifier -> Annotation .)
    LONG            reduce using rule 333 (FieldModifier -> Annotation .)
    CHAR            reduce using rule 333 (FieldModifier -> Annotation .)
    FLOAT           reduce using rule 333 (FieldModifier -> Annotation .)
    DOUBLE          reduce using rule 333 (FieldModifier -> Annotation .)
    SYNCHRONIZED    reduce using rule 368 (MethodModifier -> Annotation .)
    NATIVE          reduce using rule 368 (MethodModifier -> Annotation .)
    VOID            reduce using rule 368 (MethodModifier -> Annotation .)
    LSS             reduce using rule 368 (MethodModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)
    FINAL           reduce using rule 21 (InterfaceModifier -> Annotation .)
    CLASS           reduce using rule 21 (InterfaceModifier -> Annotation .)
    ENUM            reduce using rule 21 (InterfaceModifier -> Annotation .)

  ! PUBLIC          [ reduce using rule 426 (ConstructorModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 426 (ConstructorModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 426 (ConstructorModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 426 (ConstructorModifier -> Annotation .) ]
  ! LSS             [ reduce using rule 426 (ConstructorModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 426 (ConstructorModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 333 (FieldModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 333 (FieldModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 333 (FieldModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 333 (FieldModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 333 (FieldModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 333 (FieldModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! INT             [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 368 (MethodModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 368 (MethodModifier -> Annotation .) ]


state 320

    (427) ConstructorModifier -> PUBLIC .
    (334) FieldModifier -> PUBLIC .
    (369) MethodModifier -> PUBLIC .
    (22) InterfaceModifier -> PUBLIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for LSS resolved using rule 369 (MethodModifier -> PUBLIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for INT resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for LONG resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 334 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 22 (InterfaceModifier -> PUBLIC .)
    TRANSIENT       reduce using rule 334 (FieldModifier -> PUBLIC .)
    VOLATILE        reduce using rule 334 (FieldModifier -> PUBLIC .)
    IDENT           reduce using rule 334 (FieldModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 334 (FieldModifier -> PUBLIC .)
    BYTE            reduce using rule 334 (FieldModifier -> PUBLIC .)
    SHORT           reduce using rule 334 (FieldModifier -> PUBLIC .)
    INT             reduce using rule 334 (FieldModifier -> PUBLIC .)
    LONG            reduce using rule 334 (FieldModifier -> PUBLIC .)
    CHAR            reduce using rule 334 (FieldModifier -> PUBLIC .)
    FLOAT           reduce using rule 334 (FieldModifier -> PUBLIC .)
    DOUBLE          reduce using rule 334 (FieldModifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 369 (MethodModifier -> PUBLIC .)
    NATIVE          reduce using rule 369 (MethodModifier -> PUBLIC .)
    VOID            reduce using rule 369 (MethodModifier -> PUBLIC .)
    LSS             reduce using rule 369 (MethodModifier -> PUBLIC .)
    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    CLASS           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ENUM            reduce using rule 22 (InterfaceModifier -> PUBLIC .)

  ! PUBLIC          [ reduce using rule 427 (ConstructorModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 427 (ConstructorModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 427 (ConstructorModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 427 (ConstructorModifier -> PUBLIC .) ]
  ! LSS             [ reduce using rule 427 (ConstructorModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 427 (ConstructorModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 334 (FieldModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 334 (FieldModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 334 (FieldModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 334 (FieldModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 334 (FieldModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 334 (FieldModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! BOOLEAN         [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! BYTE            [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! SHORT           [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! INT             [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! LONG            [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! CHAR            [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! FLOAT           [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]
  ! DOUBLE          [ reduce using rule 369 (MethodModifier -> PUBLIC .) ]


state 321

    (428) ConstructorModifier -> PROTECTED .
    (335) FieldModifier -> PROTECTED .
    (370) MethodModifier -> PROTECTED .
    (23) InterfaceModifier -> PROTECTED .

  ! reduce/reduce conflict for PUBLIC resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for IDENT resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for STATIC resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for FINAL resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for IDENT resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for LSS resolved using rule 370 (MethodModifier -> PROTECTED .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for BYTE resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for SHORT resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for INT resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for LONG resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for CHAR resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for FLOAT resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 335 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for STATIC resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for FINAL resolved using rule 23 (InterfaceModifier -> PROTECTED .)
    TRANSIENT       reduce using rule 335 (FieldModifier -> PROTECTED .)
    VOLATILE        reduce using rule 335 (FieldModifier -> PROTECTED .)
    IDENT           reduce using rule 335 (FieldModifier -> PROTECTED .)
    BOOLEAN         reduce using rule 335 (FieldModifier -> PROTECTED .)
    BYTE            reduce using rule 335 (FieldModifier -> PROTECTED .)
    SHORT           reduce using rule 335 (FieldModifier -> PROTECTED .)
    INT             reduce using rule 335 (FieldModifier -> PROTECTED .)
    LONG            reduce using rule 335 (FieldModifier -> PROTECTED .)
    CHAR            reduce using rule 335 (FieldModifier -> PROTECTED .)
    FLOAT           reduce using rule 335 (FieldModifier -> PROTECTED .)
    DOUBLE          reduce using rule 335 (FieldModifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 370 (MethodModifier -> PROTECTED .)
    NATIVE          reduce using rule 370 (MethodModifier -> PROTECTED .)
    VOID            reduce using rule 370 (MethodModifier -> PROTECTED .)
    LSS             reduce using rule 370 (MethodModifier -> PROTECTED .)
    PUBLIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PROTECTED       reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PRIVATE         reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STATIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STRICTFP        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ATRATE          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    INTERFACE       reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    FINAL           reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    CLASS           reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ENUM            reduce using rule 23 (InterfaceModifier -> PROTECTED .)

  ! PUBLIC          [ reduce using rule 428 (ConstructorModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 428 (ConstructorModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 428 (ConstructorModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 428 (ConstructorModifier -> PROTECTED .) ]
  ! LSS             [ reduce using rule 428 (ConstructorModifier -> PROTECTED .) ]
  ! IDENT           [ reduce using rule 428 (ConstructorModifier -> PROTECTED .) ]
  ! PUBLIC          [ reduce using rule 335 (FieldModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 335 (FieldModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 335 (FieldModifier -> PROTECTED .) ]
  ! STATIC          [ reduce using rule 335 (FieldModifier -> PROTECTED .) ]
  ! FINAL           [ reduce using rule 335 (FieldModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 335 (FieldModifier -> PROTECTED .) ]
  ! PUBLIC          [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! ABSTRACT        [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! STATIC          [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! FINAL           [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! STRICTFP        [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! IDENT           [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! BOOLEAN         [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! BYTE            [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! SHORT           [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! INT             [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! LONG            [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! CHAR            [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! FLOAT           [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]
  ! DOUBLE          [ reduce using rule 370 (MethodModifier -> PROTECTED .) ]


state 322

    (429) ConstructorModifier -> PRIVATE .
    (336) FieldModifier -> PRIVATE .
    (371) MethodModifier -> PRIVATE .
    (24) InterfaceModifier -> PRIVATE .

  ! reduce/reduce conflict for PUBLIC resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for IDENT resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for STATIC resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for FINAL resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for IDENT resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for LSS resolved using rule 371 (MethodModifier -> PRIVATE .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for BYTE resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for SHORT resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for INT resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for LONG resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for CHAR resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 336 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for STATIC resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for FINAL resolved using rule 24 (InterfaceModifier -> PRIVATE .)
    TRANSIENT       reduce using rule 336 (FieldModifier -> PRIVATE .)
    VOLATILE        reduce using rule 336 (FieldModifier -> PRIVATE .)
    IDENT           reduce using rule 336 (FieldModifier -> PRIVATE .)
    BOOLEAN         reduce using rule 336 (FieldModifier -> PRIVATE .)
    BYTE            reduce using rule 336 (FieldModifier -> PRIVATE .)
    SHORT           reduce using rule 336 (FieldModifier -> PRIVATE .)
    INT             reduce using rule 336 (FieldModifier -> PRIVATE .)
    LONG            reduce using rule 336 (FieldModifier -> PRIVATE .)
    CHAR            reduce using rule 336 (FieldModifier -> PRIVATE .)
    FLOAT           reduce using rule 336 (FieldModifier -> PRIVATE .)
    DOUBLE          reduce using rule 336 (FieldModifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 371 (MethodModifier -> PRIVATE .)
    NATIVE          reduce using rule 371 (MethodModifier -> PRIVATE .)
    VOID            reduce using rule 371 (MethodModifier -> PRIVATE .)
    LSS             reduce using rule 371 (MethodModifier -> PRIVATE .)
    PUBLIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PROTECTED       reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PRIVATE         reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STATIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STRICTFP        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ATRATE          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    INTERFACE       reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    FINAL           reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    CLASS           reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ENUM            reduce using rule 24 (InterfaceModifier -> PRIVATE .)

  ! PUBLIC          [ reduce using rule 429 (ConstructorModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 429 (ConstructorModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 429 (ConstructorModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 429 (ConstructorModifier -> PRIVATE .) ]
  ! LSS             [ reduce using rule 429 (ConstructorModifier -> PRIVATE .) ]
  ! IDENT           [ reduce using rule 429 (ConstructorModifier -> PRIVATE .) ]
  ! PUBLIC          [ reduce using rule 336 (FieldModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 336 (FieldModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 336 (FieldModifier -> PRIVATE .) ]
  ! STATIC          [ reduce using rule 336 (FieldModifier -> PRIVATE .) ]
  ! FINAL           [ reduce using rule 336 (FieldModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 336 (FieldModifier -> PRIVATE .) ]
  ! PUBLIC          [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! ABSTRACT        [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! STATIC          [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! FINAL           [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! STRICTFP        [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! IDENT           [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! BOOLEAN         [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! BYTE            [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! SHORT           [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! INT             [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! LONG            [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! CHAR            [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! FLOAT           [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]
  ! DOUBLE          [ reduce using rule 371 (MethodModifier -> PRIVATE .) ]


state 323

    (338) FieldModifier -> FINAL .
    (374) MethodModifier -> FINAL .
    (307) ClassModifier -> FINAL .

  ! reduce/reduce conflict for PUBLIC resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for STATIC resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for FINAL resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for IDENT resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for BYTE resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for SHORT resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for INT resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for LONG resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for CHAR resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 338 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for FINAL resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for STATIC resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 307 (ClassModifier -> FINAL .)
    TRANSIENT       reduce using rule 338 (FieldModifier -> FINAL .)
    VOLATILE        reduce using rule 338 (FieldModifier -> FINAL .)
    IDENT           reduce using rule 338 (FieldModifier -> FINAL .)
    BOOLEAN         reduce using rule 338 (FieldModifier -> FINAL .)
    BYTE            reduce using rule 338 (FieldModifier -> FINAL .)
    SHORT           reduce using rule 338 (FieldModifier -> FINAL .)
    INT             reduce using rule 338 (FieldModifier -> FINAL .)
    LONG            reduce using rule 338 (FieldModifier -> FINAL .)
    CHAR            reduce using rule 338 (FieldModifier -> FINAL .)
    FLOAT           reduce using rule 338 (FieldModifier -> FINAL .)
    DOUBLE          reduce using rule 338 (FieldModifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 374 (MethodModifier -> FINAL .)
    NATIVE          reduce using rule 374 (MethodModifier -> FINAL .)
    VOID            reduce using rule 374 (MethodModifier -> FINAL .)
    LSS             reduce using rule 374 (MethodModifier -> FINAL .)
    FINAL           reduce using rule 307 (ClassModifier -> FINAL .)
    PUBLIC          reduce using rule 307 (ClassModifier -> FINAL .)
    PROTECTED       reduce using rule 307 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 307 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 307 (ClassModifier -> FINAL .)
    STATIC          reduce using rule 307 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 307 (ClassModifier -> FINAL .)
    ATRATE          reduce using rule 307 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 307 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 307 (ClassModifier -> FINAL .)

  ! PUBLIC          [ reduce using rule 338 (FieldModifier -> FINAL .) ]
  ! PROTECTED       [ reduce using rule 338 (FieldModifier -> FINAL .) ]
  ! PRIVATE         [ reduce using rule 338 (FieldModifier -> FINAL .) ]
  ! STATIC          [ reduce using rule 338 (FieldModifier -> FINAL .) ]
  ! FINAL           [ reduce using rule 338 (FieldModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 338 (FieldModifier -> FINAL .) ]
  ! PUBLIC          [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! PROTECTED       [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! PRIVATE         [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! ABSTRACT        [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! STATIC          [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! FINAL           [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! STRICTFP        [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! IDENT           [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! BOOLEAN         [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! BYTE            [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! SHORT           [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! INT             [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! LONG            [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! CHAR            [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! FLOAT           [ reduce using rule 374 (MethodModifier -> FINAL .) ]
  ! DOUBLE          [ reduce using rule 374 (MethodModifier -> FINAL .) ]


state 324

    (339) FieldModifier -> TRANSIENT .

    PUBLIC          reduce using rule 339 (FieldModifier -> TRANSIENT .)
    PROTECTED       reduce using rule 339 (FieldModifier -> TRANSIENT .)
    PRIVATE         reduce using rule 339 (FieldModifier -> TRANSIENT .)
    STATIC          reduce using rule 339 (FieldModifier -> TRANSIENT .)
    FINAL           reduce using rule 339 (FieldModifier -> TRANSIENT .)
    TRANSIENT       reduce using rule 339 (FieldModifier -> TRANSIENT .)
    VOLATILE        reduce using rule 339 (FieldModifier -> TRANSIENT .)
    ATRATE          reduce using rule 339 (FieldModifier -> TRANSIENT .)
    IDENT           reduce using rule 339 (FieldModifier -> TRANSIENT .)
    BOOLEAN         reduce using rule 339 (FieldModifier -> TRANSIENT .)
    BYTE            reduce using rule 339 (FieldModifier -> TRANSIENT .)
    SHORT           reduce using rule 339 (FieldModifier -> TRANSIENT .)
    INT             reduce using rule 339 (FieldModifier -> TRANSIENT .)
    LONG            reduce using rule 339 (FieldModifier -> TRANSIENT .)
    CHAR            reduce using rule 339 (FieldModifier -> TRANSIENT .)
    FLOAT           reduce using rule 339 (FieldModifier -> TRANSIENT .)
    DOUBLE          reduce using rule 339 (FieldModifier -> TRANSIENT .)


state 325

    (340) FieldModifier -> VOLATILE .

    PUBLIC          reduce using rule 340 (FieldModifier -> VOLATILE .)
    PROTECTED       reduce using rule 340 (FieldModifier -> VOLATILE .)
    PRIVATE         reduce using rule 340 (FieldModifier -> VOLATILE .)
    STATIC          reduce using rule 340 (FieldModifier -> VOLATILE .)
    FINAL           reduce using rule 340 (FieldModifier -> VOLATILE .)
    TRANSIENT       reduce using rule 340 (FieldModifier -> VOLATILE .)
    VOLATILE        reduce using rule 340 (FieldModifier -> VOLATILE .)
    ATRATE          reduce using rule 340 (FieldModifier -> VOLATILE .)
    IDENT           reduce using rule 340 (FieldModifier -> VOLATILE .)
    BOOLEAN         reduce using rule 340 (FieldModifier -> VOLATILE .)
    BYTE            reduce using rule 340 (FieldModifier -> VOLATILE .)
    SHORT           reduce using rule 340 (FieldModifier -> VOLATILE .)
    INT             reduce using rule 340 (FieldModifier -> VOLATILE .)
    LONG            reduce using rule 340 (FieldModifier -> VOLATILE .)
    CHAR            reduce using rule 340 (FieldModifier -> VOLATILE .)
    FLOAT           reduce using rule 340 (FieldModifier -> VOLATILE .)
    DOUBLE          reduce using rule 340 (FieldModifier -> VOLATILE .)


state 326

    (372) MethodModifier -> ABSTRACT .
    (25) InterfaceModifier -> ABSTRACT .

  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for FINAL resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 372 (MethodModifier -> ABSTRACT .)
    NATIVE          reduce using rule 372 (MethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 372 (MethodModifier -> ABSTRACT .)
    VOID            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    LSS             reduce using rule 372 (MethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 372 (MethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 372 (MethodModifier -> ABSTRACT .)
    INT             reduce using rule 372 (MethodModifier -> ABSTRACT .)
    LONG            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 372 (MethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 372 (MethodModifier -> ABSTRACT .)
    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    FINAL           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    CLASS           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ENUM            reduce using rule 25 (InterfaceModifier -> ABSTRACT .)

  ! PUBLIC          [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]
  ! PROTECTED       [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]
  ! PRIVATE         [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]
  ! FINAL           [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 372 (MethodModifier -> ABSTRACT .) ]


state 327

    (375) MethodModifier -> SYNCHRONIZED .

    PUBLIC          reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    PROTECTED       reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    PRIVATE         reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    ABSTRACT        reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    STATIC          reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    FINAL           reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    SYNCHRONIZED    reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    NATIVE          reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    STRICTFP        reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    ATRATE          reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    IDENT           reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    VOID            reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    LSS             reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    BOOLEAN         reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    BYTE            reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    SHORT           reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    INT             reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    LONG            reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    CHAR            reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    FLOAT           reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)
    DOUBLE          reduce using rule 375 (MethodModifier -> SYNCHRONIZED .)


state 328

    (376) MethodModifier -> NATIVE .

    PUBLIC          reduce using rule 376 (MethodModifier -> NATIVE .)
    PROTECTED       reduce using rule 376 (MethodModifier -> NATIVE .)
    PRIVATE         reduce using rule 376 (MethodModifier -> NATIVE .)
    ABSTRACT        reduce using rule 376 (MethodModifier -> NATIVE .)
    STATIC          reduce using rule 376 (MethodModifier -> NATIVE .)
    FINAL           reduce using rule 376 (MethodModifier -> NATIVE .)
    SYNCHRONIZED    reduce using rule 376 (MethodModifier -> NATIVE .)
    NATIVE          reduce using rule 376 (MethodModifier -> NATIVE .)
    STRICTFP        reduce using rule 376 (MethodModifier -> NATIVE .)
    ATRATE          reduce using rule 376 (MethodModifier -> NATIVE .)
    IDENT           reduce using rule 376 (MethodModifier -> NATIVE .)
    VOID            reduce using rule 376 (MethodModifier -> NATIVE .)
    LSS             reduce using rule 376 (MethodModifier -> NATIVE .)
    BOOLEAN         reduce using rule 376 (MethodModifier -> NATIVE .)
    BYTE            reduce using rule 376 (MethodModifier -> NATIVE .)
    SHORT           reduce using rule 376 (MethodModifier -> NATIVE .)
    INT             reduce using rule 376 (MethodModifier -> NATIVE .)
    LONG            reduce using rule 376 (MethodModifier -> NATIVE .)
    CHAR            reduce using rule 376 (MethodModifier -> NATIVE .)
    FLOAT           reduce using rule 376 (MethodModifier -> NATIVE .)
    DOUBLE          reduce using rule 376 (MethodModifier -> NATIVE .)


state 329

    (377) MethodModifier -> STRICTFP .
    (27) InterfaceModifier -> STRICTFP .

  ! reduce/reduce conflict for PUBLIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STATIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ATRATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for FINAL resolved using rule 27 (InterfaceModifier -> STRICTFP .)
    SYNCHRONIZED    reduce using rule 377 (MethodModifier -> STRICTFP .)
    NATIVE          reduce using rule 377 (MethodModifier -> STRICTFP .)
    IDENT           reduce using rule 377 (MethodModifier -> STRICTFP .)
    VOID            reduce using rule 377 (MethodModifier -> STRICTFP .)
    LSS             reduce using rule 377 (MethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 377 (MethodModifier -> STRICTFP .)
    BYTE            reduce using rule 377 (MethodModifier -> STRICTFP .)
    SHORT           reduce using rule 377 (MethodModifier -> STRICTFP .)
    INT             reduce using rule 377 (MethodModifier -> STRICTFP .)
    LONG            reduce using rule 377 (MethodModifier -> STRICTFP .)
    CHAR            reduce using rule 377 (MethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 377 (MethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 377 (MethodModifier -> STRICTFP .)
    PUBLIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ATRATE          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    FINAL           reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    CLASS           reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ENUM            reduce using rule 27 (InterfaceModifier -> STRICTFP .)

  ! PUBLIC          [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]
  ! PROTECTED       [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]
  ! PRIVATE         [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]
  ! ABSTRACT        [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]
  ! STATIC          [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]
  ! FINAL           [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]
  ! STRICTFP        [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]
  ! ATRATE          [ reduce using rule 377 (MethodModifier -> STRICTFP .) ]


state 330

    (316) InterfaceTypeList -> ClassType COMMAInterfaceTypeS .

    LBRACE          reduce using rule 316 (InterfaceTypeList -> ClassType COMMAInterfaceTypeS .)


state 331

    (314) COMMAInterfaceTypeS -> COMMA . ClassType COMMAInterfaceTypeS
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 79
    ATRATE          shift and go to state 13

    ClassType                      shift and go to state 584
    TypeVariable                   shift and go to state 78
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 332

    (315) COMMAInterfaceTypeS -> empty .

    LBRACE          reduce using rule 315 (COMMAInterfaceTypeS -> empty .)


state 333

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters . ZooExtendsInterfaces InterfaceBody
    (17) ZooExtendsInterfaces -> . ExtendsInterfaces
    (18) ZooExtendsInterfaces -> . empty
    (28) ExtendsInterfaces -> . EXTENDS InterfaceTypeList
    (1) empty -> .

    EXTENDS         shift and go to state 588
    LBRACE          reduce using rule 1 (empty -> .)

    ZooExtendsInterfaces           shift and go to state 585
    ExtendsInterfaces              shift and go to state 586
    empty                          shift and go to state 587

state 334

    (54) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT . AnnotationTypeBody
    (55) AnnotationTypeBody -> . LBRACE AnnotationTypeMemberDeclarationS RBRACE

    LBRACE          shift and go to state 590

    AnnotationTypeBody             shift and go to state 589

state 335

    (484) ClassType -> ClassType PERIOD TypeVariable . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for LSS resolved as shift
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 591
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 336

    (485) ClassType -> ClassType PERIOD IDENT . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for LSS resolved as shift
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 592
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 337

    (506) TypeArguments -> LSS TypeArgumentList . GTR

    GTR             shift and go to state 593


state 338

    (507) TypeArgumentList -> TypeArgument . COMMATypeArgumentS
    (508) COMMATypeArgumentS -> . COMMA TypeArgument COMMATypeArgumentS
    (509) COMMATypeArgumentS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 595
    GTR             reduce using rule 1 (empty -> .)

    COMMATypeArgumentS             shift and go to state 594
    empty                          shift and go to state 596

state 339

    (510) TypeArgument -> ReferenceType .

    COMMA           reduce using rule 510 (TypeArgument -> ReferenceType .)
    GTR             reduce using rule 510 (TypeArgument -> ReferenceType .)


state 340

    (511) TypeArgument -> Wildcard .

    COMMA           reduce using rule 511 (TypeArgument -> Wildcard .)
    GTR             reduce using rule 511 (TypeArgument -> Wildcard .)


state 341

    (478) ReferenceType -> ClassType .
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (488) ArrayType -> ClassType . Dims
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    COMMA           reduce using rule 478 (ReferenceType -> ClassType .)
    GTR             reduce using rule 478 (ReferenceType -> ClassType .)
    LSS             reduce using rule 478 (ReferenceType -> ClassType .)
    LEQ             reduce using rule 478 (ReferenceType -> ClassType .)
    GEQ             reduce using rule 478 (ReferenceType -> ClassType .)
    INSTANCEOF      reduce using rule 478 (ReferenceType -> ClassType .)
    EQL             reduce using rule 478 (ReferenceType -> ClassType .)
    NEQ             reduce using rule 478 (ReferenceType -> ClassType .)
    AND             reduce using rule 478 (ReferenceType -> ClassType .)
    XOR             reduce using rule 478 (ReferenceType -> ClassType .)
    OR              reduce using rule 478 (ReferenceType -> ClassType .)
    LAND            reduce using rule 478 (ReferenceType -> ClassType .)
    QUES            reduce using rule 478 (ReferenceType -> ClassType .)
    LOR             reduce using rule 478 (ReferenceType -> ClassType .)
    RPAREN          reduce using rule 478 (ReferenceType -> ClassType .)
    RBRACE          reduce using rule 478 (ReferenceType -> ClassType .)
    COLON           reduce using rule 478 (ReferenceType -> ClassType .)
    MUL             reduce using rule 478 (ReferenceType -> ClassType .)
    QUO             reduce using rule 478 (ReferenceType -> ClassType .)
    REM             reduce using rule 478 (ReferenceType -> ClassType .)
    ADD             reduce using rule 478 (ReferenceType -> ClassType .)
    SUB             reduce using rule 478 (ReferenceType -> ClassType .)
    SHL             reduce using rule 478 (ReferenceType -> ClassType .)
    SHR             reduce using rule 478 (ReferenceType -> ClassType .)
    SHR_UN          reduce using rule 478 (ReferenceType -> ClassType .)
    RBRACK          reduce using rule 478 (ReferenceType -> ClassType .)
    SEMICOLON       reduce using rule 478 (ReferenceType -> ClassType .)
    PERIOD          shift and go to state 177
    LBRACE          shift and go to state 237
    ATRATE          shift and go to state 13

    Dims                           shift and go to state 284
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 342

    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for GTR resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for LSS resolved as shift
  ! reduce/reduce conflict for LEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for GEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INSTANCEOF resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for EQL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for NEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for XOR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LAND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for QUES resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LOR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for COLON resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for MUL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for QUO resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for REM resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for ADD resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SUB resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHR_UN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RBRACK resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! COMMA           [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! GTR             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LSS             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LEQ             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! GEQ             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! INSTANCEOF      [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! EQL             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! NEQ             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! AND             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! XOR             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! OR              [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LAND            [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! QUES            [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LOR             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! RPAREN          [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! RBRACE          [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON           [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! MUL             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! QUO             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! REM             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! ADD             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! SUB             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! SHL             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! SHR             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! SHR_UN          [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! RBRACK          [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! SEMICOLON       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 343

    (481) ReferenceType -> ArrayType .

    COMMA           reduce using rule 481 (ReferenceType -> ArrayType .)
    GTR             reduce using rule 481 (ReferenceType -> ArrayType .)
    LSS             reduce using rule 481 (ReferenceType -> ArrayType .)
    LEQ             reduce using rule 481 (ReferenceType -> ArrayType .)
    GEQ             reduce using rule 481 (ReferenceType -> ArrayType .)
    INSTANCEOF      reduce using rule 481 (ReferenceType -> ArrayType .)
    EQL             reduce using rule 481 (ReferenceType -> ArrayType .)
    NEQ             reduce using rule 481 (ReferenceType -> ArrayType .)
    AND             reduce using rule 481 (ReferenceType -> ArrayType .)
    XOR             reduce using rule 481 (ReferenceType -> ArrayType .)
    OR              reduce using rule 481 (ReferenceType -> ArrayType .)
    LAND            reduce using rule 481 (ReferenceType -> ArrayType .)
    QUES            reduce using rule 481 (ReferenceType -> ArrayType .)
    LOR             reduce using rule 481 (ReferenceType -> ArrayType .)
    RPAREN          reduce using rule 481 (ReferenceType -> ArrayType .)
    RBRACE          reduce using rule 481 (ReferenceType -> ArrayType .)
    COLON           reduce using rule 481 (ReferenceType -> ArrayType .)
    MUL             reduce using rule 481 (ReferenceType -> ArrayType .)
    QUO             reduce using rule 481 (ReferenceType -> ArrayType .)
    REM             reduce using rule 481 (ReferenceType -> ArrayType .)
    ADD             reduce using rule 481 (ReferenceType -> ArrayType .)
    SUB             reduce using rule 481 (ReferenceType -> ArrayType .)
    SHL             reduce using rule 481 (ReferenceType -> ArrayType .)
    SHR             reduce using rule 481 (ReferenceType -> ArrayType .)
    SHR_UN          reduce using rule 481 (ReferenceType -> ArrayType .)
    RBRACK          reduce using rule 481 (ReferenceType -> ArrayType .)
    SEMICOLON       reduce using rule 481 (ReferenceType -> ArrayType .)


state 344

    (512) Wildcard -> AnnotationS . QUES ZooWildcardBounds
    (486) TypeVariable -> AnnotationS . IDENT
    (465) PrimitiveType -> AnnotationS . NumericType
    (467) PrimitiveType -> AnnotationS . BOOLEAN
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    QUES            shift and go to state 597
    IDENT           shift and go to state 183
    BOOLEAN         shift and go to state 293
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 345

    (513) Wildcard -> QUES . ZooWildcardBounds
    (514) ZooWildcardBounds -> . WildcardBounds
    (515) ZooWildcardBounds -> . empty
    (516) WildcardBounds -> . EXTENDS ReferenceType
    (517) WildcardBounds -> . SUPER ReferenceType
    (1) empty -> .

    EXTENDS         shift and go to state 601
    SUPER           shift and go to state 602
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    ZooWildcardBounds              shift and go to state 598
    WildcardBounds                 shift and go to state 599
    empty                          shift and go to state 600

state 346

    (287) TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .

    IMPORT          reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    SEMICOLON       reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    FINAL           reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    EXTENDS         reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    PUBLIC          reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    PROTECTED       reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    PRIVATE         reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    ABSTRACT        reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    STATIC          reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    STRICTFP        reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    ATRATE          reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    CLASS           reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    ENUM            reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    IMPLEMENTS      reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    LBRACE          reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    INTERFACE       reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)
    $end            reduce using rule 287 (TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON .)


state 347

    (288) TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .

    IMPORT          reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    SEMICOLON       reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    FINAL           reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    EXTENDS         reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    PUBLIC          reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    PROTECTED       reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    PRIVATE         reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    ABSTRACT        reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    STATIC          reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    STRICTFP        reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    ATRATE          reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    CLASS           reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    ENUM            reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    IMPLEMENTS      reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    LBRACE          reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    INTERFACE       reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)
    $end            reduce using rule 288 (TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON .)


state 348

    (289) SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT . SEMICOLON

    SEMICOLON       shift and go to state 603


state 349

    (290) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL . SEMICOLON

    SEMICOLON       shift and go to state 604


state 350

    (279) PERIODIDENTS -> PERIOD IDENT PERIODIDENTS .

    SEMICOLON       reduce using rule 279 (PERIODIDENTS -> PERIOD IDENT PERIODIDENTS .)


state 351

    (107) PrimaryNoNewArray -> TypeName PERIOD THIS .

    LBRACK          reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    PERIOD          reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    COLON_SEP       reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    INC             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    DEC             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    MUL             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    QUO             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    REM             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    ADD             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SUB             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SHL             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SHR             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SHR_UN          reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LSS             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    GTR             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LEQ             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    GEQ             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    INSTANCEOF      reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    EQL             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    NEQ             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    AND             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    XOR             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    OR              reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LAND            reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    QUES            reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LOR             reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    RPAREN          reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    COMMA           reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    RBRACE          reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    COLON           reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    RBRACK          reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SEMICOLON       reduce using rule 107 (PrimaryNoNewArray -> TypeName PERIOD THIS .)


state 352

    (140) FieldAccess -> TypeName PERIOD SUPER . PERIOD IDENT
    (150) MethodInvocation -> TypeName PERIOD SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (159) MethodReference -> TypeName PERIOD SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 605
    COLON_SEP       shift and go to state 606


state 353

    (145) MethodInvocation -> TypeName PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 607


state 354

    (114) ClassLiteral -> TypeName LBRACKRBRACKS PERIOD . CLASS

    CLASS           shift and go to state 608


state 355

    (118) LBRACKRBRACKS -> LBRACK RBRACK . LBRACKRBRACKS
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

    LBRACK          shift and go to state 192
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 609
    empty                          shift and go to state 193

state 356

    (175) LambdaParameters -> LPAREN ZooFormalParameterList . RPAREN

    RPAREN          shift and go to state 610


state 357

    (176) LambdaParameters -> LPAREN InferredFormalParameterList . RPAREN

    RPAREN          shift and go to state 611


state 358

    (177) InferredFormalParameterList -> IDENT . COMMAIDENTS
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (412) ReceiverParameter -> IDENT . ZooIDENTPERIOD THIS
    (174) LambdaParameters -> IDENT .
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (178) COMMAIDENTS -> . COMMA IDENT COMMAIDENTS
    (179) COMMAIDENTS -> . empty
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (407) ZooIDENTPERIOD -> . IDENT PERIOD
    (408) ZooIDENTPERIOD -> . empty
    (1) empty -> .
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 231 (MultiplicativeExpression -> IDENT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 231 (MultiplicativeExpression -> IDENT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    ARROW           reduce using rule 174 (LambdaParameters -> IDENT .)
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    PERIOD          shift and go to state 231
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    COMMA           shift and go to state 617
    LBRACE          shift and go to state 237
    IDENT           shift and go to state 612
    RPAREN          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! AND             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! RPAREN          [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! AND             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! RPAREN          [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    COMMAIDENTS                    shift and go to state 613
    ZooTypeArguments               shift and go to state 614
    Dims                           shift and go to state 615
    ZooIDENTPERIOD                 shift and go to state 616
    empty                          shift and go to state 618
    TypeArguments                  shift and go to state 179
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 359

    (386) ZooFormalParameterList -> FormalParameterList .

    RPAREN          reduce using rule 386 (ZooFormalParameterList -> FormalParameterList .)


state 360

    (387) ZooFormalParameterList -> empty .
    (531) VariableModifierS -> empty .
    (397) ZooVariableModifier -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 397 (ZooVariableModifier -> empty .)
    RPAREN          reduce using rule 387 (ZooFormalParameterList -> empty .)
    IDENT           reduce using rule 397 (ZooVariableModifier -> empty .)
    BOOLEAN         reduce using rule 397 (ZooVariableModifier -> empty .)
    BYTE            reduce using rule 397 (ZooVariableModifier -> empty .)
    SHORT           reduce using rule 397 (ZooVariableModifier -> empty .)
    INT             reduce using rule 397 (ZooVariableModifier -> empty .)
    LONG            reduce using rule 397 (ZooVariableModifier -> empty .)
    CHAR            reduce using rule 397 (ZooVariableModifier -> empty .)
    FLOAT           reduce using rule 397 (ZooVariableModifier -> empty .)
    DOUBLE          reduce using rule 397 (ZooVariableModifier -> empty .)

  ! IDENT           [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! BOOLEAN         [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 531 (VariableModifierS -> empty .) ]


state 361

    (465) PrimitiveType -> AnnotationS . NumericType
    (467) PrimitiveType -> AnnotationS . BOOLEAN
    (486) TypeVariable -> AnnotationS . IDENT
    (409) ReceiverParameter -> AnnotationS . UnannType ZooIDENTPERIOD THIS
    (410) ReceiverParameter -> AnnotationS . IDENT ZooIDENTPERIOD THIS
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 620
    IDENT           shift and go to state 621
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    NumericType                    shift and go to state 619
    UnannType                      shift and go to state 622
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 362

    (466) PrimitiveType -> NumericType .
    (352) UnannPrimitiveType -> NumericType .
    (115) ClassLiteral -> NumericType . LBRACKRBRACKS PERIOD CLASS
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! reduce/reduce conflict for LBRACE resolved using rule 352 (UnannPrimitiveType -> NumericType .)
  ! reduce/reduce conflict for ATRATE resolved using rule 352 (UnannPrimitiveType -> NumericType .)
    RPAREN          reduce using rule 466 (PrimitiveType -> NumericType .)
    LBRACE          reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    ATRATE          reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    IDENT           reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    THIS            reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    LBRACK          shift and go to state 192
    PERIOD          reduce using rule 1 (empty -> .)

  ! LBRACE          [ reduce using rule 466 (PrimitiveType -> NumericType .) ]
  ! ATRATE          [ reduce using rule 466 (PrimitiveType -> NumericType .) ]

    LBRACKRBRACKS                  shift and go to state 285
    empty                          shift and go to state 193

state 363

    (468) PrimitiveType -> BOOLEAN .
    (353) UnannPrimitiveType -> BOOLEAN .
    (116) ClassLiteral -> BOOLEAN . LBRACKRBRACKS PERIOD CLASS
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! reduce/reduce conflict for LBRACE resolved using rule 353 (UnannPrimitiveType -> BOOLEAN .)
  ! reduce/reduce conflict for ATRATE resolved using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 468 (PrimitiveType -> BOOLEAN .)
    LBRACE          reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    ATRATE          reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    IDENT           reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    THIS            reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    LBRACK          shift and go to state 192
    PERIOD          reduce using rule 1 (empty -> .)

  ! LBRACE          [ reduce using rule 468 (PrimitiveType -> BOOLEAN .) ]
  ! ATRATE          [ reduce using rule 468 (PrimitiveType -> BOOLEAN .) ]

    LBRACKRBRACKS                  shift and go to state 286
    empty                          shift and go to state 193

state 364

    (389) FormalParameterList -> ReceiverParameter .
    (395) FormalParameters -> ReceiverParameter . COMMAFormalParameterS
    (392) COMMAFormalParameterS -> . COMMA FormalParameter COMMAFormalParameterS
    (393) COMMAFormalParameterS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 389 (FormalParameterList -> ReceiverParameter .)
    COMMA           shift and go to state 624

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAFormalParameterS          shift and go to state 623
    empty                          shift and go to state 625

state 365

    (390) FormalParameterList -> FormalParameters . COMMA LastFormalParameter

    COMMA           shift and go to state 626


state 366

    (391) FormalParameterList -> LastFormalParameter .

    RPAREN          reduce using rule 391 (FormalParameterList -> LastFormalParameter .)


state 367

    (129) AnnotationS -> Annotation . AnnotationS
    (130) AnnotationS -> Annotation .
    (400) VariableModifier -> Annotation .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for IDENT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 130 (AnnotationS -> Annotation .)
  ! shift/reduce conflict for ATRATE resolved as shift
    BOOLEAN         reduce using rule 130 (AnnotationS -> Annotation .)
    IDENT           reduce using rule 130 (AnnotationS -> Annotation .)
    BYTE            reduce using rule 130 (AnnotationS -> Annotation .)
    SHORT           reduce using rule 130 (AnnotationS -> Annotation .)
    INT             reduce using rule 130 (AnnotationS -> Annotation .)
    LONG            reduce using rule 130 (AnnotationS -> Annotation .)
    CHAR            reduce using rule 130 (AnnotationS -> Annotation .)
    FLOAT           reduce using rule 130 (AnnotationS -> Annotation .)
    DOUBLE          reduce using rule 130 (AnnotationS -> Annotation .)
    FINAL           reduce using rule 400 (VariableModifier -> Annotation .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! INT             [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 400 (VariableModifier -> Annotation .) ]

    Annotation                     shift and go to state 81
    AnnotationS                    shift and go to state 184
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 368

    (411) ReceiverParameter -> UnannType . ZooIDENTPERIOD THIS
    (407) ZooIDENTPERIOD -> . IDENT PERIOD
    (408) ZooIDENTPERIOD -> . empty
    (1) empty -> .

    IDENT           shift and go to state 612
    THIS            reduce using rule 1 (empty -> .)

    ZooIDENTPERIOD                 shift and go to state 627
    empty                          shift and go to state 628

state 369

    (394) FormalParameters -> FormalParameter . COMMAFormalParameterS
    (404) LastFormalParameter -> FormalParameter .
    (392) COMMAFormalParameterS -> . COMMA FormalParameter COMMAFormalParameterS
    (393) COMMAFormalParameterS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 404 (LastFormalParameter -> FormalParameter .)
    COMMA           shift and go to state 624

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAFormalParameterS          shift and go to state 629
    empty                          shift and go to state 625

state 370

    (402) LastFormalParameter -> VariableModifierS . UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (403) LastFormalParameter -> VariableModifierS . IDENT AnnotationS ELLIPSIS VariableDeclaratorId
    (405) LastFormalParameter -> VariableModifierS . UnannType ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> VariableModifierS . IDENT ELLIPSIS VariableDeclaratorId
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 631
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 630
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 371

    (350) UnannType -> UnannPrimitiveType .
    (362) UnannArrayType -> UnannPrimitiveType . Dims
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           reduce using rule 350 (UnannType -> UnannPrimitiveType .)
    THIS            reduce using rule 350 (UnannType -> UnannPrimitiveType .)
    ELLIPSIS        reduce using rule 350 (UnannType -> UnannPrimitiveType .)
    LBRACE          shift and go to state 237
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 350 (UnannType -> UnannPrimitiveType .) ]

    Dims                           shift and go to state 632
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 372

    (351) UnannType -> UnannReferenceType .

    IDENT           reduce using rule 351 (UnannType -> UnannReferenceType .)
    THIS            reduce using rule 351 (UnannType -> UnannReferenceType .)
    ELLIPSIS        reduce using rule 351 (UnannType -> UnannReferenceType .)
    ATRATE          reduce using rule 351 (UnannType -> UnannReferenceType .)


state 373

    (398) FormalParameter -> ZooVariableModifier . UnannType VariableDeclaratorId
    (399) FormalParameter -> ZooVariableModifier . IDENT VariableDeclaratorId
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 634
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 633
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 374

    (530) VariableModifierS -> VariableModifier . VariableModifierS
    (396) ZooVariableModifier -> VariableModifier .
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BYTE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHORT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LONG resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 1 (empty -> .)
    FINAL           shift and go to state 377
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! BOOLEAN         [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! BYTE            [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! SHORT           [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! INT             [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! LONG            [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! CHAR            [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! FLOAT           [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]
  ! DOUBLE          [ reduce using rule 396 (ZooVariableModifier -> VariableModifier .) ]

    VariableModifier               shift and go to state 517
    VariableModifierS              shift and go to state 635
    empty                          shift and go to state 636
    Annotation                     shift and go to state 637
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 375

    (354) UnannReferenceType -> UnannClassOrInterfaceType .
    (363) UnannArrayType -> UnannClassOrInterfaceType . Dims
    (359) UnannClassType -> UnannClassOrInterfaceType . PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> UnannClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           reduce using rule 354 (UnannReferenceType -> UnannClassOrInterfaceType .)
    THIS            reduce using rule 354 (UnannReferenceType -> UnannClassOrInterfaceType .)
    ELLIPSIS        reduce using rule 354 (UnannReferenceType -> UnannClassOrInterfaceType .)
    PERIOD          shift and go to state 639
    LBRACE          shift and go to state 237
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 354 (UnannReferenceType -> UnannClassOrInterfaceType .) ]

    Dims                           shift and go to state 638
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 376

    (355) UnannReferenceType -> UnannArrayType .

    IDENT           reduce using rule 355 (UnannReferenceType -> UnannArrayType .)
    THIS            reduce using rule 355 (UnannReferenceType -> UnannArrayType .)
    ELLIPSIS        reduce using rule 355 (UnannReferenceType -> UnannArrayType .)
    ATRATE          reduce using rule 355 (UnannReferenceType -> UnannArrayType .)


state 377

    (401) VariableModifier -> FINAL .

    FINAL           reduce using rule 401 (VariableModifier -> FINAL .)
    ATRATE          reduce using rule 401 (VariableModifier -> FINAL .)
    IDENT           reduce using rule 401 (VariableModifier -> FINAL .)
    BOOLEAN         reduce using rule 401 (VariableModifier -> FINAL .)
    BYTE            reduce using rule 401 (VariableModifier -> FINAL .)
    SHORT           reduce using rule 401 (VariableModifier -> FINAL .)
    INT             reduce using rule 401 (VariableModifier -> FINAL .)
    LONG            reduce using rule 401 (VariableModifier -> FINAL .)
    CHAR            reduce using rule 401 (VariableModifier -> FINAL .)
    FLOAT           reduce using rule 401 (VariableModifier -> FINAL .)
    DOUBLE          reduce using rule 401 (VariableModifier -> FINAL .)


state 378

    (356) UnannClassOrInterfaceType -> UnannClassType .
    (361) UnannInterfaceType -> UnannClassType .

  ! reduce/reduce conflict for PERIOD resolved using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for LBRACE resolved using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for ATRATE resolved using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for IDENT resolved using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for THIS resolved using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for ELLIPSIS resolved using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    PERIOD          reduce using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    LBRACE          reduce using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    ATRATE          reduce using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    IDENT           reduce using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    THIS            reduce using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    ELLIPSIS        reduce using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)

  ! PERIOD          [ reduce using rule 361 (UnannInterfaceType -> UnannClassType .) ]
  ! LBRACE          [ reduce using rule 361 (UnannInterfaceType -> UnannClassType .) ]
  ! ATRATE          [ reduce using rule 361 (UnannInterfaceType -> UnannClassType .) ]
  ! IDENT           [ reduce using rule 361 (UnannInterfaceType -> UnannClassType .) ]
  ! THIS            [ reduce using rule 361 (UnannInterfaceType -> UnannClassType .) ]
  ! ELLIPSIS        [ reduce using rule 361 (UnannInterfaceType -> UnannClassType .) ]


state 379

    (357) UnannClassOrInterfaceType -> UnannInterfaceType .

    PERIOD          reduce using rule 357 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    LBRACE          reduce using rule 357 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    ATRATE          reduce using rule 357 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    IDENT           reduce using rule 357 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    THIS            reduce using rule 357 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    ELLIPSIS        reduce using rule 357 (UnannClassOrInterfaceType -> UnannInterfaceType .)


state 380

    (261) CastExpression -> LPAREN PrimitiveType RPAREN . UnaryExpression
    (262) CastExpression -> LPAREN PrimitiveType RPAREN . IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 641
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    PrimitiveType                  shift and go to state 128
    UnaryExpression                shift and go to state 640
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    ReferenceType                  shift and go to state 109
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 381

    (263) CastExpression -> LPAREN ReferenceType AdditionalBoundS . RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> LPAREN ReferenceType AdditionalBoundS . RPAREN IDENT
    (265) CastExpression -> LPAREN ReferenceType AdditionalBoundS . RPAREN LambdaExpression

    RPAREN          shift and go to state 642


state 382

    (266) AdditionalBoundS -> AdditionalBound . AdditionalBoundS
    (266) AdditionalBoundS -> . AdditionalBound AdditionalBoundS
    (267) AdditionalBoundS -> . empty
    (505) AdditionalBound -> . AND ClassType
    (1) empty -> .

    AND             shift and go to state 384
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    AdditionalBound                shift and go to state 382
    AdditionalBoundS               shift and go to state 643
    empty                          shift and go to state 383

state 383

    (267) AdditionalBoundS -> empty .

    RPAREN          reduce using rule 267 (AdditionalBoundS -> empty .)
    COMMA           reduce using rule 267 (AdditionalBoundS -> empty .)
    GTR             reduce using rule 267 (AdditionalBoundS -> empty .)


state 384

    (505) AdditionalBound -> AND . ClassType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 79
    ATRATE          shift and go to state 13

    ClassType                      shift and go to state 644
    TypeVariable                   shift and go to state 78
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 385

    (108) PrimaryNoNewArray -> LPAREN Expression RPAREN .

    LBRACK          reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    PERIOD          reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON_SEP       reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUO             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    REM             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SHR_UN          reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LSS             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GTR             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INSTANCEOF      reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    AND             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    OR              reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUES            reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 108 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)


state 386

    (173) LambdaExpression -> LambdaParameters ARROW . LambdaBody
    (180) LambdaBody -> . Expression
    (181) LambdaBody -> . Block
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    LBRACE          shift and go to state 299
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    LambdaParameters               shift and go to state 206
    LambdaBody                     shift and go to state 645
    Expression                     shift and go to state 646
    Block                          shift and go to state 647
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 387

    (184) Assignment -> LeftHandSide AssignmentOperator . Expression
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    LeftHandSide                   shift and go to state 209
    Expression                     shift and go to state 648
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 388

    (189) AssignmentOperator -> ASSIGN .

    IDENT           reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    LPAREN          reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    PERIOD          reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    SUPER           reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    THIS            reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    NEW             reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    BOOL_LIT        reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    NULL_LIT        reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    DECIMAL_LIT     reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    HEX_LIT         reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    OCTAL_LIT       reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    BINARY_LIT      reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    STRING_LIT      reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    CHAR_LIT        reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    BOOLEAN         reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    VOID            reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    BYTE            reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    SHORT           reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    INT             reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    LONG            reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    CHAR            reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    FLOAT           reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    DOUBLE          reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    ATRATE          reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    ADD             reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    SUB             reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    INC             reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    DEC             reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    LNOT            reduce using rule 189 (AssignmentOperator -> ASSIGN .)
    NOT             reduce using rule 189 (AssignmentOperator -> ASSIGN .)


state 389

    (190) AssignmentOperator -> MUL_ASSIGN .

    IDENT           reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    LPAREN          reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    PERIOD          reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    SUPER           reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    THIS            reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    NEW             reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    BOOL_LIT        reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    NULL_LIT        reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    DECIMAL_LIT     reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    HEX_LIT         reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    OCTAL_LIT       reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    BINARY_LIT      reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    STRING_LIT      reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    CHAR_LIT        reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    BOOLEAN         reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    VOID            reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    BYTE            reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    SHORT           reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    INT             reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    LONG            reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    CHAR            reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT           reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    DOUBLE          reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    ATRATE          reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    ADD             reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    SUB             reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    INC             reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    DEC             reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    LNOT            reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)
    NOT             reduce using rule 190 (AssignmentOperator -> MUL_ASSIGN .)


state 390

    (191) AssignmentOperator -> QUO_ASSIGN .

    IDENT           reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    LPAREN          reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    PERIOD          reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    SUPER           reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    THIS            reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    NEW             reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    BOOL_LIT        reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    NULL_LIT        reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    DECIMAL_LIT     reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    HEX_LIT         reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    OCTAL_LIT       reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    BINARY_LIT      reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    STRING_LIT      reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    CHAR_LIT        reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    BOOLEAN         reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    VOID            reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    BYTE            reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    SHORT           reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    INT             reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    LONG            reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    CHAR            reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    FLOAT           reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    DOUBLE          reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    ATRATE          reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    ADD             reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    SUB             reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    INC             reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    DEC             reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    LNOT            reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)
    NOT             reduce using rule 191 (AssignmentOperator -> QUO_ASSIGN .)


state 391

    (192) AssignmentOperator -> REM_ASSIGN .

    IDENT           reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    LPAREN          reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    PERIOD          reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    SUPER           reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    THIS            reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    NEW             reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    BOOL_LIT        reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    NULL_LIT        reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    DECIMAL_LIT     reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    HEX_LIT         reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    OCTAL_LIT       reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    BINARY_LIT      reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    STRING_LIT      reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    CHAR_LIT        reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    BOOLEAN         reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    VOID            reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    BYTE            reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    SHORT           reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    INT             reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    LONG            reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    CHAR            reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    FLOAT           reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    DOUBLE          reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    ATRATE          reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    ADD             reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    SUB             reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    INC             reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    DEC             reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    LNOT            reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)
    NOT             reduce using rule 192 (AssignmentOperator -> REM_ASSIGN .)


state 392

    (193) AssignmentOperator -> ADD_ASSIGN .

    IDENT           reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    LPAREN          reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    PERIOD          reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    SUPER           reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    THIS            reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    NEW             reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    BOOL_LIT        reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    NULL_LIT        reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    DECIMAL_LIT     reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    HEX_LIT         reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    OCTAL_LIT       reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    BINARY_LIT      reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    STRING_LIT      reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    CHAR_LIT        reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    BOOLEAN         reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    VOID            reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    BYTE            reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    SHORT           reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    INT             reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    LONG            reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    CHAR            reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT           reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    DOUBLE          reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    ATRATE          reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    ADD             reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    SUB             reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    INC             reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    DEC             reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    LNOT            reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)
    NOT             reduce using rule 193 (AssignmentOperator -> ADD_ASSIGN .)


state 393

    (194) AssignmentOperator -> SUB_ASSIGN .

    IDENT           reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    LPAREN          reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    PERIOD          reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    SUPER           reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    THIS            reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    NEW             reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    BOOL_LIT        reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    NULL_LIT        reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    DECIMAL_LIT     reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    HEX_LIT         reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    OCTAL_LIT       reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    BINARY_LIT      reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    STRING_LIT      reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    CHAR_LIT        reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    BOOLEAN         reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    VOID            reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    BYTE            reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    SHORT           reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    INT             reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    LONG            reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    CHAR            reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT           reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    DOUBLE          reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    ATRATE          reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    ADD             reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    SUB             reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    INC             reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    DEC             reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    LNOT            reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)
    NOT             reduce using rule 194 (AssignmentOperator -> SUB_ASSIGN .)


state 394

    (195) AssignmentOperator -> SHL_ASSIGN .

    IDENT           reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    LPAREN          reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    PERIOD          reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    SUPER           reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    THIS            reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    NEW             reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    BOOL_LIT        reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    NULL_LIT        reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    DECIMAL_LIT     reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    HEX_LIT         reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    OCTAL_LIT       reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    BINARY_LIT      reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    STRING_LIT      reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    CHAR_LIT        reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    BOOLEAN         reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    VOID            reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    BYTE            reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    SHORT           reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    INT             reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    LONG            reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    CHAR            reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    FLOAT           reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    DOUBLE          reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    ATRATE          reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    ADD             reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    SUB             reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    INC             reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    DEC             reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    LNOT            reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)
    NOT             reduce using rule 195 (AssignmentOperator -> SHL_ASSIGN .)


state 395

    (196) AssignmentOperator -> SHR_ASSIGN .

    IDENT           reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    LPAREN          reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    PERIOD          reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    SUPER           reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    THIS            reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    NEW             reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    BOOL_LIT        reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    NULL_LIT        reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    DECIMAL_LIT     reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    HEX_LIT         reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    OCTAL_LIT       reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    BINARY_LIT      reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    STRING_LIT      reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    CHAR_LIT        reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    BOOLEAN         reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    VOID            reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    BYTE            reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    SHORT           reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    INT             reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    LONG            reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    CHAR            reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    FLOAT           reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    DOUBLE          reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    ATRATE          reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    ADD             reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    SUB             reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    INC             reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    DEC             reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    LNOT            reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)
    NOT             reduce using rule 196 (AssignmentOperator -> SHR_ASSIGN .)


state 396

    (197) AssignmentOperator -> SHR_UN_ASSIGN .

    IDENT           reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    LPAREN          reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    PERIOD          reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    SUPER           reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    THIS            reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    NEW             reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BOOL_LIT        reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    NULL_LIT        reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    DECIMAL_LIT     reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    HEX_LIT         reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    OCTAL_LIT       reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BINARY_LIT      reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    STRING_LIT      reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    CHAR_LIT        reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BOOLEAN         reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    VOID            reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BYTE            reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    SHORT           reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    INT             reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    LONG            reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    CHAR            reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    FLOAT           reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    DOUBLE          reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    ATRATE          reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    ADD             reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    SUB             reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    INC             reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    DEC             reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    LNOT            reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)
    NOT             reduce using rule 197 (AssignmentOperator -> SHR_UN_ASSIGN .)


state 397

    (198) AssignmentOperator -> AND_ASSIGN .

    IDENT           reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    LPAREN          reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    PERIOD          reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    SUPER           reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    THIS            reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    NEW             reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    BOOL_LIT        reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    NULL_LIT        reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    DECIMAL_LIT     reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    HEX_LIT         reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    OCTAL_LIT       reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    BINARY_LIT      reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    STRING_LIT      reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    CHAR_LIT        reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    BOOLEAN         reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    VOID            reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    BYTE            reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    SHORT           reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    INT             reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    LONG            reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    CHAR            reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT           reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    DOUBLE          reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    ATRATE          reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    ADD             reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    SUB             reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    INC             reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    DEC             reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    LNOT            reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)
    NOT             reduce using rule 198 (AssignmentOperator -> AND_ASSIGN .)


state 398

    (199) AssignmentOperator -> XOR_ASSIGN .

    IDENT           reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    LPAREN          reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    PERIOD          reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    SUPER           reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    THIS            reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    NEW             reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    BOOL_LIT        reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    NULL_LIT        reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    DECIMAL_LIT     reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    HEX_LIT         reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    OCTAL_LIT       reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    BINARY_LIT      reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    STRING_LIT      reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    CHAR_LIT        reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    BOOLEAN         reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    VOID            reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    BYTE            reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    SHORT           reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    INT             reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    LONG            reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    CHAR            reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT           reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    DOUBLE          reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    ATRATE          reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    ADD             reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    SUB             reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    INC             reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    DEC             reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    LNOT            reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)
    NOT             reduce using rule 199 (AssignmentOperator -> XOR_ASSIGN .)


state 399

    (200) AssignmentOperator -> OR_ASSIGN .

    IDENT           reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    LPAREN          reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    PERIOD          reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    SUPER           reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    THIS            reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    NEW             reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    BOOL_LIT        reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    NULL_LIT        reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    DECIMAL_LIT     reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    HEX_LIT         reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    OCTAL_LIT       reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    BINARY_LIT      reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    STRING_LIT      reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    CHAR_LIT        reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    BOOLEAN         reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    VOID            reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    BYTE            reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    SHORT           reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    INT             reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    LONG            reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    CHAR            reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT           reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    DOUBLE          reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    ATRATE          reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    ADD             reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    SUB             reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    INC             reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    DEC             reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    LNOT            reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)
    NOT             reduce using rule 200 (AssignmentOperator -> OR_ASSIGN .)


state 400

    (140) FieldAccess -> TypeName PERIOD . SUPER PERIOD IDENT
    (107) PrimaryNoNewArray -> TypeName PERIOD . THIS
    (145) MethodInvocation -> TypeName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> TypeName PERIOD . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (159) MethodReference -> TypeName PERIOD . SUPER COLON_SEP ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    SUPER           shift and go to state 352
    THIS            shift and go to state 351
    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 353
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 401

    (138) FieldAccess -> Primary PERIOD . IDENT
    (123) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (148) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 449
    NEW             shift and go to state 416
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    UnqualifiedClassInstanceCreationExpression shift and go to state 448
    ZooTypeArguments               shift and go to state 450
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 402

    (82) COMMAElementValuePairS -> COMMA ElementValuePair . COMMAElementValuePairS
    (82) COMMAElementValuePairS -> . COMMA ElementValuePair COMMAElementValuePairS
    (83) COMMAElementValuePairS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 219
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAElementValuePairS         shift and go to state 649
    empty                          shift and go to state 220

state 403

    (84) ElementValuePair -> IDENT . ASSIGN ElementValue

    ASSIGN          shift and go to state 228


state 404

    (202) ConditionalExpression -> ConditionalOrExpression QUES Expression . COLON ConditionalExpression
    (203) ConditionalExpression -> ConditionalOrExpression QUES Expression . COLON LambdaExpression

    COLON           shift and go to state 650


state 405

    (174) LambdaParameters -> IDENT .
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    ARROW           reduce using rule 174 (LambdaParameters -> IDENT .)
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    PERIOD          shift and go to state 231
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    AND             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    COLON           reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RBRACK          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    COMMA           reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RPAREN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RBRACE          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SEMICOLON       reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 406

    (205) ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .
    (207) ConditionalAndExpression -> ConditionalAndExpression . LAND InclusiveOrExpression

  ! shift/reduce conflict for LAND resolved as shift
    QUES            reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LOR             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    RPAREN          reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    COMMA           reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    RBRACE          reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    COLON           reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    RBRACK          reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    MUL             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    QUO             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    REM             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    ADD             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SUB             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SHL             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SHR             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SHR_UN          reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LSS             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    GTR             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LEQ             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    GEQ             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    INSTANCEOF      reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    EQL             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    NEQ             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    AND             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    XOR             reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    OR              reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SEMICOLON       reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LAND            shift and go to state 238

  ! LAND            [ reduce using rule 205 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .) ]


state 407

    (88) ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA . RBRACE

    RBRACE          shift and go to state 651


state 408

    (446) ZooCOMMA -> COMMA .

    RBRACE          reduce using rule 446 (ZooCOMMA -> COMMA .)
    SEMICOLON       reduce using rule 446 (ZooCOMMA -> COMMA .)


state 409

    (447) ZooCOMMA -> empty .

    RBRACE          reduce using rule 447 (ZooCOMMA -> empty .)
    SEMICOLON       reduce using rule 447 (ZooCOMMA -> empty .)


state 410

    (91) ElementValueList -> ElementValue COMMAElementValueS .

    COMMA           reduce using rule 91 (ElementValueList -> ElementValue COMMAElementValueS .)
    RBRACE          reduce using rule 91 (ElementValueList -> ElementValue COMMAElementValueS .)


state 411

    (92) COMMAElementValueS -> COMMA . ElementValue COMMAElementValueS
    (85) ElementValue -> . ConditionalExpression
    (86) ElementValue -> . ElementValueArrayInitializer
    (87) ElementValue -> . Annotation
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (88) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

    LBRACE          shift and go to state 100
    ATRATE          shift and go to state 13
    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    ElementValue                   shift and go to state 652
    ConditionalExpression          shift and go to state 95
    ElementValueArrayInitializer   shift and go to state 96
    Annotation                     shift and go to state 97
    ConditionalOrExpression        shift and go to state 99
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 102
    TypeName                       shift and go to state 89
    InclusiveOrExpression          shift and go to state 103
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 412

    (93) COMMAElementValueS -> empty .

    COMMA           reduce using rule 93 (COMMAElementValueS -> empty .)
    RBRACE          reduce using rule 93 (COMMAElementValueS -> empty .)


state 413

    (84) ElementValuePair -> IDENT ASSIGN ElementValue .

    COMMA           reduce using rule 84 (ElementValuePair -> IDENT ASSIGN ElementValue .)
    RPAREN          reduce using rule 84 (ElementValuePair -> IDENT ASSIGN ElementValue .)


state 414

    (122) ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .

    LBRACK          reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    PERIOD          reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    INC             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    DEC             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    MUL             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUO             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    REM             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    ADD             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    SUB             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHL             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    LSS             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    GTR             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    LEQ             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    GEQ             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    EQL             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    NEQ             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    AND             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    XOR             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    OR              reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    LAND            reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUES            reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    LOR             reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    RPAREN          reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    COMMA           reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACE          reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON           reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACK          reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 122 (ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression .)


state 415

    (147) MethodInvocation -> IDENT PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 653


state 416

    (124) UnqualifiedClassInstanceCreationExpression -> NEW . ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 280
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 417

    (142) ArrayAccess -> IDENT LBRACK Expression . RBRACK

    RBRACK          shift and go to state 654


state 418

    (144) MethodInvocation -> IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 655


state 419

    (434) ZooArgumentList -> ArgumentList .

    RPAREN          reduce using rule 434 (ZooArgumentList -> ArgumentList .)


state 420

    (435) ZooArgumentList -> empty .

    RPAREN          reduce using rule 435 (ZooArgumentList -> empty .)


state 421

    (151) ArgumentList -> Expression . COMMAExpressionS
    (152) COMMAExpressionS -> . COMMA Expression COMMAExpressionS
    (153) COMMAExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 657
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAExpressionS               shift and go to state 656
    empty                          shift and go to state 658

state 422

    (155) MethodReference -> IDENT COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 659


state 423

    (491) Dims -> AnnotationS LBRACE . RBRACE AnnotationSLBRACERBRACES

    RBRACE          shift and go to state 660


state 424

    (492) Dims -> LBRACE RBRACE . AnnotationSLBRACERBRACES
    (493) AnnotationSLBRACERBRACES -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (494) AnnotationSLBRACERBRACES -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (495) AnnotationSLBRACERBRACES -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 661
    COLON_SEP       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    ASSIGN          reduce using rule 1 (empty -> .)
    THROWS          reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationSLBRACERBRACES       shift and go to state 662
    AnnotationS                    shift and go to state 663
    empty                          shift and go to state 664
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 425

    (207) ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .
    (209) InclusiveOrExpression -> InclusiveOrExpression . OR ExclusiveOrExpression

  ! shift/reduce conflict for OR resolved as shift
    LAND            reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    QUES            reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    LOR             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    RPAREN          reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    COMMA           reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    RBRACE          reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    COLON           reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    MUL             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    QUO             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    REM             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    ADD             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SUB             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SHL             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SHR             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SHR_UN          reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    LSS             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    GTR             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    LEQ             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    GEQ             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    INSTANCEOF      reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    EQL             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    NEQ             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    AND             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    XOR             reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    RBRACK          reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SEMICOLON       reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    OR              shift and go to state 239

  ! OR              [ reduce using rule 207 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .) ]


state 426

    (209) InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .
    (211) ExclusiveOrExpression -> ExclusiveOrExpression . XOR AndExpression

  ! shift/reduce conflict for XOR resolved as shift
    OR              reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LAND            reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    QUES            reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LOR             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    RPAREN          reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    COMMA           reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    RBRACE          reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    COLON           reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    MUL             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    QUO             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    REM             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    ADD             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SUB             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SHL             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SHR             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SHR_UN          reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LSS             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    GTR             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LEQ             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    GEQ             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    INSTANCEOF      reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    EQL             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    NEQ             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    AND             reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    RBRACK          reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SEMICOLON       reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    XOR             shift and go to state 240

  ! XOR             [ reduce using rule 209 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .) ]


state 427

    (211) ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .
    (213) AndExpression -> AndExpression . AND EqualityExpression

  ! shift/reduce conflict for AND resolved as shift
    XOR             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    OR              reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LAND            reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    QUES            reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LOR             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    RPAREN          reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    COMMA           reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    RBRACE          reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    COLON           reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    MUL             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    QUO             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    REM             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    ADD             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SUB             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SHL             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SHR             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SHR_UN          reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LSS             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    GTR             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LEQ             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    GEQ             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    INSTANCEOF      reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    EQL             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    NEQ             reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    RBRACK          reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SEMICOLON       reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    AND             shift and go to state 241

  ! AND             [ reduce using rule 211 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .) ]


state 428

    (213) AndExpression -> AndExpression AND EqualityExpression .
    (215) EqualityExpression -> EqualityExpression . EQL RelationalExpression
    (216) EqualityExpression -> EqualityExpression . NEQ RelationalExpression

  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    AND             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    XOR             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    OR              reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    LAND            reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    QUES            reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    LOR             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    RPAREN          reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    COMMA           reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    RBRACE          reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    COLON           reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    MUL             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    QUO             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    REM             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    ADD             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    SUB             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    SHL             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    SHR             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    SHR_UN          reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    LSS             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    GTR             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    LEQ             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    GEQ             reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    INSTANCEOF      reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    RBRACK          reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    SEMICOLON       reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .)
    EQL             shift and go to state 242
    NEQ             shift and go to state 243

  ! EQL             [ reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .) ]
  ! NEQ             [ reduce using rule 213 (AndExpression -> AndExpression AND EqualityExpression .) ]


state 429

    (215) EqualityExpression -> EqualityExpression EQL RelationalExpression .
    (218) RelationalExpression -> RelationalExpression . LSS ShiftExpression
    (219) RelationalExpression -> RelationalExpression . GTR ShiftExpression
    (220) RelationalExpression -> RelationalExpression . LEQ ShiftExpression
    (221) RelationalExpression -> RelationalExpression . GEQ ShiftExpression
    (222) RelationalExpression -> RelationalExpression . INSTANCEOF ReferenceType

  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for INSTANCEOF resolved as shift
    EQL             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    NEQ             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    AND             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    XOR             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    OR              reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    LAND            reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    QUES            reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    LOR             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    RPAREN          reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    COMMA           reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    RBRACE          reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    COLON           reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    MUL             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    QUO             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    REM             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    ADD             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SUB             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SHL             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SHR             reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SHR_UN          reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    RBRACK          reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SEMICOLON       reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    LSS             shift and go to state 244
    GTR             shift and go to state 245
    LEQ             shift and go to state 246
    GEQ             shift and go to state 247
    INSTANCEOF      shift and go to state 248

  ! LSS             [ reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! GTR             [ reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! LEQ             [ reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! GEQ             [ reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! INSTANCEOF      [ reduce using rule 215 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]


state 430

    (216) EqualityExpression -> EqualityExpression NEQ RelationalExpression .
    (218) RelationalExpression -> RelationalExpression . LSS ShiftExpression
    (219) RelationalExpression -> RelationalExpression . GTR ShiftExpression
    (220) RelationalExpression -> RelationalExpression . LEQ ShiftExpression
    (221) RelationalExpression -> RelationalExpression . GEQ ShiftExpression
    (222) RelationalExpression -> RelationalExpression . INSTANCEOF ReferenceType

  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for INSTANCEOF resolved as shift
    EQL             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    NEQ             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    AND             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    XOR             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    OR              reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    LAND            reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    QUES            reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    LOR             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    RPAREN          reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    COMMA           reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    RBRACE          reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    COLON           reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    MUL             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    QUO             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    REM             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    ADD             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SUB             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SHL             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SHR             reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SHR_UN          reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    RBRACK          reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SEMICOLON       reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    LSS             shift and go to state 244
    GTR             shift and go to state 245
    LEQ             shift and go to state 246
    GEQ             shift and go to state 247
    INSTANCEOF      shift and go to state 248

  ! LSS             [ reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! GTR             [ reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! LEQ             [ reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! GEQ             [ reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! INSTANCEOF      [ reduce using rule 216 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]


state 431

    (218) RelationalExpression -> RelationalExpression LSS ShiftExpression .
    (224) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (225) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (226) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    GTR             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    LEQ             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    GEQ             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    INSTANCEOF      reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    EQL             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    NEQ             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    AND             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    XOR             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    OR              reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    LAND            reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    QUES            reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    LOR             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    RPAREN          reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    COMMA           reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    RBRACE          reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    COLON           reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    MUL             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    QUO             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    REM             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    ADD             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    SUB             reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    RBRACK          reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    SEMICOLON       reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    SHL             shift and go to state 249
    SHR             shift and go to state 250
    SHR_UN          shift and go to state 251

  ! SHL             [ reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .) ]
  ! SHR             [ reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 218 (RelationalExpression -> RelationalExpression LSS ShiftExpression .) ]


state 432

    (219) RelationalExpression -> RelationalExpression GTR ShiftExpression .
    (224) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (225) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (226) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    GTR             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    LEQ             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    GEQ             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    INSTANCEOF      reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    EQL             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    NEQ             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    AND             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    XOR             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    OR              reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    LAND            reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    QUES            reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    LOR             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    RPAREN          reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    COMMA           reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    RBRACE          reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    COLON           reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    MUL             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    QUO             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    REM             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    ADD             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    SUB             reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    RBRACK          reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    SEMICOLON       reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    SHL             shift and go to state 249
    SHR             shift and go to state 250
    SHR_UN          shift and go to state 251

  ! SHL             [ reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .) ]
  ! SHR             [ reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 219 (RelationalExpression -> RelationalExpression GTR ShiftExpression .) ]


state 433

    (220) RelationalExpression -> RelationalExpression LEQ ShiftExpression .
    (224) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (225) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (226) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    GTR             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    LEQ             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    GEQ             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    INSTANCEOF      reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    EQL             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    NEQ             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    AND             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    XOR             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    OR              reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    LAND            reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    QUES            reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    LOR             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    RPAREN          reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    COMMA           reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    RBRACE          reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    COLON           reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    MUL             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    QUO             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    REM             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    ADD             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    SUB             reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    RBRACK          reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    SEMICOLON       reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    SHL             shift and go to state 249
    SHR             shift and go to state 250
    SHR_UN          shift and go to state 251

  ! SHL             [ reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .) ]
  ! SHR             [ reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 220 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .) ]


state 434

    (221) RelationalExpression -> RelationalExpression GEQ ShiftExpression .
    (224) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (225) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (226) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    GTR             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    LEQ             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    GEQ             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    INSTANCEOF      reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    EQL             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    NEQ             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    AND             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    XOR             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    OR              reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    LAND            reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    QUES            reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    LOR             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    RPAREN          reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    COMMA           reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    RBRACE          reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    COLON           reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    MUL             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    QUO             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    REM             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    ADD             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    SUB             reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    RBRACK          reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    SEMICOLON       reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    SHL             shift and go to state 249
    SHR             shift and go to state 250
    SHR_UN          shift and go to state 251

  ! SHL             [ reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .) ]
  ! SHR             [ reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 221 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .) ]


state 435

    (222) RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .

    LSS             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    GTR             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    LEQ             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    GEQ             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    INSTANCEOF      reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    EQL             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    NEQ             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    AND             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    XOR             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    OR              reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    LAND            reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    QUES            reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    LOR             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    RPAREN          reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    COMMA           reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    RBRACE          reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    COLON           reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    MUL             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    QUO             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    REM             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    ADD             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SUB             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SHL             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SHR             reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SHR_UN          reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    RBRACK          reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SEMICOLON       reduce using rule 222 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)


state 436

    (224) ShiftExpression -> ShiftExpression SHL AdditiveExpression .
    (228) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (229) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    SHR             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    SHR_UN          reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LSS             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    GTR             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LEQ             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    GEQ             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    INSTANCEOF      reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    EQL             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    NEQ             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    AND             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    XOR             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    OR              reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LAND            reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    QUES            reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LOR             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    RPAREN          reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    COMMA           reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    RBRACE          reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    COLON           reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    MUL             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    QUO             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    REM             reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    RBRACK          reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    SEMICOLON       reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    ADD             shift and go to state 253
    SUB             shift and go to state 254

  ! ADD             [ reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .) ]
  ! SUB             [ reduce using rule 224 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .) ]


state 437

    (225) ShiftExpression -> ShiftExpression SHR AdditiveExpression .
    (228) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (229) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    SHR             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    SHR_UN          reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LSS             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    GTR             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LEQ             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    GEQ             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    INSTANCEOF      reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    EQL             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    NEQ             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    AND             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    XOR             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    OR              reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LAND            reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    QUES            reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LOR             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    RPAREN          reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    COMMA           reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    RBRACE          reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    COLON           reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    MUL             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    QUO             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    REM             reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    RBRACK          reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    SEMICOLON       reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    ADD             shift and go to state 253
    SUB             shift and go to state 254

  ! ADD             [ reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .) ]
  ! SUB             [ reduce using rule 225 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .) ]


state 438

    (226) ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .
    (228) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (229) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    SHR             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    SHR_UN          reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LSS             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    GTR             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LEQ             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    GEQ             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    INSTANCEOF      reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    EQL             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    NEQ             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    AND             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    XOR             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    OR              reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LAND            reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    QUES            reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LOR             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    RPAREN          reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    COMMA           reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    RBRACE          reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    COLON           reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    MUL             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    QUO             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    REM             reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    RBRACK          reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    SEMICOLON       reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    ADD             shift and go to state 253
    SUB             shift and go to state 254

  ! ADD             [ reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .) ]
  ! SUB             [ reduce using rule 226 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .) ]


state 439

    (156) MethodReference -> ReferenceType COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 665


state 440

    (228) AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .
    (232) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (233) MultiplicativeExpression -> MultiplicativeExpression . QUO UnaryExpression
    (234) MultiplicativeExpression -> MultiplicativeExpression . REM UnaryExpression
    (235) MultiplicativeExpression -> MultiplicativeExpression . MUL IDENT
    (236) MultiplicativeExpression -> MultiplicativeExpression . QUO IDENT
    (237) MultiplicativeExpression -> MultiplicativeExpression . REM IDENT

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
    ADD             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SUB             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SHL             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SHR             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SHR_UN          reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LSS             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GTR             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LEQ             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GEQ             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    INSTANCEOF      reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    EQL             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    NEQ             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    AND             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    XOR             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    OR              reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LAND            reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    QUES            reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LOR             reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RPAREN          reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COMMA           reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACE          reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COLON           reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACK          reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SEMICOLON       reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    MUL             shift and go to state 255
    QUO             shift and go to state 256
    REM             shift and go to state 257

  ! MUL             [ reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .) ]
  ! QUO             [ reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .) ]
  ! REM             [ reduce using rule 228 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .) ]


state 441

    (229) AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .
    (232) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (233) MultiplicativeExpression -> MultiplicativeExpression . QUO UnaryExpression
    (234) MultiplicativeExpression -> MultiplicativeExpression . REM UnaryExpression
    (235) MultiplicativeExpression -> MultiplicativeExpression . MUL IDENT
    (236) MultiplicativeExpression -> MultiplicativeExpression . QUO IDENT
    (237) MultiplicativeExpression -> MultiplicativeExpression . REM IDENT

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
    ADD             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SUB             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SHL             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SHR             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SHR_UN          reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LSS             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GTR             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LEQ             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GEQ             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    INSTANCEOF      reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    EQL             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    NEQ             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    AND             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    XOR             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    OR              reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LAND            reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    QUES            reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LOR             reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RPAREN          reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COMMA           reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACE          reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COLON           reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACK          reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SEMICOLON       reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    MUL             shift and go to state 255
    QUO             shift and go to state 256
    REM             shift and go to state 257

  ! MUL             [ reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .) ]
  ! QUO             [ reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .) ]
  ! REM             [ reduce using rule 229 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .) ]


state 442

    (232) MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .

    MUL             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    QUO             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    REM             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    ADD             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SUB             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SHL             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SHR             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SHR_UN          reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LSS             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GTR             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LEQ             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GEQ             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    INSTANCEOF      reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    EQL             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    NEQ             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    AND             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    XOR             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    OR              reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LAND            reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    QUES            reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LOR             reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RPAREN          reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COMMA           reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACE          reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COLON           reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACK          reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SEMICOLON       reduce using rule 232 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)


state 443

    (235) MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    QUO             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    REM             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    ADD             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    SUB             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    SHL             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    SHR             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    SHR_UN          reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    GTR             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    LEQ             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    GEQ             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    INSTANCEOF      reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    EQL             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    NEQ             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    AND             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    XOR             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    OR              reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    LAND            reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    QUES            reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    LOR             reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    RPAREN          reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    COMMA           reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    RBRACE          reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    COLON           reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    RBRACK          reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    SEMICOLON       reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 235 (MultiplicativeExpression -> MultiplicativeExpression MUL IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 444

    (233) MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .

    MUL             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    QUO             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    REM             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    ADD             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SUB             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SHL             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SHR             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SHR_UN          reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LSS             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    GTR             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LEQ             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    GEQ             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    INSTANCEOF      reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    EQL             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    NEQ             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    AND             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    XOR             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    OR              reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LAND            reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    QUES            reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LOR             reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    RPAREN          reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    COMMA           reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    RBRACE          reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    COLON           reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    RBRACK          reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SEMICOLON       reduce using rule 233 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)


state 445

    (236) MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    QUO             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    REM             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    ADD             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    SUB             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    SHL             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    SHR             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    SHR_UN          reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    GTR             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    LEQ             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    GEQ             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    INSTANCEOF      reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    EQL             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    NEQ             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    AND             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    XOR             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    OR              reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    LAND            reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    QUES            reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    LOR             reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    RPAREN          reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    COMMA           reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    RBRACE          reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    COLON           reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    RBRACK          reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    SEMICOLON       reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 236 (MultiplicativeExpression -> MultiplicativeExpression QUO IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 446

    (234) MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .

    MUL             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    QUO             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    REM             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    ADD             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SUB             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SHL             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SHR             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SHR_UN          reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LSS             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    GTR             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LEQ             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    GEQ             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    INSTANCEOF      reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    EQL             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    NEQ             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    AND             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    XOR             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    OR              reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LAND            reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    QUES            reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LOR             reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    RPAREN          reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    COMMA           reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    RBRACE          reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    COLON           reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    RBRACK          reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SEMICOLON       reduce using rule 234 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)


state 447

    (237) MultiplicativeExpression -> MultiplicativeExpression REM IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    QUO             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    REM             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    ADD             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    SUB             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    SHL             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    SHR             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    SHR_UN          reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    GTR             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    LEQ             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    GEQ             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    INSTANCEOF      reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    EQL             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    NEQ             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    AND             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    XOR             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    OR              reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    LAND            reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    QUES            reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    LOR             reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    RPAREN          reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    COMMA           reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    RBRACE          reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    COLON           reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    RBRACK          reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    SEMICOLON       reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 237 (MultiplicativeExpression -> MultiplicativeExpression REM IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 448

    (123) ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .

    LBRACK          reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    PERIOD          reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    INC             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    DEC             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    MUL             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUO             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    REM             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    ADD             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SUB             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHL             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LSS             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    GTR             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LEQ             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    GEQ             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    EQL             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    NEQ             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    AND             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    XOR             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    OR              reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LAND            reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUES            reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LOR             reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    RPAREN          reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    COMMA           reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACE          reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON           reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACK          reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 123 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)


state 449

    (138) FieldAccess -> Primary PERIOD IDENT .

    LBRACK          reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    PERIOD          reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    COLON_SEP       reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    INC             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    DEC             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    MUL             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    QUO             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    REM             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    ADD             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SUB             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SHL             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SHR             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SHR_UN          reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    LSS             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    GTR             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    LEQ             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    GEQ             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    INSTANCEOF      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    EQL             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    NEQ             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    AND             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    XOR             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    OR              reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    LAND            reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    QUES            reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    LOR             reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    RPAREN          reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    ASSIGN          reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    COMMA           reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    RBRACE          reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    COLON           reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    RBRACK          reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)
    SEMICOLON       reduce using rule 138 (FieldAccess -> Primary PERIOD IDENT .)


state 450

    (148) MethodInvocation -> Primary PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 666


state 451

    (157) MethodReference -> Primary COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 667


state 452

    (121) ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .

    LBRACK          reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    PERIOD          reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    INC             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    DEC             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    MUL             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUO             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    REM             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    ADD             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SUB             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHL             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LSS             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    GTR             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LEQ             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    GEQ             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    EQL             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    NEQ             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    AND             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    XOR             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    OR              reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LAND            reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUES            reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LOR             reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    RPAREN          reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    COMMA           reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACE          reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON           reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACK          reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 121 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)


state 453

    (146) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 668


state 454

    (141) ArrayAccess -> ExpressionName LBRACK Expression . RBRACK

    RBRACK          shift and go to state 669


state 455

    (154) MethodReference -> ExpressionName COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 670


state 456

    (143) ArrayAccess -> PrimaryNoNewArray LBRACK Expression . RBRACK

    RBRACK          shift and go to state 671


state 457

    (162) ArrayCreationExpression -> NEW PrimitiveType DimExprs . ZooDims
    (65) ZooDims -> . Dims
    (66) ZooDims -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          shift and go to state 237
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 672
    Dims                           shift and go to state 673
    empty                          shift and go to state 674
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 458

    (164) ArrayCreationExpression -> NEW PrimitiveType Dims . ArrayInitializer
    (96) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE

    LBRACE          shift and go to state 676

    ArrayInitializer               shift and go to state 675

state 459

    (166) DimExprs -> DimExpr . DimExprS
    (167) DimExprS -> . DimExpr DimExprS
    (168) DimExprS -> . empty
    (169) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (170) DimExpr -> . LBRACK Expression RBRACK
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACK          shift and go to state 461
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    DimExpr                        shift and go to state 677
    DimExprS                       shift and go to state 678
    empty                          shift and go to state 679
    AnnotationS                    shift and go to state 680
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 460

    (491) Dims -> AnnotationS . LBRACE RBRACE AnnotationSLBRACERBRACES
    (169) DimExpr -> AnnotationS . LBRACK Expression RBRACK

    LBRACE          shift and go to state 423
    LBRACK          shift and go to state 681


state 461

    (170) DimExpr -> LBRACK . Expression RBRACK
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 682
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 462

    (163) ArrayCreationExpression -> NEW ClassType DimExprs . ZooDims
    (65) ZooDims -> . Dims
    (66) ZooDims -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          shift and go to state 237
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 683
    Dims                           shift and go to state 673
    empty                          shift and go to state 674
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 463

    (165) ArrayCreationExpression -> NEW ClassType Dims . ArrayInitializer
    (96) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE

    LBRACE          shift and go to state 676

    ArrayInitializer               shift and go to state 684

state 464

    (124) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate . LPAREN ZooArgumentList RPAREN ZooClassBody

    LPAREN          shift and go to state 685


state 465

    (127) ClassOrInterfaceTypeToInstantiate -> AnnotationS . IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond

    IDENT           shift and go to state 686


state 466

    (128) ClassOrInterfaceTypeToInstantiate -> IDENT . PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
    (133) PERIODAnnotationSIDENTS -> . PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
    (134) PERIODAnnotationSIDENTS -> . PERIOD IDENT PERIODAnnotationSIDENTS
    (135) PERIODAnnotationSIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 688
    LSS             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)

    PERIODAnnotationSIDENTS        shift and go to state 687
    empty                          shift and go to state 689

state 467

    (160) MethodReference -> ClassType COLON_SEP ZooTypeArguments . NEW

    NEW             shift and go to state 690


state 468

    (115) ClassLiteral -> NumericType LBRACKRBRACKS PERIOD . CLASS

    CLASS           shift and go to state 691


state 469

    (116) ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD . CLASS

    CLASS           shift and go to state 692


state 470

    (117) ClassLiteral -> VOID PERIOD CLASS .

    LBRACK          reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    PERIOD          reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    COLON_SEP       reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    INC             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    DEC             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    MUL             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    QUO             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    REM             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    ADD             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    SUB             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    SHL             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    SHR             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    SHR_UN          reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    LSS             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    GTR             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    LEQ             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    GEQ             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    INSTANCEOF      reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    EQL             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    NEQ             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    AND             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    XOR             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    OR              reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    LAND            reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    QUES            reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    LOR             reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    RPAREN          reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    COMMA           reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    RBRACE          reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    COLON           reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    RBRACK          reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)
    SEMICOLON       reduce using rule 117 (ClassLiteral -> VOID PERIOD CLASS .)


state 471

    (139) FieldAccess -> SUPER PERIOD IDENT .

    LBRACK          reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    PERIOD          reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    COLON_SEP       reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    INC             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    DEC             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    MUL             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    QUO             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    REM             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    ADD             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SUB             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SHL             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR_UN          reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    LSS             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    GTR             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    LEQ             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    GEQ             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    INSTANCEOF      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    EQL             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    NEQ             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    AND             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    XOR             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    OR              reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    LAND            reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    QUES            reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    LOR             reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    RPAREN          reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    ASSIGN          reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    COMMA           reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    RBRACE          reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    COLON           reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    RBRACK          reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)
    SEMICOLON       reduce using rule 139 (FieldAccess -> SUPER PERIOD IDENT .)


state 472

    (149) MethodInvocation -> SUPER PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 693


state 473

    (158) MethodReference -> SUPER COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 694


state 474

    (161) MethodReference -> ArrayType COLON_SEP NEW .

    LBRACK          reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    PERIOD          reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    COLON_SEP       reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    INC             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    DEC             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    MUL             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    QUO             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    REM             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    ADD             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    SUB             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    SHL             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    SHR             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    SHR_UN          reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    LSS             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    GTR             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    LEQ             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    GEQ             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    INSTANCEOF      reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    EQL             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    NEQ             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    AND             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    XOR             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    OR              reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    LAND            reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    QUES            reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    LOR             reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    RPAREN          reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    COMMA           reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    RBRACE          reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    COLON           reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    RBRACK          reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)
    SEMICOLON       reduce using rule 161 (MethodReference -> ArrayType COLON_SEP NEW .)


state 475

    (308) TypeParameters -> LSS TypeParameterList . GTR

    GTR             shift and go to state 695


state 476

    (311) TypeParameterList -> TypeParameter . COMMMATypeParameterS
    (309) COMMMATypeParameterS -> . COMMA TypeParameter COMMMATypeParameterS
    (310) COMMMATypeParameterS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 697
    GTR             reduce using rule 1 (empty -> .)

    COMMMATypeParameterS           shift and go to state 696
    empty                          shift and go to state 698

state 477

    (496) TypeParameter -> TypeParameterModifierS . IDENT ZooTypeBound

    IDENT           shift and go to state 699


state 478

    (497) TypeParameterModifierS -> TypeParameterModifier . TypeParameterModifierS
    (497) TypeParameterModifierS -> . TypeParameterModifier TypeParameterModifierS
    (498) TypeParameterModifierS -> . empty
    (501) TypeParameterModifier -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeParameterModifier          shift and go to state 478
    TypeParameterModifierS         shift and go to state 700
    empty                          shift and go to state 479
    Annotation                     shift and go to state 480
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 479

    (498) TypeParameterModifierS -> empty .

    IDENT           reduce using rule 498 (TypeParameterModifierS -> empty .)


state 480

    (501) TypeParameterModifier -> Annotation .

    ATRATE          reduce using rule 501 (TypeParameterModifier -> Annotation .)
    IDENT           reduce using rule 501 (TypeParameterModifier -> Annotation .)


state 481

    (443) EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .

    SEMICOLON       reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FINAL           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    EXTENDS         reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    PUBLIC          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    PROTECTED       reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    PRIVATE         reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ABSTRACT        reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    STATIC          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    STRICTFP        reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ATRATE          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CLASS           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ENUM            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    IMPLEMENTS      reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LBRACE          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    INTERFACE       reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    $end            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    TRANSIENT       reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    VOLATILE        reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SYNCHRONIZED    reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    NATIVE          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LSS             reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    IDENT           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BOOLEAN         reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BYTE            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SHORT           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    INT             reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LONG            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CHAR            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FLOAT           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DOUBLE          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    VOID            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    RBRACE          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    IF              reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    WHILE           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ASSERT          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SWITCH          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DO              reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BREAK           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CONTINUE        reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    RETURN          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    THROW           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    TRY             reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FOR             reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    INC             reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DEC             reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SUPER           reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    PERIOD          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    NEW             reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    THIS            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LPAREN          reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BOOL_LIT        reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    NULL_LIT        reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DECIMAL_LIT     reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    HEX_LIT         reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    OCTAL_LIT       reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BINARY_LIT      reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FLOAT_DEC_LIT   reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FLOAT_HEX_LIT   reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    STRING_LIT      reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CHAR_LIT        reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CASE            reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DEFAULT         reduce using rule 443 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)


state 482

    (450) EnumBody -> LBRACE . ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE
    (444) ZooEnumConstantList -> . EnumConstantList
    (445) ZooEnumConstantList -> . empty
    (453) EnumConstantList -> . EnumConstant COMMAEnumConstantS
    (1) empty -> .
    (454) EnumConstant -> . EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody
    (455) EnumConstantModifierS -> . EnumConstantModifier EnumConstantModifierS
    (456) EnumConstantModifierS -> . empty
    (461) EnumConstantModifier -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooEnumConstantList            shift and go to state 701
    EnumConstantList               shift and go to state 702
    empty                          shift and go to state 703
    EnumConstant                   shift and go to state 704
    EnumConstantModifierS          shift and go to state 705
    EnumConstantModifier           shift and go to state 706
    Annotation                     shift and go to state 707
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 483

    (518) Block -> LBRACE ZooBlockStatements . RBRACE

    RBRACE          shift and go to state 708


state 484

    (519) ZooBlockStatements -> BlockStatements .

    RBRACE          reduce using rule 519 (ZooBlockStatements -> BlockStatements .)


state 485

    (520) ZooBlockStatements -> empty .
    (531) VariableModifierS -> empty .
    (442) ClassModifierS -> empty .
    (301) ZooSuperClass -> empty .

    RBRACE          reduce using rule 520 (ZooBlockStatements -> empty .)
    IDENT           reduce using rule 531 (VariableModifierS -> empty .)
    BOOLEAN         reduce using rule 531 (VariableModifierS -> empty .)
    BYTE            reduce using rule 531 (VariableModifierS -> empty .)
    SHORT           reduce using rule 531 (VariableModifierS -> empty .)
    INT             reduce using rule 531 (VariableModifierS -> empty .)
    LONG            reduce using rule 531 (VariableModifierS -> empty .)
    CHAR            reduce using rule 531 (VariableModifierS -> empty .)
    FLOAT           reduce using rule 531 (VariableModifierS -> empty .)
    DOUBLE          reduce using rule 531 (VariableModifierS -> empty .)
    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 301 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 301 (ZooSuperClass -> empty .)


state 486

    (521) BlockStatements -> BlockStatement . BlockStatementS
    (522) BlockStatementS -> . BlockStatement BlockStatementS
    (523) BlockStatementS -> . empty
    (524) BlockStatement -> . LocalVariableDeclarationStatement
    (525) BlockStatement -> . ClassDeclaration
    (526) BlockStatement -> . Statement
    (1) empty -> .
    (527) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (528) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> . VariableModifierS IDENT VariableDeclaratorList
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    FINAL           shift and go to state 531
    EXTENDS         shift and go to state 45
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    ATRATE          shift and go to state 13
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    BlockStatement                 shift and go to state 709
    BlockStatementS                shift and go to state 710
    empty                          shift and go to state 711
    LocalVariableDeclarationStatement shift and go to state 487
    ClassDeclaration               shift and go to state 488
    Statement                      shift and go to state 489
    LocalVariableDeclaration       shift and go to state 490
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    VariableModifierS              shift and go to state 498
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    VariableModifier               shift and go to state 517
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Annotation                     shift and go to state 530
    InterfaceModifier              shift and go to state 73
    ClassType                      shift and go to state 140
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 487

    (524) BlockStatement -> LocalVariableDeclarationStatement .

    IDENT           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    IF              reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    WHILE           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    LBRACE          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    SEMICOLON       reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    ASSERT          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    SWITCH          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    DO              reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    BREAK           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    CONTINUE        reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    RETURN          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    SYNCHRONIZED    reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    THROW           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    TRY             reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    FOR             reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    FINAL           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    EXTENDS         reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    PUBLIC          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    PROTECTED       reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    PRIVATE         reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    ABSTRACT        reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    STATIC          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    STRICTFP        reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    INC             reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEC             reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    SUPER           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    ATRATE          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    PERIOD          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    NEW             reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    THIS            reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    LPAREN          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOL_LIT        reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    NULL_LIT        reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    DECIMAL_LIT     reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    HEX_LIT         reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    OCTAL_LIT       reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    BINARY_LIT      reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT_DEC_LIT   reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT_HEX_LIT   reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    STRING_LIT      reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR_LIT        reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOLEAN         reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    VOID            reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    BYTE            reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    SHORT           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    INT             reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    LONG            reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR            reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    DOUBLE          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    CLASS           reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    ENUM            reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    IMPLEMENTS      reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    RBRACE          reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    CASE            reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEFAULT         reduce using rule 524 (BlockStatement -> LocalVariableDeclarationStatement .)


state 488

    (525) BlockStatement -> ClassDeclaration .

    IDENT           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    IF              reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    WHILE           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    LBRACE          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    SEMICOLON       reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    ASSERT          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    SWITCH          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    DO              reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    BREAK           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    CONTINUE        reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    RETURN          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    SYNCHRONIZED    reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    THROW           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    TRY             reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    FOR             reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    FINAL           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    EXTENDS         reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    PUBLIC          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    PROTECTED       reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    PRIVATE         reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    ABSTRACT        reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    STATIC          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    STRICTFP        reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    INC             reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    DEC             reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    SUPER           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    ATRATE          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    PERIOD          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    NEW             reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    THIS            reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    LPAREN          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    BOOL_LIT        reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    NULL_LIT        reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    DECIMAL_LIT     reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    HEX_LIT         reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    OCTAL_LIT       reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    BINARY_LIT      reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    FLOAT_DEC_LIT   reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    FLOAT_HEX_LIT   reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    STRING_LIT      reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    CHAR_LIT        reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    BOOLEAN         reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    VOID            reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    BYTE            reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    SHORT           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    INT             reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    LONG            reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    CHAR            reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    FLOAT           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    DOUBLE          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    CLASS           reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    ENUM            reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    RBRACE          reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    CASE            reduce using rule 525 (BlockStatement -> ClassDeclaration .)
    DEFAULT         reduce using rule 525 (BlockStatement -> ClassDeclaration .)


state 489

    (526) BlockStatement -> Statement .

    IDENT           reduce using rule 526 (BlockStatement -> Statement .)
    IF              reduce using rule 526 (BlockStatement -> Statement .)
    WHILE           reduce using rule 526 (BlockStatement -> Statement .)
    LBRACE          reduce using rule 526 (BlockStatement -> Statement .)
    SEMICOLON       reduce using rule 526 (BlockStatement -> Statement .)
    ASSERT          reduce using rule 526 (BlockStatement -> Statement .)
    SWITCH          reduce using rule 526 (BlockStatement -> Statement .)
    DO              reduce using rule 526 (BlockStatement -> Statement .)
    BREAK           reduce using rule 526 (BlockStatement -> Statement .)
    CONTINUE        reduce using rule 526 (BlockStatement -> Statement .)
    RETURN          reduce using rule 526 (BlockStatement -> Statement .)
    SYNCHRONIZED    reduce using rule 526 (BlockStatement -> Statement .)
    THROW           reduce using rule 526 (BlockStatement -> Statement .)
    TRY             reduce using rule 526 (BlockStatement -> Statement .)
    FOR             reduce using rule 526 (BlockStatement -> Statement .)
    FINAL           reduce using rule 526 (BlockStatement -> Statement .)
    EXTENDS         reduce using rule 526 (BlockStatement -> Statement .)
    PUBLIC          reduce using rule 526 (BlockStatement -> Statement .)
    PROTECTED       reduce using rule 526 (BlockStatement -> Statement .)
    PRIVATE         reduce using rule 526 (BlockStatement -> Statement .)
    ABSTRACT        reduce using rule 526 (BlockStatement -> Statement .)
    STATIC          reduce using rule 526 (BlockStatement -> Statement .)
    STRICTFP        reduce using rule 526 (BlockStatement -> Statement .)
    INC             reduce using rule 526 (BlockStatement -> Statement .)
    DEC             reduce using rule 526 (BlockStatement -> Statement .)
    SUPER           reduce using rule 526 (BlockStatement -> Statement .)
    ATRATE          reduce using rule 526 (BlockStatement -> Statement .)
    PERIOD          reduce using rule 526 (BlockStatement -> Statement .)
    NEW             reduce using rule 526 (BlockStatement -> Statement .)
    THIS            reduce using rule 526 (BlockStatement -> Statement .)
    LPAREN          reduce using rule 526 (BlockStatement -> Statement .)
    BOOL_LIT        reduce using rule 526 (BlockStatement -> Statement .)
    NULL_LIT        reduce using rule 526 (BlockStatement -> Statement .)
    DECIMAL_LIT     reduce using rule 526 (BlockStatement -> Statement .)
    HEX_LIT         reduce using rule 526 (BlockStatement -> Statement .)
    OCTAL_LIT       reduce using rule 526 (BlockStatement -> Statement .)
    BINARY_LIT      reduce using rule 526 (BlockStatement -> Statement .)
    FLOAT_DEC_LIT   reduce using rule 526 (BlockStatement -> Statement .)
    FLOAT_HEX_LIT   reduce using rule 526 (BlockStatement -> Statement .)
    STRING_LIT      reduce using rule 526 (BlockStatement -> Statement .)
    CHAR_LIT        reduce using rule 526 (BlockStatement -> Statement .)
    BOOLEAN         reduce using rule 526 (BlockStatement -> Statement .)
    VOID            reduce using rule 526 (BlockStatement -> Statement .)
    BYTE            reduce using rule 526 (BlockStatement -> Statement .)
    SHORT           reduce using rule 526 (BlockStatement -> Statement .)
    INT             reduce using rule 526 (BlockStatement -> Statement .)
    LONG            reduce using rule 526 (BlockStatement -> Statement .)
    CHAR            reduce using rule 526 (BlockStatement -> Statement .)
    FLOAT           reduce using rule 526 (BlockStatement -> Statement .)
    DOUBLE          reduce using rule 526 (BlockStatement -> Statement .)
    CLASS           reduce using rule 526 (BlockStatement -> Statement .)
    ENUM            reduce using rule 526 (BlockStatement -> Statement .)
    IMPLEMENTS      reduce using rule 526 (BlockStatement -> Statement .)
    RBRACE          reduce using rule 526 (BlockStatement -> Statement .)
    CASE            reduce using rule 526 (BlockStatement -> Statement .)
    DEFAULT         reduce using rule 526 (BlockStatement -> Statement .)


state 490

    (527) LocalVariableDeclarationStatement -> LocalVariableDeclaration . SEMICOLON

    SEMICOLON       shift and go to state 712


state 491

    (555) EmptyStatement -> SEMICOLON .

    IDENT           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    IF              reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    WHILE           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    LBRACE          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    SEMICOLON       reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    ASSERT          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    SWITCH          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    DO              reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    BREAK           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    CONTINUE        reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    RETURN          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    SYNCHRONIZED    reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    THROW           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    TRY             reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    FOR             reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    FINAL           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    EXTENDS         reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    PUBLIC          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    PROTECTED       reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    PRIVATE         reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    ABSTRACT        reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    STATIC          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    STRICTFP        reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    INC             reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    DEC             reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    SUPER           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    ATRATE          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    PERIOD          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    NEW             reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    THIS            reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    LPAREN          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    BOOL_LIT        reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    NULL_LIT        reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    DECIMAL_LIT     reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    HEX_LIT         reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    OCTAL_LIT       reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    BINARY_LIT      reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    STRING_LIT      reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    CHAR_LIT        reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    BOOLEAN         reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    VOID            reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    BYTE            reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    SHORT           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    INT             reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    LONG            reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    CHAR            reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    FLOAT           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    DOUBLE          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    CLASS           reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    ENUM            reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    RBRACE          reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    CASE            reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    DEFAULT         reduce using rule 555 (EmptyStatement -> SEMICOLON .)
    ELSE            reduce using rule 555 (EmptyStatement -> SEMICOLON .)


state 492

    (532) Statement -> StatementWithoutTrailingSubstatement .

    IDENT           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMICOLON       reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ASSERT          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SYNCHRONIZED    reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    THROW           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    TRY             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FINAL           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    EXTENDS         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PUBLIC          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PROTECTED       reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PRIVATE         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ABSTRACT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    STATIC          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    STRICTFP        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ATRATE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PERIOD          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LIT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    NULL_LIT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LIT     reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LIT         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    OCTAL_LIT       reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LIT      reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_DEC_LIT   reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_HEX_LIT   reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LIT      reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LIT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    VOID            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CLASS           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ENUM            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    IMPLEMENTS      reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    RBRACE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)


state 493

    (533) Statement -> LabeledStatement .

    IDENT           reduce using rule 533 (Statement -> LabeledStatement .)
    IF              reduce using rule 533 (Statement -> LabeledStatement .)
    WHILE           reduce using rule 533 (Statement -> LabeledStatement .)
    LBRACE          reduce using rule 533 (Statement -> LabeledStatement .)
    SEMICOLON       reduce using rule 533 (Statement -> LabeledStatement .)
    ASSERT          reduce using rule 533 (Statement -> LabeledStatement .)
    SWITCH          reduce using rule 533 (Statement -> LabeledStatement .)
    DO              reduce using rule 533 (Statement -> LabeledStatement .)
    BREAK           reduce using rule 533 (Statement -> LabeledStatement .)
    CONTINUE        reduce using rule 533 (Statement -> LabeledStatement .)
    RETURN          reduce using rule 533 (Statement -> LabeledStatement .)
    SYNCHRONIZED    reduce using rule 533 (Statement -> LabeledStatement .)
    THROW           reduce using rule 533 (Statement -> LabeledStatement .)
    TRY             reduce using rule 533 (Statement -> LabeledStatement .)
    FOR             reduce using rule 533 (Statement -> LabeledStatement .)
    FINAL           reduce using rule 533 (Statement -> LabeledStatement .)
    EXTENDS         reduce using rule 533 (Statement -> LabeledStatement .)
    PUBLIC          reduce using rule 533 (Statement -> LabeledStatement .)
    PROTECTED       reduce using rule 533 (Statement -> LabeledStatement .)
    PRIVATE         reduce using rule 533 (Statement -> LabeledStatement .)
    ABSTRACT        reduce using rule 533 (Statement -> LabeledStatement .)
    STATIC          reduce using rule 533 (Statement -> LabeledStatement .)
    STRICTFP        reduce using rule 533 (Statement -> LabeledStatement .)
    INC             reduce using rule 533 (Statement -> LabeledStatement .)
    DEC             reduce using rule 533 (Statement -> LabeledStatement .)
    SUPER           reduce using rule 533 (Statement -> LabeledStatement .)
    ATRATE          reduce using rule 533 (Statement -> LabeledStatement .)
    PERIOD          reduce using rule 533 (Statement -> LabeledStatement .)
    NEW             reduce using rule 533 (Statement -> LabeledStatement .)
    THIS            reduce using rule 533 (Statement -> LabeledStatement .)
    LPAREN          reduce using rule 533 (Statement -> LabeledStatement .)
    BOOL_LIT        reduce using rule 533 (Statement -> LabeledStatement .)
    NULL_LIT        reduce using rule 533 (Statement -> LabeledStatement .)
    DECIMAL_LIT     reduce using rule 533 (Statement -> LabeledStatement .)
    HEX_LIT         reduce using rule 533 (Statement -> LabeledStatement .)
    OCTAL_LIT       reduce using rule 533 (Statement -> LabeledStatement .)
    BINARY_LIT      reduce using rule 533 (Statement -> LabeledStatement .)
    FLOAT_DEC_LIT   reduce using rule 533 (Statement -> LabeledStatement .)
    FLOAT_HEX_LIT   reduce using rule 533 (Statement -> LabeledStatement .)
    STRING_LIT      reduce using rule 533 (Statement -> LabeledStatement .)
    CHAR_LIT        reduce using rule 533 (Statement -> LabeledStatement .)
    BOOLEAN         reduce using rule 533 (Statement -> LabeledStatement .)
    VOID            reduce using rule 533 (Statement -> LabeledStatement .)
    BYTE            reduce using rule 533 (Statement -> LabeledStatement .)
    SHORT           reduce using rule 533 (Statement -> LabeledStatement .)
    INT             reduce using rule 533 (Statement -> LabeledStatement .)
    LONG            reduce using rule 533 (Statement -> LabeledStatement .)
    CHAR            reduce using rule 533 (Statement -> LabeledStatement .)
    FLOAT           reduce using rule 533 (Statement -> LabeledStatement .)
    DOUBLE          reduce using rule 533 (Statement -> LabeledStatement .)
    CLASS           reduce using rule 533 (Statement -> LabeledStatement .)
    ENUM            reduce using rule 533 (Statement -> LabeledStatement .)
    IMPLEMENTS      reduce using rule 533 (Statement -> LabeledStatement .)
    RBRACE          reduce using rule 533 (Statement -> LabeledStatement .)
    CASE            reduce using rule 533 (Statement -> LabeledStatement .)
    DEFAULT         reduce using rule 533 (Statement -> LabeledStatement .)


state 494

    (534) Statement -> IfThenStatement .

    IDENT           reduce using rule 534 (Statement -> IfThenStatement .)
    IF              reduce using rule 534 (Statement -> IfThenStatement .)
    WHILE           reduce using rule 534 (Statement -> IfThenStatement .)
    LBRACE          reduce using rule 534 (Statement -> IfThenStatement .)
    SEMICOLON       reduce using rule 534 (Statement -> IfThenStatement .)
    ASSERT          reduce using rule 534 (Statement -> IfThenStatement .)
    SWITCH          reduce using rule 534 (Statement -> IfThenStatement .)
    DO              reduce using rule 534 (Statement -> IfThenStatement .)
    BREAK           reduce using rule 534 (Statement -> IfThenStatement .)
    CONTINUE        reduce using rule 534 (Statement -> IfThenStatement .)
    RETURN          reduce using rule 534 (Statement -> IfThenStatement .)
    SYNCHRONIZED    reduce using rule 534 (Statement -> IfThenStatement .)
    THROW           reduce using rule 534 (Statement -> IfThenStatement .)
    TRY             reduce using rule 534 (Statement -> IfThenStatement .)
    FOR             reduce using rule 534 (Statement -> IfThenStatement .)
    FINAL           reduce using rule 534 (Statement -> IfThenStatement .)
    EXTENDS         reduce using rule 534 (Statement -> IfThenStatement .)
    PUBLIC          reduce using rule 534 (Statement -> IfThenStatement .)
    PROTECTED       reduce using rule 534 (Statement -> IfThenStatement .)
    PRIVATE         reduce using rule 534 (Statement -> IfThenStatement .)
    ABSTRACT        reduce using rule 534 (Statement -> IfThenStatement .)
    STATIC          reduce using rule 534 (Statement -> IfThenStatement .)
    STRICTFP        reduce using rule 534 (Statement -> IfThenStatement .)
    INC             reduce using rule 534 (Statement -> IfThenStatement .)
    DEC             reduce using rule 534 (Statement -> IfThenStatement .)
    SUPER           reduce using rule 534 (Statement -> IfThenStatement .)
    ATRATE          reduce using rule 534 (Statement -> IfThenStatement .)
    PERIOD          reduce using rule 534 (Statement -> IfThenStatement .)
    NEW             reduce using rule 534 (Statement -> IfThenStatement .)
    THIS            reduce using rule 534 (Statement -> IfThenStatement .)
    LPAREN          reduce using rule 534 (Statement -> IfThenStatement .)
    BOOL_LIT        reduce using rule 534 (Statement -> IfThenStatement .)
    NULL_LIT        reduce using rule 534 (Statement -> IfThenStatement .)
    DECIMAL_LIT     reduce using rule 534 (Statement -> IfThenStatement .)
    HEX_LIT         reduce using rule 534 (Statement -> IfThenStatement .)
    OCTAL_LIT       reduce using rule 534 (Statement -> IfThenStatement .)
    BINARY_LIT      reduce using rule 534 (Statement -> IfThenStatement .)
    FLOAT_DEC_LIT   reduce using rule 534 (Statement -> IfThenStatement .)
    FLOAT_HEX_LIT   reduce using rule 534 (Statement -> IfThenStatement .)
    STRING_LIT      reduce using rule 534 (Statement -> IfThenStatement .)
    CHAR_LIT        reduce using rule 534 (Statement -> IfThenStatement .)
    BOOLEAN         reduce using rule 534 (Statement -> IfThenStatement .)
    VOID            reduce using rule 534 (Statement -> IfThenStatement .)
    BYTE            reduce using rule 534 (Statement -> IfThenStatement .)
    SHORT           reduce using rule 534 (Statement -> IfThenStatement .)
    INT             reduce using rule 534 (Statement -> IfThenStatement .)
    LONG            reduce using rule 534 (Statement -> IfThenStatement .)
    CHAR            reduce using rule 534 (Statement -> IfThenStatement .)
    FLOAT           reduce using rule 534 (Statement -> IfThenStatement .)
    DOUBLE          reduce using rule 534 (Statement -> IfThenStatement .)
    CLASS           reduce using rule 534 (Statement -> IfThenStatement .)
    ENUM            reduce using rule 534 (Statement -> IfThenStatement .)
    IMPLEMENTS      reduce using rule 534 (Statement -> IfThenStatement .)
    RBRACE          reduce using rule 534 (Statement -> IfThenStatement .)
    CASE            reduce using rule 534 (Statement -> IfThenStatement .)
    DEFAULT         reduce using rule 534 (Statement -> IfThenStatement .)


state 495

    (535) Statement -> IfThenElseStatement .

    IDENT           reduce using rule 535 (Statement -> IfThenElseStatement .)
    IF              reduce using rule 535 (Statement -> IfThenElseStatement .)
    WHILE           reduce using rule 535 (Statement -> IfThenElseStatement .)
    LBRACE          reduce using rule 535 (Statement -> IfThenElseStatement .)
    SEMICOLON       reduce using rule 535 (Statement -> IfThenElseStatement .)
    ASSERT          reduce using rule 535 (Statement -> IfThenElseStatement .)
    SWITCH          reduce using rule 535 (Statement -> IfThenElseStatement .)
    DO              reduce using rule 535 (Statement -> IfThenElseStatement .)
    BREAK           reduce using rule 535 (Statement -> IfThenElseStatement .)
    CONTINUE        reduce using rule 535 (Statement -> IfThenElseStatement .)
    RETURN          reduce using rule 535 (Statement -> IfThenElseStatement .)
    SYNCHRONIZED    reduce using rule 535 (Statement -> IfThenElseStatement .)
    THROW           reduce using rule 535 (Statement -> IfThenElseStatement .)
    TRY             reduce using rule 535 (Statement -> IfThenElseStatement .)
    FOR             reduce using rule 535 (Statement -> IfThenElseStatement .)
    FINAL           reduce using rule 535 (Statement -> IfThenElseStatement .)
    EXTENDS         reduce using rule 535 (Statement -> IfThenElseStatement .)
    PUBLIC          reduce using rule 535 (Statement -> IfThenElseStatement .)
    PROTECTED       reduce using rule 535 (Statement -> IfThenElseStatement .)
    PRIVATE         reduce using rule 535 (Statement -> IfThenElseStatement .)
    ABSTRACT        reduce using rule 535 (Statement -> IfThenElseStatement .)
    STATIC          reduce using rule 535 (Statement -> IfThenElseStatement .)
    STRICTFP        reduce using rule 535 (Statement -> IfThenElseStatement .)
    INC             reduce using rule 535 (Statement -> IfThenElseStatement .)
    DEC             reduce using rule 535 (Statement -> IfThenElseStatement .)
    SUPER           reduce using rule 535 (Statement -> IfThenElseStatement .)
    ATRATE          reduce using rule 535 (Statement -> IfThenElseStatement .)
    PERIOD          reduce using rule 535 (Statement -> IfThenElseStatement .)
    NEW             reduce using rule 535 (Statement -> IfThenElseStatement .)
    THIS            reduce using rule 535 (Statement -> IfThenElseStatement .)
    LPAREN          reduce using rule 535 (Statement -> IfThenElseStatement .)
    BOOL_LIT        reduce using rule 535 (Statement -> IfThenElseStatement .)
    NULL_LIT        reduce using rule 535 (Statement -> IfThenElseStatement .)
    DECIMAL_LIT     reduce using rule 535 (Statement -> IfThenElseStatement .)
    HEX_LIT         reduce using rule 535 (Statement -> IfThenElseStatement .)
    OCTAL_LIT       reduce using rule 535 (Statement -> IfThenElseStatement .)
    BINARY_LIT      reduce using rule 535 (Statement -> IfThenElseStatement .)
    FLOAT_DEC_LIT   reduce using rule 535 (Statement -> IfThenElseStatement .)
    FLOAT_HEX_LIT   reduce using rule 535 (Statement -> IfThenElseStatement .)
    STRING_LIT      reduce using rule 535 (Statement -> IfThenElseStatement .)
    CHAR_LIT        reduce using rule 535 (Statement -> IfThenElseStatement .)
    BOOLEAN         reduce using rule 535 (Statement -> IfThenElseStatement .)
    VOID            reduce using rule 535 (Statement -> IfThenElseStatement .)
    BYTE            reduce using rule 535 (Statement -> IfThenElseStatement .)
    SHORT           reduce using rule 535 (Statement -> IfThenElseStatement .)
    INT             reduce using rule 535 (Statement -> IfThenElseStatement .)
    LONG            reduce using rule 535 (Statement -> IfThenElseStatement .)
    CHAR            reduce using rule 535 (Statement -> IfThenElseStatement .)
    FLOAT           reduce using rule 535 (Statement -> IfThenElseStatement .)
    DOUBLE          reduce using rule 535 (Statement -> IfThenElseStatement .)
    CLASS           reduce using rule 535 (Statement -> IfThenElseStatement .)
    ENUM            reduce using rule 535 (Statement -> IfThenElseStatement .)
    IMPLEMENTS      reduce using rule 535 (Statement -> IfThenElseStatement .)
    RBRACE          reduce using rule 535 (Statement -> IfThenElseStatement .)
    CASE            reduce using rule 535 (Statement -> IfThenElseStatement .)
    DEFAULT         reduce using rule 535 (Statement -> IfThenElseStatement .)


state 496

    (536) Statement -> WhileStatement .

    IDENT           reduce using rule 536 (Statement -> WhileStatement .)
    IF              reduce using rule 536 (Statement -> WhileStatement .)
    WHILE           reduce using rule 536 (Statement -> WhileStatement .)
    LBRACE          reduce using rule 536 (Statement -> WhileStatement .)
    SEMICOLON       reduce using rule 536 (Statement -> WhileStatement .)
    ASSERT          reduce using rule 536 (Statement -> WhileStatement .)
    SWITCH          reduce using rule 536 (Statement -> WhileStatement .)
    DO              reduce using rule 536 (Statement -> WhileStatement .)
    BREAK           reduce using rule 536 (Statement -> WhileStatement .)
    CONTINUE        reduce using rule 536 (Statement -> WhileStatement .)
    RETURN          reduce using rule 536 (Statement -> WhileStatement .)
    SYNCHRONIZED    reduce using rule 536 (Statement -> WhileStatement .)
    THROW           reduce using rule 536 (Statement -> WhileStatement .)
    TRY             reduce using rule 536 (Statement -> WhileStatement .)
    FOR             reduce using rule 536 (Statement -> WhileStatement .)
    FINAL           reduce using rule 536 (Statement -> WhileStatement .)
    EXTENDS         reduce using rule 536 (Statement -> WhileStatement .)
    PUBLIC          reduce using rule 536 (Statement -> WhileStatement .)
    PROTECTED       reduce using rule 536 (Statement -> WhileStatement .)
    PRIVATE         reduce using rule 536 (Statement -> WhileStatement .)
    ABSTRACT        reduce using rule 536 (Statement -> WhileStatement .)
    STATIC          reduce using rule 536 (Statement -> WhileStatement .)
    STRICTFP        reduce using rule 536 (Statement -> WhileStatement .)
    INC             reduce using rule 536 (Statement -> WhileStatement .)
    DEC             reduce using rule 536 (Statement -> WhileStatement .)
    SUPER           reduce using rule 536 (Statement -> WhileStatement .)
    ATRATE          reduce using rule 536 (Statement -> WhileStatement .)
    PERIOD          reduce using rule 536 (Statement -> WhileStatement .)
    NEW             reduce using rule 536 (Statement -> WhileStatement .)
    THIS            reduce using rule 536 (Statement -> WhileStatement .)
    LPAREN          reduce using rule 536 (Statement -> WhileStatement .)
    BOOL_LIT        reduce using rule 536 (Statement -> WhileStatement .)
    NULL_LIT        reduce using rule 536 (Statement -> WhileStatement .)
    DECIMAL_LIT     reduce using rule 536 (Statement -> WhileStatement .)
    HEX_LIT         reduce using rule 536 (Statement -> WhileStatement .)
    OCTAL_LIT       reduce using rule 536 (Statement -> WhileStatement .)
    BINARY_LIT      reduce using rule 536 (Statement -> WhileStatement .)
    FLOAT_DEC_LIT   reduce using rule 536 (Statement -> WhileStatement .)
    FLOAT_HEX_LIT   reduce using rule 536 (Statement -> WhileStatement .)
    STRING_LIT      reduce using rule 536 (Statement -> WhileStatement .)
    CHAR_LIT        reduce using rule 536 (Statement -> WhileStatement .)
    BOOLEAN         reduce using rule 536 (Statement -> WhileStatement .)
    VOID            reduce using rule 536 (Statement -> WhileStatement .)
    BYTE            reduce using rule 536 (Statement -> WhileStatement .)
    SHORT           reduce using rule 536 (Statement -> WhileStatement .)
    INT             reduce using rule 536 (Statement -> WhileStatement .)
    LONG            reduce using rule 536 (Statement -> WhileStatement .)
    CHAR            reduce using rule 536 (Statement -> WhileStatement .)
    FLOAT           reduce using rule 536 (Statement -> WhileStatement .)
    DOUBLE          reduce using rule 536 (Statement -> WhileStatement .)
    CLASS           reduce using rule 536 (Statement -> WhileStatement .)
    ENUM            reduce using rule 536 (Statement -> WhileStatement .)
    IMPLEMENTS      reduce using rule 536 (Statement -> WhileStatement .)
    RBRACE          reduce using rule 536 (Statement -> WhileStatement .)
    CASE            reduce using rule 536 (Statement -> WhileStatement .)
    DEFAULT         reduce using rule 536 (Statement -> WhileStatement .)


state 497

    (537) Statement -> ForStatement .

    IDENT           reduce using rule 537 (Statement -> ForStatement .)
    IF              reduce using rule 537 (Statement -> ForStatement .)
    WHILE           reduce using rule 537 (Statement -> ForStatement .)
    LBRACE          reduce using rule 537 (Statement -> ForStatement .)
    SEMICOLON       reduce using rule 537 (Statement -> ForStatement .)
    ASSERT          reduce using rule 537 (Statement -> ForStatement .)
    SWITCH          reduce using rule 537 (Statement -> ForStatement .)
    DO              reduce using rule 537 (Statement -> ForStatement .)
    BREAK           reduce using rule 537 (Statement -> ForStatement .)
    CONTINUE        reduce using rule 537 (Statement -> ForStatement .)
    RETURN          reduce using rule 537 (Statement -> ForStatement .)
    SYNCHRONIZED    reduce using rule 537 (Statement -> ForStatement .)
    THROW           reduce using rule 537 (Statement -> ForStatement .)
    TRY             reduce using rule 537 (Statement -> ForStatement .)
    FOR             reduce using rule 537 (Statement -> ForStatement .)
    FINAL           reduce using rule 537 (Statement -> ForStatement .)
    EXTENDS         reduce using rule 537 (Statement -> ForStatement .)
    PUBLIC          reduce using rule 537 (Statement -> ForStatement .)
    PROTECTED       reduce using rule 537 (Statement -> ForStatement .)
    PRIVATE         reduce using rule 537 (Statement -> ForStatement .)
    ABSTRACT        reduce using rule 537 (Statement -> ForStatement .)
    STATIC          reduce using rule 537 (Statement -> ForStatement .)
    STRICTFP        reduce using rule 537 (Statement -> ForStatement .)
    INC             reduce using rule 537 (Statement -> ForStatement .)
    DEC             reduce using rule 537 (Statement -> ForStatement .)
    SUPER           reduce using rule 537 (Statement -> ForStatement .)
    ATRATE          reduce using rule 537 (Statement -> ForStatement .)
    PERIOD          reduce using rule 537 (Statement -> ForStatement .)
    NEW             reduce using rule 537 (Statement -> ForStatement .)
    THIS            reduce using rule 537 (Statement -> ForStatement .)
    LPAREN          reduce using rule 537 (Statement -> ForStatement .)
    BOOL_LIT        reduce using rule 537 (Statement -> ForStatement .)
    NULL_LIT        reduce using rule 537 (Statement -> ForStatement .)
    DECIMAL_LIT     reduce using rule 537 (Statement -> ForStatement .)
    HEX_LIT         reduce using rule 537 (Statement -> ForStatement .)
    OCTAL_LIT       reduce using rule 537 (Statement -> ForStatement .)
    BINARY_LIT      reduce using rule 537 (Statement -> ForStatement .)
    FLOAT_DEC_LIT   reduce using rule 537 (Statement -> ForStatement .)
    FLOAT_HEX_LIT   reduce using rule 537 (Statement -> ForStatement .)
    STRING_LIT      reduce using rule 537 (Statement -> ForStatement .)
    CHAR_LIT        reduce using rule 537 (Statement -> ForStatement .)
    BOOLEAN         reduce using rule 537 (Statement -> ForStatement .)
    VOID            reduce using rule 537 (Statement -> ForStatement .)
    BYTE            reduce using rule 537 (Statement -> ForStatement .)
    SHORT           reduce using rule 537 (Statement -> ForStatement .)
    INT             reduce using rule 537 (Statement -> ForStatement .)
    LONG            reduce using rule 537 (Statement -> ForStatement .)
    CHAR            reduce using rule 537 (Statement -> ForStatement .)
    FLOAT           reduce using rule 537 (Statement -> ForStatement .)
    DOUBLE          reduce using rule 537 (Statement -> ForStatement .)
    CLASS           reduce using rule 537 (Statement -> ForStatement .)
    ENUM            reduce using rule 537 (Statement -> ForStatement .)
    IMPLEMENTS      reduce using rule 537 (Statement -> ForStatement .)
    RBRACE          reduce using rule 537 (Statement -> ForStatement .)
    CASE            reduce using rule 537 (Statement -> ForStatement .)
    DEFAULT         reduce using rule 537 (Statement -> ForStatement .)


state 498

    (528) LocalVariableDeclaration -> VariableModifierS . UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> VariableModifierS . IDENT VariableDeclaratorList
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 714
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 713
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 499

    (556) LabeledStatement -> IDENT . COLON Statement
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    COLON           shift and go to state 715
    INC             shift and go to state 229
    DEC             shift and go to state 230
    LPAREN          shift and go to state 233
    PERIOD          shift and go to state 716
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 500

    (543) StatementWithoutTrailingSubstatement -> Block .

    IDENT           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    IF              reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    WHILE           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    LBRACE          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    SEMICOLON       reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    ASSERT          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    SWITCH          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    DO              reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    BREAK           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    CONTINUE        reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    RETURN          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    SYNCHRONIZED    reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    THROW           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    TRY             reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    FOR             reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    FINAL           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    EXTENDS         reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    PUBLIC          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    PROTECTED       reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    PRIVATE         reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    ABSTRACT        reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    STATIC          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    STRICTFP        reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    INC             reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    DEC             reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    SUPER           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    ATRATE          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    PERIOD          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    NEW             reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    THIS            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    LPAREN          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    BOOL_LIT        reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    NULL_LIT        reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    DECIMAL_LIT     reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    HEX_LIT         reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    OCTAL_LIT       reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    BINARY_LIT      reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT_DEC_LIT   reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT_HEX_LIT   reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    STRING_LIT      reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR_LIT        reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    BOOLEAN         reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    VOID            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    BYTE            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    SHORT           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    INT             reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    LONG            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    DOUBLE          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    CLASS           reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    ENUM            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    IMPLEMENTS      reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    RBRACE          reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    CASE            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    DEFAULT         reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)
    ELSE            reduce using rule 543 (StatementWithoutTrailingSubstatement -> Block .)


state 501

    (544) StatementWithoutTrailingSubstatement -> EmptyStatement .

    IDENT           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IF              reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    WHILE           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LBRACE          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SEMICOLON       reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ASSERT          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SWITCH          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DO              reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BREAK           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CONTINUE        reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    RETURN          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SYNCHRONIZED    reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    THROW           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    TRY             reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FOR             reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FINAL           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    EXTENDS         reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    PUBLIC          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    PROTECTED       reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    PRIVATE         reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ABSTRACT        reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STATIC          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STRICTFP        reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INC             reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEC             reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SUPER           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ATRATE          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    PERIOD          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    NEW             reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    THIS            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LPAREN          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOL_LIT        reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    NULL_LIT        reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DECIMAL_LIT     reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    HEX_LIT         reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    OCTAL_LIT       reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BINARY_LIT      reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT_DEC_LIT   reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT_HEX_LIT   reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STRING_LIT      reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR_LIT        reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOLEAN         reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    VOID            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BYTE            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SHORT           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INT             reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LONG            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DOUBLE          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CLASS           reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ENUM            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IMPLEMENTS      reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    RBRACE          reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CASE            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEFAULT         reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ELSE            reduce using rule 544 (StatementWithoutTrailingSubstatement -> EmptyStatement .)


state 502

    (545) StatementWithoutTrailingSubstatement -> ExpressionStatement .

    IDENT           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IF              reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    WHILE           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LBRACE          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SEMICOLON       reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ASSERT          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SWITCH          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DO              reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BREAK           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CONTINUE        reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    RETURN          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SYNCHRONIZED    reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    THROW           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    TRY             reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FOR             reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FINAL           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    EXTENDS         reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    PUBLIC          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    PROTECTED       reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    PRIVATE         reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ABSTRACT        reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STATIC          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STRICTFP        reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INC             reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEC             reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SUPER           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ATRATE          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    PERIOD          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    NEW             reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    THIS            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LPAREN          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOL_LIT        reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    NULL_LIT        reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DECIMAL_LIT     reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    HEX_LIT         reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    OCTAL_LIT       reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BINARY_LIT      reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT_DEC_LIT   reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT_HEX_LIT   reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STRING_LIT      reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR_LIT        reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOLEAN         reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    VOID            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BYTE            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SHORT           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INT             reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LONG            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DOUBLE          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CLASS           reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ENUM            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IMPLEMENTS      reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    RBRACE          reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CASE            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEFAULT         reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ELSE            reduce using rule 545 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)


state 503

    (546) StatementWithoutTrailingSubstatement -> AssertStatement .

    IDENT           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    IF              reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    WHILE           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    LBRACE          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SEMICOLON       reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ASSERT          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SWITCH          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DO              reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BREAK           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CONTINUE        reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    RETURN          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SYNCHRONIZED    reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    THROW           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    TRY             reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FOR             reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FINAL           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    EXTENDS         reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    PUBLIC          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    PROTECTED       reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    PRIVATE         reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ABSTRACT        reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    STATIC          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    STRICTFP        reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    INC             reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DEC             reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SUPER           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ATRATE          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    PERIOD          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    NEW             reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    THIS            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    LPAREN          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BOOL_LIT        reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    NULL_LIT        reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DECIMAL_LIT     reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    HEX_LIT         reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    OCTAL_LIT       reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BINARY_LIT      reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FLOAT_DEC_LIT   reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FLOAT_HEX_LIT   reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    STRING_LIT      reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CHAR_LIT        reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BOOLEAN         reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    VOID            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BYTE            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SHORT           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    INT             reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    LONG            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CHAR            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FLOAT           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DOUBLE          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CLASS           reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ENUM            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    IMPLEMENTS      reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    RBRACE          reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CASE            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DEFAULT         reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ELSE            reduce using rule 546 (StatementWithoutTrailingSubstatement -> AssertStatement .)


state 504

    (547) StatementWithoutTrailingSubstatement -> SwitchStatement .

    IDENT           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IF              reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    WHILE           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LBRACE          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SEMICOLON       reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ASSERT          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SWITCH          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DO              reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BREAK           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CONTINUE        reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    RETURN          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SYNCHRONIZED    reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    THROW           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    TRY             reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FOR             reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FINAL           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    EXTENDS         reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    PUBLIC          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    PROTECTED       reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    PRIVATE         reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ABSTRACT        reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STATIC          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STRICTFP        reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INC             reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEC             reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SUPER           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ATRATE          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    PERIOD          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    NEW             reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    THIS            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LPAREN          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOL_LIT        reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    NULL_LIT        reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DECIMAL_LIT     reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    HEX_LIT         reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    OCTAL_LIT       reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BINARY_LIT      reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT_DEC_LIT   reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT_HEX_LIT   reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STRING_LIT      reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR_LIT        reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOLEAN         reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    VOID            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BYTE            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SHORT           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INT             reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LONG            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DOUBLE          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CLASS           reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ENUM            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IMPLEMENTS      reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    RBRACE          reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CASE            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEFAULT         reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ELSE            reduce using rule 547 (StatementWithoutTrailingSubstatement -> SwitchStatement .)


state 505

    (548) StatementWithoutTrailingSubstatement -> DoStatement .

    IDENT           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IF              reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    WHILE           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LBRACE          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SEMICOLON       reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ASSERT          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SWITCH          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DO              reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BREAK           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CONTINUE        reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    RETURN          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SYNCHRONIZED    reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    THROW           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    TRY             reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FOR             reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FINAL           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    EXTENDS         reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    PUBLIC          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    PROTECTED       reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    PRIVATE         reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ABSTRACT        reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STATIC          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STRICTFP        reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INC             reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEC             reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SUPER           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ATRATE          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    PERIOD          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    NEW             reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    THIS            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LPAREN          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOL_LIT        reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    NULL_LIT        reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DECIMAL_LIT     reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    HEX_LIT         reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    OCTAL_LIT       reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BINARY_LIT      reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT_DEC_LIT   reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT_HEX_LIT   reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STRING_LIT      reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR_LIT        reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOLEAN         reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    VOID            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BYTE            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SHORT           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INT             reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LONG            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DOUBLE          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CLASS           reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ENUM            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IMPLEMENTS      reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    RBRACE          reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CASE            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEFAULT         reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ELSE            reduce using rule 548 (StatementWithoutTrailingSubstatement -> DoStatement .)


state 506

    (549) StatementWithoutTrailingSubstatement -> BreakStatement .

    IDENT           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IF              reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    WHILE           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LBRACE          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SEMICOLON       reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ASSERT          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SWITCH          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DO              reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BREAK           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CONTINUE        reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    RETURN          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SYNCHRONIZED    reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    THROW           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    TRY             reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FOR             reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FINAL           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    EXTENDS         reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    PUBLIC          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    PROTECTED       reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    PRIVATE         reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ABSTRACT        reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STATIC          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STRICTFP        reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INC             reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEC             reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SUPER           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ATRATE          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    PERIOD          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    NEW             reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    THIS            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LPAREN          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOL_LIT        reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    NULL_LIT        reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DECIMAL_LIT     reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    HEX_LIT         reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    OCTAL_LIT       reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BINARY_LIT      reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT_DEC_LIT   reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT_HEX_LIT   reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STRING_LIT      reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR_LIT        reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOLEAN         reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    VOID            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BYTE            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SHORT           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INT             reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LONG            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DOUBLE          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CLASS           reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ENUM            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IMPLEMENTS      reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    RBRACE          reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CASE            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEFAULT         reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ELSE            reduce using rule 549 (StatementWithoutTrailingSubstatement -> BreakStatement .)


state 507

    (550) StatementWithoutTrailingSubstatement -> ContinueStatement .

    IDENT           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IF              reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    WHILE           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LBRACE          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SEMICOLON       reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ASSERT          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SWITCH          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DO              reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BREAK           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CONTINUE        reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    RETURN          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SYNCHRONIZED    reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    THROW           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    TRY             reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FOR             reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FINAL           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    EXTENDS         reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    PUBLIC          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    PROTECTED       reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    PRIVATE         reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ABSTRACT        reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STATIC          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STRICTFP        reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INC             reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEC             reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SUPER           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ATRATE          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    PERIOD          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    NEW             reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    THIS            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LPAREN          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOL_LIT        reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    NULL_LIT        reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DECIMAL_LIT     reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    HEX_LIT         reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    OCTAL_LIT       reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BINARY_LIT      reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT_DEC_LIT   reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT_HEX_LIT   reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STRING_LIT      reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR_LIT        reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOLEAN         reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    VOID            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BYTE            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SHORT           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INT             reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LONG            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DOUBLE          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CLASS           reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ENUM            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IMPLEMENTS      reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    RBRACE          reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CASE            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEFAULT         reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ELSE            reduce using rule 550 (StatementWithoutTrailingSubstatement -> ContinueStatement .)


state 508

    (551) StatementWithoutTrailingSubstatement -> ReturnStatement .

    IDENT           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IF              reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    WHILE           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LBRACE          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SEMICOLON       reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ASSERT          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SWITCH          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DO              reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BREAK           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CONTINUE        reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    RETURN          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SYNCHRONIZED    reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    THROW           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    TRY             reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FOR             reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FINAL           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    EXTENDS         reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    PUBLIC          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    PROTECTED       reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    PRIVATE         reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ABSTRACT        reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STATIC          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STRICTFP        reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INC             reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEC             reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SUPER           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ATRATE          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    PERIOD          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    NEW             reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    THIS            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LPAREN          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOL_LIT        reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    NULL_LIT        reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DECIMAL_LIT     reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    HEX_LIT         reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    OCTAL_LIT       reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BINARY_LIT      reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT_DEC_LIT   reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT_HEX_LIT   reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STRING_LIT      reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR_LIT        reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOLEAN         reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    VOID            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BYTE            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SHORT           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INT             reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LONG            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DOUBLE          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CLASS           reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ENUM            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IMPLEMENTS      reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    RBRACE          reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CASE            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEFAULT         reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ELSE            reduce using rule 551 (StatementWithoutTrailingSubstatement -> ReturnStatement .)


state 509

    (552) StatementWithoutTrailingSubstatement -> SynchronizedStatement .

    IDENT           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    IF              reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    WHILE           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    LBRACE          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SEMICOLON       reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ASSERT          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SWITCH          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DO              reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BREAK           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CONTINUE        reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    RETURN          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SYNCHRONIZED    reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    THROW           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    TRY             reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FOR             reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FINAL           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    EXTENDS         reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    PUBLIC          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    PROTECTED       reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    PRIVATE         reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ABSTRACT        reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    STATIC          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    STRICTFP        reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    INC             reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DEC             reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SUPER           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ATRATE          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    PERIOD          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    NEW             reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    THIS            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    LPAREN          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BOOL_LIT        reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    NULL_LIT        reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DECIMAL_LIT     reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    HEX_LIT         reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    OCTAL_LIT       reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BINARY_LIT      reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FLOAT_DEC_LIT   reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FLOAT_HEX_LIT   reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    STRING_LIT      reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CHAR_LIT        reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BOOLEAN         reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    VOID            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BYTE            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SHORT           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    INT             reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    LONG            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CHAR            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FLOAT           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DOUBLE          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CLASS           reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ENUM            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    IMPLEMENTS      reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    RBRACE          reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CASE            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DEFAULT         reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ELSE            reduce using rule 552 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)


state 510

    (553) StatementWithoutTrailingSubstatement -> ThrowStatement .

    IDENT           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    IF              reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    WHILE           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    LBRACE          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SEMICOLON       reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ASSERT          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SWITCH          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DO              reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BREAK           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CONTINUE        reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    RETURN          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SYNCHRONIZED    reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    THROW           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    TRY             reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FOR             reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FINAL           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    EXTENDS         reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    PUBLIC          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    PROTECTED       reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    PRIVATE         reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ABSTRACT        reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    STATIC          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    STRICTFP        reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    INC             reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DEC             reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SUPER           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ATRATE          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    PERIOD          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    NEW             reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    THIS            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    LPAREN          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BOOL_LIT        reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    NULL_LIT        reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DECIMAL_LIT     reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    HEX_LIT         reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    OCTAL_LIT       reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BINARY_LIT      reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FLOAT_DEC_LIT   reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FLOAT_HEX_LIT   reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    STRING_LIT      reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CHAR_LIT        reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BOOLEAN         reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    VOID            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BYTE            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SHORT           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    INT             reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    LONG            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CHAR            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FLOAT           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DOUBLE          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CLASS           reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ENUM            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    IMPLEMENTS      reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    RBRACE          reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CASE            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DEFAULT         reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ELSE            reduce using rule 553 (StatementWithoutTrailingSubstatement -> ThrowStatement .)


state 511

    (554) StatementWithoutTrailingSubstatement -> TryStatement .

    IDENT           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    IF              reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    WHILE           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    LBRACE          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SEMICOLON       reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ASSERT          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SWITCH          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DO              reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BREAK           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CONTINUE        reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    RETURN          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SYNCHRONIZED    reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    THROW           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    TRY             reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FOR             reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FINAL           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    EXTENDS         reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    PUBLIC          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    PROTECTED       reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    PRIVATE         reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ABSTRACT        reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    STATIC          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    STRICTFP        reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    INC             reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DEC             reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SUPER           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ATRATE          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    PERIOD          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    NEW             reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    THIS            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    LPAREN          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BOOL_LIT        reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    NULL_LIT        reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DECIMAL_LIT     reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    HEX_LIT         reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    OCTAL_LIT       reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BINARY_LIT      reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FLOAT_DEC_LIT   reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FLOAT_HEX_LIT   reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    STRING_LIT      reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CHAR_LIT        reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BOOLEAN         reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    VOID            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BYTE            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SHORT           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    INT             reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    LONG            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CHAR            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FLOAT           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DOUBLE          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CLASS           reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ENUM            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    IMPLEMENTS      reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    RBRACE          reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CASE            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DEFAULT         reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ELSE            reduce using rule 554 (StatementWithoutTrailingSubstatement -> TryStatement .)


state 512

    (566) IfThenStatement -> IF . LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> IF . LPAREN Expression RPAREN StatementNoShortIf ELSE Statement

    LPAREN          shift and go to state 717


state 513

    (108) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 199
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 514

    (582) WhileStatement -> WHILE . LPAREN Expression RPAREN Statement

    LPAREN          shift and go to state 718


state 515

    (585) ForStatement -> BasicForStatement .

    IDENT           reduce using rule 585 (ForStatement -> BasicForStatement .)
    IF              reduce using rule 585 (ForStatement -> BasicForStatement .)
    WHILE           reduce using rule 585 (ForStatement -> BasicForStatement .)
    LBRACE          reduce using rule 585 (ForStatement -> BasicForStatement .)
    SEMICOLON       reduce using rule 585 (ForStatement -> BasicForStatement .)
    ASSERT          reduce using rule 585 (ForStatement -> BasicForStatement .)
    SWITCH          reduce using rule 585 (ForStatement -> BasicForStatement .)
    DO              reduce using rule 585 (ForStatement -> BasicForStatement .)
    BREAK           reduce using rule 585 (ForStatement -> BasicForStatement .)
    CONTINUE        reduce using rule 585 (ForStatement -> BasicForStatement .)
    RETURN          reduce using rule 585 (ForStatement -> BasicForStatement .)
    SYNCHRONIZED    reduce using rule 585 (ForStatement -> BasicForStatement .)
    THROW           reduce using rule 585 (ForStatement -> BasicForStatement .)
    TRY             reduce using rule 585 (ForStatement -> BasicForStatement .)
    FOR             reduce using rule 585 (ForStatement -> BasicForStatement .)
    FINAL           reduce using rule 585 (ForStatement -> BasicForStatement .)
    EXTENDS         reduce using rule 585 (ForStatement -> BasicForStatement .)
    PUBLIC          reduce using rule 585 (ForStatement -> BasicForStatement .)
    PROTECTED       reduce using rule 585 (ForStatement -> BasicForStatement .)
    PRIVATE         reduce using rule 585 (ForStatement -> BasicForStatement .)
    ABSTRACT        reduce using rule 585 (ForStatement -> BasicForStatement .)
    STATIC          reduce using rule 585 (ForStatement -> BasicForStatement .)
    STRICTFP        reduce using rule 585 (ForStatement -> BasicForStatement .)
    INC             reduce using rule 585 (ForStatement -> BasicForStatement .)
    DEC             reduce using rule 585 (ForStatement -> BasicForStatement .)
    SUPER           reduce using rule 585 (ForStatement -> BasicForStatement .)
    ATRATE          reduce using rule 585 (ForStatement -> BasicForStatement .)
    PERIOD          reduce using rule 585 (ForStatement -> BasicForStatement .)
    NEW             reduce using rule 585 (ForStatement -> BasicForStatement .)
    THIS            reduce using rule 585 (ForStatement -> BasicForStatement .)
    LPAREN          reduce using rule 585 (ForStatement -> BasicForStatement .)
    BOOL_LIT        reduce using rule 585 (ForStatement -> BasicForStatement .)
    NULL_LIT        reduce using rule 585 (ForStatement -> BasicForStatement .)
    DECIMAL_LIT     reduce using rule 585 (ForStatement -> BasicForStatement .)
    HEX_LIT         reduce using rule 585 (ForStatement -> BasicForStatement .)
    OCTAL_LIT       reduce using rule 585 (ForStatement -> BasicForStatement .)
    BINARY_LIT      reduce using rule 585 (ForStatement -> BasicForStatement .)
    FLOAT_DEC_LIT   reduce using rule 585 (ForStatement -> BasicForStatement .)
    FLOAT_HEX_LIT   reduce using rule 585 (ForStatement -> BasicForStatement .)
    STRING_LIT      reduce using rule 585 (ForStatement -> BasicForStatement .)
    CHAR_LIT        reduce using rule 585 (ForStatement -> BasicForStatement .)
    BOOLEAN         reduce using rule 585 (ForStatement -> BasicForStatement .)
    VOID            reduce using rule 585 (ForStatement -> BasicForStatement .)
    BYTE            reduce using rule 585 (ForStatement -> BasicForStatement .)
    SHORT           reduce using rule 585 (ForStatement -> BasicForStatement .)
    INT             reduce using rule 585 (ForStatement -> BasicForStatement .)
    LONG            reduce using rule 585 (ForStatement -> BasicForStatement .)
    CHAR            reduce using rule 585 (ForStatement -> BasicForStatement .)
    FLOAT           reduce using rule 585 (ForStatement -> BasicForStatement .)
    DOUBLE          reduce using rule 585 (ForStatement -> BasicForStatement .)
    CLASS           reduce using rule 585 (ForStatement -> BasicForStatement .)
    ENUM            reduce using rule 585 (ForStatement -> BasicForStatement .)
    IMPLEMENTS      reduce using rule 585 (ForStatement -> BasicForStatement .)
    RBRACE          reduce using rule 585 (ForStatement -> BasicForStatement .)
    CASE            reduce using rule 585 (ForStatement -> BasicForStatement .)
    DEFAULT         reduce using rule 585 (ForStatement -> BasicForStatement .)


state 516

    (586) ForStatement -> EnhancedForStatement .

    IDENT           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    IF              reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    WHILE           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    LBRACE          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    SEMICOLON       reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    ASSERT          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    SWITCH          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    DO              reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    BREAK           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    CONTINUE        reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    RETURN          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    SYNCHRONIZED    reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    THROW           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    TRY             reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    FOR             reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    FINAL           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    EXTENDS         reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    PUBLIC          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    PROTECTED       reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    PRIVATE         reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    ABSTRACT        reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    STATIC          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    STRICTFP        reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    INC             reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    DEC             reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    SUPER           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    ATRATE          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    PERIOD          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    NEW             reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    THIS            reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    LPAREN          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    BOOL_LIT        reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    NULL_LIT        reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    DECIMAL_LIT     reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    HEX_LIT         reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    OCTAL_LIT       reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    BINARY_LIT      reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    FLOAT_DEC_LIT   reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    FLOAT_HEX_LIT   reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    STRING_LIT      reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    CHAR_LIT        reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    BOOLEAN         reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    VOID            reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    BYTE            reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    SHORT           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    INT             reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    LONG            reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    CHAR            reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    FLOAT           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    DOUBLE          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    CLASS           reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    ENUM            reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    IMPLEMENTS      reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    RBRACE          reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    CASE            reduce using rule 586 (ForStatement -> EnhancedForStatement .)
    DEFAULT         reduce using rule 586 (ForStatement -> EnhancedForStatement .)


state 517

    (530) VariableModifierS -> VariableModifier . VariableModifierS
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 377
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    VariableModifier               shift and go to state 517
    VariableModifierS              shift and go to state 635
    empty                          shift and go to state 636
    Annotation                     shift and go to state 637
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 518

    (558) ExpressionStatement -> StatementExpression . SEMICOLON

    SEMICOLON       shift and go to state 719


state 519

    (569) AssertStatement -> ASSERT . Expression SEMICOLON
    (570) AssertStatement -> ASSERT . Expression COLON Expression SEMICOLON
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 720
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 520

    (571) SwitchStatement -> SWITCH . LPAREN Expression RPAREN SwitchBlock

    LPAREN          shift and go to state 721


state 521

    (584) DoStatement -> DO . Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 722
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 522

    (607) BreakStatement -> BREAK . ZooIDENT SEMICOLON
    (608) ZooIDENT -> . IDENT
    (609) ZooIDENT -> . empty
    (1) empty -> .

    IDENT           shift and go to state 724
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooIDENT                       shift and go to state 723
    empty                          shift and go to state 725

state 523

    (610) ContinueStatement -> CONTINUE . ZooIDENT SEMICOLON
    (608) ZooIDENT -> . IDENT
    (609) ZooIDENT -> . empty
    (1) empty -> .

    IDENT           shift and go to state 724
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooIDENT                       shift and go to state 726
    empty                          shift and go to state 725

state 524

    (611) ReturnStatement -> RETURN . ZooExpression SEMICOLON
    (592) ZooExpression -> . Expression
    (593) ZooExpression -> . empty
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (1) empty -> .
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooExpression                  shift and go to state 727
    Expression                     shift and go to state 728
    empty                          shift and go to state 729
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 525

    (613) SynchronizedStatement -> SYNCHRONIZED . LPAREN Expression RPAREN Block

    LPAREN          shift and go to state 730


state 526

    (612) ThrowStatement -> THROW . Expression SEMICOLON
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 731
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 527

    (614) TryStatement -> TRY . Block Catches
    (615) TryStatement -> TRY . Block ZooCatches Finally
    (628) TryWithResourcesStatement -> TRY . ResourceSpecification Block ZooCatches ZooFinally
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (633) ResourceSpecification -> . LPAREN ResourceList ZooSEMICOLON RPAREN

    LBRACE          shift and go to state 299
    LPAREN          shift and go to state 734

    Block                          shift and go to state 732
    ResourceSpecification          shift and go to state 733

state 528

    (616) TryStatement -> TryWithResourcesStatement .

    IDENT           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    IF              reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    WHILE           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    LBRACE          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    SEMICOLON       reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    ASSERT          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    SWITCH          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    DO              reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    BREAK           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    CONTINUE        reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    RETURN          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    SYNCHRONIZED    reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    THROW           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    TRY             reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    FOR             reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    FINAL           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    EXTENDS         reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    PUBLIC          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    PROTECTED       reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    PRIVATE         reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    ABSTRACT        reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    STATIC          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    STRICTFP        reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    INC             reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    DEC             reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    SUPER           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    ATRATE          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    PERIOD          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    NEW             reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    THIS            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    LPAREN          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    BOOL_LIT        reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    NULL_LIT        reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    DECIMAL_LIT     reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    HEX_LIT         reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    OCTAL_LIT       reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    BINARY_LIT      reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    FLOAT_DEC_LIT   reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    FLOAT_HEX_LIT   reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    STRING_LIT      reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    CHAR_LIT        reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    BOOLEAN         reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    VOID            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    BYTE            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    SHORT           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    INT             reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    LONG            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    CHAR            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    FLOAT           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    DOUBLE          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    CLASS           reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    ENUM            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    IMPLEMENTS      reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    RBRACE          reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    CASE            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    DEFAULT         reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)
    ELSE            reduce using rule 616 (TryStatement -> TryWithResourcesStatement .)


state 529

    (589) BasicForStatement -> FOR . LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> FOR . LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> FOR . LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement

    LPAREN          shift and go to state 735


state 530

    (400) VariableModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .
    (129) AnnotationS -> Annotation . AnnotationS
    (130) AnnotationS -> Annotation .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for FINAL resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 130 (AnnotationS -> Annotation .)
  ! shift/reduce conflict for ATRATE resolved as shift
    FINAL           reduce using rule 21 (InterfaceModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    CLASS           reduce using rule 21 (InterfaceModifier -> Annotation .)
    ENUM            reduce using rule 21 (InterfaceModifier -> Annotation .)
    IDENT           reduce using rule 130 (AnnotationS -> Annotation .)
    BOOLEAN         reduce using rule 130 (AnnotationS -> Annotation .)
    BYTE            reduce using rule 130 (AnnotationS -> Annotation .)
    SHORT           reduce using rule 130 (AnnotationS -> Annotation .)
    INT             reduce using rule 130 (AnnotationS -> Annotation .)
    LONG            reduce using rule 130 (AnnotationS -> Annotation .)
    CHAR            reduce using rule 130 (AnnotationS -> Annotation .)
    FLOAT           reduce using rule 130 (AnnotationS -> Annotation .)
    DOUBLE          reduce using rule 130 (AnnotationS -> Annotation .)
    ATRATE          shift and go to state 13

  ! FINAL           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! INT             [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 21 (InterfaceModifier -> Annotation .) ]

    Annotation                     shift and go to state 81
    AnnotationS                    shift and go to state 184
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 531

    (401) VariableModifier -> FINAL .
    (307) ClassModifier -> FINAL .

  ! reduce/reduce conflict for FINAL resolved using rule 307 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 307 (ClassModifier -> FINAL .)
    IDENT           reduce using rule 401 (VariableModifier -> FINAL .)
    BOOLEAN         reduce using rule 401 (VariableModifier -> FINAL .)
    BYTE            reduce using rule 401 (VariableModifier -> FINAL .)
    SHORT           reduce using rule 401 (VariableModifier -> FINAL .)
    INT             reduce using rule 401 (VariableModifier -> FINAL .)
    LONG            reduce using rule 401 (VariableModifier -> FINAL .)
    CHAR            reduce using rule 401 (VariableModifier -> FINAL .)
    FLOAT           reduce using rule 401 (VariableModifier -> FINAL .)
    DOUBLE          reduce using rule 401 (VariableModifier -> FINAL .)
    FINAL           reduce using rule 307 (ClassModifier -> FINAL .)
    PUBLIC          reduce using rule 307 (ClassModifier -> FINAL .)
    PROTECTED       reduce using rule 307 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 307 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 307 (ClassModifier -> FINAL .)
    STATIC          reduce using rule 307 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 307 (ClassModifier -> FINAL .)
    ATRATE          reduce using rule 307 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 307 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 307 (ClassModifier -> FINAL .)

  ! FINAL           [ reduce using rule 401 (VariableModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 401 (VariableModifier -> FINAL .) ]


state 532

    (559) StatementExpression -> Assignment .

    SEMICOLON       reduce using rule 559 (StatementExpression -> Assignment .)
    COMMA           reduce using rule 559 (StatementExpression -> Assignment .)
    RPAREN          reduce using rule 559 (StatementExpression -> Assignment .)


state 533

    (560) StatementExpression -> PreIncrementExpression .

    SEMICOLON       reduce using rule 560 (StatementExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 560 (StatementExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 560 (StatementExpression -> PreIncrementExpression .)


state 534

    (561) StatementExpression -> PreDecrementExpression .

    SEMICOLON       reduce using rule 561 (StatementExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 561 (StatementExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 561 (StatementExpression -> PreDecrementExpression .)


state 535

    (562) StatementExpression -> PostIncrementExpression .
    (255) PostfixExpression -> PostIncrementExpression .

    SEMICOLON       reduce using rule 562 (StatementExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 562 (StatementExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 562 (StatementExpression -> PostIncrementExpression .)
    INC             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 255 (PostfixExpression -> PostIncrementExpression .)


state 536

    (563) StatementExpression -> PostDecrementExpression .
    (256) PostfixExpression -> PostDecrementExpression .

    SEMICOLON       reduce using rule 563 (StatementExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 563 (StatementExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 563 (StatementExpression -> PostDecrementExpression .)
    INC             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 256 (PostfixExpression -> PostDecrementExpression .)


state 537

    (564) StatementExpression -> MethodInvocation .
    (112) PrimaryNoNewArray -> MethodInvocation .

    SEMICOLON       reduce using rule 564 (StatementExpression -> MethodInvocation .)
    COMMA           reduce using rule 564 (StatementExpression -> MethodInvocation .)
    RPAREN          reduce using rule 564 (StatementExpression -> MethodInvocation .)
    LBRACK          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    PERIOD          reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    COLON_SEP       reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 112 (PrimaryNoNewArray -> MethodInvocation .)


state 538

    (565) StatementExpression -> ClassInstanceCreationExpression .
    (109) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    SEMICOLON       reduce using rule 565 (StatementExpression -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 565 (StatementExpression -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 565 (StatementExpression -> ClassInstanceCreationExpression .)
    LBRACK          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    PERIOD          reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 109 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 539

    (257) PostIncrementExpression -> PostfixExpression . INC
    (259) PostDecrementExpression -> PostfixExpression . DEC

    INC             shift and go to state 265
    DEC             shift and go to state 266


state 540

    (145) MethodInvocation -> TypeName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> TypeName . PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) FieldAccess -> TypeName . PERIOD SUPER PERIOD IDENT
    (107) PrimaryNoNewArray -> TypeName . PERIOD THIS
    (114) ClassLiteral -> TypeName . LBRACKRBRACKS PERIOD CLASS
    (159) MethodReference -> TypeName . PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (118) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (119) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for PERIOD resolved as shift
    PERIOD          shift and go to state 736
    LBRACK          shift and go to state 192

  ! PERIOD          [ reduce using rule 1 (empty -> .) ]

    LBRACKRBRACKS                  shift and go to state 191
    empty                          shift and go to state 193

state 541

    (146) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (121) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> ExpressionName .
    (254) PostfixExpression -> ExpressionName .
    (294) TypeName -> ExpressionName .
    (296) ExpressionName -> ExpressionName . PERIOD IDENT
    (141) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (154) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
    PERIOD          shift and go to state 737
    ASSIGN          reduce using rule 185 (LeftHandSide -> ExpressionName .)
    MUL_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    QUO_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    REM_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    ADD_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SUB_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SHL_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SHR_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    SHR_UN_ASSIGN   reduce using rule 185 (LeftHandSide -> ExpressionName .)
    AND_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    XOR_ASSIGN      reduce using rule 185 (LeftHandSide -> ExpressionName .)
    OR_ASSIGN       reduce using rule 185 (LeftHandSide -> ExpressionName .)
    INC             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    DEC             reduce using rule 254 (PostfixExpression -> ExpressionName .)
    LBRACK          shift and go to state 274
    COLON_SEP       shift and go to state 275

  ! PERIOD          [ reduce using rule 294 (TypeName -> ExpressionName .) ]
  ! LBRACK          [ reduce using rule 294 (TypeName -> ExpressionName .) ]


state 542

    (148) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (123) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (253) PostfixExpression -> Primary .
    (138) FieldAccess -> Primary . PERIOD IDENT
    (157) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 738
    INC             reduce using rule 253 (PostfixExpression -> Primary .)
    DEC             reduce using rule 253 (PostfixExpression -> Primary .)
    COLON_SEP       shift and go to state 272


state 543

    (149) MethodInvocation -> SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (139) FieldAccess -> SUPER . PERIOD IDENT
    (158) MethodReference -> SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 739
    COLON_SEP       shift and go to state 289


state 544

    (124) UnqualifiedClassInstanceCreationExpression -> NEW . ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (162) ArrayCreationExpression -> NEW . PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> NEW . ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> NEW . PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> NEW . ClassType Dims ArrayInitializer
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (486) TypeVariable -> . AnnotationS IDENT
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    BOOLEAN         shift and go to state 282
    IDENT           shift and go to state 79
    LSS             shift and go to state 181
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 280
    PrimitiveType                  shift and go to state 278
    ClassType                      shift and go to state 279
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 200
    NumericType                    shift and go to state 281
    TypeVariable                   shift and go to state 78
    Annotation                     shift and go to state 81
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 545

    (319) ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .

    SEMICOLON       reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FINAL           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    EXTENDS         reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PUBLIC          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PROTECTED       reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PRIVATE         reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ABSTRACT        reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    STATIC          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    STRICTFP        reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ATRATE          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CLASS           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ENUM            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    IMPLEMENTS      reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LBRACE          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INTERFACE       reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    $end            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    TRANSIENT       reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    VOLATILE        reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SYNCHRONIZED    reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NATIVE          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LSS             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    IDENT           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BOOLEAN         reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BYTE            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHORT           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INT             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LONG            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CHAR            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FLOAT           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DOUBLE          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    VOID            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RBRACE          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    IF              reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    WHILE           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ASSERT          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SWITCH          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DO              reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BREAK           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CONTINUE        reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RETURN          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    THROW           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    TRY             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FOR             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INC             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DEC             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SUPER           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PERIOD          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NEW             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    THIS            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LPAREN          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BOOL_LIT        reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NULL_LIT        reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DECIMAL_LIT     reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    HEX_LIT         reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    OCTAL_LIT       reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BINARY_LIT      reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    STRING_LIT      reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CHAR_LIT        reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CASE            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DEFAULT         reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LBRACK          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    COLON_SEP       reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    MUL             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    QUO             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    REM             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ADD             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SUB             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHL             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHR             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHR_UN          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    GTR             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LEQ             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    GEQ             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INSTANCEOF      reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    EQL             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NEQ             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    AND             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    XOR             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    OR              reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LAND            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    QUES            reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LOR             reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RPAREN          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    COMMA           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    COLON           reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RBRACK          reduce using rule 319 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)


state 546

    (317) ClassBodyDeclarationS -> ClassBodyDeclaration ClassBodyDeclarationS .

    RBRACE          reduce using rule 317 (ClassBodyDeclarationS -> ClassBodyDeclaration ClassBodyDeclarationS .)


state 547

    (422) StaticInitializer -> STATIC Block .

    SEMICOLON       reduce using rule 422 (StaticInitializer -> STATIC Block .)
    LBRACE          reduce using rule 422 (StaticInitializer -> STATIC Block .)
    STATIC          reduce using rule 422 (StaticInitializer -> STATIC Block .)
    PUBLIC          reduce using rule 422 (StaticInitializer -> STATIC Block .)
    PROTECTED       reduce using rule 422 (StaticInitializer -> STATIC Block .)
    PRIVATE         reduce using rule 422 (StaticInitializer -> STATIC Block .)
    FINAL           reduce using rule 422 (StaticInitializer -> STATIC Block .)
    TRANSIENT       reduce using rule 422 (StaticInitializer -> STATIC Block .)
    VOLATILE        reduce using rule 422 (StaticInitializer -> STATIC Block .)
    ABSTRACT        reduce using rule 422 (StaticInitializer -> STATIC Block .)
    SYNCHRONIZED    reduce using rule 422 (StaticInitializer -> STATIC Block .)
    NATIVE          reduce using rule 422 (StaticInitializer -> STATIC Block .)
    STRICTFP        reduce using rule 422 (StaticInitializer -> STATIC Block .)
    EXTENDS         reduce using rule 422 (StaticInitializer -> STATIC Block .)
    ATRATE          reduce using rule 422 (StaticInitializer -> STATIC Block .)
    LSS             reduce using rule 422 (StaticInitializer -> STATIC Block .)
    IDENT           reduce using rule 422 (StaticInitializer -> STATIC Block .)
    BOOLEAN         reduce using rule 422 (StaticInitializer -> STATIC Block .)
    BYTE            reduce using rule 422 (StaticInitializer -> STATIC Block .)
    SHORT           reduce using rule 422 (StaticInitializer -> STATIC Block .)
    INT             reduce using rule 422 (StaticInitializer -> STATIC Block .)
    LONG            reduce using rule 422 (StaticInitializer -> STATIC Block .)
    CHAR            reduce using rule 422 (StaticInitializer -> STATIC Block .)
    FLOAT           reduce using rule 422 (StaticInitializer -> STATIC Block .)
    DOUBLE          reduce using rule 422 (StaticInitializer -> STATIC Block .)
    VOID            reduce using rule 422 (StaticInitializer -> STATIC Block .)
    CLASS           reduce using rule 422 (StaticInitializer -> STATIC Block .)
    ENUM            reduce using rule 422 (StaticInitializer -> STATIC Block .)
    IMPLEMENTS      reduce using rule 422 (StaticInitializer -> STATIC Block .)
    INTERFACE       reduce using rule 422 (StaticInitializer -> STATIC Block .)
    RBRACE          reduce using rule 422 (StaticInitializer -> STATIC Block .)


state 548

    (425) ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator . ZooThrows ConstructorBody
    (378) ZooThrows -> . Throws
    (379) ZooThrows -> . empty
    (413) Throws -> . THROWS ExceptionTypeList
    (1) empty -> .

    THROWS          shift and go to state 743
    LBRACE          reduce using rule 1 (empty -> .)

    ZooThrows                      shift and go to state 740
    Throws                         shift and go to state 741
    empty                          shift and go to state 742

state 549

    (430) ConstructorDeclarator -> ZooTypeParameters . IDENT LPAREN ZooFormalParameterList RPAREN

    IDENT           shift and go to state 744


state 550

    (331) FieldDeclaration -> FieldModifierS UnannType . VariableDeclaratorList SEMICOLON
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorList         shift and go to state 745
    VariableDeclarator             shift and go to state 746
    VariableDeclaratorId           shift and go to state 747

state 551

    (332) FieldDeclaration -> FieldModifierS IDENT . VariableDeclaratorList SEMICOLON
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 748
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    VariableDeclaratorList         shift and go to state 749
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    VariableDeclarator             shift and go to state 746
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    VariableDeclaratorId           shift and go to state 747
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 552

    (352) UnannPrimitiveType -> NumericType .

    LBRACE          reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    ATRATE          reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    IDENT           reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    ELLIPSIS        reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    THIS            reduce using rule 352 (UnannPrimitiveType -> NumericType .)


state 553

    (353) UnannPrimitiveType -> BOOLEAN .

    LBRACE          reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    ATRATE          reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    IDENT           reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    ELLIPSIS        reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    THIS            reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)


state 554

    (367) MethodDeclaration -> MethodModifierS MethodHeader . MethodBody
    (420) MethodBody -> . Block
    (421) MethodBody -> . SEMICOLON
    (518) Block -> . LBRACE ZooBlockStatements RBRACE

    SEMICOLON       shift and go to state 754
    LBRACE          shift and go to state 299

    MethodBody                     shift and go to state 752
    Block                          shift and go to state 753

state 555

    (380) MethodHeader -> Result . MethodDeclarator ZooThrows
    (388) MethodDeclarator -> . IDENT LPAREN ZooFormalParameterList RPAREN ZooDims

    IDENT           shift and go to state 756

    MethodDeclarator               shift and go to state 755

state 556

    (381) MethodHeader -> TypeParameters . AnnotationS Result MethodDeclarator ZooThrows
    (382) MethodHeader -> TypeParameters . Result MethodDeclarator ZooThrows
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (383) Result -> . UnannType
    (384) Result -> . IDENT
    (385) Result -> . VOID
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 558
    VOID            shift and go to state 559
    ATRATE          shift and go to state 13
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    AnnotationS                    shift and go to state 757
    Result                         shift and go to state 758
    Annotation                     shift and go to state 81
    UnannType                      shift and go to state 557
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 557

    (383) Result -> UnannType .

    IDENT           reduce using rule 383 (Result -> UnannType .)


state 558

    (384) Result -> IDENT .
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 384 (Result -> IDENT .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 559

    (385) Result -> VOID .

    IDENT           reduce using rule 385 (Result -> VOID .)


state 560

    (423) ConstructorModifierS -> ConstructorModifier ConstructorModifierS .

    LSS             reduce using rule 423 (ConstructorModifierS -> ConstructorModifier ConstructorModifierS .)
    IDENT           reduce using rule 423 (ConstructorModifierS -> ConstructorModifier ConstructorModifierS .)


state 561

    (424) ConstructorModifierS -> empty .

    LSS             reduce using rule 424 (ConstructorModifierS -> empty .)
    IDENT           reduce using rule 424 (ConstructorModifierS -> empty .)


state 562

    (426) ConstructorModifier -> Annotation .

    PUBLIC          reduce using rule 426 (ConstructorModifier -> Annotation .)
    PROTECTED       reduce using rule 426 (ConstructorModifier -> Annotation .)
    PRIVATE         reduce using rule 426 (ConstructorModifier -> Annotation .)
    ATRATE          reduce using rule 426 (ConstructorModifier -> Annotation .)
    LSS             reduce using rule 426 (ConstructorModifier -> Annotation .)
    IDENT           reduce using rule 426 (ConstructorModifier -> Annotation .)


state 563

    (427) ConstructorModifier -> PUBLIC .

    PUBLIC          reduce using rule 427 (ConstructorModifier -> PUBLIC .)
    PROTECTED       reduce using rule 427 (ConstructorModifier -> PUBLIC .)
    PRIVATE         reduce using rule 427 (ConstructorModifier -> PUBLIC .)
    ATRATE          reduce using rule 427 (ConstructorModifier -> PUBLIC .)
    LSS             reduce using rule 427 (ConstructorModifier -> PUBLIC .)
    IDENT           reduce using rule 427 (ConstructorModifier -> PUBLIC .)


state 564

    (428) ConstructorModifier -> PROTECTED .

    PUBLIC          reduce using rule 428 (ConstructorModifier -> PROTECTED .)
    PROTECTED       reduce using rule 428 (ConstructorModifier -> PROTECTED .)
    PRIVATE         reduce using rule 428 (ConstructorModifier -> PROTECTED .)
    ATRATE          reduce using rule 428 (ConstructorModifier -> PROTECTED .)
    LSS             reduce using rule 428 (ConstructorModifier -> PROTECTED .)
    IDENT           reduce using rule 428 (ConstructorModifier -> PROTECTED .)


state 565

    (429) ConstructorModifier -> PRIVATE .

    PUBLIC          reduce using rule 429 (ConstructorModifier -> PRIVATE .)
    PROTECTED       reduce using rule 429 (ConstructorModifier -> PRIVATE .)
    PRIVATE         reduce using rule 429 (ConstructorModifier -> PRIVATE .)
    ATRATE          reduce using rule 429 (ConstructorModifier -> PRIVATE .)
    LSS             reduce using rule 429 (ConstructorModifier -> PRIVATE .)
    IDENT           reduce using rule 429 (ConstructorModifier -> PRIVATE .)


state 566

    (329) FieldModifierS -> FieldModifier FieldModifierS .

    IDENT           reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    BOOLEAN         reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    BYTE            reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    SHORT           reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    INT             reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    LONG            reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    CHAR            reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    FLOAT           reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)
    DOUBLE          reduce using rule 329 (FieldModifierS -> FieldModifier FieldModifierS .)


state 567

    (330) FieldModifierS -> empty .

    IDENT           reduce using rule 330 (FieldModifierS -> empty .)
    BOOLEAN         reduce using rule 330 (FieldModifierS -> empty .)
    BYTE            reduce using rule 330 (FieldModifierS -> empty .)
    SHORT           reduce using rule 330 (FieldModifierS -> empty .)
    INT             reduce using rule 330 (FieldModifierS -> empty .)
    LONG            reduce using rule 330 (FieldModifierS -> empty .)
    CHAR            reduce using rule 330 (FieldModifierS -> empty .)
    FLOAT           reduce using rule 330 (FieldModifierS -> empty .)
    DOUBLE          reduce using rule 330 (FieldModifierS -> empty .)


state 568

    (333) FieldModifier -> Annotation .

    PUBLIC          reduce using rule 333 (FieldModifier -> Annotation .)
    PROTECTED       reduce using rule 333 (FieldModifier -> Annotation .)
    PRIVATE         reduce using rule 333 (FieldModifier -> Annotation .)
    STATIC          reduce using rule 333 (FieldModifier -> Annotation .)
    FINAL           reduce using rule 333 (FieldModifier -> Annotation .)
    TRANSIENT       reduce using rule 333 (FieldModifier -> Annotation .)
    VOLATILE        reduce using rule 333 (FieldModifier -> Annotation .)
    ATRATE          reduce using rule 333 (FieldModifier -> Annotation .)
    IDENT           reduce using rule 333 (FieldModifier -> Annotation .)
    BOOLEAN         reduce using rule 333 (FieldModifier -> Annotation .)
    BYTE            reduce using rule 333 (FieldModifier -> Annotation .)
    SHORT           reduce using rule 333 (FieldModifier -> Annotation .)
    INT             reduce using rule 333 (FieldModifier -> Annotation .)
    LONG            reduce using rule 333 (FieldModifier -> Annotation .)
    CHAR            reduce using rule 333 (FieldModifier -> Annotation .)
    FLOAT           reduce using rule 333 (FieldModifier -> Annotation .)
    DOUBLE          reduce using rule 333 (FieldModifier -> Annotation .)


state 569

    (334) FieldModifier -> PUBLIC .

    PUBLIC          reduce using rule 334 (FieldModifier -> PUBLIC .)
    PROTECTED       reduce using rule 334 (FieldModifier -> PUBLIC .)
    PRIVATE         reduce using rule 334 (FieldModifier -> PUBLIC .)
    STATIC          reduce using rule 334 (FieldModifier -> PUBLIC .)
    FINAL           reduce using rule 334 (FieldModifier -> PUBLIC .)
    TRANSIENT       reduce using rule 334 (FieldModifier -> PUBLIC .)
    VOLATILE        reduce using rule 334 (FieldModifier -> PUBLIC .)
    ATRATE          reduce using rule 334 (FieldModifier -> PUBLIC .)
    IDENT           reduce using rule 334 (FieldModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 334 (FieldModifier -> PUBLIC .)
    BYTE            reduce using rule 334 (FieldModifier -> PUBLIC .)
    SHORT           reduce using rule 334 (FieldModifier -> PUBLIC .)
    INT             reduce using rule 334 (FieldModifier -> PUBLIC .)
    LONG            reduce using rule 334 (FieldModifier -> PUBLIC .)
    CHAR            reduce using rule 334 (FieldModifier -> PUBLIC .)
    FLOAT           reduce using rule 334 (FieldModifier -> PUBLIC .)
    DOUBLE          reduce using rule 334 (FieldModifier -> PUBLIC .)


state 570

    (335) FieldModifier -> PROTECTED .

    PUBLIC          reduce using rule 335 (FieldModifier -> PROTECTED .)
    PROTECTED       reduce using rule 335 (FieldModifier -> PROTECTED .)
    PRIVATE         reduce using rule 335 (FieldModifier -> PROTECTED .)
    STATIC          reduce using rule 335 (FieldModifier -> PROTECTED .)
    FINAL           reduce using rule 335 (FieldModifier -> PROTECTED .)
    TRANSIENT       reduce using rule 335 (FieldModifier -> PROTECTED .)
    VOLATILE        reduce using rule 335 (FieldModifier -> PROTECTED .)
    ATRATE          reduce using rule 335 (FieldModifier -> PROTECTED .)
    IDENT           reduce using rule 335 (FieldModifier -> PROTECTED .)
    BOOLEAN         reduce using rule 335 (FieldModifier -> PROTECTED .)
    BYTE            reduce using rule 335 (FieldModifier -> PROTECTED .)
    SHORT           reduce using rule 335 (FieldModifier -> PROTECTED .)
    INT             reduce using rule 335 (FieldModifier -> PROTECTED .)
    LONG            reduce using rule 335 (FieldModifier -> PROTECTED .)
    CHAR            reduce using rule 335 (FieldModifier -> PROTECTED .)
    FLOAT           reduce using rule 335 (FieldModifier -> PROTECTED .)
    DOUBLE          reduce using rule 335 (FieldModifier -> PROTECTED .)


state 571

    (336) FieldModifier -> PRIVATE .

    PUBLIC          reduce using rule 336 (FieldModifier -> PRIVATE .)
    PROTECTED       reduce using rule 336 (FieldModifier -> PRIVATE .)
    PRIVATE         reduce using rule 336 (FieldModifier -> PRIVATE .)
    STATIC          reduce using rule 336 (FieldModifier -> PRIVATE .)
    FINAL           reduce using rule 336 (FieldModifier -> PRIVATE .)
    TRANSIENT       reduce using rule 336 (FieldModifier -> PRIVATE .)
    VOLATILE        reduce using rule 336 (FieldModifier -> PRIVATE .)
    ATRATE          reduce using rule 336 (FieldModifier -> PRIVATE .)
    IDENT           reduce using rule 336 (FieldModifier -> PRIVATE .)
    BOOLEAN         reduce using rule 336 (FieldModifier -> PRIVATE .)
    BYTE            reduce using rule 336 (FieldModifier -> PRIVATE .)
    SHORT           reduce using rule 336 (FieldModifier -> PRIVATE .)
    INT             reduce using rule 336 (FieldModifier -> PRIVATE .)
    LONG            reduce using rule 336 (FieldModifier -> PRIVATE .)
    CHAR            reduce using rule 336 (FieldModifier -> PRIVATE .)
    FLOAT           reduce using rule 336 (FieldModifier -> PRIVATE .)
    DOUBLE          reduce using rule 336 (FieldModifier -> PRIVATE .)


state 572

    (337) FieldModifier -> STATIC .

    PUBLIC          reduce using rule 337 (FieldModifier -> STATIC .)
    PROTECTED       reduce using rule 337 (FieldModifier -> STATIC .)
    PRIVATE         reduce using rule 337 (FieldModifier -> STATIC .)
    STATIC          reduce using rule 337 (FieldModifier -> STATIC .)
    FINAL           reduce using rule 337 (FieldModifier -> STATIC .)
    TRANSIENT       reduce using rule 337 (FieldModifier -> STATIC .)
    VOLATILE        reduce using rule 337 (FieldModifier -> STATIC .)
    ATRATE          reduce using rule 337 (FieldModifier -> STATIC .)
    IDENT           reduce using rule 337 (FieldModifier -> STATIC .)
    BOOLEAN         reduce using rule 337 (FieldModifier -> STATIC .)
    BYTE            reduce using rule 337 (FieldModifier -> STATIC .)
    SHORT           reduce using rule 337 (FieldModifier -> STATIC .)
    INT             reduce using rule 337 (FieldModifier -> STATIC .)
    LONG            reduce using rule 337 (FieldModifier -> STATIC .)
    CHAR            reduce using rule 337 (FieldModifier -> STATIC .)
    FLOAT           reduce using rule 337 (FieldModifier -> STATIC .)
    DOUBLE          reduce using rule 337 (FieldModifier -> STATIC .)


state 573

    (338) FieldModifier -> FINAL .

    PUBLIC          reduce using rule 338 (FieldModifier -> FINAL .)
    PROTECTED       reduce using rule 338 (FieldModifier -> FINAL .)
    PRIVATE         reduce using rule 338 (FieldModifier -> FINAL .)
    STATIC          reduce using rule 338 (FieldModifier -> FINAL .)
    FINAL           reduce using rule 338 (FieldModifier -> FINAL .)
    TRANSIENT       reduce using rule 338 (FieldModifier -> FINAL .)
    VOLATILE        reduce using rule 338 (FieldModifier -> FINAL .)
    ATRATE          reduce using rule 338 (FieldModifier -> FINAL .)
    IDENT           reduce using rule 338 (FieldModifier -> FINAL .)
    BOOLEAN         reduce using rule 338 (FieldModifier -> FINAL .)
    BYTE            reduce using rule 338 (FieldModifier -> FINAL .)
    SHORT           reduce using rule 338 (FieldModifier -> FINAL .)
    INT             reduce using rule 338 (FieldModifier -> FINAL .)
    LONG            reduce using rule 338 (FieldModifier -> FINAL .)
    CHAR            reduce using rule 338 (FieldModifier -> FINAL .)
    FLOAT           reduce using rule 338 (FieldModifier -> FINAL .)
    DOUBLE          reduce using rule 338 (FieldModifier -> FINAL .)


state 574

    (365) MethodModifierS -> MethodModifier MethodModifierS .

    IDENT           reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    VOID            reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    LSS             reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    BOOLEAN         reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    BYTE            reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    SHORT           reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    INT             reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    LONG            reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    CHAR            reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    FLOAT           reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)
    DOUBLE          reduce using rule 365 (MethodModifierS -> MethodModifier MethodModifierS .)


state 575

    (366) MethodModifierS -> empty .

    IDENT           reduce using rule 366 (MethodModifierS -> empty .)
    VOID            reduce using rule 366 (MethodModifierS -> empty .)
    LSS             reduce using rule 366 (MethodModifierS -> empty .)
    BOOLEAN         reduce using rule 366 (MethodModifierS -> empty .)
    BYTE            reduce using rule 366 (MethodModifierS -> empty .)
    SHORT           reduce using rule 366 (MethodModifierS -> empty .)
    INT             reduce using rule 366 (MethodModifierS -> empty .)
    LONG            reduce using rule 366 (MethodModifierS -> empty .)
    CHAR            reduce using rule 366 (MethodModifierS -> empty .)
    FLOAT           reduce using rule 366 (MethodModifierS -> empty .)
    DOUBLE          reduce using rule 366 (MethodModifierS -> empty .)


state 576

    (368) MethodModifier -> Annotation .

    PUBLIC          reduce using rule 368 (MethodModifier -> Annotation .)
    PROTECTED       reduce using rule 368 (MethodModifier -> Annotation .)
    PRIVATE         reduce using rule 368 (MethodModifier -> Annotation .)
    ABSTRACT        reduce using rule 368 (MethodModifier -> Annotation .)
    STATIC          reduce using rule 368 (MethodModifier -> Annotation .)
    FINAL           reduce using rule 368 (MethodModifier -> Annotation .)
    SYNCHRONIZED    reduce using rule 368 (MethodModifier -> Annotation .)
    NATIVE          reduce using rule 368 (MethodModifier -> Annotation .)
    STRICTFP        reduce using rule 368 (MethodModifier -> Annotation .)
    ATRATE          reduce using rule 368 (MethodModifier -> Annotation .)
    IDENT           reduce using rule 368 (MethodModifier -> Annotation .)
    VOID            reduce using rule 368 (MethodModifier -> Annotation .)
    LSS             reduce using rule 368 (MethodModifier -> Annotation .)
    BOOLEAN         reduce using rule 368 (MethodModifier -> Annotation .)
    BYTE            reduce using rule 368 (MethodModifier -> Annotation .)
    SHORT           reduce using rule 368 (MethodModifier -> Annotation .)
    INT             reduce using rule 368 (MethodModifier -> Annotation .)
    LONG            reduce using rule 368 (MethodModifier -> Annotation .)
    CHAR            reduce using rule 368 (MethodModifier -> Annotation .)
    FLOAT           reduce using rule 368 (MethodModifier -> Annotation .)
    DOUBLE          reduce using rule 368 (MethodModifier -> Annotation .)


state 577

    (369) MethodModifier -> PUBLIC .

    PUBLIC          reduce using rule 369 (MethodModifier -> PUBLIC .)
    PROTECTED       reduce using rule 369 (MethodModifier -> PUBLIC .)
    PRIVATE         reduce using rule 369 (MethodModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 369 (MethodModifier -> PUBLIC .)
    STATIC          reduce using rule 369 (MethodModifier -> PUBLIC .)
    FINAL           reduce using rule 369 (MethodModifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 369 (MethodModifier -> PUBLIC .)
    NATIVE          reduce using rule 369 (MethodModifier -> PUBLIC .)
    STRICTFP        reduce using rule 369 (MethodModifier -> PUBLIC .)
    ATRATE          reduce using rule 369 (MethodModifier -> PUBLIC .)
    IDENT           reduce using rule 369 (MethodModifier -> PUBLIC .)
    VOID            reduce using rule 369 (MethodModifier -> PUBLIC .)
    LSS             reduce using rule 369 (MethodModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 369 (MethodModifier -> PUBLIC .)
    BYTE            reduce using rule 369 (MethodModifier -> PUBLIC .)
    SHORT           reduce using rule 369 (MethodModifier -> PUBLIC .)
    INT             reduce using rule 369 (MethodModifier -> PUBLIC .)
    LONG            reduce using rule 369 (MethodModifier -> PUBLIC .)
    CHAR            reduce using rule 369 (MethodModifier -> PUBLIC .)
    FLOAT           reduce using rule 369 (MethodModifier -> PUBLIC .)
    DOUBLE          reduce using rule 369 (MethodModifier -> PUBLIC .)


state 578

    (370) MethodModifier -> PROTECTED .

    PUBLIC          reduce using rule 370 (MethodModifier -> PROTECTED .)
    PROTECTED       reduce using rule 370 (MethodModifier -> PROTECTED .)
    PRIVATE         reduce using rule 370 (MethodModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 370 (MethodModifier -> PROTECTED .)
    STATIC          reduce using rule 370 (MethodModifier -> PROTECTED .)
    FINAL           reduce using rule 370 (MethodModifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 370 (MethodModifier -> PROTECTED .)
    NATIVE          reduce using rule 370 (MethodModifier -> PROTECTED .)
    STRICTFP        reduce using rule 370 (MethodModifier -> PROTECTED .)
    ATRATE          reduce using rule 370 (MethodModifier -> PROTECTED .)
    IDENT           reduce using rule 370 (MethodModifier -> PROTECTED .)
    VOID            reduce using rule 370 (MethodModifier -> PROTECTED .)
    LSS             reduce using rule 370 (MethodModifier -> PROTECTED .)
    BOOLEAN         reduce using rule 370 (MethodModifier -> PROTECTED .)
    BYTE            reduce using rule 370 (MethodModifier -> PROTECTED .)
    SHORT           reduce using rule 370 (MethodModifier -> PROTECTED .)
    INT             reduce using rule 370 (MethodModifier -> PROTECTED .)
    LONG            reduce using rule 370 (MethodModifier -> PROTECTED .)
    CHAR            reduce using rule 370 (MethodModifier -> PROTECTED .)
    FLOAT           reduce using rule 370 (MethodModifier -> PROTECTED .)
    DOUBLE          reduce using rule 370 (MethodModifier -> PROTECTED .)


state 579

    (371) MethodModifier -> PRIVATE .

    PUBLIC          reduce using rule 371 (MethodModifier -> PRIVATE .)
    PROTECTED       reduce using rule 371 (MethodModifier -> PRIVATE .)
    PRIVATE         reduce using rule 371 (MethodModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 371 (MethodModifier -> PRIVATE .)
    STATIC          reduce using rule 371 (MethodModifier -> PRIVATE .)
    FINAL           reduce using rule 371 (MethodModifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 371 (MethodModifier -> PRIVATE .)
    NATIVE          reduce using rule 371 (MethodModifier -> PRIVATE .)
    STRICTFP        reduce using rule 371 (MethodModifier -> PRIVATE .)
    ATRATE          reduce using rule 371 (MethodModifier -> PRIVATE .)
    IDENT           reduce using rule 371 (MethodModifier -> PRIVATE .)
    VOID            reduce using rule 371 (MethodModifier -> PRIVATE .)
    LSS             reduce using rule 371 (MethodModifier -> PRIVATE .)
    BOOLEAN         reduce using rule 371 (MethodModifier -> PRIVATE .)
    BYTE            reduce using rule 371 (MethodModifier -> PRIVATE .)
    SHORT           reduce using rule 371 (MethodModifier -> PRIVATE .)
    INT             reduce using rule 371 (MethodModifier -> PRIVATE .)
    LONG            reduce using rule 371 (MethodModifier -> PRIVATE .)
    CHAR            reduce using rule 371 (MethodModifier -> PRIVATE .)
    FLOAT           reduce using rule 371 (MethodModifier -> PRIVATE .)
    DOUBLE          reduce using rule 371 (MethodModifier -> PRIVATE .)


state 580

    (372) MethodModifier -> ABSTRACT .

    PUBLIC          reduce using rule 372 (MethodModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 372 (MethodModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 372 (MethodModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 372 (MethodModifier -> ABSTRACT .)
    STATIC          reduce using rule 372 (MethodModifier -> ABSTRACT .)
    FINAL           reduce using rule 372 (MethodModifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 372 (MethodModifier -> ABSTRACT .)
    NATIVE          reduce using rule 372 (MethodModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 372 (MethodModifier -> ABSTRACT .)
    ATRATE          reduce using rule 372 (MethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 372 (MethodModifier -> ABSTRACT .)
    VOID            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    LSS             reduce using rule 372 (MethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 372 (MethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 372 (MethodModifier -> ABSTRACT .)
    INT             reduce using rule 372 (MethodModifier -> ABSTRACT .)
    LONG            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 372 (MethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 372 (MethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 372 (MethodModifier -> ABSTRACT .)


state 581

    (373) MethodModifier -> STATIC .

    PUBLIC          reduce using rule 373 (MethodModifier -> STATIC .)
    PROTECTED       reduce using rule 373 (MethodModifier -> STATIC .)
    PRIVATE         reduce using rule 373 (MethodModifier -> STATIC .)
    ABSTRACT        reduce using rule 373 (MethodModifier -> STATIC .)
    STATIC          reduce using rule 373 (MethodModifier -> STATIC .)
    FINAL           reduce using rule 373 (MethodModifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 373 (MethodModifier -> STATIC .)
    NATIVE          reduce using rule 373 (MethodModifier -> STATIC .)
    STRICTFP        reduce using rule 373 (MethodModifier -> STATIC .)
    ATRATE          reduce using rule 373 (MethodModifier -> STATIC .)
    IDENT           reduce using rule 373 (MethodModifier -> STATIC .)
    VOID            reduce using rule 373 (MethodModifier -> STATIC .)
    LSS             reduce using rule 373 (MethodModifier -> STATIC .)
    BOOLEAN         reduce using rule 373 (MethodModifier -> STATIC .)
    BYTE            reduce using rule 373 (MethodModifier -> STATIC .)
    SHORT           reduce using rule 373 (MethodModifier -> STATIC .)
    INT             reduce using rule 373 (MethodModifier -> STATIC .)
    LONG            reduce using rule 373 (MethodModifier -> STATIC .)
    CHAR            reduce using rule 373 (MethodModifier -> STATIC .)
    FLOAT           reduce using rule 373 (MethodModifier -> STATIC .)
    DOUBLE          reduce using rule 373 (MethodModifier -> STATIC .)


state 582

    (374) MethodModifier -> FINAL .

    PUBLIC          reduce using rule 374 (MethodModifier -> FINAL .)
    PROTECTED       reduce using rule 374 (MethodModifier -> FINAL .)
    PRIVATE         reduce using rule 374 (MethodModifier -> FINAL .)
    ABSTRACT        reduce using rule 374 (MethodModifier -> FINAL .)
    STATIC          reduce using rule 374 (MethodModifier -> FINAL .)
    FINAL           reduce using rule 374 (MethodModifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 374 (MethodModifier -> FINAL .)
    NATIVE          reduce using rule 374 (MethodModifier -> FINAL .)
    STRICTFP        reduce using rule 374 (MethodModifier -> FINAL .)
    ATRATE          reduce using rule 374 (MethodModifier -> FINAL .)
    IDENT           reduce using rule 374 (MethodModifier -> FINAL .)
    VOID            reduce using rule 374 (MethodModifier -> FINAL .)
    LSS             reduce using rule 374 (MethodModifier -> FINAL .)
    BOOLEAN         reduce using rule 374 (MethodModifier -> FINAL .)
    BYTE            reduce using rule 374 (MethodModifier -> FINAL .)
    SHORT           reduce using rule 374 (MethodModifier -> FINAL .)
    INT             reduce using rule 374 (MethodModifier -> FINAL .)
    LONG            reduce using rule 374 (MethodModifier -> FINAL .)
    CHAR            reduce using rule 374 (MethodModifier -> FINAL .)
    FLOAT           reduce using rule 374 (MethodModifier -> FINAL .)
    DOUBLE          reduce using rule 374 (MethodModifier -> FINAL .)


state 583

    (377) MethodModifier -> STRICTFP .

    PUBLIC          reduce using rule 377 (MethodModifier -> STRICTFP .)
    PROTECTED       reduce using rule 377 (MethodModifier -> STRICTFP .)
    PRIVATE         reduce using rule 377 (MethodModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 377 (MethodModifier -> STRICTFP .)
    STATIC          reduce using rule 377 (MethodModifier -> STRICTFP .)
    FINAL           reduce using rule 377 (MethodModifier -> STRICTFP .)
    SYNCHRONIZED    reduce using rule 377 (MethodModifier -> STRICTFP .)
    NATIVE          reduce using rule 377 (MethodModifier -> STRICTFP .)
    STRICTFP        reduce using rule 377 (MethodModifier -> STRICTFP .)
    ATRATE          reduce using rule 377 (MethodModifier -> STRICTFP .)
    IDENT           reduce using rule 377 (MethodModifier -> STRICTFP .)
    VOID            reduce using rule 377 (MethodModifier -> STRICTFP .)
    LSS             reduce using rule 377 (MethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 377 (MethodModifier -> STRICTFP .)
    BYTE            reduce using rule 377 (MethodModifier -> STRICTFP .)
    SHORT           reduce using rule 377 (MethodModifier -> STRICTFP .)
    INT             reduce using rule 377 (MethodModifier -> STRICTFP .)
    LONG            reduce using rule 377 (MethodModifier -> STRICTFP .)
    CHAR            reduce using rule 377 (MethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 377 (MethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 377 (MethodModifier -> STRICTFP .)


state 584

    (314) COMMAInterfaceTypeS -> COMMA ClassType . COMMAInterfaceTypeS
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (314) COMMAInterfaceTypeS -> . COMMA ClassType COMMAInterfaceTypeS
    (315) COMMAInterfaceTypeS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 177
    COMMA           shift and go to state 331
    LBRACE          reduce using rule 1 (empty -> .)

    COMMAInterfaceTypeS            shift and go to state 759
    empty                          shift and go to state 332

state 585

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces . InterfaceBody
    (29) InterfaceBody -> . LBRACE InterfaceMemberDeclarationS RBRACE

    LBRACE          shift and go to state 761

    InterfaceBody                  shift and go to state 760

state 586

    (17) ZooExtendsInterfaces -> ExtendsInterfaces .

    LBRACE          reduce using rule 17 (ZooExtendsInterfaces -> ExtendsInterfaces .)


state 587

    (18) ZooExtendsInterfaces -> empty .

    LBRACE          reduce using rule 18 (ZooExtendsInterfaces -> empty .)


state 588

    (28) ExtendsInterfaces -> EXTENDS . InterfaceTypeList
    (316) InterfaceTypeList -> . ClassType COMMAInterfaceTypeS
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 79
    ATRATE          shift and go to state 13

    InterfaceTypeList              shift and go to state 762
    ClassType                      shift and go to state 174
    TypeVariable                   shift and go to state 78
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 589

    (54) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .

    SEMICOLON       reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    FINAL           reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    EXTENDS         reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    PUBLIC          reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    PROTECTED       reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    PRIVATE         reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    ABSTRACT        reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    STATIC          reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    STRICTFP        reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    ATRATE          reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    CLASS           reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    ENUM            reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    IMPLEMENTS      reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    LBRACE          reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    INTERFACE       reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    $end            reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    TRANSIENT       reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    VOLATILE        reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    SYNCHRONIZED    reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    NATIVE          reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    LSS             reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    IDENT           reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    BOOLEAN         reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    BYTE            reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    SHORT           reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    INT             reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    LONG            reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    CHAR            reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    FLOAT           reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    DOUBLE          reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    VOID            reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    RBRACE          reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    DEFAULT         reduce using rule 54 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)


state 590

    (55) AnnotationTypeBody -> LBRACE . AnnotationTypeMemberDeclarationS RBRACE
    (56) AnnotationTypeMemberDeclarationS -> . AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS
    (57) AnnotationTypeMemberDeclarationS -> . empty
    (58) AnnotationTypeMemberDeclaration -> . AnnotationTypeElementDeclaration
    (59) AnnotationTypeMemberDeclaration -> . ConstantDeclaration
    (60) AnnotationTypeMemberDeclaration -> . ClassDeclaration
    (61) AnnotationTypeMemberDeclaration -> . InterfaceDeclaration
    (62) AnnotationTypeMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (63) AnnotationTypeElementDeclaration -> . AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (64) AnnotationTypeElementDeclaration -> . AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (38) ConstantDeclaration -> . ConstantModifierS IDENT VariableDeclaratorList SEMICOLON
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (69) AnnotationTypeElementModifierS -> . AnnotationTypeElementModifier AnnotationTypeElementModifierS
    (70) AnnotationTypeElementModifierS -> . empty
    (39) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (40) ConstantModifierS -> . empty
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (71) AnnotationTypeElementModifier -> . Annotation
    (72) AnnotationTypeElementModifier -> . PUBLIC
    (73) AnnotationTypeElementModifier -> . ABSTRACT
    (41) ConstantModifier -> . Annotation
    (42) ConstantModifier -> . PUBLIC
    (43) ConstantModifier -> . STATIC
    (44) ConstantModifier -> . FINAL
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 770
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 776
    ABSTRACT        shift and go to state 777
    STATIC          shift and go to state 778
    FINAL           shift and go to state 779
    EXTENDS         shift and go to state 45
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    STRICTFP        shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationTypeMemberDeclarationS shift and go to state 763
    AnnotationTypeMemberDeclaration shift and go to state 764
    empty                          shift and go to state 765
    AnnotationTypeElementDeclaration shift and go to state 766
    ConstantDeclaration            shift and go to state 767
    ClassDeclaration               shift and go to state 768
    InterfaceDeclaration           shift and go to state 769
    AnnotationTypeElementModifierS shift and go to state 771
    ConstantModifierS              shift and go to state 772
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    AnnotationTypeElementModifier  shift and go to state 773
    ConstantModifier               shift and go to state 774
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 775
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 591

    (484) ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .

    PERIOD          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    IMPLEMENTS      reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    LBRACE          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    COLON_SEP       reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    ATRATE          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    COMMA           reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    AND             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    RPAREN          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    LBRACK          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    GTR             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    LSS             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    LEQ             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    GEQ             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    INSTANCEOF      reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    EQL             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    NEQ             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    XOR             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    OR              reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    LAND            reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    QUES            reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    LOR             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    RBRACE          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    COLON           reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    MUL             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    QUO             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    REM             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    ADD             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    SUB             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    SHL             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    SHR             reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    SHR_UN          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    RBRACK          reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    SEMICOLON       reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)
    IDENT           reduce using rule 484 (ClassType -> ClassType PERIOD TypeVariable ZooTypeArguments .)


state 592

    (485) ClassType -> ClassType PERIOD IDENT ZooTypeArguments .

    PERIOD          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    IMPLEMENTS      reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    COLON_SEP       reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    COMMA           reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    AND             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    RPAREN          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    LBRACK          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    GTR             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    LSS             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    LEQ             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    GEQ             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    INSTANCEOF      reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    EQL             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    NEQ             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    XOR             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    OR              reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    LAND            reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    QUES            reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    LOR             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    RBRACE          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    COLON           reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    MUL             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    QUO             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    REM             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    ADD             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    SUB             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    SHL             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    SHR             reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    SHR_UN          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    RBRACK          reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    SEMICOLON       reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)
    IDENT           reduce using rule 485 (ClassType -> ClassType PERIOD IDENT ZooTypeArguments .)


state 593

    (506) TypeArguments -> LSS TypeArgumentList GTR .

    PERIOD          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    IMPLEMENTS      reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    LBRACE          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    COMMA           reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    LBRACK          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    ATRATE          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    AND             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    RPAREN          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    GTR             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    OR              reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    IDENT           reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    COLON_SEP       reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    LSS             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    LEQ             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    GEQ             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    INSTANCEOF      reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    EQL             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    NEQ             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    XOR             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    LAND            reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    QUES            reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    LOR             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    RBRACE          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    COLON           reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    MUL             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    QUO             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    REM             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    ADD             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    SUB             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    SHL             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    SHR             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    SHR_UN          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    RBRACK          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    SEMICOLON       reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    NEW             reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    THIS            reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    ELLIPSIS        reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    LPAREN          reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)
    SUPER           reduce using rule 506 (TypeArguments -> LSS TypeArgumentList GTR .)


state 594

    (507) TypeArgumentList -> TypeArgument COMMATypeArgumentS .

    GTR             reduce using rule 507 (TypeArgumentList -> TypeArgument COMMATypeArgumentS .)


state 595

    (508) COMMATypeArgumentS -> COMMA . TypeArgument COMMATypeArgumentS
    (510) TypeArgument -> . ReferenceType
    (511) TypeArgument -> . Wildcard
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (512) Wildcard -> . AnnotationS QUES ZooWildcardBounds
    (513) Wildcard -> . QUES ZooWildcardBounds
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 342
    QUES            shift and go to state 345
    BOOLEAN         shift and go to state 282
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    TypeArgument                   shift and go to state 780
    ReferenceType                  shift and go to state 339
    Wildcard                       shift and go to state 340
    ClassType                      shift and go to state 341
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 343
    AnnotationS                    shift and go to state 344
    PrimitiveType                  shift and go to state 128
    Annotation                     shift and go to state 81
    NumericType                    shift and go to state 281
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 596

    (509) COMMATypeArgumentS -> empty .

    GTR             reduce using rule 509 (COMMATypeArgumentS -> empty .)


state 597

    (512) Wildcard -> AnnotationS QUES . ZooWildcardBounds
    (514) ZooWildcardBounds -> . WildcardBounds
    (515) ZooWildcardBounds -> . empty
    (516) WildcardBounds -> . EXTENDS ReferenceType
    (517) WildcardBounds -> . SUPER ReferenceType
    (1) empty -> .

    EXTENDS         shift and go to state 601
    SUPER           shift and go to state 602
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    ZooWildcardBounds              shift and go to state 781
    WildcardBounds                 shift and go to state 599
    empty                          shift and go to state 600

state 598

    (513) Wildcard -> QUES ZooWildcardBounds .

    COMMA           reduce using rule 513 (Wildcard -> QUES ZooWildcardBounds .)
    GTR             reduce using rule 513 (Wildcard -> QUES ZooWildcardBounds .)


state 599

    (514) ZooWildcardBounds -> WildcardBounds .

    COMMA           reduce using rule 514 (ZooWildcardBounds -> WildcardBounds .)
    GTR             reduce using rule 514 (ZooWildcardBounds -> WildcardBounds .)


state 600

    (515) ZooWildcardBounds -> empty .

    COMMA           reduce using rule 515 (ZooWildcardBounds -> empty .)
    GTR             reduce using rule 515 (ZooWildcardBounds -> empty .)


state 601

    (516) WildcardBounds -> EXTENDS . ReferenceType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 342
    BOOLEAN         shift and go to state 282
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    ReferenceType                  shift and go to state 782
    ClassType                      shift and go to state 341
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 343
    AnnotationS                    shift and go to state 167
    PrimitiveType                  shift and go to state 128
    Annotation                     shift and go to state 81
    NumericType                    shift and go to state 281
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 602

    (517) WildcardBounds -> SUPER . ReferenceType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 342
    BOOLEAN         shift and go to state 282
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    ReferenceType                  shift and go to state 783
    ClassType                      shift and go to state 341
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 343
    AnnotationS                    shift and go to state 167
    PrimitiveType                  shift and go to state 128
    Annotation                     shift and go to state 81
    NumericType                    shift and go to state 281
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 603

    (289) SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .

    IMPORT          reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    SEMICOLON       reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    FINAL           reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    EXTENDS         reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    PUBLIC          reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    PROTECTED       reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    PRIVATE         reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    ABSTRACT        reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    STATIC          reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    STRICTFP        reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    ATRATE          reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    CLASS           reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    ENUM            reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    IMPLEMENTS      reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    LBRACE          reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    INTERFACE       reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    $end            reduce using rule 289 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)


state 604

    (290) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .

    IMPORT          reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    SEMICOLON       reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    FINAL           reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    EXTENDS         reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    PUBLIC          reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    PROTECTED       reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    PRIVATE         reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    ABSTRACT        reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    STATIC          reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    STRICTFP        reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    ATRATE          reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    CLASS           reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    ENUM            reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    IMPLEMENTS      reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    LBRACE          reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    INTERFACE       reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    $end            reduce using rule 290 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)


state 605

    (140) FieldAccess -> TypeName PERIOD SUPER PERIOD . IDENT
    (150) MethodInvocation -> TypeName PERIOD SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 784
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 785
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 606

    (159) MethodReference -> TypeName PERIOD SUPER COLON_SEP . ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 786
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 607

    (145) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 787


state 608

    (114) ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .

    LBRACK          reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    PERIOD          reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    COLON_SEP       reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    INC             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    DEC             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    MUL             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    QUO             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    REM             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    ADD             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SUB             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SHL             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SHR             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SHR_UN          reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LSS             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    GTR             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LEQ             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    GEQ             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    INSTANCEOF      reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    EQL             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    NEQ             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    AND             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    XOR             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    OR              reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LAND            reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    QUES            reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LOR             reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    RPAREN          reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    COMMA           reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    RBRACE          reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    COLON           reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    RBRACK          reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SEMICOLON       reduce using rule 114 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)


state 609

    (118) LBRACKRBRACKS -> LBRACK RBRACK LBRACKRBRACKS .

    PERIOD          reduce using rule 118 (LBRACKRBRACKS -> LBRACK RBRACK LBRACKRBRACKS .)


state 610

    (175) LambdaParameters -> LPAREN ZooFormalParameterList RPAREN .

    ARROW           reduce using rule 175 (LambdaParameters -> LPAREN ZooFormalParameterList RPAREN .)


state 611

    (176) LambdaParameters -> LPAREN InferredFormalParameterList RPAREN .

    ARROW           reduce using rule 176 (LambdaParameters -> LPAREN InferredFormalParameterList RPAREN .)


state 612

    (407) ZooIDENTPERIOD -> IDENT . PERIOD

    PERIOD          shift and go to state 788


state 613

    (177) InferredFormalParameterList -> IDENT COMMAIDENTS .

    RPAREN          reduce using rule 177 (InferredFormalParameterList -> IDENT COMMAIDENTS .)


state 614

    (483) ClassType -> IDENT ZooTypeArguments .
    (358) UnannClassType -> IDENT ZooTypeArguments .

  ! reduce/reduce conflict for PERIOD resolved using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
  ! reduce/reduce conflict for LBRACE resolved using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
  ! reduce/reduce conflict for ATRATE resolved using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    COLON_SEP       reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    AND             reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    RPAREN          reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .)
    PERIOD          reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    IDENT           reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    THIS            reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)

  ! PERIOD          [ reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .) ]
  ! LBRACE          [ reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .) ]
  ! ATRATE          [ reduce using rule 483 (ClassType -> IDENT ZooTypeArguments .) ]


state 615

    (490) ArrayType -> IDENT Dims .
    (364) UnannArrayType -> IDENT Dims .

    COLON_SEP       reduce using rule 490 (ArrayType -> IDENT Dims .)
    AND             reduce using rule 490 (ArrayType -> IDENT Dims .)
    RPAREN          reduce using rule 490 (ArrayType -> IDENT Dims .)
    IDENT           reduce using rule 364 (UnannArrayType -> IDENT Dims .)
    THIS            reduce using rule 364 (UnannArrayType -> IDENT Dims .)


state 616

    (412) ReceiverParameter -> IDENT ZooIDENTPERIOD . THIS

    THIS            shift and go to state 789


state 617

    (178) COMMAIDENTS -> COMMA . IDENT COMMAIDENTS

    IDENT           shift and go to state 790


state 618

    (179) COMMAIDENTS -> empty .
    (126) ZooTypeArguments -> empty .
    (408) ZooIDENTPERIOD -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 126 (ZooTypeArguments -> empty .)
  ! reduce/reduce conflict for THIS resolved using rule 126 (ZooTypeArguments -> empty .)
    PERIOD          reduce using rule 126 (ZooTypeArguments -> empty .)
    COLON_SEP       reduce using rule 126 (ZooTypeArguments -> empty .)
    LBRACE          reduce using rule 126 (ZooTypeArguments -> empty .)
    ATRATE          reduce using rule 126 (ZooTypeArguments -> empty .)
    AND             reduce using rule 126 (ZooTypeArguments -> empty .)
    RPAREN          reduce using rule 126 (ZooTypeArguments -> empty .)
    IDENT           reduce using rule 126 (ZooTypeArguments -> empty .)
    THIS            reduce using rule 126 (ZooTypeArguments -> empty .)

  ! RPAREN          [ reduce using rule 179 (COMMAIDENTS -> empty .) ]
  ! THIS            [ reduce using rule 408 (ZooIDENTPERIOD -> empty .) ]


state 619

    (465) PrimitiveType -> AnnotationS NumericType .
    (352) UnannPrimitiveType -> NumericType .

  ! reduce/reduce conflict for LBRACE resolved using rule 352 (UnannPrimitiveType -> NumericType .)
  ! reduce/reduce conflict for ATRATE resolved using rule 352 (UnannPrimitiveType -> NumericType .)
    RPAREN          reduce using rule 465 (PrimitiveType -> AnnotationS NumericType .)
    LBRACE          reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    ATRATE          reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    IDENT           reduce using rule 352 (UnannPrimitiveType -> NumericType .)
    THIS            reduce using rule 352 (UnannPrimitiveType -> NumericType .)

  ! LBRACE          [ reduce using rule 465 (PrimitiveType -> AnnotationS NumericType .) ]
  ! ATRATE          [ reduce using rule 465 (PrimitiveType -> AnnotationS NumericType .) ]


state 620

    (467) PrimitiveType -> AnnotationS BOOLEAN .
    (353) UnannPrimitiveType -> BOOLEAN .

  ! reduce/reduce conflict for LBRACE resolved using rule 353 (UnannPrimitiveType -> BOOLEAN .)
  ! reduce/reduce conflict for ATRATE resolved using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 467 (PrimitiveType -> AnnotationS BOOLEAN .)
    LBRACE          reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    ATRATE          reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    IDENT           reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)
    THIS            reduce using rule 353 (UnannPrimitiveType -> BOOLEAN .)

  ! LBRACE          [ reduce using rule 467 (PrimitiveType -> AnnotationS BOOLEAN .) ]
  ! ATRATE          [ reduce using rule 467 (PrimitiveType -> AnnotationS BOOLEAN .) ]


state 621

    (486) TypeVariable -> AnnotationS IDENT .
    (410) ReceiverParameter -> AnnotationS IDENT . ZooIDENTPERIOD THIS
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (407) ZooIDENTPERIOD -> . IDENT PERIOD
    (408) ZooIDENTPERIOD -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for ATRATE resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    COLON_SEP       reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    AND             reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    RPAREN          reduce using rule 486 (TypeVariable -> AnnotationS IDENT .)
    IDENT           shift and go to state 612
    LBRACE          shift and go to state 237
    THIS            reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 486 (TypeVariable -> AnnotationS IDENT .) ]
  ! LSS             [ reduce using rule 486 (TypeVariable -> AnnotationS IDENT .) ]
  ! ATRATE          [ reduce using rule 486 (TypeVariable -> AnnotationS IDENT .) ]
  ! PERIOD          [ reduce using rule 486 (TypeVariable -> AnnotationS IDENT .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 236
    ZooIDENTPERIOD                 shift and go to state 791
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    empty                          shift and go to state 792
    TypeArguments                  shift and go to state 179
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 622

    (409) ReceiverParameter -> AnnotationS UnannType . ZooIDENTPERIOD THIS
    (407) ZooIDENTPERIOD -> . IDENT PERIOD
    (408) ZooIDENTPERIOD -> . empty
    (1) empty -> .

    IDENT           shift and go to state 612
    THIS            reduce using rule 1 (empty -> .)

    ZooIDENTPERIOD                 shift and go to state 793
    empty                          shift and go to state 628

state 623

    (395) FormalParameters -> ReceiverParameter COMMAFormalParameterS .

    COMMA           reduce using rule 395 (FormalParameters -> ReceiverParameter COMMAFormalParameterS .)


state 624

    (392) COMMAFormalParameterS -> COMMA . FormalParameter COMMAFormalParameterS
    (398) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (399) FormalParameter -> . ZooVariableModifier IDENT VariableDeclaratorId
    (396) ZooVariableModifier -> . VariableModifier
    (397) ZooVariableModifier -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 377
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    FormalParameter                shift and go to state 794
    ZooVariableModifier            shift and go to state 373
    VariableModifier               shift and go to state 795
    empty                          shift and go to state 796
    Annotation                     shift and go to state 637
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 625

    (393) COMMAFormalParameterS -> empty .

    COMMA           reduce using rule 393 (COMMAFormalParameterS -> empty .)


state 626

    (390) FormalParameterList -> FormalParameters COMMA . LastFormalParameter
    (402) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (403) LastFormalParameter -> . VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId
    (404) LastFormalParameter -> . FormalParameter
    (405) LastFormalParameter -> . VariableModifierS UnannType ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> . VariableModifierS IDENT ELLIPSIS VariableDeclaratorId
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (398) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (399) FormalParameter -> . ZooVariableModifier IDENT VariableDeclaratorId
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (396) ZooVariableModifier -> . VariableModifier
    (397) ZooVariableModifier -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 377
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    LastFormalParameter            shift and go to state 797
    VariableModifierS              shift and go to state 370
    FormalParameter                shift and go to state 798
    VariableModifier               shift and go to state 374
    empty                          shift and go to state 799
    ZooVariableModifier            shift and go to state 373
    Annotation                     shift and go to state 637
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 627

    (411) ReceiverParameter -> UnannType ZooIDENTPERIOD . THIS

    THIS            shift and go to state 800


state 628

    (408) ZooIDENTPERIOD -> empty .

    THIS            reduce using rule 408 (ZooIDENTPERIOD -> empty .)


state 629

    (394) FormalParameters -> FormalParameter COMMAFormalParameterS .

    COMMA           reduce using rule 394 (FormalParameters -> FormalParameter COMMAFormalParameterS .)


state 630

    (402) LastFormalParameter -> VariableModifierS UnannType . AnnotationS ELLIPSIS VariableDeclaratorId
    (405) LastFormalParameter -> VariableModifierS UnannType . ELLIPSIS VariableDeclaratorId
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    ELLIPSIS        shift and go to state 802
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 801
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 631

    (403) LastFormalParameter -> VariableModifierS IDENT . AnnotationS ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> VariableModifierS IDENT . ELLIPSIS VariableDeclaratorId
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ELLIPSIS resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    ELLIPSIS        shift and go to state 804
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! ELLIPSIS        [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 803
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    Annotation                     shift and go to state 81
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 632

    (362) UnannArrayType -> UnannPrimitiveType Dims .

    IDENT           reduce using rule 362 (UnannArrayType -> UnannPrimitiveType Dims .)
    THIS            reduce using rule 362 (UnannArrayType -> UnannPrimitiveType Dims .)
    ELLIPSIS        reduce using rule 362 (UnannArrayType -> UnannPrimitiveType Dims .)
    ATRATE          reduce using rule 362 (UnannArrayType -> UnannPrimitiveType Dims .)


state 633

    (398) FormalParameter -> ZooVariableModifier UnannType . VariableDeclaratorId
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 805

state 634

    (399) FormalParameter -> ZooVariableModifier IDENT . VariableDeclaratorId
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 748
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    VariableDeclaratorId           shift and go to state 806
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 635

    (530) VariableModifierS -> VariableModifier VariableModifierS .

    IDENT           reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    BOOLEAN         reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    BYTE            reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    SHORT           reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    INT             reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    LONG            reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    CHAR            reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    FLOAT           reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)
    DOUBLE          reduce using rule 530 (VariableModifierS -> VariableModifier VariableModifierS .)


state 636

    (531) VariableModifierS -> empty .

    IDENT           reduce using rule 531 (VariableModifierS -> empty .)
    BOOLEAN         reduce using rule 531 (VariableModifierS -> empty .)
    BYTE            reduce using rule 531 (VariableModifierS -> empty .)
    SHORT           reduce using rule 531 (VariableModifierS -> empty .)
    INT             reduce using rule 531 (VariableModifierS -> empty .)
    LONG            reduce using rule 531 (VariableModifierS -> empty .)
    CHAR            reduce using rule 531 (VariableModifierS -> empty .)
    FLOAT           reduce using rule 531 (VariableModifierS -> empty .)
    DOUBLE          reduce using rule 531 (VariableModifierS -> empty .)


state 637

    (400) VariableModifier -> Annotation .

    FINAL           reduce using rule 400 (VariableModifier -> Annotation .)
    ATRATE          reduce using rule 400 (VariableModifier -> Annotation .)
    IDENT           reduce using rule 400 (VariableModifier -> Annotation .)
    BOOLEAN         reduce using rule 400 (VariableModifier -> Annotation .)
    BYTE            reduce using rule 400 (VariableModifier -> Annotation .)
    SHORT           reduce using rule 400 (VariableModifier -> Annotation .)
    INT             reduce using rule 400 (VariableModifier -> Annotation .)
    LONG            reduce using rule 400 (VariableModifier -> Annotation .)
    CHAR            reduce using rule 400 (VariableModifier -> Annotation .)
    FLOAT           reduce using rule 400 (VariableModifier -> Annotation .)
    DOUBLE          reduce using rule 400 (VariableModifier -> Annotation .)


state 638

    (363) UnannArrayType -> UnannClassOrInterfaceType Dims .

    IDENT           reduce using rule 363 (UnannArrayType -> UnannClassOrInterfaceType Dims .)
    THIS            reduce using rule 363 (UnannArrayType -> UnannClassOrInterfaceType Dims .)
    ELLIPSIS        reduce using rule 363 (UnannArrayType -> UnannClassOrInterfaceType Dims .)
    ATRATE          reduce using rule 363 (UnannArrayType -> UnannClassOrInterfaceType Dims .)


state 639

    (359) UnannClassType -> UnannClassOrInterfaceType PERIOD . IDENT ZooTypeArguments
    (360) UnannClassType -> UnannClassOrInterfaceType PERIOD . AnnotationS IDENT ZooTypeArguments
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 807
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 808
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 640

    (261) CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .

    MUL             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    QUO             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    REM             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    ADD             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SUB             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SHL             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SHR             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SHR_UN          reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LSS             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GTR             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LEQ             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GEQ             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    INSTANCEOF      reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    EQL             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    NEQ             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    AND             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    XOR             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    OR              reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LAND            reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    QUES            reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LOR             reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RPAREN          reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COMMA           reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACE          reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COLON           reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACK          reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SEMICOLON       reduce using rule 261 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)


state 641

    (262) CastExpression -> LPAREN PrimitiveType RPAREN IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    QUO             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    REM             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    ADD             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    SUB             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    SHL             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    SHR             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    SHR_UN          reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    GTR             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    LEQ             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    GEQ             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    INSTANCEOF      reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    EQL             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    NEQ             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    AND             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    XOR             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    OR              reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    LAND            reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    QUES            reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    LOR             reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    RPAREN          reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    COMMA           reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    RBRACE          reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    COLON           reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    RBRACK          reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    SEMICOLON       reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 262 (CastExpression -> LPAREN PrimitiveType RPAREN IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 642

    (263) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN . UnaryExpressionNotPlusMinus
    (264) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN . IDENT
    (265) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN . LambdaExpression
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 811
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 809
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ReferenceType                  shift and go to state 109
    UnaryExpressionNotPlusMinus    shift and go to state 810
    LambdaExpression               shift and go to state 812
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    LambdaParameters               shift and go to state 206
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 643

    (266) AdditionalBoundS -> AdditionalBound AdditionalBoundS .

    RPAREN          reduce using rule 266 (AdditionalBoundS -> AdditionalBound AdditionalBoundS .)
    COMMA           reduce using rule 266 (AdditionalBoundS -> AdditionalBound AdditionalBoundS .)
    GTR             reduce using rule 266 (AdditionalBoundS -> AdditionalBound AdditionalBoundS .)


state 644

    (505) AdditionalBound -> AND ClassType .
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments

    AND             reduce using rule 505 (AdditionalBound -> AND ClassType .)
    RPAREN          reduce using rule 505 (AdditionalBound -> AND ClassType .)
    COMMA           reduce using rule 505 (AdditionalBound -> AND ClassType .)
    GTR             reduce using rule 505 (AdditionalBound -> AND ClassType .)
    PERIOD          shift and go to state 177


state 645

    (173) LambdaExpression -> LambdaParameters ARROW LambdaBody .

    RPAREN          reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    COLON           reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    RBRACK          reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    COMMA           reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    MUL             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    QUO             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    REM             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    ADD             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SUB             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SHL             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SHR             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SHR_UN          reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LSS             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    GTR             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LEQ             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    GEQ             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    INSTANCEOF      reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    EQL             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    NEQ             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    AND             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    XOR             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    OR              reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LAND            reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    QUES            reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LOR             reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    RBRACE          reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SEMICOLON       reduce using rule 173 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)


state 646

    (180) LambdaBody -> Expression .

    MUL             reduce using rule 180 (LambdaBody -> Expression .)
    QUO             reduce using rule 180 (LambdaBody -> Expression .)
    REM             reduce using rule 180 (LambdaBody -> Expression .)
    ADD             reduce using rule 180 (LambdaBody -> Expression .)
    SUB             reduce using rule 180 (LambdaBody -> Expression .)
    SHL             reduce using rule 180 (LambdaBody -> Expression .)
    SHR             reduce using rule 180 (LambdaBody -> Expression .)
    SHR_UN          reduce using rule 180 (LambdaBody -> Expression .)
    LSS             reduce using rule 180 (LambdaBody -> Expression .)
    GTR             reduce using rule 180 (LambdaBody -> Expression .)
    LEQ             reduce using rule 180 (LambdaBody -> Expression .)
    GEQ             reduce using rule 180 (LambdaBody -> Expression .)
    INSTANCEOF      reduce using rule 180 (LambdaBody -> Expression .)
    EQL             reduce using rule 180 (LambdaBody -> Expression .)
    NEQ             reduce using rule 180 (LambdaBody -> Expression .)
    AND             reduce using rule 180 (LambdaBody -> Expression .)
    XOR             reduce using rule 180 (LambdaBody -> Expression .)
    OR              reduce using rule 180 (LambdaBody -> Expression .)
    LAND            reduce using rule 180 (LambdaBody -> Expression .)
    QUES            reduce using rule 180 (LambdaBody -> Expression .)
    LOR             reduce using rule 180 (LambdaBody -> Expression .)
    RPAREN          reduce using rule 180 (LambdaBody -> Expression .)
    COMMA           reduce using rule 180 (LambdaBody -> Expression .)
    RBRACE          reduce using rule 180 (LambdaBody -> Expression .)
    COLON           reduce using rule 180 (LambdaBody -> Expression .)
    RBRACK          reduce using rule 180 (LambdaBody -> Expression .)
    SEMICOLON       reduce using rule 180 (LambdaBody -> Expression .)


state 647

    (181) LambdaBody -> Block .

    MUL             reduce using rule 181 (LambdaBody -> Block .)
    QUO             reduce using rule 181 (LambdaBody -> Block .)
    REM             reduce using rule 181 (LambdaBody -> Block .)
    ADD             reduce using rule 181 (LambdaBody -> Block .)
    SUB             reduce using rule 181 (LambdaBody -> Block .)
    SHL             reduce using rule 181 (LambdaBody -> Block .)
    SHR             reduce using rule 181 (LambdaBody -> Block .)
    SHR_UN          reduce using rule 181 (LambdaBody -> Block .)
    LSS             reduce using rule 181 (LambdaBody -> Block .)
    GTR             reduce using rule 181 (LambdaBody -> Block .)
    LEQ             reduce using rule 181 (LambdaBody -> Block .)
    GEQ             reduce using rule 181 (LambdaBody -> Block .)
    INSTANCEOF      reduce using rule 181 (LambdaBody -> Block .)
    EQL             reduce using rule 181 (LambdaBody -> Block .)
    NEQ             reduce using rule 181 (LambdaBody -> Block .)
    AND             reduce using rule 181 (LambdaBody -> Block .)
    XOR             reduce using rule 181 (LambdaBody -> Block .)
    OR              reduce using rule 181 (LambdaBody -> Block .)
    LAND            reduce using rule 181 (LambdaBody -> Block .)
    QUES            reduce using rule 181 (LambdaBody -> Block .)
    LOR             reduce using rule 181 (LambdaBody -> Block .)
    RPAREN          reduce using rule 181 (LambdaBody -> Block .)
    COMMA           reduce using rule 181 (LambdaBody -> Block .)
    RBRACE          reduce using rule 181 (LambdaBody -> Block .)
    COLON           reduce using rule 181 (LambdaBody -> Block .)
    RBRACK          reduce using rule 181 (LambdaBody -> Block .)
    SEMICOLON       reduce using rule 181 (LambdaBody -> Block .)


state 648

    (184) Assignment -> LeftHandSide AssignmentOperator Expression .

    RPAREN          reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    COLON           reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    RBRACK          reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    COMMA           reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SEMICOLON       reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    MUL             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    QUO             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    REM             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    ADD             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SUB             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SHL             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SHR             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SHR_UN          reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LSS             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    GTR             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LEQ             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    GEQ             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    INSTANCEOF      reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    EQL             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    NEQ             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    AND             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    XOR             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    OR              reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LAND            reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    QUES            reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LOR             reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    RBRACE          reduce using rule 184 (Assignment -> LeftHandSide AssignmentOperator Expression .)


state 649

    (82) COMMAElementValuePairS -> COMMA ElementValuePair COMMAElementValuePairS .

    RPAREN          reduce using rule 82 (COMMAElementValuePairS -> COMMA ElementValuePair COMMAElementValuePairS .)


state 650

    (202) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON . ConditionalExpression
    (203) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON . LambdaExpression
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 815
    LPAREN          shift and go to state 816
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ConditionalOrExpression        shift and go to state 99
    ConditionalExpression          shift and go to state 813
    LambdaExpression               shift and go to state 814
    LambdaParameters               shift and go to state 206
    ConditionalAndExpression       shift and go to state 102
    InclusiveOrExpression          shift and go to state 103
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 651

    (88) ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .

    RPAREN          reduce using rule 88 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)
    COMMA           reduce using rule 88 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)
    RBRACE          reduce using rule 88 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)
    SEMICOLON       reduce using rule 88 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)


state 652

    (92) COMMAElementValueS -> COMMA ElementValue . COMMAElementValueS
    (92) COMMAElementValueS -> . COMMA ElementValue COMMAElementValueS
    (93) COMMAElementValueS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 411
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAElementValueS             shift and go to state 817
    empty                          shift and go to state 412

state 653

    (147) MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 818


state 654

    (142) ArrayAccess -> IDENT LBRACK Expression RBRACK .

    LBRACK          reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    INC             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    DEC             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    MUL             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    QUO             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    REM             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    ADD             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SUB             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SHL             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SHR             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    LSS             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    GTR             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    LEQ             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    GEQ             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    EQL             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    NEQ             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    AND             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    XOR             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    OR              reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    LAND            reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    QUES            reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    LOR             reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    REM_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SHR_UN_ASSIGN   reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    COMMA           reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    COLON           reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 142 (ArrayAccess -> IDENT LBRACK Expression RBRACK .)


state 655

    (144) MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 144 (MethodInvocation -> IDENT LPAREN ZooArgumentList RPAREN .)


state 656

    (151) ArgumentList -> Expression COMMAExpressionS .

    RPAREN          reduce using rule 151 (ArgumentList -> Expression COMMAExpressionS .)


state 657

    (152) COMMAExpressionS -> COMMA . Expression COMMAExpressionS
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 819
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 658

    (153) COMMAExpressionS -> empty .

    RPAREN          reduce using rule 153 (COMMAExpressionS -> empty .)


state 659

    (155) MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 155 (MethodReference -> IDENT COLON_SEP ZooTypeArguments IDENT .)


state 660

    (491) Dims -> AnnotationS LBRACE RBRACE . AnnotationSLBRACERBRACES
    (493) AnnotationSLBRACERBRACES -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (494) AnnotationSLBRACERBRACES -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (495) AnnotationSLBRACERBRACES -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 661
    COLON_SEP       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    ASSIGN          reduce using rule 1 (empty -> .)
    THROWS          reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 663
    AnnotationSLBRACERBRACES       shift and go to state 820
    empty                          shift and go to state 664
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 661

    (494) AnnotationSLBRACERBRACES -> LBRACE . RBRACE AnnotationSLBRACERBRACES

    RBRACE          shift and go to state 821


state 662

    (492) Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .

    COLON_SEP       reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COMMA           reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GTR             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LSS             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LEQ             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GEQ             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INSTANCEOF      reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    EQL             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    NEQ             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    AND             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    XOR             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    OR              reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LAND            reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUES            reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LOR             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RPAREN          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACE          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COLON           reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    MUL             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUO             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    REM             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ADD             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SUB             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHL             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR_UN          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACK          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SEMICOLON       reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LBRACE          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    IDENT           reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THIS            reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ELLIPSIS        reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ATRATE          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    PERIOD          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INC             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEC             reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ASSIGN          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THROWS          reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEFAULT         reduce using rule 492 (Dims -> LBRACE RBRACE AnnotationSLBRACERBRACES .)


state 663

    (493) AnnotationSLBRACERBRACES -> AnnotationS . LBRACE RBRACE AnnotationSLBRACERBRACES

    LBRACE          shift and go to state 822


state 664

    (495) AnnotationSLBRACERBRACES -> empty .

    COLON_SEP       reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    COMMA           reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    GTR             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    LSS             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    LEQ             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    GEQ             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    INSTANCEOF      reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    EQL             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    NEQ             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    AND             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    XOR             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    OR              reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    LAND            reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    QUES            reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    LOR             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    RPAREN          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    RBRACE          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    COLON           reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    MUL             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    QUO             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    REM             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    ADD             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    SUB             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    SHL             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    SHR             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    SHR_UN          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    RBRACK          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    SEMICOLON       reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    LBRACE          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    IDENT           reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    THIS            reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    ELLIPSIS        reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    ATRATE          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    PERIOD          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    INC             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    DEC             reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    ASSIGN          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    THROWS          reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)
    DEFAULT         reduce using rule 495 (AnnotationSLBRACERBRACES -> empty .)


state 665

    (156) MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 156 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)


state 666

    (148) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 823


state 667

    (157) MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 157 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)


state 668

    (146) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 824


state 669

    (141) ArrayAccess -> ExpressionName LBRACK Expression RBRACK .

    LBRACK          reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    INC             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    DEC             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    MUL             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    QUO             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    REM             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    ADD             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SUB             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHL             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LSS             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    GTR             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LEQ             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    GEQ             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    EQL             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    NEQ             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    AND             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    XOR             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    OR              reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LAND            reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    QUES            reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LOR             reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    REM_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR_UN_ASSIGN   reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    COMMA           reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    COLON           reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 141 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)


state 670

    (154) MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 154 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)


state 671

    (143) ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .

    LBRACK          reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    INC             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DEC             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUO             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    REM             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHL             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LSS             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GTR             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LEQ             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GEQ             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    EQL             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    NEQ             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    XOR             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR              reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LAND            reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUES            reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LOR             reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    REM_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR_UN_ASSIGN   reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COMMA           reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COLON           reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 143 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)


state 672

    (162) ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .

    PERIOD          reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    COLON_SEP       reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    INC             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    DEC             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    MUL             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    QUO             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    REM             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    ADD             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SUB             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SHL             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SHR             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SHR_UN          reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LSS             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    GTR             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LEQ             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    GEQ             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    INSTANCEOF      reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    EQL             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    NEQ             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    AND             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    XOR             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    OR              reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LAND            reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    QUES            reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LOR             reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    RPAREN          reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    COMMA           reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    RBRACE          reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    COLON           reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    RBRACK          reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SEMICOLON       reduce using rule 162 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)


state 673

    (65) ZooDims -> Dims .

    PERIOD          reduce using rule 65 (ZooDims -> Dims .)
    COLON_SEP       reduce using rule 65 (ZooDims -> Dims .)
    INC             reduce using rule 65 (ZooDims -> Dims .)
    DEC             reduce using rule 65 (ZooDims -> Dims .)
    MUL             reduce using rule 65 (ZooDims -> Dims .)
    QUO             reduce using rule 65 (ZooDims -> Dims .)
    REM             reduce using rule 65 (ZooDims -> Dims .)
    ADD             reduce using rule 65 (ZooDims -> Dims .)
    SUB             reduce using rule 65 (ZooDims -> Dims .)
    SHL             reduce using rule 65 (ZooDims -> Dims .)
    SHR             reduce using rule 65 (ZooDims -> Dims .)
    SHR_UN          reduce using rule 65 (ZooDims -> Dims .)
    LSS             reduce using rule 65 (ZooDims -> Dims .)
    GTR             reduce using rule 65 (ZooDims -> Dims .)
    LEQ             reduce using rule 65 (ZooDims -> Dims .)
    GEQ             reduce using rule 65 (ZooDims -> Dims .)
    INSTANCEOF      reduce using rule 65 (ZooDims -> Dims .)
    EQL             reduce using rule 65 (ZooDims -> Dims .)
    NEQ             reduce using rule 65 (ZooDims -> Dims .)
    AND             reduce using rule 65 (ZooDims -> Dims .)
    XOR             reduce using rule 65 (ZooDims -> Dims .)
    OR              reduce using rule 65 (ZooDims -> Dims .)
    LAND            reduce using rule 65 (ZooDims -> Dims .)
    QUES            reduce using rule 65 (ZooDims -> Dims .)
    LOR             reduce using rule 65 (ZooDims -> Dims .)
    RPAREN          reduce using rule 65 (ZooDims -> Dims .)
    COMMA           reduce using rule 65 (ZooDims -> Dims .)
    RBRACE          reduce using rule 65 (ZooDims -> Dims .)
    COLON           reduce using rule 65 (ZooDims -> Dims .)
    RBRACK          reduce using rule 65 (ZooDims -> Dims .)
    SEMICOLON       reduce using rule 65 (ZooDims -> Dims .)
    ASSIGN          reduce using rule 65 (ZooDims -> Dims .)
    THROWS          reduce using rule 65 (ZooDims -> Dims .)
    LBRACE          reduce using rule 65 (ZooDims -> Dims .)
    DEFAULT         reduce using rule 65 (ZooDims -> Dims .)


state 674

    (66) ZooDims -> empty .

    PERIOD          reduce using rule 66 (ZooDims -> empty .)
    COLON_SEP       reduce using rule 66 (ZooDims -> empty .)
    INC             reduce using rule 66 (ZooDims -> empty .)
    DEC             reduce using rule 66 (ZooDims -> empty .)
    MUL             reduce using rule 66 (ZooDims -> empty .)
    QUO             reduce using rule 66 (ZooDims -> empty .)
    REM             reduce using rule 66 (ZooDims -> empty .)
    ADD             reduce using rule 66 (ZooDims -> empty .)
    SUB             reduce using rule 66 (ZooDims -> empty .)
    SHL             reduce using rule 66 (ZooDims -> empty .)
    SHR             reduce using rule 66 (ZooDims -> empty .)
    SHR_UN          reduce using rule 66 (ZooDims -> empty .)
    LSS             reduce using rule 66 (ZooDims -> empty .)
    GTR             reduce using rule 66 (ZooDims -> empty .)
    LEQ             reduce using rule 66 (ZooDims -> empty .)
    GEQ             reduce using rule 66 (ZooDims -> empty .)
    INSTANCEOF      reduce using rule 66 (ZooDims -> empty .)
    EQL             reduce using rule 66 (ZooDims -> empty .)
    NEQ             reduce using rule 66 (ZooDims -> empty .)
    AND             reduce using rule 66 (ZooDims -> empty .)
    XOR             reduce using rule 66 (ZooDims -> empty .)
    OR              reduce using rule 66 (ZooDims -> empty .)
    LAND            reduce using rule 66 (ZooDims -> empty .)
    QUES            reduce using rule 66 (ZooDims -> empty .)
    LOR             reduce using rule 66 (ZooDims -> empty .)
    RPAREN          reduce using rule 66 (ZooDims -> empty .)
    COMMA           reduce using rule 66 (ZooDims -> empty .)
    RBRACE          reduce using rule 66 (ZooDims -> empty .)
    COLON           reduce using rule 66 (ZooDims -> empty .)
    RBRACK          reduce using rule 66 (ZooDims -> empty .)
    SEMICOLON       reduce using rule 66 (ZooDims -> empty .)
    ASSIGN          reduce using rule 66 (ZooDims -> empty .)
    THROWS          reduce using rule 66 (ZooDims -> empty .)
    LBRACE          reduce using rule 66 (ZooDims -> empty .)
    DEFAULT         reduce using rule 66 (ZooDims -> empty .)


state 675

    (164) ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .

    PERIOD          reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    COLON_SEP       reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    INC             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    DEC             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    MUL             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    QUO             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    REM             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    ADD             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SUB             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SHL             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SHR             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SHR_UN          reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LSS             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    GTR             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LEQ             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    GEQ             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    INSTANCEOF      reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    EQL             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    NEQ             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    AND             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    XOR             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    OR              reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LAND            reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    QUES            reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LOR             reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    RPAREN          reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    COMMA           reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    RBRACE          reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    COLON           reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    RBRACK          reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SEMICOLON       reduce using rule 164 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)


state 676

    (96) ArrayInitializer -> LBRACE . ZooVariableInitializerList ZooCOMMA RBRACE
    (97) ZooVariableInitializerList -> . VariableInitializerList
    (98) ZooVariableInitializerList -> . empty
    (99) VariableInitializerList -> . VariableInitializer COMMAVariableInitializerS
    (1) empty -> .
    (348) VariableInitializer -> . Expression
    (349) VariableInitializer -> . ArrayInitializer
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (96) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    LBRACE          shift and go to state 676
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooVariableInitializerList     shift and go to state 825
    VariableInitializerList        shift and go to state 826
    empty                          shift and go to state 827
    VariableInitializer            shift and go to state 828
    Expression                     shift and go to state 829
    ArrayInitializer               shift and go to state 830
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 677

    (167) DimExprS -> DimExpr . DimExprS
    (167) DimExprS -> . DimExpr DimExprS
    (168) DimExprS -> . empty
    (169) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (170) DimExpr -> . LBRACK Expression RBRACK
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACK          shift and go to state 461
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    DimExpr                        shift and go to state 677
    DimExprS                       shift and go to state 831
    empty                          shift and go to state 679
    AnnotationS                    shift and go to state 680
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 678

    (166) DimExprs -> DimExpr DimExprS .

    LBRACE          reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    ATRATE          reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    PERIOD          reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    COLON_SEP       reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    INC             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    DEC             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    MUL             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    QUO             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    REM             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    ADD             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    SUB             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    SHL             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    SHR             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    SHR_UN          reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    LSS             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    GTR             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    LEQ             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    GEQ             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    INSTANCEOF      reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    EQL             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    NEQ             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    AND             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    XOR             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    OR              reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    LAND            reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    QUES            reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    LOR             reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    RPAREN          reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    COMMA           reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    RBRACE          reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    COLON           reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    RBRACK          reduce using rule 166 (DimExprs -> DimExpr DimExprS .)
    SEMICOLON       reduce using rule 166 (DimExprs -> DimExpr DimExprS .)


state 679

    (168) DimExprS -> empty .

    LBRACE          reduce using rule 168 (DimExprS -> empty .)
    ATRATE          reduce using rule 168 (DimExprS -> empty .)
    PERIOD          reduce using rule 168 (DimExprS -> empty .)
    COLON_SEP       reduce using rule 168 (DimExprS -> empty .)
    INC             reduce using rule 168 (DimExprS -> empty .)
    DEC             reduce using rule 168 (DimExprS -> empty .)
    MUL             reduce using rule 168 (DimExprS -> empty .)
    QUO             reduce using rule 168 (DimExprS -> empty .)
    REM             reduce using rule 168 (DimExprS -> empty .)
    ADD             reduce using rule 168 (DimExprS -> empty .)
    SUB             reduce using rule 168 (DimExprS -> empty .)
    SHL             reduce using rule 168 (DimExprS -> empty .)
    SHR             reduce using rule 168 (DimExprS -> empty .)
    SHR_UN          reduce using rule 168 (DimExprS -> empty .)
    LSS             reduce using rule 168 (DimExprS -> empty .)
    GTR             reduce using rule 168 (DimExprS -> empty .)
    LEQ             reduce using rule 168 (DimExprS -> empty .)
    GEQ             reduce using rule 168 (DimExprS -> empty .)
    INSTANCEOF      reduce using rule 168 (DimExprS -> empty .)
    EQL             reduce using rule 168 (DimExprS -> empty .)
    NEQ             reduce using rule 168 (DimExprS -> empty .)
    AND             reduce using rule 168 (DimExprS -> empty .)
    XOR             reduce using rule 168 (DimExprS -> empty .)
    OR              reduce using rule 168 (DimExprS -> empty .)
    LAND            reduce using rule 168 (DimExprS -> empty .)
    QUES            reduce using rule 168 (DimExprS -> empty .)
    LOR             reduce using rule 168 (DimExprS -> empty .)
    RPAREN          reduce using rule 168 (DimExprS -> empty .)
    COMMA           reduce using rule 168 (DimExprS -> empty .)
    RBRACE          reduce using rule 168 (DimExprS -> empty .)
    COLON           reduce using rule 168 (DimExprS -> empty .)
    RBRACK          reduce using rule 168 (DimExprS -> empty .)
    SEMICOLON       reduce using rule 168 (DimExprS -> empty .)


state 680

    (169) DimExpr -> AnnotationS . LBRACK Expression RBRACK

    LBRACK          shift and go to state 681


state 681

    (169) DimExpr -> AnnotationS LBRACK . Expression RBRACK
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    AnnotationS                    shift and go to state 167
    Expression                     shift and go to state 832
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 682

    (170) DimExpr -> LBRACK Expression . RBRACK

    RBRACK          shift and go to state 833


state 683

    (163) ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .

    PERIOD          reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    COLON_SEP       reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    INC             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    DEC             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    MUL             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    QUO             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    REM             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    ADD             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    SUB             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    SHL             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    SHR             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    SHR_UN          reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    LSS             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    GTR             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    LEQ             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    GEQ             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    INSTANCEOF      reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    EQL             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    NEQ             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    AND             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    XOR             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    OR              reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    LAND            reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    QUES            reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    LOR             reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    RPAREN          reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    COMMA           reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    RBRACE          reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    COLON           reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    RBRACK          reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)
    SEMICOLON       reduce using rule 163 (ArrayCreationExpression -> NEW ClassType DimExprs ZooDims .)


state 684

    (165) ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .

    PERIOD          reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    COLON_SEP       reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    INC             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    DEC             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    MUL             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    QUO             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    REM             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    ADD             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    SUB             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    SHL             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    SHR             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    SHR_UN          reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    LSS             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    GTR             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    LEQ             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    GEQ             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    INSTANCEOF      reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    EQL             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    NEQ             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    AND             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    XOR             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    OR              reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    LAND            reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    QUES            reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    LOR             reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    RPAREN          reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    COMMA           reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    RBRACE          reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    COLON           reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    RBRACK          reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)
    SEMICOLON       reduce using rule 165 (ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer .)


state 685

    (124) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN . ZooArgumentList RPAREN ZooClassBody
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 834
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 686

    (127) ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT . PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
    (133) PERIODAnnotationSIDENTS -> . PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
    (134) PERIODAnnotationSIDENTS -> . PERIOD IDENT PERIODAnnotationSIDENTS
    (135) PERIODAnnotationSIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 688
    LSS             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)

    PERIODAnnotationSIDENTS        shift and go to state 835
    empty                          shift and go to state 689

state 687

    (128) ClassOrInterfaceTypeToInstantiate -> IDENT PERIODAnnotationSIDENTS . ZooTypeArgumentsOrDiamond
    (131) ZooTypeArgumentsOrDiamond -> . TypeArgumentsOrDiamond
    (132) ZooTypeArgumentsOrDiamond -> . empty
    (136) TypeArgumentsOrDiamond -> . TypeArguments
    (137) TypeArgumentsOrDiamond -> . LSS GTR
    (1) empty -> .
    (506) TypeArguments -> . LSS TypeArgumentList GTR

    LSS             shift and go to state 840
    LPAREN          reduce using rule 1 (empty -> .)

    ZooTypeArgumentsOrDiamond      shift and go to state 836
    TypeArgumentsOrDiamond         shift and go to state 837
    empty                          shift and go to state 838
    TypeArguments                  shift and go to state 839

state 688

    (133) PERIODAnnotationSIDENTS -> PERIOD . AnnotationS IDENT PERIODAnnotationSIDENTS
    (134) PERIODAnnotationSIDENTS -> PERIOD . IDENT PERIODAnnotationSIDENTS
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 842
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 841
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 689

    (135) PERIODAnnotationSIDENTS -> empty .

    LSS             reduce using rule 135 (PERIODAnnotationSIDENTS -> empty .)
    LPAREN          reduce using rule 135 (PERIODAnnotationSIDENTS -> empty .)


state 690

    (160) MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .

    LBRACK          reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    PERIOD          reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    COLON_SEP       reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    INC             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    DEC             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    MUL             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    QUO             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    REM             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    ADD             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SUB             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SHL             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SHR             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SHR_UN          reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LSS             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    GTR             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LEQ             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    GEQ             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    INSTANCEOF      reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    EQL             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    NEQ             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    AND             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    XOR             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    OR              reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LAND            reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    QUES            reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LOR             reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    RPAREN          reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    COMMA           reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    RBRACE          reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    COLON           reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    RBRACK          reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SEMICOLON       reduce using rule 160 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)


state 691

    (115) ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .

    LBRACK          reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    PERIOD          reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    COLON_SEP       reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    INC             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    DEC             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    MUL             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    QUO             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    REM             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    ADD             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SUB             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SHL             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SHR             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SHR_UN          reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LSS             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    GTR             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LEQ             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    GEQ             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    INSTANCEOF      reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    EQL             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    NEQ             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    AND             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    XOR             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    OR              reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LAND            reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    QUES            reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LOR             reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    RPAREN          reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    COMMA           reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    RBRACE          reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    COLON           reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    RBRACK          reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SEMICOLON       reduce using rule 115 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)


state 692

    (116) ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .

    LBRACK          reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    PERIOD          reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    COLON_SEP       reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    INC             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    DEC             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    MUL             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    QUO             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    REM             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    ADD             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SUB             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SHL             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SHR             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SHR_UN          reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LSS             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    GTR             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LEQ             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    GEQ             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    INSTANCEOF      reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    EQL             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    NEQ             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    AND             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    XOR             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    OR              reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LAND            reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    QUES            reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LOR             reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    RPAREN          reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    COMMA           reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    RBRACE          reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    COLON           reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    RBRACK          reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SEMICOLON       reduce using rule 116 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)


state 693

    (149) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 843


state 694

    (158) MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 158 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)


state 695

    (308) TypeParameters -> LSS TypeParameterList GTR .

    SEMICOLON       reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    FINAL           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    EXTENDS         reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    PUBLIC          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    PROTECTED       reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    PRIVATE         reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    ABSTRACT        reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    STATIC          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    STRICTFP        reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    ATRATE          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    CLASS           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    ENUM            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    IMPLEMENTS      reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    LBRACE          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    INTERFACE       reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    $end            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    TRANSIENT       reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    VOLATILE        reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    SYNCHRONIZED    reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    NATIVE          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    LSS             reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    IDENT           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    BOOLEAN         reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    BYTE            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    SHORT           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    INT             reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    LONG            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    CHAR            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    FLOAT           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    DOUBLE          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    VOID            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    RBRACE          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    IF              reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    WHILE           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    ASSERT          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    SWITCH          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    DO              reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    BREAK           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    CONTINUE        reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    RETURN          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    THROW           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    TRY             reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    FOR             reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    INC             reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    DEC             reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    SUPER           reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    PERIOD          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    NEW             reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    THIS            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    LPAREN          reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    BOOL_LIT        reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    NULL_LIT        reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    DECIMAL_LIT     reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    HEX_LIT         reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    OCTAL_LIT       reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    BINARY_LIT      reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    FLOAT_DEC_LIT   reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    FLOAT_HEX_LIT   reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    STRING_LIT      reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    CHAR_LIT        reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    CASE            reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)
    DEFAULT         reduce using rule 308 (TypeParameters -> LSS TypeParameterList GTR .)


state 696

    (311) TypeParameterList -> TypeParameter COMMMATypeParameterS .

    GTR             reduce using rule 311 (TypeParameterList -> TypeParameter COMMMATypeParameterS .)


state 697

    (309) COMMMATypeParameterS -> COMMA . TypeParameter COMMMATypeParameterS
    (496) TypeParameter -> . TypeParameterModifierS IDENT ZooTypeBound
    (497) TypeParameterModifierS -> . TypeParameterModifier TypeParameterModifierS
    (498) TypeParameterModifierS -> . empty
    (501) TypeParameterModifier -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeParameter                  shift and go to state 844
    TypeParameterModifierS         shift and go to state 477
    TypeParameterModifier          shift and go to state 478
    empty                          shift and go to state 479
    Annotation                     shift and go to state 480
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 698

    (310) COMMMATypeParameterS -> empty .

    GTR             reduce using rule 310 (COMMMATypeParameterS -> empty .)


state 699

    (496) TypeParameter -> TypeParameterModifierS IDENT . ZooTypeBound
    (499) ZooTypeBound -> . TypeBound
    (500) ZooTypeBound -> . empty
    (502) TypeBound -> . EXTENDS TypeVariable
    (503) TypeBound -> . EXTENDS IDENT
    (504) TypeBound -> . EXTENDS ClassType AdditionalBoundS
    (1) empty -> .

    EXTENDS         shift and go to state 848
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    ZooTypeBound                   shift and go to state 845
    TypeBound                      shift and go to state 846
    empty                          shift and go to state 847

state 700

    (497) TypeParameterModifierS -> TypeParameterModifier TypeParameterModifierS .

    IDENT           reduce using rule 497 (TypeParameterModifierS -> TypeParameterModifier TypeParameterModifierS .)


state 701

    (450) EnumBody -> LBRACE ZooEnumConstantList . ZooCOMMA ZooEnumBodyDeclarations RBRACE
    (446) ZooCOMMA -> . COMMA
    (447) ZooCOMMA -> . empty
    (1) empty -> .

    COMMA           shift and go to state 408
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

    ZooCOMMA                       shift and go to state 849
    empty                          shift and go to state 409

state 702

    (444) ZooEnumConstantList -> EnumConstantList .

    COMMA           reduce using rule 444 (ZooEnumConstantList -> EnumConstantList .)
    SEMICOLON       reduce using rule 444 (ZooEnumConstantList -> EnumConstantList .)
    RBRACE          reduce using rule 444 (ZooEnumConstantList -> EnumConstantList .)


state 703

    (445) ZooEnumConstantList -> empty .
    (456) EnumConstantModifierS -> empty .

    COMMA           reduce using rule 445 (ZooEnumConstantList -> empty .)
    SEMICOLON       reduce using rule 445 (ZooEnumConstantList -> empty .)
    RBRACE          reduce using rule 445 (ZooEnumConstantList -> empty .)
    IDENT           reduce using rule 456 (EnumConstantModifierS -> empty .)


state 704

    (453) EnumConstantList -> EnumConstant . COMMAEnumConstantS
    (451) COMMAEnumConstantS -> . COMMA EnumConstant COMMAEnumConstantS
    (452) COMMAEnumConstantS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 851
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAEnumConstantS             shift and go to state 850
    empty                          shift and go to state 852

state 705

    (454) EnumConstant -> EnumConstantModifierS . IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody

    IDENT           shift and go to state 853


state 706

    (455) EnumConstantModifierS -> EnumConstantModifier . EnumConstantModifierS
    (455) EnumConstantModifierS -> . EnumConstantModifier EnumConstantModifierS
    (456) EnumConstantModifierS -> . empty
    (461) EnumConstantModifier -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    EnumConstantModifier           shift and go to state 706
    EnumConstantModifierS          shift and go to state 854
    empty                          shift and go to state 855
    Annotation                     shift and go to state 707
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 707

    (461) EnumConstantModifier -> Annotation .

    ATRATE          reduce using rule 461 (EnumConstantModifier -> Annotation .)
    IDENT           reduce using rule 461 (EnumConstantModifier -> Annotation .)


state 708

    (518) Block -> LBRACE ZooBlockStatements RBRACE .

    SEMICOLON       reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LBRACE          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    STATIC          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    PUBLIC          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    PROTECTED       reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    PRIVATE         reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FINAL           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    TRANSIENT       reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    VOLATILE        reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ABSTRACT        reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SYNCHRONIZED    reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NATIVE          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    STRICTFP        reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    EXTENDS         reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ATRATE          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LSS             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    IDENT           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BOOLEAN         reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BYTE            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHORT           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INT             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LONG            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CHAR            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FLOAT           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DOUBLE          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    VOID            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CLASS           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ENUM            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    IMPLEMENTS      reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INTERFACE       reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RBRACE          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    IF              reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    WHILE           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ASSERT          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SWITCH          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DO              reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BREAK           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CONTINUE        reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RETURN          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    THROW           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    TRY             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FOR             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INC             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DEC             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SUPER           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    PERIOD          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NEW             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    THIS            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LPAREN          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BOOL_LIT        reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NULL_LIT        reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DECIMAL_LIT     reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    HEX_LIT         reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    OCTAL_LIT       reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BINARY_LIT      reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    STRING_LIT      reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CHAR_LIT        reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    MUL             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    QUO             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    REM             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ADD             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SUB             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHL             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHR             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHR_UN          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    GTR             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LEQ             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    GEQ             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INSTANCEOF      reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    EQL             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NEQ             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    AND             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    XOR             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    OR              reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LAND            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    QUES            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LOR             reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RPAREN          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    COMMA           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    COLON           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RBRACK          reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CASE            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DEFAULT         reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CATCH           reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FINALLY         reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ELSE            reduce using rule 518 (Block -> LBRACE ZooBlockStatements RBRACE .)


state 709

    (522) BlockStatementS -> BlockStatement . BlockStatementS
    (522) BlockStatementS -> . BlockStatement BlockStatementS
    (523) BlockStatementS -> . empty
    (524) BlockStatement -> . LocalVariableDeclarationStatement
    (525) BlockStatement -> . ClassDeclaration
    (526) BlockStatement -> . Statement
    (1) empty -> .
    (527) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (528) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> . VariableModifierS IDENT VariableDeclaratorList
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    FINAL           shift and go to state 531
    EXTENDS         shift and go to state 45
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    ATRATE          shift and go to state 13
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    BlockStatement                 shift and go to state 709
    BlockStatementS                shift and go to state 856
    empty                          shift and go to state 711
    LocalVariableDeclarationStatement shift and go to state 487
    ClassDeclaration               shift and go to state 488
    Statement                      shift and go to state 489
    LocalVariableDeclaration       shift and go to state 490
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    VariableModifierS              shift and go to state 498
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    VariableModifier               shift and go to state 517
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Annotation                     shift and go to state 530
    InterfaceModifier              shift and go to state 73
    ClassType                      shift and go to state 140
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 710

    (521) BlockStatements -> BlockStatement BlockStatementS .

    RBRACE          reduce using rule 521 (BlockStatements -> BlockStatement BlockStatementS .)
    CASE            reduce using rule 521 (BlockStatements -> BlockStatement BlockStatementS .)
    DEFAULT         reduce using rule 521 (BlockStatements -> BlockStatement BlockStatementS .)


state 711

    (523) BlockStatementS -> empty .
    (531) VariableModifierS -> empty .
    (442) ClassModifierS -> empty .
    (301) ZooSuperClass -> empty .

    RBRACE          reduce using rule 523 (BlockStatementS -> empty .)
    CASE            reduce using rule 523 (BlockStatementS -> empty .)
    DEFAULT         reduce using rule 523 (BlockStatementS -> empty .)
    IDENT           reduce using rule 531 (VariableModifierS -> empty .)
    BOOLEAN         reduce using rule 531 (VariableModifierS -> empty .)
    BYTE            reduce using rule 531 (VariableModifierS -> empty .)
    SHORT           reduce using rule 531 (VariableModifierS -> empty .)
    INT             reduce using rule 531 (VariableModifierS -> empty .)
    LONG            reduce using rule 531 (VariableModifierS -> empty .)
    CHAR            reduce using rule 531 (VariableModifierS -> empty .)
    FLOAT           reduce using rule 531 (VariableModifierS -> empty .)
    DOUBLE          reduce using rule 531 (VariableModifierS -> empty .)
    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 301 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 301 (ZooSuperClass -> empty .)


state 712

    (527) LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .

    IDENT           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    IF              reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    WHILE           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    LBRACE          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SEMICOLON       reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ASSERT          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SWITCH          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DO              reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BREAK           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CONTINUE        reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    RETURN          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SYNCHRONIZED    reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    THROW           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    TRY             reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FOR             reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FINAL           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    EXTENDS         reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    PUBLIC          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    PROTECTED       reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    PRIVATE         reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ABSTRACT        reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    STATIC          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    STRICTFP        reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    INC             reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DEC             reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SUPER           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ATRATE          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    PERIOD          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    NEW             reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    THIS            reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    LPAREN          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BOOL_LIT        reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    NULL_LIT        reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DECIMAL_LIT     reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    HEX_LIT         reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    OCTAL_LIT       reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BINARY_LIT      reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    STRING_LIT      reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CHAR_LIT        reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BOOLEAN         reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    VOID            reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BYTE            reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SHORT           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    INT             reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    LONG            reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CHAR            reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FLOAT           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DOUBLE          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CLASS           reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ENUM            reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    IMPLEMENTS      reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    RBRACE          reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CASE            reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DEFAULT         reduce using rule 527 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)


state 713

    (528) LocalVariableDeclaration -> VariableModifierS UnannType . VariableDeclaratorList
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorList         shift and go to state 857
    VariableDeclarator             shift and go to state 746
    VariableDeclaratorId           shift and go to state 747

state 714

    (529) LocalVariableDeclaration -> VariableModifierS IDENT . VariableDeclaratorList
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 748
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    VariableDeclaratorList         shift and go to state 858
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    VariableDeclarator             shift and go to state 746
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    VariableDeclaratorId           shift and go to state 747
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 715

    (556) LabeledStatement -> IDENT COLON . Statement
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 859
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 716

    (147) MethodInvocation -> IDENT PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ClassInstanceCreationExpression -> IDENT PERIOD . UnqualifiedClassInstanceCreationExpression
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    NEW             shift and go to state 416
    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 415
    UnqualifiedClassInstanceCreationExpression shift and go to state 414
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 717

    (566) IfThenStatement -> IF LPAREN . Expression RPAREN Statement
    (567) IfThenElseStatement -> IF LPAREN . Expression RPAREN StatementNoShortIf ELSE Statement
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 860
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 718

    (582) WhileStatement -> WHILE LPAREN . Expression RPAREN Statement
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 861
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 719

    (558) ExpressionStatement -> StatementExpression SEMICOLON .

    IDENT           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    IF              reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    WHILE           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    LBRACE          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SEMICOLON       reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ASSERT          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SWITCH          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DO              reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BREAK           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CONTINUE        reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    RETURN          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    THROW           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    TRY             reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FOR             reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FINAL           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    EXTENDS         reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    PUBLIC          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    PROTECTED       reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    PRIVATE         reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ABSTRACT        reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    STATIC          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    STRICTFP        reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    INC             reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DEC             reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SUPER           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ATRATE          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    PERIOD          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    NEW             reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    THIS            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    LPAREN          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BOOL_LIT        reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    NULL_LIT        reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    HEX_LIT         reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    OCTAL_LIT       reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BINARY_LIT      reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    STRING_LIT      reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CHAR_LIT        reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BOOLEAN         reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    VOID            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BYTE            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SHORT           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    INT             reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    LONG            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CHAR            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FLOAT           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DOUBLE          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CLASS           reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ENUM            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    IMPLEMENTS      reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    RBRACE          reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CASE            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DEFAULT         reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ELSE            reduce using rule 558 (ExpressionStatement -> StatementExpression SEMICOLON .)


state 720

    (569) AssertStatement -> ASSERT Expression . SEMICOLON
    (570) AssertStatement -> ASSERT Expression . COLON Expression SEMICOLON

    SEMICOLON       shift and go to state 862
    COLON           shift and go to state 863


state 721

    (571) SwitchStatement -> SWITCH LPAREN . Expression RPAREN SwitchBlock
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 864
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 722

    (584) DoStatement -> DO Statement . WHILE LPAREN Expression RPAREN SEMICOLON

    WHILE           shift and go to state 865


state 723

    (607) BreakStatement -> BREAK ZooIDENT . SEMICOLON

    SEMICOLON       shift and go to state 866


state 724

    (608) ZooIDENT -> IDENT .

    SEMICOLON       reduce using rule 608 (ZooIDENT -> IDENT .)


state 725

    (609) ZooIDENT -> empty .

    SEMICOLON       reduce using rule 609 (ZooIDENT -> empty .)


state 726

    (610) ContinueStatement -> CONTINUE ZooIDENT . SEMICOLON

    SEMICOLON       shift and go to state 867


state 727

    (611) ReturnStatement -> RETURN ZooExpression . SEMICOLON

    SEMICOLON       shift and go to state 868


state 728

    (592) ZooExpression -> Expression .

    SEMICOLON       reduce using rule 592 (ZooExpression -> Expression .)


state 729

    (593) ZooExpression -> empty .

    SEMICOLON       reduce using rule 593 (ZooExpression -> empty .)


state 730

    (613) SynchronizedStatement -> SYNCHRONIZED LPAREN . Expression RPAREN Block
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 869
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 731

    (612) ThrowStatement -> THROW Expression . SEMICOLON

    SEMICOLON       shift and go to state 870


state 732

    (614) TryStatement -> TRY Block . Catches
    (615) TryStatement -> TRY Block . ZooCatches Finally
    (619) Catches -> . CatchClause CatchClauseS
    (617) ZooCatches -> . Catches
    (618) ZooCatches -> . empty
    (622) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block
    (1) empty -> .

    CATCH           shift and go to state 875
    FINALLY         reduce using rule 1 (empty -> .)

    Catches                        shift and go to state 871
    ZooCatches                     shift and go to state 872
    CatchClause                    shift and go to state 873
    empty                          shift and go to state 874

state 733

    (628) TryWithResourcesStatement -> TRY ResourceSpecification . Block ZooCatches ZooFinally
    (518) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 876

state 734

    (633) ResourceSpecification -> LPAREN . ResourceList ZooSEMICOLON RPAREN
    (634) ResourceList -> . Resource SEMICOLONResourceS
    (637) Resource -> . VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression
    (638) Resource -> . VariableModifierS IDENT VariableDeclaratorId ASSIGN Expression
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 377
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ResourceList                   shift and go to state 877
    Resource                       shift and go to state 878
    VariableModifierS              shift and go to state 879
    VariableModifier               shift and go to state 517
    empty                          shift and go to state 636
    Annotation                     shift and go to state 637
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 735

    (589) BasicForStatement -> FOR LPAREN . ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> FOR LPAREN . VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> FOR LPAREN . VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (594) ZooForInit -> . ForInit
    (595) ZooForInit -> . empty
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (597) ForInit -> . StatementExpressionList
    (598) ForInit -> . LocalVariableDeclaration
    (1) empty -> .
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (600) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (528) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> . VariableModifierS IDENT VariableDeclaratorList
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 377
    ATRATE          shift and go to state 13
    INC             shift and go to state 118
    DEC             shift and go to state 119
    IDENT           shift and go to state 882
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooForInit                     shift and go to state 880
    VariableModifierS              shift and go to state 881
    ForInit                        shift and go to state 883
    empty                          shift and go to state 884
    VariableModifier               shift and go to state 517
    StatementExpressionList        shift and go to state 885
    LocalVariableDeclaration       shift and go to state 886
    Annotation                     shift and go to state 887
    StatementExpression            shift and go to state 888
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    TypeName                       shift and go to state 540
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 736

    (145) MethodInvocation -> TypeName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> TypeName PERIOD . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) FieldAccess -> TypeName PERIOD . SUPER PERIOD IDENT
    (107) PrimaryNoNewArray -> TypeName PERIOD . THIS
    (159) MethodReference -> TypeName PERIOD . SUPER COLON_SEP ZooTypeArguments IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    SUPER           shift and go to state 889
    THIS            shift and go to state 351
    LSS             shift and go to state 181
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 353
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 737

    (146) MethodInvocation -> ExpressionName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (121) ClassInstanceCreationExpression -> ExpressionName PERIOD . UnqualifiedClassInstanceCreationExpression
    (296) ExpressionName -> ExpressionName PERIOD . IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 168
    NEW             shift and go to state 416
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 453
    UnqualifiedClassInstanceCreationExpression shift and go to state 452
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 738

    (148) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (123) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> Primary PERIOD . IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 449
    NEW             shift and go to state 416
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 450
    UnqualifiedClassInstanceCreationExpression shift and go to state 448
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 739

    (149) MethodInvocation -> SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (139) FieldAccess -> SUPER PERIOD . IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 471
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 472
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 740

    (425) ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows . ConstructorBody
    (431) ConstructorBody -> . LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE

    LBRACE          shift and go to state 891

    ConstructorBody                shift and go to state 890

state 741

    (378) ZooThrows -> Throws .

    LBRACE          reduce using rule 378 (ZooThrows -> Throws .)
    SEMICOLON       reduce using rule 378 (ZooThrows -> Throws .)


state 742

    (379) ZooThrows -> empty .

    LBRACE          reduce using rule 379 (ZooThrows -> empty .)
    SEMICOLON       reduce using rule 379 (ZooThrows -> empty .)


state 743

    (413) Throws -> THROWS . ExceptionTypeList
    (416) ExceptionTypeList -> . ExceptionType COMMAExceptionTypeS
    (417) ExceptionType -> . ClassType
    (418) ExceptionType -> . TypeVariable
    (419) ExceptionType -> . IDENT
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 896
    ATRATE          shift and go to state 13

    ExceptionTypeList              shift and go to state 892
    ExceptionType                  shift and go to state 893
    ClassType                      shift and go to state 894
    TypeVariable                   shift and go to state 895
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 744

    (430) ConstructorDeclarator -> ZooTypeParameters IDENT . LPAREN ZooFormalParameterList RPAREN

    LPAREN          shift and go to state 897


state 745

    (331) FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList . SEMICOLON

    SEMICOLON       shift and go to state 898


state 746

    (343) VariableDeclaratorList -> VariableDeclarator . COMMAVariableDeclaratorS
    (341) COMMAVariableDeclaratorS -> . COMMA VariableDeclarator COMMAVariableDeclaratorS
    (342) COMMAVariableDeclaratorS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 900
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAVariableDeclaratorS       shift and go to state 899
    empty                          shift and go to state 901

state 747

    (346) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (344) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (345) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    ASSIGN          shift and go to state 903
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 902
    empty                          shift and go to state 904

state 748

    (347) VariableDeclaratorId -> IDENT . ZooDims
    (65) ZooDims -> . Dims
    (66) ZooDims -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          shift and go to state 237
    ASSIGN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 905
    Dims                           shift and go to state 673
    empty                          shift and go to state 674
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 749

    (332) FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList . SEMICOLON

    SEMICOLON       shift and go to state 906


state 750

    (364) UnannArrayType -> IDENT Dims .

    IDENT           reduce using rule 364 (UnannArrayType -> IDENT Dims .)
    THIS            reduce using rule 364 (UnannArrayType -> IDENT Dims .)
    ELLIPSIS        reduce using rule 364 (UnannArrayType -> IDENT Dims .)
    ATRATE          reduce using rule 364 (UnannArrayType -> IDENT Dims .)


state 751

    (358) UnannClassType -> IDENT ZooTypeArguments .

    PERIOD          reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    IDENT           reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    THIS            reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    ELLIPSIS        reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)
    OR              reduce using rule 358 (UnannClassType -> IDENT ZooTypeArguments .)


state 752

    (367) MethodDeclaration -> MethodModifierS MethodHeader MethodBody .

    SEMICOLON       reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    LBRACE          reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    STATIC          reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    PUBLIC          reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    PROTECTED       reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    PRIVATE         reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    FINAL           reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    TRANSIENT       reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    VOLATILE        reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    ABSTRACT        reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    SYNCHRONIZED    reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    NATIVE          reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    STRICTFP        reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    EXTENDS         reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    ATRATE          reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    LSS             reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    IDENT           reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    BOOLEAN         reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    BYTE            reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    SHORT           reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    INT             reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    LONG            reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    CHAR            reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    FLOAT           reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    DOUBLE          reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    VOID            reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    CLASS           reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    ENUM            reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    IMPLEMENTS      reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    INTERFACE       reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    RBRACE          reduce using rule 367 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)


state 753

    (420) MethodBody -> Block .

    SEMICOLON       reduce using rule 420 (MethodBody -> Block .)
    LBRACE          reduce using rule 420 (MethodBody -> Block .)
    STATIC          reduce using rule 420 (MethodBody -> Block .)
    PUBLIC          reduce using rule 420 (MethodBody -> Block .)
    PROTECTED       reduce using rule 420 (MethodBody -> Block .)
    PRIVATE         reduce using rule 420 (MethodBody -> Block .)
    FINAL           reduce using rule 420 (MethodBody -> Block .)
    TRANSIENT       reduce using rule 420 (MethodBody -> Block .)
    VOLATILE        reduce using rule 420 (MethodBody -> Block .)
    ABSTRACT        reduce using rule 420 (MethodBody -> Block .)
    SYNCHRONIZED    reduce using rule 420 (MethodBody -> Block .)
    NATIVE          reduce using rule 420 (MethodBody -> Block .)
    STRICTFP        reduce using rule 420 (MethodBody -> Block .)
    EXTENDS         reduce using rule 420 (MethodBody -> Block .)
    ATRATE          reduce using rule 420 (MethodBody -> Block .)
    LSS             reduce using rule 420 (MethodBody -> Block .)
    IDENT           reduce using rule 420 (MethodBody -> Block .)
    BOOLEAN         reduce using rule 420 (MethodBody -> Block .)
    BYTE            reduce using rule 420 (MethodBody -> Block .)
    SHORT           reduce using rule 420 (MethodBody -> Block .)
    INT             reduce using rule 420 (MethodBody -> Block .)
    LONG            reduce using rule 420 (MethodBody -> Block .)
    CHAR            reduce using rule 420 (MethodBody -> Block .)
    FLOAT           reduce using rule 420 (MethodBody -> Block .)
    DOUBLE          reduce using rule 420 (MethodBody -> Block .)
    VOID            reduce using rule 420 (MethodBody -> Block .)
    CLASS           reduce using rule 420 (MethodBody -> Block .)
    ENUM            reduce using rule 420 (MethodBody -> Block .)
    IMPLEMENTS      reduce using rule 420 (MethodBody -> Block .)
    INTERFACE       reduce using rule 420 (MethodBody -> Block .)
    RBRACE          reduce using rule 420 (MethodBody -> Block .)
    DEFAULT         reduce using rule 420 (MethodBody -> Block .)


state 754

    (421) MethodBody -> SEMICOLON .

    SEMICOLON       reduce using rule 421 (MethodBody -> SEMICOLON .)
    LBRACE          reduce using rule 421 (MethodBody -> SEMICOLON .)
    STATIC          reduce using rule 421 (MethodBody -> SEMICOLON .)
    PUBLIC          reduce using rule 421 (MethodBody -> SEMICOLON .)
    PROTECTED       reduce using rule 421 (MethodBody -> SEMICOLON .)
    PRIVATE         reduce using rule 421 (MethodBody -> SEMICOLON .)
    FINAL           reduce using rule 421 (MethodBody -> SEMICOLON .)
    TRANSIENT       reduce using rule 421 (MethodBody -> SEMICOLON .)
    VOLATILE        reduce using rule 421 (MethodBody -> SEMICOLON .)
    ABSTRACT        reduce using rule 421 (MethodBody -> SEMICOLON .)
    SYNCHRONIZED    reduce using rule 421 (MethodBody -> SEMICOLON .)
    NATIVE          reduce using rule 421 (MethodBody -> SEMICOLON .)
    STRICTFP        reduce using rule 421 (MethodBody -> SEMICOLON .)
    EXTENDS         reduce using rule 421 (MethodBody -> SEMICOLON .)
    ATRATE          reduce using rule 421 (MethodBody -> SEMICOLON .)
    LSS             reduce using rule 421 (MethodBody -> SEMICOLON .)
    IDENT           reduce using rule 421 (MethodBody -> SEMICOLON .)
    BOOLEAN         reduce using rule 421 (MethodBody -> SEMICOLON .)
    BYTE            reduce using rule 421 (MethodBody -> SEMICOLON .)
    SHORT           reduce using rule 421 (MethodBody -> SEMICOLON .)
    INT             reduce using rule 421 (MethodBody -> SEMICOLON .)
    LONG            reduce using rule 421 (MethodBody -> SEMICOLON .)
    CHAR            reduce using rule 421 (MethodBody -> SEMICOLON .)
    FLOAT           reduce using rule 421 (MethodBody -> SEMICOLON .)
    DOUBLE          reduce using rule 421 (MethodBody -> SEMICOLON .)
    VOID            reduce using rule 421 (MethodBody -> SEMICOLON .)
    CLASS           reduce using rule 421 (MethodBody -> SEMICOLON .)
    ENUM            reduce using rule 421 (MethodBody -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 421 (MethodBody -> SEMICOLON .)
    INTERFACE       reduce using rule 421 (MethodBody -> SEMICOLON .)
    RBRACE          reduce using rule 421 (MethodBody -> SEMICOLON .)
    DEFAULT         reduce using rule 421 (MethodBody -> SEMICOLON .)


state 755

    (380) MethodHeader -> Result MethodDeclarator . ZooThrows
    (378) ZooThrows -> . Throws
    (379) ZooThrows -> . empty
    (413) Throws -> . THROWS ExceptionTypeList
    (1) empty -> .

    THROWS          shift and go to state 743
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    ZooThrows                      shift and go to state 907
    Throws                         shift and go to state 741
    empty                          shift and go to state 742

state 756

    (388) MethodDeclarator -> IDENT . LPAREN ZooFormalParameterList RPAREN ZooDims

    LPAREN          shift and go to state 908


state 757

    (381) MethodHeader -> TypeParameters AnnotationS . Result MethodDeclarator ZooThrows
    (383) Result -> . UnannType
    (384) Result -> . IDENT
    (385) Result -> . VOID
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 558
    VOID            shift and go to state 559
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    Result                         shift and go to state 909
    UnannType                      shift and go to state 557
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 758

    (382) MethodHeader -> TypeParameters Result . MethodDeclarator ZooThrows
    (388) MethodDeclarator -> . IDENT LPAREN ZooFormalParameterList RPAREN ZooDims

    IDENT           shift and go to state 756

    MethodDeclarator               shift and go to state 910

state 759

    (314) COMMAInterfaceTypeS -> COMMA ClassType COMMAInterfaceTypeS .

    LBRACE          reduce using rule 314 (COMMAInterfaceTypeS -> COMMA ClassType COMMAInterfaceTypeS .)


state 760

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .

    SEMICOLON       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    FINAL           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    EXTENDS         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    PUBLIC          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    PROTECTED       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    PRIVATE         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    ABSTRACT        reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    STATIC          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    STRICTFP        reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    ATRATE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    CLASS           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    ENUM            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    IMPLEMENTS      reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    LBRACE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    INTERFACE       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    $end            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    TRANSIENT       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    VOLATILE        reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    SYNCHRONIZED    reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    NATIVE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    LSS             reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    IDENT           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    BOOLEAN         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    BYTE            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    SHORT           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    INT             reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    LONG            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    CHAR            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    FLOAT           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    DOUBLE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    VOID            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    RBRACE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    DEFAULT         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)


state 761

    (29) InterfaceBody -> LBRACE . InterfaceMemberDeclarationS RBRACE
    (30) InterfaceMemberDeclarationS -> . InterfaceMemberDeclaration InterfaceMemberDeclarationS
    (31) InterfaceMemberDeclarationS -> . empty
    (32) InterfaceMemberDeclaration -> . ConstantDeclaration
    (33) InterfaceMemberDeclaration -> . InterfaceMethodDeclaration
    (34) InterfaceMemberDeclaration -> . ClassDeclaration
    (35) InterfaceMemberDeclaration -> . InterfaceDeclaration
    (36) InterfaceMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (38) ConstantDeclaration -> . ConstantModifierS IDENT VariableDeclaratorList SEMICOLON
    (45) InterfaceMethodDeclaration -> . InterfaceMethodModifierS MethodHeader MethodBody
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (39) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (40) ConstantModifierS -> . empty
    (46) InterfaceMethodModifierS -> . InterfaceMethodModifier InterfaceMethodModifierS
    (47) InterfaceMethodModifierS -> . empty
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (41) ConstantModifier -> . Annotation
    (42) ConstantModifier -> . PUBLIC
    (43) ConstantModifier -> . STATIC
    (44) ConstantModifier -> . FINAL
    (48) InterfaceMethodModifier -> . Annotation
    (49) InterfaceMethodModifier -> . PUBLIC
    (50) InterfaceMethodModifier -> . ABSTRACT
    (51) InterfaceMethodModifier -> . DEFAULT
    (52) InterfaceMethodModifier -> . STATIC
    (53) InterfaceMethodModifier -> . STRICTFP
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 918
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 922
    STATIC          shift and go to state 923
    FINAL           shift and go to state 779
    ABSTRACT        shift and go to state 924
    DEFAULT         shift and go to state 925
    STRICTFP        shift and go to state 926
    EXTENDS         shift and go to state 45
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    InterfaceMemberDeclarationS    shift and go to state 911
    InterfaceMemberDeclaration     shift and go to state 912
    empty                          shift and go to state 913
    ConstantDeclaration            shift and go to state 914
    InterfaceMethodDeclaration     shift and go to state 915
    ClassDeclaration               shift and go to state 916
    InterfaceDeclaration           shift and go to state 917
    ConstantModifierS              shift and go to state 772
    InterfaceMethodModifierS       shift and go to state 919
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstantModifier               shift and go to state 774
    InterfaceMethodModifier        shift and go to state 920
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 921
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 762

    (28) ExtendsInterfaces -> EXTENDS InterfaceTypeList .

    LBRACE          reduce using rule 28 (ExtendsInterfaces -> EXTENDS InterfaceTypeList .)


state 763

    (55) AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS . RBRACE

    RBRACE          shift and go to state 927


state 764

    (56) AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration . AnnotationTypeMemberDeclarationS
    (56) AnnotationTypeMemberDeclarationS -> . AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS
    (57) AnnotationTypeMemberDeclarationS -> . empty
    (58) AnnotationTypeMemberDeclaration -> . AnnotationTypeElementDeclaration
    (59) AnnotationTypeMemberDeclaration -> . ConstantDeclaration
    (60) AnnotationTypeMemberDeclaration -> . ClassDeclaration
    (61) AnnotationTypeMemberDeclaration -> . InterfaceDeclaration
    (62) AnnotationTypeMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (63) AnnotationTypeElementDeclaration -> . AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (64) AnnotationTypeElementDeclaration -> . AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (38) ConstantDeclaration -> . ConstantModifierS IDENT VariableDeclaratorList SEMICOLON
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (69) AnnotationTypeElementModifierS -> . AnnotationTypeElementModifier AnnotationTypeElementModifierS
    (70) AnnotationTypeElementModifierS -> . empty
    (39) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (40) ConstantModifierS -> . empty
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (71) AnnotationTypeElementModifier -> . Annotation
    (72) AnnotationTypeElementModifier -> . PUBLIC
    (73) AnnotationTypeElementModifier -> . ABSTRACT
    (41) ConstantModifier -> . Annotation
    (42) ConstantModifier -> . PUBLIC
    (43) ConstantModifier -> . STATIC
    (44) ConstantModifier -> . FINAL
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 770
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 776
    ABSTRACT        shift and go to state 777
    STATIC          shift and go to state 778
    FINAL           shift and go to state 779
    EXTENDS         shift and go to state 45
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    STRICTFP        shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationTypeMemberDeclaration shift and go to state 764
    AnnotationTypeMemberDeclarationS shift and go to state 928
    empty                          shift and go to state 765
    AnnotationTypeElementDeclaration shift and go to state 766
    ConstantDeclaration            shift and go to state 767
    ClassDeclaration               shift and go to state 768
    InterfaceDeclaration           shift and go to state 769
    AnnotationTypeElementModifierS shift and go to state 771
    ConstantModifierS              shift and go to state 772
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    AnnotationTypeElementModifier  shift and go to state 773
    ConstantModifier               shift and go to state 774
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 775
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 765

    (57) AnnotationTypeMemberDeclarationS -> empty .
    (70) AnnotationTypeElementModifierS -> empty .
    (40) ConstantModifierS -> empty .
    (442) ClassModifierS -> empty .
    (301) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 40 (ConstantModifierS -> empty .)
    RBRACE          reduce using rule 57 (AnnotationTypeMemberDeclarationS -> empty .)
    IDENT           reduce using rule 40 (ConstantModifierS -> empty .)
    BOOLEAN         reduce using rule 40 (ConstantModifierS -> empty .)
    BYTE            reduce using rule 40 (ConstantModifierS -> empty .)
    SHORT           reduce using rule 40 (ConstantModifierS -> empty .)
    INT             reduce using rule 40 (ConstantModifierS -> empty .)
    LONG            reduce using rule 40 (ConstantModifierS -> empty .)
    CHAR            reduce using rule 40 (ConstantModifierS -> empty .)
    FLOAT           reduce using rule 40 (ConstantModifierS -> empty .)
    DOUBLE          reduce using rule 40 (ConstantModifierS -> empty .)
    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 301 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 301 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)

  ! IDENT           [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! BOOLEAN         [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! INT             [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! LONG            [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 70 (AnnotationTypeElementModifierS -> empty .) ]


state 766

    (58) AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .

    SEMICOLON       reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    PUBLIC          reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    ABSTRACT        reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    STATIC          reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    FINAL           reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    EXTENDS         reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    PROTECTED       reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    PRIVATE         reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    STRICTFP        reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    ATRATE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    IDENT           reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    BOOLEAN         reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    BYTE            reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    SHORT           reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    INT             reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    LONG            reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    CHAR            reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    FLOAT           reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    DOUBLE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    CLASS           reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    ENUM            reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    IMPLEMENTS      reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    LBRACE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    INTERFACE       reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    RBRACE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)


state 767

    (59) AnnotationTypeMemberDeclaration -> ConstantDeclaration .

    SEMICOLON       reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    PUBLIC          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    ABSTRACT        reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    STATIC          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    FINAL           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    EXTENDS         reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    PROTECTED       reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    PRIVATE         reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    STRICTFP        reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    ATRATE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    IDENT           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    BOOLEAN         reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    BYTE            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    SHORT           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    INT             reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    LONG            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    CHAR            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    FLOAT           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    DOUBLE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    CLASS           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    ENUM            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    IMPLEMENTS      reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    LBRACE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    INTERFACE       reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    RBRACE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)


state 768

    (60) AnnotationTypeMemberDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    IDENT           reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    BOOLEAN         reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    BYTE            reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    SHORT           reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    INT             reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    LONG            reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    CHAR            reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    FLOAT           reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    DOUBLE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    RBRACE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)


state 769

    (61) AnnotationTypeMemberDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    IDENT           reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    BOOLEAN         reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    BYTE            reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    SHORT           reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    INT             reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    LONG            reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    CHAR            reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    FLOAT           reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    DOUBLE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    RBRACE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)


state 770

    (62) AnnotationTypeMemberDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    IDENT           reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    BOOLEAN         reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    BYTE            reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    SHORT           reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    INT             reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    LONG            reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    CHAR            reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    FLOAT           reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    DOUBLE          reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    RBRACE          reduce using rule 62 (AnnotationTypeMemberDeclaration -> SEMICOLON .)


state 771

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS . UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS . IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 930
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 929
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 772

    (37) ConstantDeclaration -> ConstantModifierS . UnannType VariableDeclaratorList SEMICOLON
    (38) ConstantDeclaration -> ConstantModifierS . IDENT VariableDeclaratorList SEMICOLON
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 932
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 931
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 773

    (69) AnnotationTypeElementModifierS -> AnnotationTypeElementModifier . AnnotationTypeElementModifierS
    (69) AnnotationTypeElementModifierS -> . AnnotationTypeElementModifier AnnotationTypeElementModifierS
    (70) AnnotationTypeElementModifierS -> . empty
    (71) AnnotationTypeElementModifier -> . Annotation
    (72) AnnotationTypeElementModifier -> . PUBLIC
    (73) AnnotationTypeElementModifier -> . ABSTRACT
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 936
    ABSTRACT        shift and go to state 937
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationTypeElementModifier  shift and go to state 773
    AnnotationTypeElementModifierS shift and go to state 933
    empty                          shift and go to state 934
    Annotation                     shift and go to state 935
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 774

    (39) ConstantModifierS -> ConstantModifier . ConstantModifierS
    (39) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (40) ConstantModifierS -> . empty
    (41) ConstantModifier -> . Annotation
    (42) ConstantModifier -> . PUBLIC
    (43) ConstantModifier -> . STATIC
    (44) ConstantModifier -> . FINAL
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 941
    STATIC          shift and go to state 942
    FINAL           shift and go to state 943
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ConstantModifier               shift and go to state 774
    ConstantModifierS              shift and go to state 938
    empty                          shift and go to state 939
    Annotation                     shift and go to state 940
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 775

    (71) AnnotationTypeElementModifier -> Annotation .
    (41) ConstantModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 21 (InterfaceModifier -> Annotation .)
    IDENT           reduce using rule 41 (ConstantModifier -> Annotation .)
    BOOLEAN         reduce using rule 41 (ConstantModifier -> Annotation .)
    BYTE            reduce using rule 41 (ConstantModifier -> Annotation .)
    SHORT           reduce using rule 41 (ConstantModifier -> Annotation .)
    INT             reduce using rule 41 (ConstantModifier -> Annotation .)
    LONG            reduce using rule 41 (ConstantModifier -> Annotation .)
    CHAR            reduce using rule 41 (ConstantModifier -> Annotation .)
    FLOAT           reduce using rule 41 (ConstantModifier -> Annotation .)
    DOUBLE          reduce using rule 41 (ConstantModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)
    FINAL           reduce using rule 21 (InterfaceModifier -> Annotation .)
    CLASS           reduce using rule 21 (InterfaceModifier -> Annotation .)
    ENUM            reduce using rule 21 (InterfaceModifier -> Annotation .)

  ! PUBLIC          [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! INT             [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 41 (ConstantModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 41 (ConstantModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 41 (ConstantModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 41 (ConstantModifier -> Annotation .) ]


state 776

    (72) AnnotationTypeElementModifier -> PUBLIC .
    (42) ConstantModifier -> PUBLIC .
    (22) InterfaceModifier -> PUBLIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for INT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for LONG resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 22 (InterfaceModifier -> PUBLIC .)
    IDENT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 42 (ConstantModifier -> PUBLIC .)
    BYTE            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    SHORT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    INT             reduce using rule 42 (ConstantModifier -> PUBLIC .)
    LONG            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    CHAR            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    FLOAT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    DOUBLE          reduce using rule 42 (ConstantModifier -> PUBLIC .)
    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    CLASS           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ENUM            reduce using rule 22 (InterfaceModifier -> PUBLIC .)

  ! PUBLIC          [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! BOOLEAN         [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! BYTE            [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! SHORT           [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! INT             [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! LONG            [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! CHAR            [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! FLOAT           [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! DOUBLE          [ reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]


state 777

    (73) AnnotationTypeElementModifier -> ABSTRACT .
    (25) InterfaceModifier -> ABSTRACT .

  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
    IDENT           reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    BYTE            reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    SHORT           reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    INT             reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    LONG            reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    CHAR            reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    FLOAT           reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    FINAL           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    CLASS           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ENUM            reduce using rule 25 (InterfaceModifier -> ABSTRACT .)

  ! PUBLIC          [ reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .) ]


state 778

    (43) ConstantModifier -> STATIC .
    (26) InterfaceModifier -> STATIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 26 (InterfaceModifier -> STATIC .)
    IDENT           reduce using rule 43 (ConstantModifier -> STATIC .)
    BOOLEAN         reduce using rule 43 (ConstantModifier -> STATIC .)
    BYTE            reduce using rule 43 (ConstantModifier -> STATIC .)
    SHORT           reduce using rule 43 (ConstantModifier -> STATIC .)
    INT             reduce using rule 43 (ConstantModifier -> STATIC .)
    LONG            reduce using rule 43 (ConstantModifier -> STATIC .)
    CHAR            reduce using rule 43 (ConstantModifier -> STATIC .)
    FLOAT           reduce using rule 43 (ConstantModifier -> STATIC .)
    DOUBLE          reduce using rule 43 (ConstantModifier -> STATIC .)
    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)
    FINAL           reduce using rule 26 (InterfaceModifier -> STATIC .)
    CLASS           reduce using rule 26 (InterfaceModifier -> STATIC .)
    ENUM            reduce using rule 26 (InterfaceModifier -> STATIC .)

  ! PUBLIC          [ reduce using rule 43 (ConstantModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 43 (ConstantModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 43 (ConstantModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 43 (ConstantModifier -> STATIC .) ]


state 779

    (44) ConstantModifier -> FINAL .
    (307) ClassModifier -> FINAL .

  ! reduce/reduce conflict for FINAL resolved using rule 44 (ConstantModifier -> FINAL .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 44 (ConstantModifier -> FINAL .)
  ! reduce/reduce conflict for STATIC resolved using rule 44 (ConstantModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 44 (ConstantModifier -> FINAL .)
    PUBLIC          reduce using rule 44 (ConstantModifier -> FINAL .)
    STATIC          reduce using rule 44 (ConstantModifier -> FINAL .)
    FINAL           reduce using rule 44 (ConstantModifier -> FINAL .)
    ATRATE          reduce using rule 44 (ConstantModifier -> FINAL .)
    IDENT           reduce using rule 44 (ConstantModifier -> FINAL .)
    BOOLEAN         reduce using rule 44 (ConstantModifier -> FINAL .)
    BYTE            reduce using rule 44 (ConstantModifier -> FINAL .)
    SHORT           reduce using rule 44 (ConstantModifier -> FINAL .)
    INT             reduce using rule 44 (ConstantModifier -> FINAL .)
    LONG            reduce using rule 44 (ConstantModifier -> FINAL .)
    CHAR            reduce using rule 44 (ConstantModifier -> FINAL .)
    FLOAT           reduce using rule 44 (ConstantModifier -> FINAL .)
    DOUBLE          reduce using rule 44 (ConstantModifier -> FINAL .)
    PROTECTED       reduce using rule 307 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 307 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 307 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 307 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 307 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 307 (ClassModifier -> FINAL .)

  ! FINAL           [ reduce using rule 307 (ClassModifier -> FINAL .) ]
  ! PUBLIC          [ reduce using rule 307 (ClassModifier -> FINAL .) ]
  ! STATIC          [ reduce using rule 307 (ClassModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 307 (ClassModifier -> FINAL .) ]


state 780

    (508) COMMATypeArgumentS -> COMMA TypeArgument . COMMATypeArgumentS
    (508) COMMATypeArgumentS -> . COMMA TypeArgument COMMATypeArgumentS
    (509) COMMATypeArgumentS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 595
    GTR             reduce using rule 1 (empty -> .)

    COMMATypeArgumentS             shift and go to state 944
    empty                          shift and go to state 596

state 781

    (512) Wildcard -> AnnotationS QUES ZooWildcardBounds .

    COMMA           reduce using rule 512 (Wildcard -> AnnotationS QUES ZooWildcardBounds .)
    GTR             reduce using rule 512 (Wildcard -> AnnotationS QUES ZooWildcardBounds .)


state 782

    (516) WildcardBounds -> EXTENDS ReferenceType .

    COMMA           reduce using rule 516 (WildcardBounds -> EXTENDS ReferenceType .)
    GTR             reduce using rule 516 (WildcardBounds -> EXTENDS ReferenceType .)


state 783

    (517) WildcardBounds -> SUPER ReferenceType .

    COMMA           reduce using rule 517 (WildcardBounds -> SUPER ReferenceType .)
    GTR             reduce using rule 517 (WildcardBounds -> SUPER ReferenceType .)


state 784

    (140) FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .

    LBRACK          reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    PERIOD          reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    COLON_SEP       reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    INC             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    DEC             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    MUL             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    QUO             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    REM             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    ADD             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SUB             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHL             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR_UN          reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LSS             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    GTR             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LEQ             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    GEQ             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    INSTANCEOF      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    EQL             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    NEQ             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    AND             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    XOR             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    OR              reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LAND            reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    QUES            reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LOR             reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    RPAREN          reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    ASSIGN          reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    COMMA           reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    RBRACE          reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    COLON           reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    RBRACK          reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SEMICOLON       reduce using rule 140 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)


state 785

    (150) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 945


state 786

    (159) MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 946


state 787

    (145) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    TypeName                       shift and go to state 210
    ZooArgumentList                shift and go to state 947
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 788

    (407) ZooIDENTPERIOD -> IDENT PERIOD .

    THIS            reduce using rule 407 (ZooIDENTPERIOD -> IDENT PERIOD .)


state 789

    (412) ReceiverParameter -> IDENT ZooIDENTPERIOD THIS .

    COMMA           reduce using rule 412 (ReceiverParameter -> IDENT ZooIDENTPERIOD THIS .)
    RPAREN          reduce using rule 412 (ReceiverParameter -> IDENT ZooIDENTPERIOD THIS .)


state 790

    (178) COMMAIDENTS -> COMMA IDENT . COMMAIDENTS
    (178) COMMAIDENTS -> . COMMA IDENT COMMAIDENTS
    (179) COMMAIDENTS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 617
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAIDENTS                    shift and go to state 948
    empty                          shift and go to state 949

state 791

    (410) ReceiverParameter -> AnnotationS IDENT ZooIDENTPERIOD . THIS

    THIS            shift and go to state 950


state 792

    (408) ZooIDENTPERIOD -> empty .
    (126) ZooTypeArguments -> empty .

  ! reduce/reduce conflict for THIS resolved using rule 126 (ZooTypeArguments -> empty .)
    PERIOD          reduce using rule 126 (ZooTypeArguments -> empty .)
    LBRACE          reduce using rule 126 (ZooTypeArguments -> empty .)
    ATRATE          reduce using rule 126 (ZooTypeArguments -> empty .)
    IDENT           reduce using rule 126 (ZooTypeArguments -> empty .)
    THIS            reduce using rule 126 (ZooTypeArguments -> empty .)

  ! THIS            [ reduce using rule 408 (ZooIDENTPERIOD -> empty .) ]


state 793

    (409) ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD . THIS

    THIS            shift and go to state 951


state 794

    (392) COMMAFormalParameterS -> COMMA FormalParameter . COMMAFormalParameterS
    (392) COMMAFormalParameterS -> . COMMA FormalParameter COMMAFormalParameterS
    (393) COMMAFormalParameterS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 624

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAFormalParameterS          shift and go to state 952
    empty                          shift and go to state 625

state 795

    (396) ZooVariableModifier -> VariableModifier .

    IDENT           reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    BOOLEAN         reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    BYTE            reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    SHORT           reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    INT             reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    LONG            reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    CHAR            reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    FLOAT           reduce using rule 396 (ZooVariableModifier -> VariableModifier .)
    DOUBLE          reduce using rule 396 (ZooVariableModifier -> VariableModifier .)


state 796

    (397) ZooVariableModifier -> empty .

    IDENT           reduce using rule 397 (ZooVariableModifier -> empty .)
    BOOLEAN         reduce using rule 397 (ZooVariableModifier -> empty .)
    BYTE            reduce using rule 397 (ZooVariableModifier -> empty .)
    SHORT           reduce using rule 397 (ZooVariableModifier -> empty .)
    INT             reduce using rule 397 (ZooVariableModifier -> empty .)
    LONG            reduce using rule 397 (ZooVariableModifier -> empty .)
    CHAR            reduce using rule 397 (ZooVariableModifier -> empty .)
    FLOAT           reduce using rule 397 (ZooVariableModifier -> empty .)
    DOUBLE          reduce using rule 397 (ZooVariableModifier -> empty .)


state 797

    (390) FormalParameterList -> FormalParameters COMMA LastFormalParameter .

    RPAREN          reduce using rule 390 (FormalParameterList -> FormalParameters COMMA LastFormalParameter .)


state 798

    (404) LastFormalParameter -> FormalParameter .

    RPAREN          reduce using rule 404 (LastFormalParameter -> FormalParameter .)


state 799

    (531) VariableModifierS -> empty .
    (397) ZooVariableModifier -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 397 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 397 (ZooVariableModifier -> empty .)
    IDENT           reduce using rule 397 (ZooVariableModifier -> empty .)
    BOOLEAN         reduce using rule 397 (ZooVariableModifier -> empty .)
    BYTE            reduce using rule 397 (ZooVariableModifier -> empty .)
    SHORT           reduce using rule 397 (ZooVariableModifier -> empty .)
    INT             reduce using rule 397 (ZooVariableModifier -> empty .)
    LONG            reduce using rule 397 (ZooVariableModifier -> empty .)
    CHAR            reduce using rule 397 (ZooVariableModifier -> empty .)
    FLOAT           reduce using rule 397 (ZooVariableModifier -> empty .)
    DOUBLE          reduce using rule 397 (ZooVariableModifier -> empty .)

  ! IDENT           [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! BOOLEAN         [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 531 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 531 (VariableModifierS -> empty .) ]


state 800

    (411) ReceiverParameter -> UnannType ZooIDENTPERIOD THIS .

    COMMA           reduce using rule 411 (ReceiverParameter -> UnannType ZooIDENTPERIOD THIS .)
    RPAREN          reduce using rule 411 (ReceiverParameter -> UnannType ZooIDENTPERIOD THIS .)


state 801

    (402) LastFormalParameter -> VariableModifierS UnannType AnnotationS . ELLIPSIS VariableDeclaratorId

    ELLIPSIS        shift and go to state 953


state 802

    (405) LastFormalParameter -> VariableModifierS UnannType ELLIPSIS . VariableDeclaratorId
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 954

state 803

    (403) LastFormalParameter -> VariableModifierS IDENT AnnotationS . ELLIPSIS VariableDeclaratorId
    (491) Dims -> AnnotationS . LBRACE RBRACE AnnotationSLBRACERBRACES

    ELLIPSIS        shift and go to state 955
    LBRACE          shift and go to state 423


state 804

    (406) LastFormalParameter -> VariableModifierS IDENT ELLIPSIS . VariableDeclaratorId
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 956

state 805

    (398) FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId .

    COMMA           reduce using rule 398 (FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId .)
    RPAREN          reduce using rule 398 (FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId .)


state 806

    (399) FormalParameter -> ZooVariableModifier IDENT VariableDeclaratorId .

    COMMA           reduce using rule 399 (FormalParameter -> ZooVariableModifier IDENT VariableDeclaratorId .)
    RPAREN          reduce using rule 399 (FormalParameter -> ZooVariableModifier IDENT VariableDeclaratorId .)


state 807

    (359) UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 957
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 808

    (360) UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS . IDENT ZooTypeArguments

    IDENT           shift and go to state 958


state 809

    (261) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> LPAREN . PrimitiveType RPAREN IDENT
    (263) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (175) LambdaParameters -> LPAREN . ZooFormalParameterList RPAREN
    (176) LambdaParameters -> LPAREN . InferredFormalParameterList RPAREN
    (108) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (386) ZooFormalParameterList -> . FormalParameterList
    (387) ZooFormalParameterList -> . empty
    (177) InferredFormalParameterList -> . IDENT COMMAIDENTS
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (389) FormalParameterList -> . ReceiverParameter
    (390) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (391) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (409) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (410) ReceiverParameter -> . AnnotationS IDENT ZooIDENTPERIOD THIS
    (411) ReceiverParameter -> . UnannType ZooIDENTPERIOD THIS
    (412) ReceiverParameter -> . IDENT ZooIDENTPERIOD THIS
    (394) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (395) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (402) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (403) LastFormalParameter -> . VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId
    (404) LastFormalParameter -> . FormalParameter
    (405) LastFormalParameter -> . VariableModifierS UnannType ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> . VariableModifierS IDENT ELLIPSIS VariableDeclaratorId
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (398) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (399) FormalParameter -> . ZooVariableModifier IDENT VariableDeclaratorId
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (396) ZooVariableModifier -> . VariableModifier
    (397) ZooVariableModifier -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    BOOLEAN         shift and go to state 363
    IDENT           shift and go to state 959
    RPAREN          reduce using rule 1 (empty -> .)
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    LPAREN          shift and go to state 194
    ATRATE          shift and go to state 13
    FINAL           shift and go to state 377
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    VOID            shift and go to state 153
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    PrimitiveType                  shift and go to state 195
    UnaryExpression                shift and go to state 114
    ReferenceType                  shift and go to state 197
    UnaryExpressionNotPlusMinus    shift and go to state 117
    LambdaExpression               shift and go to state 198
    ZooFormalParameterList         shift and go to state 356
    InferredFormalParameterList    shift and go to state 357
    Expression                     shift and go to state 199
    AnnotationS                    shift and go to state 361
    NumericType                    shift and go to state 362
    ClassType                      shift and go to state 203
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 204
    FormalParameterList            shift and go to state 359
    empty                          shift and go to state 360
    AssignmentExpression           shift and go to state 205
    Annotation                     shift and go to state 367
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    ReceiverParameter              shift and go to state 364
    FormalParameters               shift and go to state 365
    LastFormalParameter            shift and go to state 366
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    UnannType                      shift and go to state 368
    FormalParameter                shift and go to state 369
    VariableModifierS              shift and go to state 370
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    TypeName                       shift and go to state 210
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    ZooVariableModifier            shift and go to state 373
    VariableModifier               shift and go to state 374
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    PrimaryNoNewArray              shift and go to state 215
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 810

    (263) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .

    MUL             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    QUO             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    REM             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    ADD             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SUB             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SHL             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SHR             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SHR_UN          reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LSS             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    GTR             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LEQ             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    GEQ             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    EQL             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    NEQ             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    AND             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    XOR             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    OR              reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LAND            reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    QUES            reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LOR             reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    RBRACE          reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    COLON           reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    RBRACK          reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SEMICOLON       reduce using rule 263 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)


state 811

    (264) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .
    (174) LambdaParameters -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    MUL             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    QUO             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    REM             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    ADD             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    SUB             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    SHL             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    SHR             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    SHR_UN          reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    GTR             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    LEQ             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    GEQ             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    INSTANCEOF      reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    EQL             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    NEQ             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    AND             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    XOR             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    OR              reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    LAND            reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    QUES            reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    LOR             reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    RPAREN          reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    COMMA           reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    RBRACE          reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    COLON           reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    RBRACK          reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    SEMICOLON       reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .)
    ARROW           reduce using rule 174 (LambdaParameters -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 264 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 812

    (265) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .

    MUL             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    QUO             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    REM             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    ADD             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SUB             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SHL             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SHR             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SHR_UN          reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LSS             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    GTR             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LEQ             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    GEQ             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    INSTANCEOF      reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    EQL             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    NEQ             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    AND             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    XOR             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    OR              reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LAND            reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    QUES            reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LOR             reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    RPAREN          reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    COMMA           reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    RBRACE          reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    COLON           reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    RBRACK          reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SEMICOLON       reduce using rule 265 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)


state 813

    (202) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .

    RPAREN          reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    COMMA           reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    RBRACE          reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    COLON           reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    RBRACK          reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    MUL             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    QUO             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    REM             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    ADD             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SUB             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SHL             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SHR             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SHR_UN          reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LSS             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    GTR             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LEQ             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    GEQ             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    INSTANCEOF      reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    EQL             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    NEQ             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    AND             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    XOR             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    OR              reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LAND            reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    QUES            reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LOR             reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SEMICOLON       reduce using rule 202 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)


state 814

    (203) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .

    RPAREN          reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    COMMA           reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    RBRACE          reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    COLON           reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    RBRACK          reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    MUL             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    QUO             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    REM             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    ADD             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SUB             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SHL             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SHR             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SHR_UN          reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LSS             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    GTR             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LEQ             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    GEQ             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    INSTANCEOF      reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    EQL             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    NEQ             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    AND             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    XOR             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    OR              reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LAND            reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    QUES            reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LOR             reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SEMICOLON       reduce using rule 203 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)


state 815

    (174) LambdaParameters -> IDENT .
    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    ARROW           reduce using rule 174 (LambdaParameters -> IDENT .)
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    AND             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RPAREN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    COMMA           reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RBRACE          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    COLON           reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    RBRACK          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SEMICOLON       reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    PERIOD          shift and go to state 231
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 816

    (175) LambdaParameters -> LPAREN . ZooFormalParameterList RPAREN
    (176) LambdaParameters -> LPAREN . InferredFormalParameterList RPAREN
    (261) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> LPAREN . PrimitiveType RPAREN IDENT
    (263) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (108) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (386) ZooFormalParameterList -> . FormalParameterList
    (387) ZooFormalParameterList -> . empty
    (177) InferredFormalParameterList -> . IDENT COMMAIDENTS
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (389) FormalParameterList -> . ReceiverParameter
    (390) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (391) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (409) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (410) ReceiverParameter -> . AnnotationS IDENT ZooIDENTPERIOD THIS
    (411) ReceiverParameter -> . UnannType ZooIDENTPERIOD THIS
    (412) ReceiverParameter -> . IDENT ZooIDENTPERIOD THIS
    (394) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (395) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (402) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (403) LastFormalParameter -> . VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId
    (404) LastFormalParameter -> . FormalParameter
    (405) LastFormalParameter -> . VariableModifierS UnannType ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> . VariableModifierS IDENT ELLIPSIS VariableDeclaratorId
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (398) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (399) FormalParameter -> . ZooVariableModifier IDENT VariableDeclaratorId
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (396) ZooVariableModifier -> . VariableModifier
    (397) ZooVariableModifier -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 358
    BOOLEAN         shift and go to state 363
    RPAREN          reduce using rule 1 (empty -> .)
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    LPAREN          shift and go to state 194
    ATRATE          shift and go to state 13
    FINAL           shift and go to state 377
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    VOID            shift and go to state 153
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooFormalParameterList         shift and go to state 356
    InferredFormalParameterList    shift and go to state 357
    PrimitiveType                  shift and go to state 195
    UnaryExpression                shift and go to state 114
    ReferenceType                  shift and go to state 197
    UnaryExpressionNotPlusMinus    shift and go to state 117
    LambdaExpression               shift and go to state 198
    Expression                     shift and go to state 199
    FormalParameterList            shift and go to state 359
    empty                          shift and go to state 360
    AnnotationS                    shift and go to state 361
    NumericType                    shift and go to state 362
    ClassType                      shift and go to state 203
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 204
    AssignmentExpression           shift and go to state 205
    ReceiverParameter              shift and go to state 364
    FormalParameters               shift and go to state 365
    LastFormalParameter            shift and go to state 366
    Annotation                     shift and go to state 367
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    UnannType                      shift and go to state 368
    FormalParameter                shift and go to state 369
    VariableModifierS              shift and go to state 370
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    ZooVariableModifier            shift and go to state 373
    VariableModifier               shift and go to state 374
    TypeName                       shift and go to state 210
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    PrimaryNoNewArray              shift and go to state 215
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 817

    (92) COMMAElementValueS -> COMMA ElementValue COMMAElementValueS .

    COMMA           reduce using rule 92 (COMMAElementValueS -> COMMA ElementValue COMMAElementValueS .)
    RBRACE          reduce using rule 92 (COMMAElementValueS -> COMMA ElementValue COMMAElementValueS .)


state 818

    (147) MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 960
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 819

    (152) COMMAExpressionS -> COMMA Expression . COMMAExpressionS
    (152) COMMAExpressionS -> . COMMA Expression COMMAExpressionS
    (153) COMMAExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 657
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAExpressionS               shift and go to state 961
    empty                          shift and go to state 658

state 820

    (491) Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .

    COLON_SEP       reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COMMA           reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GTR             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LSS             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LEQ             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GEQ             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INSTANCEOF      reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    EQL             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    NEQ             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    AND             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    XOR             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    OR              reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LAND            reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUES            reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LOR             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RPAREN          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACE          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COLON           reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    MUL             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUO             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    REM             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ADD             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SUB             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHL             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR_UN          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACK          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SEMICOLON       reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LBRACE          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    IDENT           reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THIS            reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ELLIPSIS        reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ATRATE          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    PERIOD          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INC             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEC             reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ASSIGN          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THROWS          reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEFAULT         reduce using rule 491 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)


state 821

    (494) AnnotationSLBRACERBRACES -> LBRACE RBRACE . AnnotationSLBRACERBRACES
    (493) AnnotationSLBRACERBRACES -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (494) AnnotationSLBRACERBRACES -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (495) AnnotationSLBRACERBRACES -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 661
    COLON_SEP       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    ASSIGN          reduce using rule 1 (empty -> .)
    THROWS          reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationSLBRACERBRACES       shift and go to state 962
    AnnotationS                    shift and go to state 663
    empty                          shift and go to state 664
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 822

    (493) AnnotationSLBRACERBRACES -> AnnotationS LBRACE . RBRACE AnnotationSLBRACERBRACES

    RBRACE          shift and go to state 963


state 823

    (148) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Primary                        shift and go to state 214
    ZooArgumentList                shift and go to state 964
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 824

    (146) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ExpressionName                 shift and go to state 211
    ZooArgumentList                shift and go to state 965
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 825

    (96) ArrayInitializer -> LBRACE ZooVariableInitializerList . ZooCOMMA RBRACE
    (446) ZooCOMMA -> . COMMA
    (447) ZooCOMMA -> . empty
    (1) empty -> .

    COMMA           shift and go to state 408
    RBRACE          reduce using rule 1 (empty -> .)

    ZooCOMMA                       shift and go to state 966
    empty                          shift and go to state 409

state 826

    (97) ZooVariableInitializerList -> VariableInitializerList .

    COMMA           reduce using rule 97 (ZooVariableInitializerList -> VariableInitializerList .)
    RBRACE          reduce using rule 97 (ZooVariableInitializerList -> VariableInitializerList .)


state 827

    (98) ZooVariableInitializerList -> empty .

    COMMA           reduce using rule 98 (ZooVariableInitializerList -> empty .)
    RBRACE          reduce using rule 98 (ZooVariableInitializerList -> empty .)


state 828

    (99) VariableInitializerList -> VariableInitializer . COMMAVariableInitializerS
    (100) COMMAVariableInitializerS -> . COMMA VariableInitializer COMMAVariableInitializerS
    (101) COMMAVariableInitializerS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 968
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAVariableInitializerS      shift and go to state 967
    empty                          shift and go to state 969

state 829

    (348) VariableInitializer -> Expression .

    COMMA           reduce using rule 348 (VariableInitializer -> Expression .)
    RBRACE          reduce using rule 348 (VariableInitializer -> Expression .)
    SEMICOLON       reduce using rule 348 (VariableInitializer -> Expression .)


state 830

    (349) VariableInitializer -> ArrayInitializer .

    COMMA           reduce using rule 349 (VariableInitializer -> ArrayInitializer .)
    RBRACE          reduce using rule 349 (VariableInitializer -> ArrayInitializer .)
    SEMICOLON       reduce using rule 349 (VariableInitializer -> ArrayInitializer .)


state 831

    (167) DimExprS -> DimExpr DimExprS .

    LBRACE          reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    ATRATE          reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    PERIOD          reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    COLON_SEP       reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    INC             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    DEC             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    MUL             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    QUO             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    REM             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    ADD             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    SUB             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    SHL             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    SHR             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    SHR_UN          reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    LSS             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    GTR             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    LEQ             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    GEQ             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    INSTANCEOF      reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    EQL             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    NEQ             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    AND             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    XOR             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    OR              reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    LAND            reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    QUES            reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    LOR             reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    RPAREN          reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    COMMA           reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    RBRACE          reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    COLON           reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    RBRACK          reduce using rule 167 (DimExprS -> DimExpr DimExprS .)
    SEMICOLON       reduce using rule 167 (DimExprS -> DimExpr DimExprS .)


state 832

    (169) DimExpr -> AnnotationS LBRACK Expression . RBRACK

    RBRACK          shift and go to state 970


state 833

    (170) DimExpr -> LBRACK Expression RBRACK .

    LBRACK          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    ATRATE          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    INC             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    QUO             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    REM             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    SHL             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    SHR             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    LSS             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    GTR             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    LEQ             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    GEQ             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    EQL             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    NEQ             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    AND             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    XOR             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    OR              reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    LAND            reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    QUES            reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    LOR             reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 170 (DimExpr -> LBRACK Expression RBRACK .)


state 834

    (124) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList . RPAREN ZooClassBody

    RPAREN          shift and go to state 971


state 835

    (127) ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS . ZooTypeArgumentsOrDiamond
    (131) ZooTypeArgumentsOrDiamond -> . TypeArgumentsOrDiamond
    (132) ZooTypeArgumentsOrDiamond -> . empty
    (136) TypeArgumentsOrDiamond -> . TypeArguments
    (137) TypeArgumentsOrDiamond -> . LSS GTR
    (1) empty -> .
    (506) TypeArguments -> . LSS TypeArgumentList GTR

    LSS             shift and go to state 840
    LPAREN          reduce using rule 1 (empty -> .)

    ZooTypeArgumentsOrDiamond      shift and go to state 972
    TypeArgumentsOrDiamond         shift and go to state 837
    empty                          shift and go to state 838
    TypeArguments                  shift and go to state 839

state 836

    (128) ClassOrInterfaceTypeToInstantiate -> IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond .

    LPAREN          reduce using rule 128 (ClassOrInterfaceTypeToInstantiate -> IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond .)


state 837

    (131) ZooTypeArgumentsOrDiamond -> TypeArgumentsOrDiamond .

    LPAREN          reduce using rule 131 (ZooTypeArgumentsOrDiamond -> TypeArgumentsOrDiamond .)


state 838

    (132) ZooTypeArgumentsOrDiamond -> empty .

    LPAREN          reduce using rule 132 (ZooTypeArgumentsOrDiamond -> empty .)


state 839

    (136) TypeArgumentsOrDiamond -> TypeArguments .

    LPAREN          reduce using rule 136 (TypeArgumentsOrDiamond -> TypeArguments .)


state 840

    (137) TypeArgumentsOrDiamond -> LSS . GTR
    (506) TypeArguments -> LSS . TypeArgumentList GTR
    (507) TypeArgumentList -> . TypeArgument COMMATypeArgumentS
    (510) TypeArgument -> . ReferenceType
    (511) TypeArgument -> . Wildcard
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (512) Wildcard -> . AnnotationS QUES ZooWildcardBounds
    (513) Wildcard -> . QUES ZooWildcardBounds
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE

    GTR             shift and go to state 973
    IDENT           shift and go to state 342
    QUES            shift and go to state 345
    BOOLEAN         shift and go to state 282
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    TypeArgumentList               shift and go to state 337
    TypeArgument                   shift and go to state 338
    ReferenceType                  shift and go to state 339
    Wildcard                       shift and go to state 340
    ClassType                      shift and go to state 341
    TypeVariable                   shift and go to state 159
    ArrayType                      shift and go to state 343
    AnnotationS                    shift and go to state 344
    PrimitiveType                  shift and go to state 128
    Annotation                     shift and go to state 81
    NumericType                    shift and go to state 281
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158

state 841

    (133) PERIODAnnotationSIDENTS -> PERIOD AnnotationS . IDENT PERIODAnnotationSIDENTS

    IDENT           shift and go to state 974


state 842

    (134) PERIODAnnotationSIDENTS -> PERIOD IDENT . PERIODAnnotationSIDENTS
    (133) PERIODAnnotationSIDENTS -> . PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
    (134) PERIODAnnotationSIDENTS -> . PERIOD IDENT PERIODAnnotationSIDENTS
    (135) PERIODAnnotationSIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 688
    LSS             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)

    PERIODAnnotationSIDENTS        shift and go to state 975
    empty                          shift and go to state 689

state 843

    (149) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 976
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 844

    (309) COMMMATypeParameterS -> COMMA TypeParameter . COMMMATypeParameterS
    (309) COMMMATypeParameterS -> . COMMA TypeParameter COMMMATypeParameterS
    (310) COMMMATypeParameterS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 697
    GTR             reduce using rule 1 (empty -> .)

    COMMMATypeParameterS           shift and go to state 977
    empty                          shift and go to state 698

state 845

    (496) TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound .

    COMMA           reduce using rule 496 (TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound .)
    GTR             reduce using rule 496 (TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound .)


state 846

    (499) ZooTypeBound -> TypeBound .

    COMMA           reduce using rule 499 (ZooTypeBound -> TypeBound .)
    GTR             reduce using rule 499 (ZooTypeBound -> TypeBound .)


state 847

    (500) ZooTypeBound -> empty .

    COMMA           reduce using rule 500 (ZooTypeBound -> empty .)
    GTR             reduce using rule 500 (ZooTypeBound -> empty .)


state 848

    (502) TypeBound -> EXTENDS . TypeVariable
    (503) TypeBound -> EXTENDS . IDENT
    (504) TypeBound -> EXTENDS . ClassType AdditionalBoundS
    (486) TypeVariable -> . AnnotationS IDENT
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 979
    ATRATE          shift and go to state 13

    TypeVariable                   shift and go to state 978
    ClassType                      shift and go to state 980
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 849

    (450) EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA . ZooEnumBodyDeclarations RBRACE
    (448) ZooEnumBodyDeclarations -> . EnumBodyDeclarations
    (449) ZooEnumBodyDeclarations -> . empty
    (462) EnumBodyDeclarations -> . SEMICOLON ClassBodyDeclarationS
    (1) empty -> .

    SEMICOLON       shift and go to state 984
    RBRACE          reduce using rule 1 (empty -> .)

    ZooEnumBodyDeclarations        shift and go to state 981
    EnumBodyDeclarations           shift and go to state 982
    empty                          shift and go to state 983

state 850

    (453) EnumConstantList -> EnumConstant COMMAEnumConstantS .

    COMMA           reduce using rule 453 (EnumConstantList -> EnumConstant COMMAEnumConstantS .)
    SEMICOLON       reduce using rule 453 (EnumConstantList -> EnumConstant COMMAEnumConstantS .)
    RBRACE          reduce using rule 453 (EnumConstantList -> EnumConstant COMMAEnumConstantS .)


state 851

    (451) COMMAEnumConstantS -> COMMA . EnumConstant COMMAEnumConstantS
    (454) EnumConstant -> . EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody
    (455) EnumConstantModifierS -> . EnumConstantModifier EnumConstantModifierS
    (456) EnumConstantModifierS -> . empty
    (461) EnumConstantModifier -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    EnumConstant                   shift and go to state 985
    EnumConstantModifierS          shift and go to state 705
    EnumConstantModifier           shift and go to state 706
    empty                          shift and go to state 855
    Annotation                     shift and go to state 707
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 852

    (452) COMMAEnumConstantS -> empty .

    COMMA           reduce using rule 452 (COMMAEnumConstantS -> empty .)
    SEMICOLON       reduce using rule 452 (COMMAEnumConstantS -> empty .)
    RBRACE          reduce using rule 452 (COMMAEnumConstantS -> empty .)


state 853

    (454) EnumConstant -> EnumConstantModifierS IDENT . ZooLPARENZooArgumentListRPAREN ZooClassBody
    (459) ZooLPARENZooArgumentListRPAREN -> . LPAREN ZooArgumentList RPAREN
    (460) ZooLPARENZooArgumentListRPAREN -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 987
    LBRACE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

    ZooLPARENZooArgumentListRPAREN shift and go to state 986
    empty                          shift and go to state 988

state 854

    (455) EnumConstantModifierS -> EnumConstantModifier EnumConstantModifierS .

    IDENT           reduce using rule 455 (EnumConstantModifierS -> EnumConstantModifier EnumConstantModifierS .)


state 855

    (456) EnumConstantModifierS -> empty .

    IDENT           reduce using rule 456 (EnumConstantModifierS -> empty .)


state 856

    (522) BlockStatementS -> BlockStatement BlockStatementS .

    RBRACE          reduce using rule 522 (BlockStatementS -> BlockStatement BlockStatementS .)
    CASE            reduce using rule 522 (BlockStatementS -> BlockStatement BlockStatementS .)
    DEFAULT         reduce using rule 522 (BlockStatementS -> BlockStatement BlockStatementS .)


state 857

    (528) LocalVariableDeclaration -> VariableModifierS UnannType VariableDeclaratorList .

    SEMICOLON       reduce using rule 528 (LocalVariableDeclaration -> VariableModifierS UnannType VariableDeclaratorList .)


state 858

    (529) LocalVariableDeclaration -> VariableModifierS IDENT VariableDeclaratorList .

    SEMICOLON       reduce using rule 529 (LocalVariableDeclaration -> VariableModifierS IDENT VariableDeclaratorList .)


state 859

    (556) LabeledStatement -> IDENT COLON Statement .

    IDENT           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    IF              reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    WHILE           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    LBRACE          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    SEMICOLON       reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    ASSERT          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    SWITCH          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    DO              reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    BREAK           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    CONTINUE        reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    RETURN          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    SYNCHRONIZED    reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    THROW           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    TRY             reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    FOR             reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    FINAL           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    EXTENDS         reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    PUBLIC          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    PROTECTED       reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    PRIVATE         reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    ABSTRACT        reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    STATIC          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    STRICTFP        reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    INC             reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    DEC             reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    SUPER           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    ATRATE          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    PERIOD          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    NEW             reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    THIS            reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    LPAREN          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    BOOL_LIT        reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    NULL_LIT        reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    DECIMAL_LIT     reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    HEX_LIT         reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    OCTAL_LIT       reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    BINARY_LIT      reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    FLOAT_DEC_LIT   reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    FLOAT_HEX_LIT   reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    STRING_LIT      reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    CHAR_LIT        reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    BOOLEAN         reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    VOID            reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    BYTE            reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    SHORT           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    INT             reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    LONG            reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    CHAR            reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    FLOAT           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    DOUBLE          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    CLASS           reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    ENUM            reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    IMPLEMENTS      reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    RBRACE          reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    CASE            reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)
    DEFAULT         reduce using rule 556 (LabeledStatement -> IDENT COLON Statement .)


state 860

    (566) IfThenStatement -> IF LPAREN Expression . RPAREN Statement
    (567) IfThenElseStatement -> IF LPAREN Expression . RPAREN StatementNoShortIf ELSE Statement

    RPAREN          shift and go to state 989


state 861

    (582) WhileStatement -> WHILE LPAREN Expression . RPAREN Statement

    RPAREN          shift and go to state 990


state 862

    (569) AssertStatement -> ASSERT Expression SEMICOLON .

    IDENT           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    IF              reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    WHILE           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    LBRACE          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SEMICOLON       reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ASSERT          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SWITCH          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DO              reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BREAK           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CONTINUE        reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    RETURN          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    THROW           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    TRY             reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FOR             reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FINAL           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    EXTENDS         reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    PUBLIC          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    PROTECTED       reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    PRIVATE         reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ABSTRACT        reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    STATIC          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    STRICTFP        reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    INC             reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DEC             reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SUPER           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ATRATE          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    PERIOD          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    NEW             reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    THIS            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    LPAREN          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BOOL_LIT        reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    NULL_LIT        reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    HEX_LIT         reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    OCTAL_LIT       reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BINARY_LIT      reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    STRING_LIT      reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CHAR_LIT        reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BOOLEAN         reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    VOID            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BYTE            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SHORT           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    INT             reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    LONG            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CHAR            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FLOAT           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DOUBLE          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CLASS           reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ENUM            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    IMPLEMENTS      reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    RBRACE          reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CASE            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DEFAULT         reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ELSE            reduce using rule 569 (AssertStatement -> ASSERT Expression SEMICOLON .)


state 863

    (570) AssertStatement -> ASSERT Expression COLON . Expression SEMICOLON
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 991
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 864

    (571) SwitchStatement -> SWITCH LPAREN Expression . RPAREN SwitchBlock

    RPAREN          shift and go to state 992


state 865

    (584) DoStatement -> DO Statement WHILE . LPAREN Expression RPAREN SEMICOLON

    LPAREN          shift and go to state 993


state 866

    (607) BreakStatement -> BREAK ZooIDENT SEMICOLON .

    IDENT           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    IF              reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    WHILE           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    LBRACE          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SEMICOLON       reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ASSERT          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SWITCH          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DO              reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BREAK           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CONTINUE        reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    RETURN          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SYNCHRONIZED    reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    THROW           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    TRY             reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FOR             reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FINAL           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    EXTENDS         reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    PUBLIC          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    PROTECTED       reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    PRIVATE         reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ABSTRACT        reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    STATIC          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    STRICTFP        reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    INC             reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DEC             reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SUPER           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ATRATE          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    PERIOD          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    NEW             reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    THIS            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    LPAREN          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BOOL_LIT        reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    NULL_LIT        reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DECIMAL_LIT     reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    HEX_LIT         reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    OCTAL_LIT       reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BINARY_LIT      reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    STRING_LIT      reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CHAR_LIT        reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BOOLEAN         reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    VOID            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BYTE            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SHORT           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    INT             reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    LONG            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CHAR            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FLOAT           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DOUBLE          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CLASS           reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ENUM            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    IMPLEMENTS      reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    RBRACE          reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CASE            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DEFAULT         reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ELSE            reduce using rule 607 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)


state 867

    (610) ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .

    IDENT           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    IF              reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    WHILE           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    LBRACE          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SEMICOLON       reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ASSERT          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SWITCH          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DO              reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BREAK           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CONTINUE        reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    RETURN          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SYNCHRONIZED    reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    THROW           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    TRY             reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FOR             reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FINAL           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    EXTENDS         reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    PUBLIC          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    PROTECTED       reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    PRIVATE         reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ABSTRACT        reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    STATIC          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    STRICTFP        reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    INC             reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DEC             reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SUPER           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ATRATE          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    PERIOD          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    NEW             reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    THIS            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    LPAREN          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BOOL_LIT        reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    NULL_LIT        reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DECIMAL_LIT     reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    HEX_LIT         reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    OCTAL_LIT       reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BINARY_LIT      reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    STRING_LIT      reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CHAR_LIT        reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BOOLEAN         reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    VOID            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BYTE            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SHORT           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    INT             reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    LONG            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CHAR            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FLOAT           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DOUBLE          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CLASS           reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ENUM            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    IMPLEMENTS      reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    RBRACE          reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CASE            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DEFAULT         reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ELSE            reduce using rule 610 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)


state 868

    (611) ReturnStatement -> RETURN ZooExpression SEMICOLON .

    IDENT           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    IF              reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    WHILE           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    LBRACE          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SEMICOLON       reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ASSERT          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SWITCH          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DO              reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BREAK           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CONTINUE        reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    RETURN          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    THROW           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    TRY             reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FOR             reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FINAL           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    EXTENDS         reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    PUBLIC          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    PROTECTED       reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    PRIVATE         reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ABSTRACT        reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    STATIC          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    STRICTFP        reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    INC             reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DEC             reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SUPER           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ATRATE          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    PERIOD          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    NEW             reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    THIS            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    LPAREN          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BOOL_LIT        reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    NULL_LIT        reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    HEX_LIT         reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    OCTAL_LIT       reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BINARY_LIT      reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    STRING_LIT      reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CHAR_LIT        reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BOOLEAN         reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    VOID            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BYTE            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SHORT           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    INT             reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    LONG            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CHAR            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FLOAT           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DOUBLE          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CLASS           reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ENUM            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    IMPLEMENTS      reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    RBRACE          reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CASE            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DEFAULT         reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ELSE            reduce using rule 611 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)


state 869

    (613) SynchronizedStatement -> SYNCHRONIZED LPAREN Expression . RPAREN Block

    RPAREN          shift and go to state 994


state 870

    (612) ThrowStatement -> THROW Expression SEMICOLON .

    IDENT           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    IF              reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    WHILE           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    LBRACE          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    SEMICOLON       reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    ASSERT          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    SWITCH          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    DO              reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    BREAK           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    CONTINUE        reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    RETURN          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    THROW           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    TRY             reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    FOR             reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    FINAL           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    EXTENDS         reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    PUBLIC          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    PROTECTED       reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    PRIVATE         reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    ABSTRACT        reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    STATIC          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    STRICTFP        reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    INC             reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    DEC             reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    SUPER           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    ATRATE          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    PERIOD          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    NEW             reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    THIS            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    LPAREN          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    BOOL_LIT        reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    NULL_LIT        reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    HEX_LIT         reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    OCTAL_LIT       reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    BINARY_LIT      reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    STRING_LIT      reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    CHAR_LIT        reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    BOOLEAN         reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    VOID            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    BYTE            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    SHORT           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    INT             reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    LONG            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    CHAR            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    FLOAT           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    DOUBLE          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    CLASS           reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    ENUM            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    IMPLEMENTS      reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    RBRACE          reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    CASE            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    DEFAULT         reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)
    ELSE            reduce using rule 612 (ThrowStatement -> THROW Expression SEMICOLON .)


state 871

    (614) TryStatement -> TRY Block Catches .
    (617) ZooCatches -> Catches .

    IDENT           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    IF              reduce using rule 614 (TryStatement -> TRY Block Catches .)
    WHILE           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    LBRACE          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    SEMICOLON       reduce using rule 614 (TryStatement -> TRY Block Catches .)
    ASSERT          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    SWITCH          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    DO              reduce using rule 614 (TryStatement -> TRY Block Catches .)
    BREAK           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    CONTINUE        reduce using rule 614 (TryStatement -> TRY Block Catches .)
    RETURN          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    SYNCHRONIZED    reduce using rule 614 (TryStatement -> TRY Block Catches .)
    THROW           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    TRY             reduce using rule 614 (TryStatement -> TRY Block Catches .)
    FOR             reduce using rule 614 (TryStatement -> TRY Block Catches .)
    FINAL           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    EXTENDS         reduce using rule 614 (TryStatement -> TRY Block Catches .)
    PUBLIC          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    PROTECTED       reduce using rule 614 (TryStatement -> TRY Block Catches .)
    PRIVATE         reduce using rule 614 (TryStatement -> TRY Block Catches .)
    ABSTRACT        reduce using rule 614 (TryStatement -> TRY Block Catches .)
    STATIC          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    STRICTFP        reduce using rule 614 (TryStatement -> TRY Block Catches .)
    INC             reduce using rule 614 (TryStatement -> TRY Block Catches .)
    DEC             reduce using rule 614 (TryStatement -> TRY Block Catches .)
    SUPER           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    ATRATE          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    PERIOD          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    NEW             reduce using rule 614 (TryStatement -> TRY Block Catches .)
    THIS            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    LPAREN          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    BOOL_LIT        reduce using rule 614 (TryStatement -> TRY Block Catches .)
    NULL_LIT        reduce using rule 614 (TryStatement -> TRY Block Catches .)
    DECIMAL_LIT     reduce using rule 614 (TryStatement -> TRY Block Catches .)
    HEX_LIT         reduce using rule 614 (TryStatement -> TRY Block Catches .)
    OCTAL_LIT       reduce using rule 614 (TryStatement -> TRY Block Catches .)
    BINARY_LIT      reduce using rule 614 (TryStatement -> TRY Block Catches .)
    FLOAT_DEC_LIT   reduce using rule 614 (TryStatement -> TRY Block Catches .)
    FLOAT_HEX_LIT   reduce using rule 614 (TryStatement -> TRY Block Catches .)
    STRING_LIT      reduce using rule 614 (TryStatement -> TRY Block Catches .)
    CHAR_LIT        reduce using rule 614 (TryStatement -> TRY Block Catches .)
    BOOLEAN         reduce using rule 614 (TryStatement -> TRY Block Catches .)
    VOID            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    BYTE            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    SHORT           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    INT             reduce using rule 614 (TryStatement -> TRY Block Catches .)
    LONG            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    CHAR            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    FLOAT           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    DOUBLE          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    CLASS           reduce using rule 614 (TryStatement -> TRY Block Catches .)
    ENUM            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    IMPLEMENTS      reduce using rule 614 (TryStatement -> TRY Block Catches .)
    RBRACE          reduce using rule 614 (TryStatement -> TRY Block Catches .)
    CASE            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    DEFAULT         reduce using rule 614 (TryStatement -> TRY Block Catches .)
    ELSE            reduce using rule 614 (TryStatement -> TRY Block Catches .)
    FINALLY         reduce using rule 617 (ZooCatches -> Catches .)


state 872

    (615) TryStatement -> TRY Block ZooCatches . Finally
    (627) Finally -> . FINALLY Block

    FINALLY         shift and go to state 996

    Finally                        shift and go to state 995

state 873

    (619) Catches -> CatchClause . CatchClauseS
    (620) CatchClauseS -> . CatchClause CatchClauseS
    (621) CatchClauseS -> . empty
    (622) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block
    (1) empty -> .

    CATCH           shift and go to state 875
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    FINALLY         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)

    CatchClause                    shift and go to state 997
    CatchClauseS                   shift and go to state 998
    empty                          shift and go to state 999

state 874

    (618) ZooCatches -> empty .

    FINALLY         reduce using rule 618 (ZooCatches -> empty .)
    IDENT           reduce using rule 618 (ZooCatches -> empty .)
    IF              reduce using rule 618 (ZooCatches -> empty .)
    WHILE           reduce using rule 618 (ZooCatches -> empty .)
    LBRACE          reduce using rule 618 (ZooCatches -> empty .)
    SEMICOLON       reduce using rule 618 (ZooCatches -> empty .)
    ASSERT          reduce using rule 618 (ZooCatches -> empty .)
    SWITCH          reduce using rule 618 (ZooCatches -> empty .)
    DO              reduce using rule 618 (ZooCatches -> empty .)
    BREAK           reduce using rule 618 (ZooCatches -> empty .)
    CONTINUE        reduce using rule 618 (ZooCatches -> empty .)
    RETURN          reduce using rule 618 (ZooCatches -> empty .)
    SYNCHRONIZED    reduce using rule 618 (ZooCatches -> empty .)
    THROW           reduce using rule 618 (ZooCatches -> empty .)
    TRY             reduce using rule 618 (ZooCatches -> empty .)
    FOR             reduce using rule 618 (ZooCatches -> empty .)
    FINAL           reduce using rule 618 (ZooCatches -> empty .)
    EXTENDS         reduce using rule 618 (ZooCatches -> empty .)
    PUBLIC          reduce using rule 618 (ZooCatches -> empty .)
    PROTECTED       reduce using rule 618 (ZooCatches -> empty .)
    PRIVATE         reduce using rule 618 (ZooCatches -> empty .)
    ABSTRACT        reduce using rule 618 (ZooCatches -> empty .)
    STATIC          reduce using rule 618 (ZooCatches -> empty .)
    STRICTFP        reduce using rule 618 (ZooCatches -> empty .)
    INC             reduce using rule 618 (ZooCatches -> empty .)
    DEC             reduce using rule 618 (ZooCatches -> empty .)
    SUPER           reduce using rule 618 (ZooCatches -> empty .)
    ATRATE          reduce using rule 618 (ZooCatches -> empty .)
    PERIOD          reduce using rule 618 (ZooCatches -> empty .)
    NEW             reduce using rule 618 (ZooCatches -> empty .)
    THIS            reduce using rule 618 (ZooCatches -> empty .)
    LPAREN          reduce using rule 618 (ZooCatches -> empty .)
    BOOL_LIT        reduce using rule 618 (ZooCatches -> empty .)
    NULL_LIT        reduce using rule 618 (ZooCatches -> empty .)
    DECIMAL_LIT     reduce using rule 618 (ZooCatches -> empty .)
    HEX_LIT         reduce using rule 618 (ZooCatches -> empty .)
    OCTAL_LIT       reduce using rule 618 (ZooCatches -> empty .)
    BINARY_LIT      reduce using rule 618 (ZooCatches -> empty .)
    FLOAT_DEC_LIT   reduce using rule 618 (ZooCatches -> empty .)
    FLOAT_HEX_LIT   reduce using rule 618 (ZooCatches -> empty .)
    STRING_LIT      reduce using rule 618 (ZooCatches -> empty .)
    CHAR_LIT        reduce using rule 618 (ZooCatches -> empty .)
    BOOLEAN         reduce using rule 618 (ZooCatches -> empty .)
    VOID            reduce using rule 618 (ZooCatches -> empty .)
    BYTE            reduce using rule 618 (ZooCatches -> empty .)
    SHORT           reduce using rule 618 (ZooCatches -> empty .)
    INT             reduce using rule 618 (ZooCatches -> empty .)
    LONG            reduce using rule 618 (ZooCatches -> empty .)
    CHAR            reduce using rule 618 (ZooCatches -> empty .)
    FLOAT           reduce using rule 618 (ZooCatches -> empty .)
    DOUBLE          reduce using rule 618 (ZooCatches -> empty .)
    CLASS           reduce using rule 618 (ZooCatches -> empty .)
    ENUM            reduce using rule 618 (ZooCatches -> empty .)
    IMPLEMENTS      reduce using rule 618 (ZooCatches -> empty .)
    RBRACE          reduce using rule 618 (ZooCatches -> empty .)
    CASE            reduce using rule 618 (ZooCatches -> empty .)
    DEFAULT         reduce using rule 618 (ZooCatches -> empty .)
    ELSE            reduce using rule 618 (ZooCatches -> empty .)


state 875

    (622) CatchClause -> CATCH . LPAREN CatchFormalParameter RPAREN Block

    LPAREN          shift and go to state 1000


state 876

    (628) TryWithResourcesStatement -> TRY ResourceSpecification Block . ZooCatches ZooFinally
    (617) ZooCatches -> . Catches
    (618) ZooCatches -> . empty
    (619) Catches -> . CatchClause CatchClauseS
    (1) empty -> .
    (622) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block

    FINALLY         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    CATCH           shift and go to state 875

    ZooCatches                     shift and go to state 1001
    Catches                        shift and go to state 1002
    empty                          shift and go to state 874
    CatchClause                    shift and go to state 873

state 877

    (633) ResourceSpecification -> LPAREN ResourceList . ZooSEMICOLON RPAREN
    (631) ZooSEMICOLON -> . SEMICOLON
    (632) ZooSEMICOLON -> . empty
    (1) empty -> .

    SEMICOLON       shift and go to state 1004
    RPAREN          reduce using rule 1 (empty -> .)

    ZooSEMICOLON                   shift and go to state 1003
    empty                          shift and go to state 1005

state 878

    (634) ResourceList -> Resource . SEMICOLONResourceS
    (635) SEMICOLONResourceS -> . SEMICOLON Resource SEMICOLONResourceS
    (636) SEMICOLONResourceS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 1007
    RPAREN          reduce using rule 1 (empty -> .)

  ! SEMICOLON       [ reduce using rule 1 (empty -> .) ]

    SEMICOLONResourceS             shift and go to state 1006
    empty                          shift and go to state 1008

state 879

    (637) Resource -> VariableModifierS . UnannType VariableDeclaratorId ASSIGN Expression
    (638) Resource -> VariableModifierS . IDENT VariableDeclaratorId ASSIGN Expression
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 1010
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 1009
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 880

    (589) BasicForStatement -> FOR LPAREN ZooForInit . SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement

    SEMICOLON       shift and go to state 1011


state 881

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS . UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS . IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (528) LocalVariableDeclaration -> VariableModifierS . UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> VariableModifierS . IDENT VariableDeclaratorList
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 1013
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 1012
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 882

    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    INC             shift and go to state 229
    DEC             shift and go to state 230
    LPAREN          shift and go to state 233
    PERIOD          shift and go to state 716
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 883

    (594) ZooForInit -> ForInit .

    SEMICOLON       reduce using rule 594 (ZooForInit -> ForInit .)


state 884

    (595) ZooForInit -> empty .
    (531) VariableModifierS -> empty .

    SEMICOLON       reduce using rule 595 (ZooForInit -> empty .)
    IDENT           reduce using rule 531 (VariableModifierS -> empty .)
    BOOLEAN         reduce using rule 531 (VariableModifierS -> empty .)
    BYTE            reduce using rule 531 (VariableModifierS -> empty .)
    SHORT           reduce using rule 531 (VariableModifierS -> empty .)
    INT             reduce using rule 531 (VariableModifierS -> empty .)
    LONG            reduce using rule 531 (VariableModifierS -> empty .)
    CHAR            reduce using rule 531 (VariableModifierS -> empty .)
    FLOAT           reduce using rule 531 (VariableModifierS -> empty .)
    DOUBLE          reduce using rule 531 (VariableModifierS -> empty .)


state 885

    (597) ForInit -> StatementExpressionList .

    SEMICOLON       reduce using rule 597 (ForInit -> StatementExpressionList .)


state 886

    (598) ForInit -> LocalVariableDeclaration .

    SEMICOLON       reduce using rule 598 (ForInit -> LocalVariableDeclaration .)


state 887

    (400) VariableModifier -> Annotation .
    (129) AnnotationS -> Annotation . AnnotationS
    (130) AnnotationS -> Annotation .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for IDENT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 130 (AnnotationS -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 130 (AnnotationS -> Annotation .)
  ! shift/reduce conflict for ATRATE resolved as shift
    FINAL           reduce using rule 400 (VariableModifier -> Annotation .)
    IDENT           reduce using rule 130 (AnnotationS -> Annotation .)
    BOOLEAN         reduce using rule 130 (AnnotationS -> Annotation .)
    BYTE            reduce using rule 130 (AnnotationS -> Annotation .)
    SHORT           reduce using rule 130 (AnnotationS -> Annotation .)
    INT             reduce using rule 130 (AnnotationS -> Annotation .)
    LONG            reduce using rule 130 (AnnotationS -> Annotation .)
    CHAR            reduce using rule 130 (AnnotationS -> Annotation .)
    FLOAT           reduce using rule 130 (AnnotationS -> Annotation .)
    DOUBLE          reduce using rule 130 (AnnotationS -> Annotation .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! INT             [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 400 (VariableModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 400 (VariableModifier -> Annotation .) ]

    Annotation                     shift and go to state 81
    AnnotationS                    shift and go to state 184
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 888

    (600) StatementExpressionList -> StatementExpression . COMMAStatementExpressionS
    (601) COMMAStatementExpressionS -> . COMMA StatementExpression COMMAStatementExpressionS
    (602) COMMAStatementExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 1015
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAStatementExpressionS      shift and go to state 1014
    empty                          shift and go to state 1016

state 889

    (150) MethodInvocation -> TypeName PERIOD SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) FieldAccess -> TypeName PERIOD SUPER . PERIOD IDENT
    (159) MethodReference -> TypeName PERIOD SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 1017
    COLON_SEP       shift and go to state 606


state 890

    (425) ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .

    SEMICOLON       reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    LBRACE          reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    STATIC          reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    PUBLIC          reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    PROTECTED       reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    PRIVATE         reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    FINAL           reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    TRANSIENT       reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    VOLATILE        reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    ABSTRACT        reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    SYNCHRONIZED    reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    NATIVE          reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    STRICTFP        reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    EXTENDS         reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    ATRATE          reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    LSS             reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    IDENT           reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    BOOLEAN         reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    BYTE            reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    SHORT           reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    INT             reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    LONG            reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    CHAR            reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    FLOAT           reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    DOUBLE          reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    VOID            reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    CLASS           reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    ENUM            reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    IMPLEMENTS      reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    INTERFACE       reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    RBRACE          reduce using rule 425 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)


state 891

    (431) ConstructorBody -> LBRACE . ZooExplicitConstructorInvocation ZooBlockStatements RBRACE
    (432) ZooExplicitConstructorInvocation -> . ExplicitConstructorInvocation
    (433) ZooExplicitConstructorInvocation -> . empty
    (436) ExplicitConstructorInvocation -> . ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON
    (437) ExplicitConstructorInvocation -> . ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (438) ExplicitConstructorInvocation -> . ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (439) ExplicitConstructorInvocation -> . IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (440) ExplicitConstructorInvocation -> . Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (1) empty -> .
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for BOOL_LIT resolved as shift
  ! shift/reduce conflict for NULL_LIT resolved as shift
  ! shift/reduce conflict for DECIMAL_LIT resolved as shift
  ! shift/reduce conflict for HEX_LIT resolved as shift
  ! shift/reduce conflict for OCTAL_LIT resolved as shift
  ! shift/reduce conflict for BINARY_LIT resolved as shift
  ! shift/reduce conflict for FLOAT_DEC_LIT resolved as shift
  ! shift/reduce conflict for FLOAT_HEX_LIT resolved as shift
  ! shift/reduce conflict for STRING_LIT resolved as shift
  ! shift/reduce conflict for CHAR_LIT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for SUPER resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 1023
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    PERIOD          shift and go to state 27
    LSS             shift and go to state 181
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! SUPER           [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! NEW             [ reduce using rule 1 (empty -> .) ]
  ! THIS            [ reduce using rule 1 (empty -> .) ]
  ! LPAREN          [ reduce using rule 1 (empty -> .) ]
  ! BOOL_LIT        [ reduce using rule 1 (empty -> .) ]
  ! NULL_LIT        [ reduce using rule 1 (empty -> .) ]
  ! DECIMAL_LIT     [ reduce using rule 1 (empty -> .) ]
  ! HEX_LIT         [ reduce using rule 1 (empty -> .) ]
  ! OCTAL_LIT       [ reduce using rule 1 (empty -> .) ]
  ! BINARY_LIT      [ reduce using rule 1 (empty -> .) ]
  ! FLOAT_DEC_LIT   [ reduce using rule 1 (empty -> .) ]
  ! FLOAT_HEX_LIT   [ reduce using rule 1 (empty -> .) ]
  ! STRING_LIT      [ reduce using rule 1 (empty -> .) ]
  ! CHAR_LIT        [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! VOID            [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooExplicitConstructorInvocation shift and go to state 1018
    ExplicitConstructorInvocation  shift and go to state 1019
    empty                          shift and go to state 1020
    ZooTypeArguments               shift and go to state 1021
    ExpressionName                 shift and go to state 1022
    Primary                        shift and go to state 1024
    TypeArguments                  shift and go to state 179
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    TypeName                       shift and go to state 89
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 892

    (413) Throws -> THROWS ExceptionTypeList .

    LBRACE          reduce using rule 413 (Throws -> THROWS ExceptionTypeList .)
    SEMICOLON       reduce using rule 413 (Throws -> THROWS ExceptionTypeList .)


state 893

    (416) ExceptionTypeList -> ExceptionType . COMMAExceptionTypeS
    (414) COMMAExceptionTypeS -> . COMMA ExceptionType COMMAExceptionTypeS
    (415) COMMAExceptionTypeS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 1026
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAExceptionTypeS            shift and go to state 1025
    empty                          shift and go to state 1027

state 894

    (417) ExceptionType -> ClassType .
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments

    COMMA           reduce using rule 417 (ExceptionType -> ClassType .)
    LBRACE          reduce using rule 417 (ExceptionType -> ClassType .)
    SEMICOLON       reduce using rule 417 (ExceptionType -> ClassType .)
    PERIOD          shift and go to state 177


state 895

    (418) ExceptionType -> TypeVariable .
    (482) ClassType -> TypeVariable . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 1 (empty -> .)
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 418 (ExceptionType -> TypeVariable .) ]
  ! LBRACE          [ reduce using rule 418 (ExceptionType -> TypeVariable .) ]
  ! SEMICOLON       [ reduce using rule 418 (ExceptionType -> TypeVariable .) ]

    ZooTypeArguments               shift and go to state 178
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 896

    (419) ExceptionType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 1 (empty -> .)
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 419 (ExceptionType -> IDENT .) ]
  ! LBRACE          [ reduce using rule 419 (ExceptionType -> IDENT .) ]
  ! SEMICOLON       [ reduce using rule 419 (ExceptionType -> IDENT .) ]

    ZooTypeArguments               shift and go to state 182
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 897

    (430) ConstructorDeclarator -> ZooTypeParameters IDENT LPAREN . ZooFormalParameterList RPAREN
    (386) ZooFormalParameterList -> . FormalParameterList
    (387) ZooFormalParameterList -> . empty
    (389) FormalParameterList -> . ReceiverParameter
    (390) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (391) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (409) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (410) ReceiverParameter -> . AnnotationS IDENT ZooIDENTPERIOD THIS
    (411) ReceiverParameter -> . UnannType ZooIDENTPERIOD THIS
    (412) ReceiverParameter -> . IDENT ZooIDENTPERIOD THIS
    (394) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (395) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (402) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (403) LastFormalParameter -> . VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId
    (404) LastFormalParameter -> . FormalParameter
    (405) LastFormalParameter -> . VariableModifierS UnannType ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> . VariableModifierS IDENT ELLIPSIS VariableDeclaratorId
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (398) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (399) FormalParameter -> . ZooVariableModifier IDENT VariableDeclaratorId
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (396) ZooVariableModifier -> . VariableModifier
    (397) ZooVariableModifier -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 1028
    BOOLEAN         shift and go to state 553
    FINAL           shift and go to state 377
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooFormalParameterList         shift and go to state 1029
    FormalParameterList            shift and go to state 359
    empty                          shift and go to state 360
    ReceiverParameter              shift and go to state 364
    FormalParameters               shift and go to state 365
    LastFormalParameter            shift and go to state 366
    AnnotationS                    shift and go to state 1030
    UnannType                      shift and go to state 368
    FormalParameter                shift and go to state 369
    VariableModifierS              shift and go to state 370
    Annotation                     shift and go to state 367
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    ZooVariableModifier            shift and go to state 373
    VariableModifier               shift and go to state 374
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 898

    (331) FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .

    SEMICOLON       reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LBRACE          reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STATIC          reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PUBLIC          reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PROTECTED       reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PRIVATE         reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FINAL           reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    TRANSIENT       reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    VOLATILE        reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ABSTRACT        reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    SYNCHRONIZED    reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    NATIVE          reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STRICTFP        reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    EXTENDS         reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ATRATE          reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LSS             reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IDENT           reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BOOLEAN         reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BYTE            reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    SHORT           reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INT             reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LONG            reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CHAR            reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FLOAT           reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    DOUBLE          reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    VOID            reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CLASS           reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ENUM            reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IMPLEMENTS      reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INTERFACE       reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    RBRACE          reduce using rule 331 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)


state 899

    (343) VariableDeclaratorList -> VariableDeclarator COMMAVariableDeclaratorS .

    SEMICOLON       reduce using rule 343 (VariableDeclaratorList -> VariableDeclarator COMMAVariableDeclaratorS .)


state 900

    (341) COMMAVariableDeclaratorS -> COMMA . VariableDeclarator COMMAVariableDeclaratorS
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclarator             shift and go to state 1031
    VariableDeclaratorId           shift and go to state 747

state 901

    (342) COMMAVariableDeclaratorS -> empty .

    SEMICOLON       reduce using rule 342 (COMMAVariableDeclaratorS -> empty .)


state 902

    (346) VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer .

    COMMA           reduce using rule 346 (VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer .)
    SEMICOLON       reduce using rule 346 (VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer .)


state 903

    (344) ZooASSIGNVariableInitializer -> ASSIGN . VariableInitializer
    (348) VariableInitializer -> . Expression
    (349) VariableInitializer -> . ArrayInitializer
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (96) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    LBRACE          shift and go to state 676
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    VariableInitializer            shift and go to state 1032
    Expression                     shift and go to state 829
    ArrayInitializer               shift and go to state 830
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 904

    (345) ZooASSIGNVariableInitializer -> empty .

    COMMA           reduce using rule 345 (ZooASSIGNVariableInitializer -> empty .)
    SEMICOLON       reduce using rule 345 (ZooASSIGNVariableInitializer -> empty .)


state 905

    (347) VariableDeclaratorId -> IDENT ZooDims .

    ASSIGN          reduce using rule 347 (VariableDeclaratorId -> IDENT ZooDims .)
    COMMA           reduce using rule 347 (VariableDeclaratorId -> IDENT ZooDims .)
    SEMICOLON       reduce using rule 347 (VariableDeclaratorId -> IDENT ZooDims .)
    RPAREN          reduce using rule 347 (VariableDeclaratorId -> IDENT ZooDims .)
    COLON           reduce using rule 347 (VariableDeclaratorId -> IDENT ZooDims .)


state 906

    (332) FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .

    SEMICOLON       reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    LBRACE          reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    STATIC          reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    PUBLIC          reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    PROTECTED       reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    PRIVATE         reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    FINAL           reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    TRANSIENT       reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    VOLATILE        reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    ABSTRACT        reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    SYNCHRONIZED    reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    NATIVE          reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    STRICTFP        reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    EXTENDS         reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    ATRATE          reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    LSS             reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    IDENT           reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    BOOLEAN         reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    BYTE            reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    SHORT           reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    INT             reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    LONG            reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    CHAR            reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    FLOAT           reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    DOUBLE          reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    VOID            reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    CLASS           reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    ENUM            reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    IMPLEMENTS      reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    INTERFACE       reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)
    RBRACE          reduce using rule 332 (FieldDeclaration -> FieldModifierS IDENT VariableDeclaratorList SEMICOLON .)


state 907

    (380) MethodHeader -> Result MethodDeclarator ZooThrows .

    SEMICOLON       reduce using rule 380 (MethodHeader -> Result MethodDeclarator ZooThrows .)
    LBRACE          reduce using rule 380 (MethodHeader -> Result MethodDeclarator ZooThrows .)


state 908

    (388) MethodDeclarator -> IDENT LPAREN . ZooFormalParameterList RPAREN ZooDims
    (386) ZooFormalParameterList -> . FormalParameterList
    (387) ZooFormalParameterList -> . empty
    (389) FormalParameterList -> . ReceiverParameter
    (390) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (391) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (409) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (410) ReceiverParameter -> . AnnotationS IDENT ZooIDENTPERIOD THIS
    (411) ReceiverParameter -> . UnannType ZooIDENTPERIOD THIS
    (412) ReceiverParameter -> . IDENT ZooIDENTPERIOD THIS
    (394) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (395) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (402) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (403) LastFormalParameter -> . VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId
    (404) LastFormalParameter -> . FormalParameter
    (405) LastFormalParameter -> . VariableModifierS UnannType ELLIPSIS VariableDeclaratorId
    (406) LastFormalParameter -> . VariableModifierS IDENT ELLIPSIS VariableDeclaratorId
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (398) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (399) FormalParameter -> . ZooVariableModifier IDENT VariableDeclaratorId
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (396) ZooVariableModifier -> . VariableModifier
    (397) ZooVariableModifier -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 1028
    BOOLEAN         shift and go to state 553
    FINAL           shift and go to state 377
    ATRATE          shift and go to state 13
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooFormalParameterList         shift and go to state 1033
    FormalParameterList            shift and go to state 359
    empty                          shift and go to state 360
    ReceiverParameter              shift and go to state 364
    FormalParameters               shift and go to state 365
    LastFormalParameter            shift and go to state 366
    AnnotationS                    shift and go to state 1030
    UnannType                      shift and go to state 368
    FormalParameter                shift and go to state 369
    VariableModifierS              shift and go to state 370
    Annotation                     shift and go to state 367
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    ZooVariableModifier            shift and go to state 373
    VariableModifier               shift and go to state 374
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 909

    (381) MethodHeader -> TypeParameters AnnotationS Result . MethodDeclarator ZooThrows
    (388) MethodDeclarator -> . IDENT LPAREN ZooFormalParameterList RPAREN ZooDims

    IDENT           shift and go to state 756

    MethodDeclarator               shift and go to state 1034

state 910

    (382) MethodHeader -> TypeParameters Result MethodDeclarator . ZooThrows
    (378) ZooThrows -> . Throws
    (379) ZooThrows -> . empty
    (413) Throws -> . THROWS ExceptionTypeList
    (1) empty -> .

    THROWS          shift and go to state 743
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    ZooThrows                      shift and go to state 1035
    Throws                         shift and go to state 741
    empty                          shift and go to state 742

state 911

    (29) InterfaceBody -> LBRACE InterfaceMemberDeclarationS . RBRACE

    RBRACE          shift and go to state 1036


state 912

    (30) InterfaceMemberDeclarationS -> InterfaceMemberDeclaration . InterfaceMemberDeclarationS
    (30) InterfaceMemberDeclarationS -> . InterfaceMemberDeclaration InterfaceMemberDeclarationS
    (31) InterfaceMemberDeclarationS -> . empty
    (32) InterfaceMemberDeclaration -> . ConstantDeclaration
    (33) InterfaceMemberDeclaration -> . InterfaceMethodDeclaration
    (34) InterfaceMemberDeclaration -> . ClassDeclaration
    (35) InterfaceMemberDeclaration -> . InterfaceDeclaration
    (36) InterfaceMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (38) ConstantDeclaration -> . ConstantModifierS IDENT VariableDeclaratorList SEMICOLON
    (45) InterfaceMethodDeclaration -> . InterfaceMethodModifierS MethodHeader MethodBody
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (39) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (40) ConstantModifierS -> . empty
    (46) InterfaceMethodModifierS -> . InterfaceMethodModifier InterfaceMethodModifierS
    (47) InterfaceMethodModifierS -> . empty
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (41) ConstantModifier -> . Annotation
    (42) ConstantModifier -> . PUBLIC
    (43) ConstantModifier -> . STATIC
    (44) ConstantModifier -> . FINAL
    (48) InterfaceMethodModifier -> . Annotation
    (49) InterfaceMethodModifier -> . PUBLIC
    (50) InterfaceMethodModifier -> . ABSTRACT
    (51) InterfaceMethodModifier -> . DEFAULT
    (52) InterfaceMethodModifier -> . STATIC
    (53) InterfaceMethodModifier -> . STRICTFP
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 918
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 922
    STATIC          shift and go to state 923
    FINAL           shift and go to state 779
    ABSTRACT        shift and go to state 924
    DEFAULT         shift and go to state 925
    STRICTFP        shift and go to state 926
    EXTENDS         shift and go to state 45
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    InterfaceMemberDeclaration     shift and go to state 912
    InterfaceMemberDeclarationS    shift and go to state 1037
    empty                          shift and go to state 913
    ConstantDeclaration            shift and go to state 914
    InterfaceMethodDeclaration     shift and go to state 915
    ClassDeclaration               shift and go to state 916
    InterfaceDeclaration           shift and go to state 917
    ConstantModifierS              shift and go to state 772
    InterfaceMethodModifierS       shift and go to state 919
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstantModifier               shift and go to state 774
    InterfaceMethodModifier        shift and go to state 920
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 921
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 913

    (31) InterfaceMemberDeclarationS -> empty .
    (40) ConstantModifierS -> empty .
    (47) InterfaceMethodModifierS -> empty .
    (442) ClassModifierS -> empty .
    (301) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 40 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 40 (ConstantModifierS -> empty .)
    RBRACE          reduce using rule 31 (InterfaceMemberDeclarationS -> empty .)
    IDENT           reduce using rule 40 (ConstantModifierS -> empty .)
    BOOLEAN         reduce using rule 40 (ConstantModifierS -> empty .)
    BYTE            reduce using rule 40 (ConstantModifierS -> empty .)
    SHORT           reduce using rule 40 (ConstantModifierS -> empty .)
    INT             reduce using rule 40 (ConstantModifierS -> empty .)
    LONG            reduce using rule 40 (ConstantModifierS -> empty .)
    CHAR            reduce using rule 40 (ConstantModifierS -> empty .)
    FLOAT           reduce using rule 40 (ConstantModifierS -> empty .)
    DOUBLE          reduce using rule 40 (ConstantModifierS -> empty .)
    VOID            reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    LSS             reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 301 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 301 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)

  ! IDENT           [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! BOOLEAN         [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! INT             [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! LONG            [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 47 (InterfaceMethodModifierS -> empty .) ]


state 914

    (32) InterfaceMemberDeclaration -> ConstantDeclaration .

    SEMICOLON       reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    PUBLIC          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    STATIC          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    FINAL           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    ABSTRACT        reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    DEFAULT         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    STRICTFP        reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    EXTENDS         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    PROTECTED       reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    PRIVATE         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    ATRATE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    IDENT           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    BOOLEAN         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    BYTE            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    SHORT           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    INT             reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    LONG            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    CHAR            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    FLOAT           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    DOUBLE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    VOID            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    LSS             reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    CLASS           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    ENUM            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    IMPLEMENTS      reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    LBRACE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    INTERFACE       reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    RBRACE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)


state 915

    (33) InterfaceMemberDeclaration -> InterfaceMethodDeclaration .

    SEMICOLON       reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    PUBLIC          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    STATIC          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    FINAL           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    ABSTRACT        reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    DEFAULT         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    STRICTFP        reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    EXTENDS         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    PROTECTED       reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    PRIVATE         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    ATRATE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    IDENT           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    BOOLEAN         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    BYTE            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    SHORT           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    INT             reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    LONG            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    CHAR            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    FLOAT           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    DOUBLE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    VOID            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    LSS             reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    CLASS           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    ENUM            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    IMPLEMENTS      reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    LBRACE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    INTERFACE       reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    RBRACE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)


state 916

    (34) InterfaceMemberDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    DEFAULT         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    IDENT           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    BOOLEAN         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    BYTE            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    SHORT           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    INT             reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    LONG            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    CHAR            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    FLOAT           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    DOUBLE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    VOID            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    LSS             reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    RBRACE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)


state 917

    (35) InterfaceMemberDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    DEFAULT         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    IDENT           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    BOOLEAN         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    BYTE            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    SHORT           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    INT             reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    LONG            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    CHAR            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    FLOAT           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    DOUBLE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    VOID            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    LSS             reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    RBRACE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)


state 918

    (36) InterfaceMemberDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    DEFAULT         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    IDENT           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    BOOLEAN         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    BYTE            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    SHORT           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    INT             reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    LONG            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    CHAR            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    FLOAT           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    DOUBLE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    VOID            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    LSS             reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    RBRACE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)


state 919

    (45) InterfaceMethodDeclaration -> InterfaceMethodModifierS . MethodHeader MethodBody
    (380) MethodHeader -> . Result MethodDeclarator ZooThrows
    (381) MethodHeader -> . TypeParameters AnnotationS Result MethodDeclarator ZooThrows
    (382) MethodHeader -> . TypeParameters Result MethodDeclarator ZooThrows
    (383) Result -> . UnannType
    (384) Result -> . IDENT
    (385) Result -> . VOID
    (308) TypeParameters -> . LSS TypeParameterList GTR
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 558
    VOID            shift and go to state 559
    LSS             shift and go to state 297
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    MethodHeader                   shift and go to state 1038
    Result                         shift and go to state 555
    TypeParameters                 shift and go to state 556
    UnannType                      shift and go to state 557
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 920

    (46) InterfaceMethodModifierS -> InterfaceMethodModifier . InterfaceMethodModifierS
    (46) InterfaceMethodModifierS -> . InterfaceMethodModifier InterfaceMethodModifierS
    (47) InterfaceMethodModifierS -> . empty
    (48) InterfaceMethodModifier -> . Annotation
    (49) InterfaceMethodModifier -> . PUBLIC
    (50) InterfaceMethodModifier -> . ABSTRACT
    (51) InterfaceMethodModifier -> . DEFAULT
    (52) InterfaceMethodModifier -> . STATIC
    (53) InterfaceMethodModifier -> . STRICTFP
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 1042
    ABSTRACT        shift and go to state 1043
    DEFAULT         shift and go to state 925
    STATIC          shift and go to state 1044
    STRICTFP        shift and go to state 1045
    IDENT           reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    InterfaceMethodModifier        shift and go to state 920
    InterfaceMethodModifierS       shift and go to state 1039
    empty                          shift and go to state 1040
    Annotation                     shift and go to state 1041
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 921

    (41) ConstantModifier -> Annotation .
    (48) InterfaceMethodModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 41 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 21 (InterfaceModifier -> Annotation .)
    IDENT           reduce using rule 41 (ConstantModifier -> Annotation .)
    BOOLEAN         reduce using rule 41 (ConstantModifier -> Annotation .)
    BYTE            reduce using rule 41 (ConstantModifier -> Annotation .)
    SHORT           reduce using rule 41 (ConstantModifier -> Annotation .)
    INT             reduce using rule 41 (ConstantModifier -> Annotation .)
    LONG            reduce using rule 41 (ConstantModifier -> Annotation .)
    CHAR            reduce using rule 41 (ConstantModifier -> Annotation .)
    FLOAT           reduce using rule 41 (ConstantModifier -> Annotation .)
    DOUBLE          reduce using rule 41 (ConstantModifier -> Annotation .)
    DEFAULT         reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    VOID            reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    LSS             reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)
    FINAL           reduce using rule 21 (InterfaceModifier -> Annotation .)
    CLASS           reduce using rule 21 (InterfaceModifier -> Annotation .)
    ENUM            reduce using rule 21 (InterfaceModifier -> Annotation .)

  ! PUBLIC          [ reduce using rule 41 (ConstantModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 41 (ConstantModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 41 (ConstantModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 41 (ConstantModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! INT             [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 48 (InterfaceMethodModifier -> Annotation .) ]


state 922

    (42) ConstantModifier -> PUBLIC .
    (49) InterfaceMethodModifier -> PUBLIC .
    (22) InterfaceModifier -> PUBLIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for INT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for LONG resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 42 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 22 (InterfaceModifier -> PUBLIC .)
    IDENT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 42 (ConstantModifier -> PUBLIC .)
    BYTE            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    SHORT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    INT             reduce using rule 42 (ConstantModifier -> PUBLIC .)
    LONG            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    CHAR            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    FLOAT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    DOUBLE          reduce using rule 42 (ConstantModifier -> PUBLIC .)
    DEFAULT         reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    VOID            reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    LSS             reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    CLASS           reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ENUM            reduce using rule 22 (InterfaceModifier -> PUBLIC .)

  ! PUBLIC          [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 42 (ConstantModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! BOOLEAN         [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! BYTE            [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! SHORT           [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! INT             [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! LONG            [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! CHAR            [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! FLOAT           [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]
  ! DOUBLE          [ reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .) ]


state 923

    (43) ConstantModifier -> STATIC .
    (52) InterfaceMethodModifier -> STATIC .
    (26) InterfaceModifier -> STATIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for INT resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for LONG resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 43 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 26 (InterfaceModifier -> STATIC .)
    IDENT           reduce using rule 43 (ConstantModifier -> STATIC .)
    BOOLEAN         reduce using rule 43 (ConstantModifier -> STATIC .)
    BYTE            reduce using rule 43 (ConstantModifier -> STATIC .)
    SHORT           reduce using rule 43 (ConstantModifier -> STATIC .)
    INT             reduce using rule 43 (ConstantModifier -> STATIC .)
    LONG            reduce using rule 43 (ConstantModifier -> STATIC .)
    CHAR            reduce using rule 43 (ConstantModifier -> STATIC .)
    FLOAT           reduce using rule 43 (ConstantModifier -> STATIC .)
    DOUBLE          reduce using rule 43 (ConstantModifier -> STATIC .)
    DEFAULT         reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    VOID            reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    LSS             reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)
    FINAL           reduce using rule 26 (InterfaceModifier -> STATIC .)
    CLASS           reduce using rule 26 (InterfaceModifier -> STATIC .)
    ENUM            reduce using rule 26 (InterfaceModifier -> STATIC .)

  ! PUBLIC          [ reduce using rule 43 (ConstantModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 43 (ConstantModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 43 (ConstantModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 43 (ConstantModifier -> STATIC .) ]
  ! PUBLIC          [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! IDENT           [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! BOOLEAN         [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! BYTE            [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! SHORT           [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! INT             [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! LONG            [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! CHAR            [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! FLOAT           [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]
  ! DOUBLE          [ reduce using rule 52 (InterfaceMethodModifier -> STATIC .) ]


state 924

    (50) InterfaceMethodModifier -> ABSTRACT .
    (25) InterfaceModifier -> ABSTRACT .

  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
    DEFAULT         reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    VOID            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    LSS             reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    INT             reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    LONG            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    FINAL           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    CLASS           reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ENUM            reduce using rule 25 (InterfaceModifier -> ABSTRACT .)

  ! PUBLIC          [ reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .) ]


state 925

    (51) InterfaceMethodModifier -> DEFAULT .

    PUBLIC          reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    ABSTRACT        reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    DEFAULT         reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    STATIC          reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    STRICTFP        reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    ATRATE          reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    IDENT           reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    VOID            reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    LSS             reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    BOOLEAN         reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    BYTE            reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    SHORT           reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    INT             reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    LONG            reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    CHAR            reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    FLOAT           reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)
    DOUBLE          reduce using rule 51 (InterfaceMethodModifier -> DEFAULT .)


state 926

    (53) InterfaceMethodModifier -> STRICTFP .
    (27) InterfaceModifier -> STRICTFP .

  ! reduce/reduce conflict for PUBLIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STATIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ATRATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
    DEFAULT         reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    IDENT           reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    VOID            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    LSS             reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    BYTE            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    SHORT           reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    INT             reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    LONG            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    CHAR            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    PUBLIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ATRATE          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    FINAL           reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    CLASS           reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ENUM            reduce using rule 27 (InterfaceModifier -> STRICTFP .)

  ! PUBLIC          [ reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .) ]
  ! ABSTRACT        [ reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .) ]
  ! STATIC          [ reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .) ]
  ! STRICTFP        [ reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .) ]
  ! ATRATE          [ reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .) ]


state 927

    (55) AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .

    SEMICOLON       reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    FINAL           reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    EXTENDS         reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    PUBLIC          reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    PROTECTED       reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    PRIVATE         reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    ABSTRACT        reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    STATIC          reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    STRICTFP        reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    ATRATE          reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    CLASS           reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    ENUM            reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    IMPLEMENTS      reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    LBRACE          reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    INTERFACE       reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    $end            reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    TRANSIENT       reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    VOLATILE        reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    SYNCHRONIZED    reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    NATIVE          reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    LSS             reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    IDENT           reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    BOOLEAN         reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    BYTE            reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    SHORT           reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    INT             reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    LONG            reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    CHAR            reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    FLOAT           reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    DOUBLE          reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    VOID            reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    RBRACE          reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    DEFAULT         reduce using rule 55 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)


state 928

    (56) AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS .

    RBRACE          reduce using rule 56 (AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS .)


state 929

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType . IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON

    IDENT           shift and go to state 1046


state 930

    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT . IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 1047
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 931

    (37) ConstantDeclaration -> ConstantModifierS UnannType . VariableDeclaratorList SEMICOLON
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorList         shift and go to state 1048
    VariableDeclarator             shift and go to state 746
    VariableDeclaratorId           shift and go to state 747

state 932

    (38) ConstantDeclaration -> ConstantModifierS IDENT . VariableDeclaratorList SEMICOLON
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 748
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    VariableDeclaratorList         shift and go to state 1049
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    VariableDeclarator             shift and go to state 746
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    VariableDeclaratorId           shift and go to state 747
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 933

    (69) AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .

    IDENT           reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    BOOLEAN         reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    BYTE            reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    SHORT           reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    INT             reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    LONG            reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    CHAR            reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    FLOAT           reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    DOUBLE          reduce using rule 69 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)


state 934

    (70) AnnotationTypeElementModifierS -> empty .

    IDENT           reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    BOOLEAN         reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    BYTE            reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    SHORT           reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    INT             reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    LONG            reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    CHAR            reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    FLOAT           reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)
    DOUBLE          reduce using rule 70 (AnnotationTypeElementModifierS -> empty .)


state 935

    (71) AnnotationTypeElementModifier -> Annotation .

    PUBLIC          reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    ABSTRACT        reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    ATRATE          reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    IDENT           reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    BOOLEAN         reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    BYTE            reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    SHORT           reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    INT             reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    LONG            reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    CHAR            reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    FLOAT           reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)
    DOUBLE          reduce using rule 71 (AnnotationTypeElementModifier -> Annotation .)


state 936

    (72) AnnotationTypeElementModifier -> PUBLIC .

    PUBLIC          reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    ATRATE          reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    IDENT           reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    BYTE            reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    SHORT           reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    INT             reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    LONG            reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    CHAR            reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    FLOAT           reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)
    DOUBLE          reduce using rule 72 (AnnotationTypeElementModifier -> PUBLIC .)


state 937

    (73) AnnotationTypeElementModifier -> ABSTRACT .

    PUBLIC          reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    ATRATE          reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    IDENT           reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    BYTE            reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    SHORT           reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    INT             reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    LONG            reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    CHAR            reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    FLOAT           reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 73 (AnnotationTypeElementModifier -> ABSTRACT .)


state 938

    (39) ConstantModifierS -> ConstantModifier ConstantModifierS .

    IDENT           reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    BOOLEAN         reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    BYTE            reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    SHORT           reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    INT             reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    LONG            reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    CHAR            reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    FLOAT           reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    DOUBLE          reduce using rule 39 (ConstantModifierS -> ConstantModifier ConstantModifierS .)


state 939

    (40) ConstantModifierS -> empty .

    IDENT           reduce using rule 40 (ConstantModifierS -> empty .)
    BOOLEAN         reduce using rule 40 (ConstantModifierS -> empty .)
    BYTE            reduce using rule 40 (ConstantModifierS -> empty .)
    SHORT           reduce using rule 40 (ConstantModifierS -> empty .)
    INT             reduce using rule 40 (ConstantModifierS -> empty .)
    LONG            reduce using rule 40 (ConstantModifierS -> empty .)
    CHAR            reduce using rule 40 (ConstantModifierS -> empty .)
    FLOAT           reduce using rule 40 (ConstantModifierS -> empty .)
    DOUBLE          reduce using rule 40 (ConstantModifierS -> empty .)


state 940

    (41) ConstantModifier -> Annotation .

    PUBLIC          reduce using rule 41 (ConstantModifier -> Annotation .)
    STATIC          reduce using rule 41 (ConstantModifier -> Annotation .)
    FINAL           reduce using rule 41 (ConstantModifier -> Annotation .)
    ATRATE          reduce using rule 41 (ConstantModifier -> Annotation .)
    IDENT           reduce using rule 41 (ConstantModifier -> Annotation .)
    BOOLEAN         reduce using rule 41 (ConstantModifier -> Annotation .)
    BYTE            reduce using rule 41 (ConstantModifier -> Annotation .)
    SHORT           reduce using rule 41 (ConstantModifier -> Annotation .)
    INT             reduce using rule 41 (ConstantModifier -> Annotation .)
    LONG            reduce using rule 41 (ConstantModifier -> Annotation .)
    CHAR            reduce using rule 41 (ConstantModifier -> Annotation .)
    FLOAT           reduce using rule 41 (ConstantModifier -> Annotation .)
    DOUBLE          reduce using rule 41 (ConstantModifier -> Annotation .)


state 941

    (42) ConstantModifier -> PUBLIC .

    PUBLIC          reduce using rule 42 (ConstantModifier -> PUBLIC .)
    STATIC          reduce using rule 42 (ConstantModifier -> PUBLIC .)
    FINAL           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    ATRATE          reduce using rule 42 (ConstantModifier -> PUBLIC .)
    IDENT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 42 (ConstantModifier -> PUBLIC .)
    BYTE            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    SHORT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    INT             reduce using rule 42 (ConstantModifier -> PUBLIC .)
    LONG            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    CHAR            reduce using rule 42 (ConstantModifier -> PUBLIC .)
    FLOAT           reduce using rule 42 (ConstantModifier -> PUBLIC .)
    DOUBLE          reduce using rule 42 (ConstantModifier -> PUBLIC .)


state 942

    (43) ConstantModifier -> STATIC .

    PUBLIC          reduce using rule 43 (ConstantModifier -> STATIC .)
    STATIC          reduce using rule 43 (ConstantModifier -> STATIC .)
    FINAL           reduce using rule 43 (ConstantModifier -> STATIC .)
    ATRATE          reduce using rule 43 (ConstantModifier -> STATIC .)
    IDENT           reduce using rule 43 (ConstantModifier -> STATIC .)
    BOOLEAN         reduce using rule 43 (ConstantModifier -> STATIC .)
    BYTE            reduce using rule 43 (ConstantModifier -> STATIC .)
    SHORT           reduce using rule 43 (ConstantModifier -> STATIC .)
    INT             reduce using rule 43 (ConstantModifier -> STATIC .)
    LONG            reduce using rule 43 (ConstantModifier -> STATIC .)
    CHAR            reduce using rule 43 (ConstantModifier -> STATIC .)
    FLOAT           reduce using rule 43 (ConstantModifier -> STATIC .)
    DOUBLE          reduce using rule 43 (ConstantModifier -> STATIC .)


state 943

    (44) ConstantModifier -> FINAL .

    PUBLIC          reduce using rule 44 (ConstantModifier -> FINAL .)
    STATIC          reduce using rule 44 (ConstantModifier -> FINAL .)
    FINAL           reduce using rule 44 (ConstantModifier -> FINAL .)
    ATRATE          reduce using rule 44 (ConstantModifier -> FINAL .)
    IDENT           reduce using rule 44 (ConstantModifier -> FINAL .)
    BOOLEAN         reduce using rule 44 (ConstantModifier -> FINAL .)
    BYTE            reduce using rule 44 (ConstantModifier -> FINAL .)
    SHORT           reduce using rule 44 (ConstantModifier -> FINAL .)
    INT             reduce using rule 44 (ConstantModifier -> FINAL .)
    LONG            reduce using rule 44 (ConstantModifier -> FINAL .)
    CHAR            reduce using rule 44 (ConstantModifier -> FINAL .)
    FLOAT           reduce using rule 44 (ConstantModifier -> FINAL .)
    DOUBLE          reduce using rule 44 (ConstantModifier -> FINAL .)


state 944

    (508) COMMATypeArgumentS -> COMMA TypeArgument COMMATypeArgumentS .

    GTR             reduce using rule 508 (COMMATypeArgumentS -> COMMA TypeArgument COMMATypeArgumentS .)


state 945

    (150) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 1050


state 946

    (159) MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 159 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)


state 947

    (145) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1051


state 948

    (178) COMMAIDENTS -> COMMA IDENT COMMAIDENTS .

    RPAREN          reduce using rule 178 (COMMAIDENTS -> COMMA IDENT COMMAIDENTS .)


state 949

    (179) COMMAIDENTS -> empty .

    RPAREN          reduce using rule 179 (COMMAIDENTS -> empty .)


state 950

    (410) ReceiverParameter -> AnnotationS IDENT ZooIDENTPERIOD THIS .

    COMMA           reduce using rule 410 (ReceiverParameter -> AnnotationS IDENT ZooIDENTPERIOD THIS .)
    RPAREN          reduce using rule 410 (ReceiverParameter -> AnnotationS IDENT ZooIDENTPERIOD THIS .)


state 951

    (409) ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS .

    COMMA           reduce using rule 409 (ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS .)
    RPAREN          reduce using rule 409 (ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS .)


state 952

    (392) COMMAFormalParameterS -> COMMA FormalParameter COMMAFormalParameterS .

    COMMA           reduce using rule 392 (COMMAFormalParameterS -> COMMA FormalParameter COMMAFormalParameterS .)


state 953

    (402) LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS . VariableDeclaratorId
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 1052

state 954

    (405) LastFormalParameter -> VariableModifierS UnannType ELLIPSIS VariableDeclaratorId .

    RPAREN          reduce using rule 405 (LastFormalParameter -> VariableModifierS UnannType ELLIPSIS VariableDeclaratorId .)


state 955

    (403) LastFormalParameter -> VariableModifierS IDENT AnnotationS ELLIPSIS . VariableDeclaratorId
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 1053

state 956

    (406) LastFormalParameter -> VariableModifierS IDENT ELLIPSIS VariableDeclaratorId .

    RPAREN          reduce using rule 406 (LastFormalParameter -> VariableModifierS IDENT ELLIPSIS VariableDeclaratorId .)


state 957

    (359) UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .

    PERIOD          reduce using rule 359 (UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 359 (UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 359 (UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .)
    IDENT           reduce using rule 359 (UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .)
    THIS            reduce using rule 359 (UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .)
    ELLIPSIS        reduce using rule 359 (UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .)
    OR              reduce using rule 359 (UnannClassType -> UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments .)


state 958

    (360) UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 1054
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 959

    (480) ReferenceType -> IDENT .
    (177) InferredFormalParameterList -> IDENT . COMMAIDENTS
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (412) ReceiverParameter -> IDENT . ZooIDENTPERIOD THIS
    (174) LambdaParameters -> IDENT .
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (178) COMMAIDENTS -> . COMMA IDENT COMMAIDENTS
    (179) COMMAIDENTS -> . empty
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (407) ZooIDENTPERIOD -> . IDENT PERIOD
    (408) ZooIDENTPERIOD -> . empty
    (1) empty -> .
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 231 (MultiplicativeExpression -> IDENT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 231 (MultiplicativeExpression -> IDENT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    ARROW           reduce using rule 174 (LambdaParameters -> IDENT .)
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    PERIOD          shift and go to state 231
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    COMMA           shift and go to state 617
    LBRACE          shift and go to state 237
    IDENT           shift and go to state 612
    RPAREN          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! AND             [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! RPAREN          [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! AND             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! RPAREN          [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    COMMAIDENTS                    shift and go to state 613
    ZooTypeArguments               shift and go to state 614
    Dims                           shift and go to state 615
    ZooIDENTPERIOD                 shift and go to state 616
    empty                          shift and go to state 618
    TypeArguments                  shift and go to state 179
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 960

    (147) MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1055


state 961

    (152) COMMAExpressionS -> COMMA Expression COMMAExpressionS .

    RPAREN          reduce using rule 152 (COMMAExpressionS -> COMMA Expression COMMAExpressionS .)


state 962

    (494) AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .

    COLON_SEP       reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COMMA           reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GTR             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LSS             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LEQ             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GEQ             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INSTANCEOF      reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    EQL             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    NEQ             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    AND             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    XOR             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    OR              reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LAND            reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUES            reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LOR             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RPAREN          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACE          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COLON           reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    MUL             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUO             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    REM             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ADD             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SUB             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHL             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR_UN          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACK          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SEMICOLON       reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LBRACE          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    IDENT           reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THIS            reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ELLIPSIS        reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ATRATE          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    PERIOD          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INC             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEC             reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ASSIGN          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THROWS          reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEFAULT         reduce using rule 494 (AnnotationSLBRACERBRACES -> LBRACE RBRACE AnnotationSLBRACERBRACES .)


state 963

    (493) AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE . AnnotationSLBRACERBRACES
    (493) AnnotationSLBRACERBRACES -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (494) AnnotationSLBRACERBRACES -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (495) AnnotationSLBRACERBRACES -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          shift and go to state 661
    COLON_SEP       reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    ASSIGN          reduce using rule 1 (empty -> .)
    THROWS          reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 663
    AnnotationSLBRACERBRACES       shift and go to state 1056
    empty                          shift and go to state 664
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 964

    (148) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1057


state 965

    (146) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1058


state 966

    (96) ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA . RBRACE

    RBRACE          shift and go to state 1059


state 967

    (99) VariableInitializerList -> VariableInitializer COMMAVariableInitializerS .

    COMMA           reduce using rule 99 (VariableInitializerList -> VariableInitializer COMMAVariableInitializerS .)
    RBRACE          reduce using rule 99 (VariableInitializerList -> VariableInitializer COMMAVariableInitializerS .)


state 968

    (100) COMMAVariableInitializerS -> COMMA . VariableInitializer COMMAVariableInitializerS
    (348) VariableInitializer -> . Expression
    (349) VariableInitializer -> . ArrayInitializer
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (96) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    LBRACE          shift and go to state 676
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    VariableInitializer            shift and go to state 1060
    Expression                     shift and go to state 829
    ArrayInitializer               shift and go to state 830
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 969

    (101) COMMAVariableInitializerS -> empty .

    COMMA           reduce using rule 101 (COMMAVariableInitializerS -> empty .)
    RBRACE          reduce using rule 101 (COMMAVariableInitializerS -> empty .)


state 970

    (169) DimExpr -> AnnotationS LBRACK Expression RBRACK .

    LBRACK          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    ATRATE          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    INC             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    DEC             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    MUL             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    QUO             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    REM             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    ADD             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SUB             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SHL             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SHR             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LSS             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    GTR             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LEQ             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    GEQ             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    EQL             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    NEQ             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    AND             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    XOR             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    OR              reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LAND            reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    QUES            reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LOR             reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    COMMA           reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    COLON           reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 169 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)


state 971

    (124) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN . ZooClassBody
    (457) ZooClassBody -> . ClassBody
    (458) ZooClassBody -> . empty
    (319) ClassBody -> . LBRACE ClassBodyDeclarationS RBRACE
    (1) empty -> .

    LBRACE          shift and go to state 172
    LBRACK          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooClassBody                   shift and go to state 1061
    ClassBody                      shift and go to state 1062
    empty                          shift and go to state 1063

state 972

    (127) ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond .

    LPAREN          reduce using rule 127 (ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond .)


state 973

    (137) TypeArgumentsOrDiamond -> LSS GTR .

    LPAREN          reduce using rule 137 (TypeArgumentsOrDiamond -> LSS GTR .)


state 974

    (133) PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT . PERIODAnnotationSIDENTS
    (133) PERIODAnnotationSIDENTS -> . PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
    (134) PERIODAnnotationSIDENTS -> . PERIOD IDENT PERIODAnnotationSIDENTS
    (135) PERIODAnnotationSIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 688
    LSS             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)

    PERIODAnnotationSIDENTS        shift and go to state 1064
    empty                          shift and go to state 689

state 975

    (134) PERIODAnnotationSIDENTS -> PERIOD IDENT PERIODAnnotationSIDENTS .

    LSS             reduce using rule 134 (PERIODAnnotationSIDENTS -> PERIOD IDENT PERIODAnnotationSIDENTS .)
    LPAREN          reduce using rule 134 (PERIODAnnotationSIDENTS -> PERIOD IDENT PERIODAnnotationSIDENTS .)


state 976

    (149) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1065


state 977

    (309) COMMMATypeParameterS -> COMMA TypeParameter COMMMATypeParameterS .

    GTR             reduce using rule 309 (COMMMATypeParameterS -> COMMA TypeParameter COMMMATypeParameterS .)


state 978

    (502) TypeBound -> EXTENDS TypeVariable .
    (482) ClassType -> TypeVariable . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for GTR resolved using rule 1 (empty -> .)
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 502 (TypeBound -> EXTENDS TypeVariable .) ]
  ! GTR             [ reduce using rule 502 (TypeBound -> EXTENDS TypeVariable .) ]

    ZooTypeArguments               shift and go to state 178
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 979

    (503) TypeBound -> EXTENDS IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for GTR resolved using rule 1 (empty -> .)
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 503 (TypeBound -> EXTENDS IDENT .) ]
  ! GTR             [ reduce using rule 503 (TypeBound -> EXTENDS IDENT .) ]

    ZooTypeArguments               shift and go to state 182
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 980

    (504) TypeBound -> EXTENDS ClassType . AdditionalBoundS
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (266) AdditionalBoundS -> . AdditionalBound AdditionalBoundS
    (267) AdditionalBoundS -> . empty
    (505) AdditionalBound -> . AND ClassType
    (1) empty -> .

    PERIOD          shift and go to state 177
    AND             shift and go to state 384
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    AdditionalBoundS               shift and go to state 1066
    AdditionalBound                shift and go to state 382
    empty                          shift and go to state 383

state 981

    (450) EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations . RBRACE

    RBRACE          shift and go to state 1067


state 982

    (448) ZooEnumBodyDeclarations -> EnumBodyDeclarations .

    RBRACE          reduce using rule 448 (ZooEnumBodyDeclarations -> EnumBodyDeclarations .)


state 983

    (449) ZooEnumBodyDeclarations -> empty .

    RBRACE          reduce using rule 449 (ZooEnumBodyDeclarations -> empty .)


state 984

    (462) EnumBodyDeclarations -> SEMICOLON . ClassBodyDeclarationS
    (317) ClassBodyDeclarationS -> . ClassBodyDeclaration ClassBodyDeclarationS
    (318) ClassBodyDeclarationS -> . empty
    (320) ClassBodyDeclaration -> . ClassMemberDeclaration
    (321) ClassBodyDeclaration -> . Block
    (322) ClassBodyDeclaration -> . StaticInitializer
    (323) ClassBodyDeclaration -> . ConstructorDeclaration
    (1) empty -> .
    (324) ClassMemberDeclaration -> . FieldDeclaration
    (325) ClassMemberDeclaration -> . MethodDeclaration
    (326) ClassMemberDeclaration -> . ClassDeclaration
    (327) ClassMemberDeclaration -> . InterfaceDeclaration
    (328) ClassMemberDeclaration -> . SEMICOLON
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (422) StaticInitializer -> . STATIC Block
    (425) ConstructorDeclaration -> . ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
    (331) FieldDeclaration -> . FieldModifierS UnannType VariableDeclaratorList SEMICOLON
    (332) FieldDeclaration -> . FieldModifierS IDENT VariableDeclaratorList SEMICOLON
    (367) MethodDeclaration -> . MethodModifierS MethodHeader MethodBody
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (423) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (424) ConstructorModifierS -> . empty
    (329) FieldModifierS -> . FieldModifier FieldModifierS
    (330) FieldModifierS -> . empty
    (365) MethodModifierS -> . MethodModifier MethodModifierS
    (366) MethodModifierS -> . empty
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (54) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (426) ConstructorModifier -> . Annotation
    (427) ConstructorModifier -> . PUBLIC
    (428) ConstructorModifier -> . PROTECTED
    (429) ConstructorModifier -> . PRIVATE
    (333) FieldModifier -> . Annotation
    (334) FieldModifier -> . PUBLIC
    (335) FieldModifier -> . PROTECTED
    (336) FieldModifier -> . PRIVATE
    (337) FieldModifier -> . STATIC
    (338) FieldModifier -> . FINAL
    (339) FieldModifier -> . TRANSIENT
    (340) FieldModifier -> . VOLATILE
    (368) MethodModifier -> . Annotation
    (369) MethodModifier -> . PUBLIC
    (370) MethodModifier -> . PROTECTED
    (371) MethodModifier -> . PRIVATE
    (372) MethodModifier -> . ABSTRACT
    (373) MethodModifier -> . STATIC
    (374) MethodModifier -> . FINAL
    (375) MethodModifier -> . SYNCHRONIZED
    (376) MethodModifier -> . NATIVE
    (377) MethodModifier -> . STRICTFP
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    SEMICOLON       shift and go to state 311
    LBRACE          shift and go to state 299
    STATIC          shift and go to state 312
    PUBLIC          shift and go to state 320
    PROTECTED       shift and go to state 321
    PRIVATE         shift and go to state 322
    FINAL           shift and go to state 323
    TRANSIENT       shift and go to state 324
    VOLATILE        shift and go to state 325
    ABSTRACT        shift and go to state 326
    SYNCHRONIZED    shift and go to state 327
    NATIVE          shift and go to state 328
    STRICTFP        shift and go to state 329
    EXTENDS         shift and go to state 45
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ClassBodyDeclarationS          shift and go to state 1068
    ClassBodyDeclaration           shift and go to state 301
    empty                          shift and go to state 302
    ClassMemberDeclaration         shift and go to state 303
    Block                          shift and go to state 304
    StaticInitializer              shift and go to state 305
    ConstructorDeclaration         shift and go to state 306
    FieldDeclaration               shift and go to state 307
    MethodDeclaration              shift and go to state 308
    ClassDeclaration               shift and go to state 309
    InterfaceDeclaration           shift and go to state 310
    ConstructorModifierS           shift and go to state 313
    FieldModifierS                 shift and go to state 314
    MethodModifierS                shift and go to state 315
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstructorModifier            shift and go to state 316
    FieldModifier                  shift and go to state 317
    MethodModifier                 shift and go to state 318
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 319
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 985

    (451) COMMAEnumConstantS -> COMMA EnumConstant . COMMAEnumConstantS
    (451) COMMAEnumConstantS -> . COMMA EnumConstant COMMAEnumConstantS
    (452) COMMAEnumConstantS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 851
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAEnumConstantS             shift and go to state 1069
    empty                          shift and go to state 852

state 986

    (454) EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN . ZooClassBody
    (457) ZooClassBody -> . ClassBody
    (458) ZooClassBody -> . empty
    (319) ClassBody -> . LBRACE ClassBodyDeclarationS RBRACE
    (1) empty -> .

    LBRACE          shift and go to state 172
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

    ZooClassBody                   shift and go to state 1070
    ClassBody                      shift and go to state 1062
    empty                          shift and go to state 1063

state 987

    (459) ZooLPARENZooArgumentListRPAREN -> LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 1071
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 988

    (460) ZooLPARENZooArgumentListRPAREN -> empty .

    LBRACE          reduce using rule 460 (ZooLPARENZooArgumentListRPAREN -> empty .)
    COMMA           reduce using rule 460 (ZooLPARENZooArgumentListRPAREN -> empty .)
    SEMICOLON       reduce using rule 460 (ZooLPARENZooArgumentListRPAREN -> empty .)
    RBRACE          reduce using rule 460 (ZooLPARENZooArgumentListRPAREN -> empty .)


state 989

    (566) IfThenStatement -> IF LPAREN Expression RPAREN . Statement
    (567) IfThenElseStatement -> IF LPAREN Expression RPAREN . StatementNoShortIf ELSE Statement
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1073
    StatementNoShortIf             shift and go to state 1074
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 990

    (582) WhileStatement -> WHILE LPAREN Expression RPAREN . Statement
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1085
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 991

    (570) AssertStatement -> ASSERT Expression COLON Expression . SEMICOLON

    SEMICOLON       shift and go to state 1086


state 992

    (571) SwitchStatement -> SWITCH LPAREN Expression RPAREN . SwitchBlock
    (572) SwitchBlock -> . LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE

    LBRACE          shift and go to state 1088

    SwitchBlock                    shift and go to state 1087

state 993

    (584) DoStatement -> DO Statement WHILE LPAREN . Expression RPAREN SEMICOLON
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1089
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 994

    (613) SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN . Block
    (518) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 1090

state 995

    (615) TryStatement -> TRY Block ZooCatches Finally .

    IDENT           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    IF              reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    WHILE           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    LBRACE          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    SEMICOLON       reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    ASSERT          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    SWITCH          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    DO              reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    BREAK           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    CONTINUE        reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    RETURN          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    SYNCHRONIZED    reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    THROW           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    TRY             reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    FOR             reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    FINAL           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    EXTENDS         reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    PUBLIC          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    PROTECTED       reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    PRIVATE         reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    ABSTRACT        reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    STATIC          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    STRICTFP        reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    INC             reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    DEC             reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    SUPER           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    ATRATE          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    PERIOD          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    NEW             reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    THIS            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    LPAREN          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    BOOL_LIT        reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    NULL_LIT        reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    DECIMAL_LIT     reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    HEX_LIT         reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    OCTAL_LIT       reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    BINARY_LIT      reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    FLOAT_DEC_LIT   reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    FLOAT_HEX_LIT   reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    STRING_LIT      reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    CHAR_LIT        reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    BOOLEAN         reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    VOID            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    BYTE            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    SHORT           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    INT             reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    LONG            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    CHAR            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    FLOAT           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    DOUBLE          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    CLASS           reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    ENUM            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    IMPLEMENTS      reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    RBRACE          reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    CASE            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    DEFAULT         reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)
    ELSE            reduce using rule 615 (TryStatement -> TRY Block ZooCatches Finally .)


state 996

    (627) Finally -> FINALLY . Block
    (518) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 1091

state 997

    (620) CatchClauseS -> CatchClause . CatchClauseS
    (620) CatchClauseS -> . CatchClause CatchClauseS
    (621) CatchClauseS -> . empty
    (622) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block
    (1) empty -> .

    CATCH           shift and go to state 875
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    FINALLY         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)

    CatchClause                    shift and go to state 997
    CatchClauseS                   shift and go to state 1092
    empty                          shift and go to state 999

state 998

    (619) Catches -> CatchClause CatchClauseS .

    IDENT           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    IF              reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    WHILE           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    LBRACE          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    SEMICOLON       reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    ASSERT          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    SWITCH          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    DO              reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    BREAK           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    CONTINUE        reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    RETURN          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    SYNCHRONIZED    reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    THROW           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    TRY             reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    FOR             reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    FINAL           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    EXTENDS         reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    PUBLIC          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    PROTECTED       reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    PRIVATE         reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    ABSTRACT        reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    STATIC          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    STRICTFP        reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    INC             reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    DEC             reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    SUPER           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    ATRATE          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    PERIOD          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    NEW             reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    THIS            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    LPAREN          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    BOOL_LIT        reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    NULL_LIT        reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    DECIMAL_LIT     reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    HEX_LIT         reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    OCTAL_LIT       reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    BINARY_LIT      reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    FLOAT_DEC_LIT   reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    FLOAT_HEX_LIT   reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    STRING_LIT      reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    CHAR_LIT        reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    BOOLEAN         reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    VOID            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    BYTE            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    SHORT           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    INT             reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    LONG            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    CHAR            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    FLOAT           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    DOUBLE          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    CLASS           reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    ENUM            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    IMPLEMENTS      reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    RBRACE          reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    CASE            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    DEFAULT         reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    FINALLY         reduce using rule 619 (Catches -> CatchClause CatchClauseS .)
    ELSE            reduce using rule 619 (Catches -> CatchClause CatchClauseS .)


state 999

    (621) CatchClauseS -> empty .

    IDENT           reduce using rule 621 (CatchClauseS -> empty .)
    IF              reduce using rule 621 (CatchClauseS -> empty .)
    WHILE           reduce using rule 621 (CatchClauseS -> empty .)
    LBRACE          reduce using rule 621 (CatchClauseS -> empty .)
    SEMICOLON       reduce using rule 621 (CatchClauseS -> empty .)
    ASSERT          reduce using rule 621 (CatchClauseS -> empty .)
    SWITCH          reduce using rule 621 (CatchClauseS -> empty .)
    DO              reduce using rule 621 (CatchClauseS -> empty .)
    BREAK           reduce using rule 621 (CatchClauseS -> empty .)
    CONTINUE        reduce using rule 621 (CatchClauseS -> empty .)
    RETURN          reduce using rule 621 (CatchClauseS -> empty .)
    SYNCHRONIZED    reduce using rule 621 (CatchClauseS -> empty .)
    THROW           reduce using rule 621 (CatchClauseS -> empty .)
    TRY             reduce using rule 621 (CatchClauseS -> empty .)
    FOR             reduce using rule 621 (CatchClauseS -> empty .)
    FINAL           reduce using rule 621 (CatchClauseS -> empty .)
    EXTENDS         reduce using rule 621 (CatchClauseS -> empty .)
    PUBLIC          reduce using rule 621 (CatchClauseS -> empty .)
    PROTECTED       reduce using rule 621 (CatchClauseS -> empty .)
    PRIVATE         reduce using rule 621 (CatchClauseS -> empty .)
    ABSTRACT        reduce using rule 621 (CatchClauseS -> empty .)
    STATIC          reduce using rule 621 (CatchClauseS -> empty .)
    STRICTFP        reduce using rule 621 (CatchClauseS -> empty .)
    INC             reduce using rule 621 (CatchClauseS -> empty .)
    DEC             reduce using rule 621 (CatchClauseS -> empty .)
    SUPER           reduce using rule 621 (CatchClauseS -> empty .)
    ATRATE          reduce using rule 621 (CatchClauseS -> empty .)
    PERIOD          reduce using rule 621 (CatchClauseS -> empty .)
    NEW             reduce using rule 621 (CatchClauseS -> empty .)
    THIS            reduce using rule 621 (CatchClauseS -> empty .)
    LPAREN          reduce using rule 621 (CatchClauseS -> empty .)
    BOOL_LIT        reduce using rule 621 (CatchClauseS -> empty .)
    NULL_LIT        reduce using rule 621 (CatchClauseS -> empty .)
    DECIMAL_LIT     reduce using rule 621 (CatchClauseS -> empty .)
    HEX_LIT         reduce using rule 621 (CatchClauseS -> empty .)
    OCTAL_LIT       reduce using rule 621 (CatchClauseS -> empty .)
    BINARY_LIT      reduce using rule 621 (CatchClauseS -> empty .)
    FLOAT_DEC_LIT   reduce using rule 621 (CatchClauseS -> empty .)
    FLOAT_HEX_LIT   reduce using rule 621 (CatchClauseS -> empty .)
    STRING_LIT      reduce using rule 621 (CatchClauseS -> empty .)
    CHAR_LIT        reduce using rule 621 (CatchClauseS -> empty .)
    BOOLEAN         reduce using rule 621 (CatchClauseS -> empty .)
    VOID            reduce using rule 621 (CatchClauseS -> empty .)
    BYTE            reduce using rule 621 (CatchClauseS -> empty .)
    SHORT           reduce using rule 621 (CatchClauseS -> empty .)
    INT             reduce using rule 621 (CatchClauseS -> empty .)
    LONG            reduce using rule 621 (CatchClauseS -> empty .)
    CHAR            reduce using rule 621 (CatchClauseS -> empty .)
    FLOAT           reduce using rule 621 (CatchClauseS -> empty .)
    DOUBLE          reduce using rule 621 (CatchClauseS -> empty .)
    CLASS           reduce using rule 621 (CatchClauseS -> empty .)
    ENUM            reduce using rule 621 (CatchClauseS -> empty .)
    IMPLEMENTS      reduce using rule 621 (CatchClauseS -> empty .)
    RBRACE          reduce using rule 621 (CatchClauseS -> empty .)
    CASE            reduce using rule 621 (CatchClauseS -> empty .)
    DEFAULT         reduce using rule 621 (CatchClauseS -> empty .)
    FINALLY         reduce using rule 621 (CatchClauseS -> empty .)
    ELSE            reduce using rule 621 (CatchClauseS -> empty .)


state 1000

    (622) CatchClause -> CATCH LPAREN . CatchFormalParameter RPAREN Block
    (623) CatchFormalParameter -> . VariableModifierS CatchType VariableDeclaratorId
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 377
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    CatchFormalParameter           shift and go to state 1093
    VariableModifierS              shift and go to state 1094
    VariableModifier               shift and go to state 517
    empty                          shift and go to state 636
    Annotation                     shift and go to state 637
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1001

    (628) TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches . ZooFinally
    (629) ZooFinally -> . Finally
    (630) ZooFinally -> . empty
    (627) Finally -> . FINALLY Block
    (1) empty -> .

    FINALLY         shift and go to state 996
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)

    ZooFinally                     shift and go to state 1095
    Finally                        shift and go to state 1096
    empty                          shift and go to state 1097

state 1002

    (617) ZooCatches -> Catches .

    FINALLY         reduce using rule 617 (ZooCatches -> Catches .)
    IDENT           reduce using rule 617 (ZooCatches -> Catches .)
    IF              reduce using rule 617 (ZooCatches -> Catches .)
    WHILE           reduce using rule 617 (ZooCatches -> Catches .)
    LBRACE          reduce using rule 617 (ZooCatches -> Catches .)
    SEMICOLON       reduce using rule 617 (ZooCatches -> Catches .)
    ASSERT          reduce using rule 617 (ZooCatches -> Catches .)
    SWITCH          reduce using rule 617 (ZooCatches -> Catches .)
    DO              reduce using rule 617 (ZooCatches -> Catches .)
    BREAK           reduce using rule 617 (ZooCatches -> Catches .)
    CONTINUE        reduce using rule 617 (ZooCatches -> Catches .)
    RETURN          reduce using rule 617 (ZooCatches -> Catches .)
    SYNCHRONIZED    reduce using rule 617 (ZooCatches -> Catches .)
    THROW           reduce using rule 617 (ZooCatches -> Catches .)
    TRY             reduce using rule 617 (ZooCatches -> Catches .)
    FOR             reduce using rule 617 (ZooCatches -> Catches .)
    FINAL           reduce using rule 617 (ZooCatches -> Catches .)
    EXTENDS         reduce using rule 617 (ZooCatches -> Catches .)
    PUBLIC          reduce using rule 617 (ZooCatches -> Catches .)
    PROTECTED       reduce using rule 617 (ZooCatches -> Catches .)
    PRIVATE         reduce using rule 617 (ZooCatches -> Catches .)
    ABSTRACT        reduce using rule 617 (ZooCatches -> Catches .)
    STATIC          reduce using rule 617 (ZooCatches -> Catches .)
    STRICTFP        reduce using rule 617 (ZooCatches -> Catches .)
    INC             reduce using rule 617 (ZooCatches -> Catches .)
    DEC             reduce using rule 617 (ZooCatches -> Catches .)
    SUPER           reduce using rule 617 (ZooCatches -> Catches .)
    ATRATE          reduce using rule 617 (ZooCatches -> Catches .)
    PERIOD          reduce using rule 617 (ZooCatches -> Catches .)
    NEW             reduce using rule 617 (ZooCatches -> Catches .)
    THIS            reduce using rule 617 (ZooCatches -> Catches .)
    LPAREN          reduce using rule 617 (ZooCatches -> Catches .)
    BOOL_LIT        reduce using rule 617 (ZooCatches -> Catches .)
    NULL_LIT        reduce using rule 617 (ZooCatches -> Catches .)
    DECIMAL_LIT     reduce using rule 617 (ZooCatches -> Catches .)
    HEX_LIT         reduce using rule 617 (ZooCatches -> Catches .)
    OCTAL_LIT       reduce using rule 617 (ZooCatches -> Catches .)
    BINARY_LIT      reduce using rule 617 (ZooCatches -> Catches .)
    FLOAT_DEC_LIT   reduce using rule 617 (ZooCatches -> Catches .)
    FLOAT_HEX_LIT   reduce using rule 617 (ZooCatches -> Catches .)
    STRING_LIT      reduce using rule 617 (ZooCatches -> Catches .)
    CHAR_LIT        reduce using rule 617 (ZooCatches -> Catches .)
    BOOLEAN         reduce using rule 617 (ZooCatches -> Catches .)
    VOID            reduce using rule 617 (ZooCatches -> Catches .)
    BYTE            reduce using rule 617 (ZooCatches -> Catches .)
    SHORT           reduce using rule 617 (ZooCatches -> Catches .)
    INT             reduce using rule 617 (ZooCatches -> Catches .)
    LONG            reduce using rule 617 (ZooCatches -> Catches .)
    CHAR            reduce using rule 617 (ZooCatches -> Catches .)
    FLOAT           reduce using rule 617 (ZooCatches -> Catches .)
    DOUBLE          reduce using rule 617 (ZooCatches -> Catches .)
    CLASS           reduce using rule 617 (ZooCatches -> Catches .)
    ENUM            reduce using rule 617 (ZooCatches -> Catches .)
    IMPLEMENTS      reduce using rule 617 (ZooCatches -> Catches .)
    RBRACE          reduce using rule 617 (ZooCatches -> Catches .)
    CASE            reduce using rule 617 (ZooCatches -> Catches .)
    DEFAULT         reduce using rule 617 (ZooCatches -> Catches .)
    ELSE            reduce using rule 617 (ZooCatches -> Catches .)


state 1003

    (633) ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON . RPAREN

    RPAREN          shift and go to state 1098


state 1004

    (631) ZooSEMICOLON -> SEMICOLON .

    RPAREN          reduce using rule 631 (ZooSEMICOLON -> SEMICOLON .)


state 1005

    (632) ZooSEMICOLON -> empty .

    RPAREN          reduce using rule 632 (ZooSEMICOLON -> empty .)


state 1006

    (634) ResourceList -> Resource SEMICOLONResourceS .

    SEMICOLON       reduce using rule 634 (ResourceList -> Resource SEMICOLONResourceS .)
    RPAREN          reduce using rule 634 (ResourceList -> Resource SEMICOLONResourceS .)


state 1007

    (635) SEMICOLONResourceS -> SEMICOLON . Resource SEMICOLONResourceS
    (637) Resource -> . VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression
    (638) Resource -> . VariableModifierS IDENT VariableDeclaratorId ASSIGN Expression
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 377
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Resource                       shift and go to state 1099
    VariableModifierS              shift and go to state 879
    VariableModifier               shift and go to state 517
    empty                          shift and go to state 636
    Annotation                     shift and go to state 637
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1008

    (636) SEMICOLONResourceS -> empty .

    SEMICOLON       reduce using rule 636 (SEMICOLONResourceS -> empty .)
    RPAREN          reduce using rule 636 (SEMICOLONResourceS -> empty .)


state 1009

    (637) Resource -> VariableModifierS UnannType . VariableDeclaratorId ASSIGN Expression
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 1100

state 1010

    (638) Resource -> VariableModifierS IDENT . VariableDeclaratorId ASSIGN Expression
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 748
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    VariableDeclaratorId           shift and go to state 1101
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1011

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON . ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (592) ZooExpression -> . Expression
    (593) ZooExpression -> . empty
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (1) empty -> .
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooExpression                  shift and go to state 1102
    Expression                     shift and go to state 728
    empty                          shift and go to state 729
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1012

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType . VariableDeclaratorId COLON Expression RPAREN Statement
    (528) LocalVariableDeclaration -> VariableModifierS UnannType . VariableDeclaratorList
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 1103
    VariableDeclaratorList         shift and go to state 857
    VariableDeclarator             shift and go to state 746

state 1013

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT . VariableDeclaratorId COLON Expression RPAREN Statement
    (529) LocalVariableDeclaration -> VariableModifierS IDENT . VariableDeclaratorList
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 748
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    VariableDeclaratorId           shift and go to state 1104
    VariableDeclaratorList         shift and go to state 858
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    VariableDeclarator             shift and go to state 746
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1014

    (600) StatementExpressionList -> StatementExpression COMMAStatementExpressionS .

    SEMICOLON       reduce using rule 600 (StatementExpressionList -> StatementExpression COMMAStatementExpressionS .)
    RPAREN          reduce using rule 600 (StatementExpressionList -> StatementExpression COMMAStatementExpressionS .)


state 1015

    (601) COMMAStatementExpressionS -> COMMA . StatementExpression COMMAStatementExpressionS
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    INC             shift and go to state 118
    DEC             shift and go to state 119
    IDENT           shift and go to state 882
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    StatementExpression            shift and go to state 1105
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1016

    (602) COMMAStatementExpressionS -> empty .

    SEMICOLON       reduce using rule 602 (COMMAStatementExpressionS -> empty .)
    RPAREN          reduce using rule 602 (COMMAStatementExpressionS -> empty .)


state 1017

    (150) MethodInvocation -> TypeName PERIOD SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) FieldAccess -> TypeName PERIOD SUPER PERIOD . IDENT
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 784
    LSS             shift and go to state 181

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 785
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 1018

    (431) ConstructorBody -> LBRACE ZooExplicitConstructorInvocation . ZooBlockStatements RBRACE
    (519) ZooBlockStatements -> . BlockStatements
    (520) ZooBlockStatements -> . empty
    (521) BlockStatements -> . BlockStatement BlockStatementS
    (1) empty -> .
    (524) BlockStatement -> . LocalVariableDeclarationStatement
    (525) BlockStatement -> . ClassDeclaration
    (526) BlockStatement -> . Statement
    (527) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (528) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> . VariableModifierS IDENT VariableDeclaratorList
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    FINAL           shift and go to state 531
    EXTENDS         shift and go to state 45
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    ATRATE          shift and go to state 13
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    ZooBlockStatements             shift and go to state 1106
    BlockStatements                shift and go to state 484
    empty                          shift and go to state 485
    BlockStatement                 shift and go to state 486
    LocalVariableDeclarationStatement shift and go to state 487
    ClassDeclaration               shift and go to state 488
    Statement                      shift and go to state 489
    LocalVariableDeclaration       shift and go to state 490
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    VariableModifierS              shift and go to state 498
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    VariableModifier               shift and go to state 517
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Annotation                     shift and go to state 530
    InterfaceModifier              shift and go to state 73
    ClassType                      shift and go to state 140
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 1019

    (432) ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .

    IDENT           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    IF              reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    WHILE           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    LBRACE          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SEMICOLON       reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ASSERT          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SWITCH          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DO              reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BREAK           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CONTINUE        reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    RETURN          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SYNCHRONIZED    reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    THROW           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    TRY             reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FOR             reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FINAL           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    EXTENDS         reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    PUBLIC          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    PROTECTED       reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    PRIVATE         reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ABSTRACT        reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    STATIC          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    STRICTFP        reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    INC             reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DEC             reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SUPER           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ATRATE          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    PERIOD          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    NEW             reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    THIS            reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    LPAREN          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BOOL_LIT        reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    NULL_LIT        reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DECIMAL_LIT     reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    HEX_LIT         reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    OCTAL_LIT       reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BINARY_LIT      reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FLOAT_DEC_LIT   reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FLOAT_HEX_LIT   reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    STRING_LIT      reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CHAR_LIT        reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BOOLEAN         reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    VOID            reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BYTE            reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SHORT           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    INT             reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    LONG            reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CHAR            reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FLOAT           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DOUBLE          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    RBRACE          reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CLASS           reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ENUM            reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    IMPLEMENTS      reduce using rule 432 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)


state 1020

    (433) ZooExplicitConstructorInvocation -> empty .
    (126) ZooTypeArguments -> empty .

  ! reduce/reduce conflict for THIS resolved using rule 126 (ZooTypeArguments -> empty .)
  ! reduce/reduce conflict for SUPER resolved using rule 126 (ZooTypeArguments -> empty .)
    IDENT           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    IF              reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    WHILE           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    LBRACE          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    SEMICOLON       reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    ASSERT          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    SWITCH          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    DO              reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    BREAK           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    CONTINUE        reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    RETURN          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    SYNCHRONIZED    reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    THROW           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    TRY             reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    FOR             reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    FINAL           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    EXTENDS         reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    PUBLIC          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    PROTECTED       reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    PRIVATE         reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    ABSTRACT        reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    STATIC          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    STRICTFP        reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    INC             reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    DEC             reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    ATRATE          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    PERIOD          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    NEW             reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    LPAREN          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    BOOL_LIT        reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    NULL_LIT        reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    DECIMAL_LIT     reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    HEX_LIT         reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    OCTAL_LIT       reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    BINARY_LIT      reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    FLOAT_DEC_LIT   reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    FLOAT_HEX_LIT   reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    STRING_LIT      reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    CHAR_LIT        reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    BOOLEAN         reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    VOID            reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    BYTE            reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    SHORT           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    INT             reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    LONG            reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    CHAR            reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    FLOAT           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    DOUBLE          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    RBRACE          reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    CLASS           reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    ENUM            reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    IMPLEMENTS      reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .)
    THIS            reduce using rule 126 (ZooTypeArguments -> empty .)
    SUPER           reduce using rule 126 (ZooTypeArguments -> empty .)

  ! SUPER           [ reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .) ]
  ! THIS            [ reduce using rule 433 (ZooExplicitConstructorInvocation -> empty .) ]


state 1021

    (436) ExplicitConstructorInvocation -> ZooTypeArguments . THIS LPAREN ZooArgumentList RPAREN SEMICOLON
    (437) ExplicitConstructorInvocation -> ZooTypeArguments . SUPER LPAREN ZooArgumentList RPAREN SEMICOLON

    THIS            shift and go to state 1107
    SUPER           shift and go to state 1108


state 1022

    (438) ExplicitConstructorInvocation -> ExpressionName . PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (296) ExpressionName -> ExpressionName . PERIOD IDENT
    (294) TypeName -> ExpressionName .
    (121) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (141) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (146) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT

  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
    PERIOD          shift and go to state 1109
    LBRACK          shift and go to state 274
    COLON_SEP       shift and go to state 275

  ! PERIOD          [ reduce using rule 294 (TypeName -> ExpressionName .) ]
  ! LBRACK          [ reduce using rule 294 (TypeName -> ExpressionName .) ]


state 1023

    (439) ExplicitConstructorInvocation -> IDENT . PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    PERIOD          shift and go to state 1110
    LBRACK          shift and go to state 232
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1024

    (440) ExplicitConstructorInvocation -> Primary . PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (123) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> Primary . PERIOD IDENT
    (148) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (157) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 1111
    COLON_SEP       shift and go to state 272


state 1025

    (416) ExceptionTypeList -> ExceptionType COMMAExceptionTypeS .

    LBRACE          reduce using rule 416 (ExceptionTypeList -> ExceptionType COMMAExceptionTypeS .)
    SEMICOLON       reduce using rule 416 (ExceptionTypeList -> ExceptionType COMMAExceptionTypeS .)


state 1026

    (414) COMMAExceptionTypeS -> COMMA . ExceptionType COMMAExceptionTypeS
    (417) ExceptionType -> . ClassType
    (418) ExceptionType -> . TypeVariable
    (419) ExceptionType -> . IDENT
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 896
    ATRATE          shift and go to state 13

    ExceptionType                  shift and go to state 1112
    ClassType                      shift and go to state 894
    TypeVariable                   shift and go to state 895
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1027

    (415) COMMAExceptionTypeS -> empty .

    LBRACE          reduce using rule 415 (COMMAExceptionTypeS -> empty .)
    SEMICOLON       reduce using rule 415 (COMMAExceptionTypeS -> empty .)


state 1028

    (412) ReceiverParameter -> IDENT . ZooIDENTPERIOD THIS
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (407) ZooIDENTPERIOD -> . IDENT PERIOD
    (408) ZooIDENTPERIOD -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 612
    LBRACE          shift and go to state 237
    THIS            reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooIDENTPERIOD                 shift and go to state 616
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    empty                          shift and go to state 792
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1029

    (430) ConstructorDeclarator -> ZooTypeParameters IDENT LPAREN ZooFormalParameterList . RPAREN

    RPAREN          shift and go to state 1113


state 1030

    (409) ReceiverParameter -> AnnotationS . UnannType ZooIDENTPERIOD THIS
    (410) ReceiverParameter -> AnnotationS . IDENT ZooIDENTPERIOD THIS
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 1114
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 622
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 1031

    (341) COMMAVariableDeclaratorS -> COMMA VariableDeclarator . COMMAVariableDeclaratorS
    (341) COMMAVariableDeclaratorS -> . COMMA VariableDeclarator COMMAVariableDeclaratorS
    (342) COMMAVariableDeclaratorS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 900
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAVariableDeclaratorS       shift and go to state 1115
    empty                          shift and go to state 901

state 1032

    (344) ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer .

    COMMA           reduce using rule 344 (ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer .)
    SEMICOLON       reduce using rule 344 (ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer .)


state 1033

    (388) MethodDeclarator -> IDENT LPAREN ZooFormalParameterList . RPAREN ZooDims

    RPAREN          shift and go to state 1116


state 1034

    (381) MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator . ZooThrows
    (378) ZooThrows -> . Throws
    (379) ZooThrows -> . empty
    (413) Throws -> . THROWS ExceptionTypeList
    (1) empty -> .

    THROWS          shift and go to state 743
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    ZooThrows                      shift and go to state 1117
    Throws                         shift and go to state 741
    empty                          shift and go to state 742

state 1035

    (382) MethodHeader -> TypeParameters Result MethodDeclarator ZooThrows .

    SEMICOLON       reduce using rule 382 (MethodHeader -> TypeParameters Result MethodDeclarator ZooThrows .)
    LBRACE          reduce using rule 382 (MethodHeader -> TypeParameters Result MethodDeclarator ZooThrows .)


state 1036

    (29) InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .

    SEMICOLON       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    FINAL           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    EXTENDS         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    PUBLIC          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    PROTECTED       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    PRIVATE         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    ABSTRACT        reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    STATIC          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    STRICTFP        reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    ATRATE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    CLASS           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    ENUM            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    IMPLEMENTS      reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    LBRACE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    INTERFACE       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    $end            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    TRANSIENT       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    VOLATILE        reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    SYNCHRONIZED    reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    NATIVE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    LSS             reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    IDENT           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    BOOLEAN         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    BYTE            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    SHORT           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    INT             reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    LONG            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    CHAR            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    FLOAT           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    DOUBLE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    VOID            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    RBRACE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    DEFAULT         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)


state 1037

    (30) InterfaceMemberDeclarationS -> InterfaceMemberDeclaration InterfaceMemberDeclarationS .

    RBRACE          reduce using rule 30 (InterfaceMemberDeclarationS -> InterfaceMemberDeclaration InterfaceMemberDeclarationS .)


state 1038

    (45) InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader . MethodBody
    (420) MethodBody -> . Block
    (421) MethodBody -> . SEMICOLON
    (518) Block -> . LBRACE ZooBlockStatements RBRACE

    SEMICOLON       shift and go to state 754
    LBRACE          shift and go to state 299

    MethodBody                     shift and go to state 1118
    Block                          shift and go to state 753

state 1039

    (46) InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .

    IDENT           reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    VOID            reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    LSS             reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    BOOLEAN         reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    BYTE            reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    SHORT           reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    INT             reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    LONG            reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    CHAR            reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    FLOAT           reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    DOUBLE          reduce using rule 46 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)


state 1040

    (47) InterfaceMethodModifierS -> empty .

    IDENT           reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    VOID            reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    LSS             reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    BOOLEAN         reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    BYTE            reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    SHORT           reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    INT             reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    LONG            reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    CHAR            reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    FLOAT           reduce using rule 47 (InterfaceMethodModifierS -> empty .)
    DOUBLE          reduce using rule 47 (InterfaceMethodModifierS -> empty .)


state 1041

    (48) InterfaceMethodModifier -> Annotation .

    PUBLIC          reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    ABSTRACT        reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    DEFAULT         reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    STATIC          reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    STRICTFP        reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    ATRATE          reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    IDENT           reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    VOID            reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    LSS             reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    BOOLEAN         reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    BYTE            reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    SHORT           reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    INT             reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    LONG            reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    CHAR            reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    FLOAT           reduce using rule 48 (InterfaceMethodModifier -> Annotation .)
    DOUBLE          reduce using rule 48 (InterfaceMethodModifier -> Annotation .)


state 1042

    (49) InterfaceMethodModifier -> PUBLIC .

    PUBLIC          reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    DEFAULT         reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    STATIC          reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    STRICTFP        reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    ATRATE          reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    IDENT           reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    VOID            reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    LSS             reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    BYTE            reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    SHORT           reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    INT             reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    LONG            reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    CHAR            reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    FLOAT           reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)
    DOUBLE          reduce using rule 49 (InterfaceMethodModifier -> PUBLIC .)


state 1043

    (50) InterfaceMethodModifier -> ABSTRACT .

    PUBLIC          reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    DEFAULT         reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    STATIC          reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    ATRATE          reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    VOID            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    LSS             reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    INT             reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    LONG            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 50 (InterfaceMethodModifier -> ABSTRACT .)


state 1044

    (52) InterfaceMethodModifier -> STATIC .

    PUBLIC          reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    ABSTRACT        reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    DEFAULT         reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    STATIC          reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    STRICTFP        reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    ATRATE          reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    IDENT           reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    VOID            reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    LSS             reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    BOOLEAN         reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    BYTE            reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    SHORT           reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    INT             reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    LONG            reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    CHAR            reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    FLOAT           reduce using rule 52 (InterfaceMethodModifier -> STATIC .)
    DOUBLE          reduce using rule 52 (InterfaceMethodModifier -> STATIC .)


state 1045

    (53) InterfaceMethodModifier -> STRICTFP .

    PUBLIC          reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    DEFAULT         reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    STATIC          reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    STRICTFP        reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    ATRATE          reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    IDENT           reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    VOID            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    LSS             reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    BYTE            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    SHORT           reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    INT             reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    LONG            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    CHAR            reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 53 (InterfaceMethodModifier -> STRICTFP .)


state 1046

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT . LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON

    LPAREN          shift and go to state 1119


state 1047

    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT . LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON

    LPAREN          shift and go to state 1120


state 1048

    (37) ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList . SEMICOLON

    SEMICOLON       shift and go to state 1121


state 1049

    (38) ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList . SEMICOLON

    SEMICOLON       shift and go to state 1122


state 1050

    (150) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    TypeName                       shift and go to state 210
    ZooArgumentList                shift and go to state 1123
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1051

    (145) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 145 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 1052

    (402) LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId .

    RPAREN          reduce using rule 402 (LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId .)


state 1053

    (403) LastFormalParameter -> VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId .

    RPAREN          reduce using rule 403 (LastFormalParameter -> VariableModifierS IDENT AnnotationS ELLIPSIS VariableDeclaratorId .)


state 1054

    (360) UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .

    PERIOD          reduce using rule 360 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 360 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 360 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    IDENT           reduce using rule 360 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    THIS            reduce using rule 360 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    ELLIPSIS        reduce using rule 360 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    OR              reduce using rule 360 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)


state 1055

    (147) MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 147 (MethodInvocation -> IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 1056

    (493) AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .

    COLON_SEP       reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COMMA           reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GTR             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LSS             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LEQ             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GEQ             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INSTANCEOF      reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    EQL             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    NEQ             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    AND             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    XOR             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    OR              reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LAND            reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUES            reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LOR             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RPAREN          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACE          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COLON           reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    MUL             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUO             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    REM             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ADD             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SUB             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHL             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR_UN          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACK          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SEMICOLON       reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LBRACE          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    IDENT           reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THIS            reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ELLIPSIS        reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ATRATE          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    PERIOD          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INC             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEC             reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ASSIGN          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THROWS          reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEFAULT         reduce using rule 493 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)


state 1057

    (148) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 148 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 1058

    (146) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 146 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 1059

    (96) ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .

    PERIOD          reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    COLON_SEP       reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    INC             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    DEC             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    MUL             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    QUO             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    REM             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    ADD             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SUB             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SHL             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SHR             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SHR_UN          reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LSS             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    GTR             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LEQ             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    GEQ             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    INSTANCEOF      reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    EQL             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    NEQ             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    AND             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    XOR             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    OR              reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LAND            reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    QUES            reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LOR             reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    RPAREN          reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    COMMA           reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    RBRACE          reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    COLON           reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    RBRACK          reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SEMICOLON       reduce using rule 96 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)


state 1060

    (100) COMMAVariableInitializerS -> COMMA VariableInitializer . COMMAVariableInitializerS
    (100) COMMAVariableInitializerS -> . COMMA VariableInitializer COMMAVariableInitializerS
    (101) COMMAVariableInitializerS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 968
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAVariableInitializerS      shift and go to state 1124
    empty                          shift and go to state 969

state 1061

    (124) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .

    LBRACK          reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    PERIOD          reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    COLON_SEP       reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    INC             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    DEC             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    MUL             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    QUO             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    REM             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    ADD             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SUB             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SHL             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SHR             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SHR_UN          reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LSS             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    GTR             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LEQ             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    GEQ             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    INSTANCEOF      reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    EQL             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    NEQ             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    AND             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    XOR             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    OR              reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LAND            reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    QUES            reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LOR             reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    RPAREN          reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    COMMA           reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    RBRACE          reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    COLON           reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    RBRACK          reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SEMICOLON       reduce using rule 124 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)


state 1062

    (457) ZooClassBody -> ClassBody .

    LBRACK          reduce using rule 457 (ZooClassBody -> ClassBody .)
    PERIOD          reduce using rule 457 (ZooClassBody -> ClassBody .)
    COLON_SEP       reduce using rule 457 (ZooClassBody -> ClassBody .)
    INC             reduce using rule 457 (ZooClassBody -> ClassBody .)
    DEC             reduce using rule 457 (ZooClassBody -> ClassBody .)
    MUL             reduce using rule 457 (ZooClassBody -> ClassBody .)
    QUO             reduce using rule 457 (ZooClassBody -> ClassBody .)
    REM             reduce using rule 457 (ZooClassBody -> ClassBody .)
    ADD             reduce using rule 457 (ZooClassBody -> ClassBody .)
    SUB             reduce using rule 457 (ZooClassBody -> ClassBody .)
    SHL             reduce using rule 457 (ZooClassBody -> ClassBody .)
    SHR             reduce using rule 457 (ZooClassBody -> ClassBody .)
    SHR_UN          reduce using rule 457 (ZooClassBody -> ClassBody .)
    LSS             reduce using rule 457 (ZooClassBody -> ClassBody .)
    GTR             reduce using rule 457 (ZooClassBody -> ClassBody .)
    LEQ             reduce using rule 457 (ZooClassBody -> ClassBody .)
    GEQ             reduce using rule 457 (ZooClassBody -> ClassBody .)
    INSTANCEOF      reduce using rule 457 (ZooClassBody -> ClassBody .)
    EQL             reduce using rule 457 (ZooClassBody -> ClassBody .)
    NEQ             reduce using rule 457 (ZooClassBody -> ClassBody .)
    AND             reduce using rule 457 (ZooClassBody -> ClassBody .)
    XOR             reduce using rule 457 (ZooClassBody -> ClassBody .)
    OR              reduce using rule 457 (ZooClassBody -> ClassBody .)
    LAND            reduce using rule 457 (ZooClassBody -> ClassBody .)
    QUES            reduce using rule 457 (ZooClassBody -> ClassBody .)
    LOR             reduce using rule 457 (ZooClassBody -> ClassBody .)
    RPAREN          reduce using rule 457 (ZooClassBody -> ClassBody .)
    COMMA           reduce using rule 457 (ZooClassBody -> ClassBody .)
    RBRACE          reduce using rule 457 (ZooClassBody -> ClassBody .)
    COLON           reduce using rule 457 (ZooClassBody -> ClassBody .)
    RBRACK          reduce using rule 457 (ZooClassBody -> ClassBody .)
    SEMICOLON       reduce using rule 457 (ZooClassBody -> ClassBody .)


state 1063

    (458) ZooClassBody -> empty .

    LBRACK          reduce using rule 458 (ZooClassBody -> empty .)
    PERIOD          reduce using rule 458 (ZooClassBody -> empty .)
    COLON_SEP       reduce using rule 458 (ZooClassBody -> empty .)
    INC             reduce using rule 458 (ZooClassBody -> empty .)
    DEC             reduce using rule 458 (ZooClassBody -> empty .)
    MUL             reduce using rule 458 (ZooClassBody -> empty .)
    QUO             reduce using rule 458 (ZooClassBody -> empty .)
    REM             reduce using rule 458 (ZooClassBody -> empty .)
    ADD             reduce using rule 458 (ZooClassBody -> empty .)
    SUB             reduce using rule 458 (ZooClassBody -> empty .)
    SHL             reduce using rule 458 (ZooClassBody -> empty .)
    SHR             reduce using rule 458 (ZooClassBody -> empty .)
    SHR_UN          reduce using rule 458 (ZooClassBody -> empty .)
    LSS             reduce using rule 458 (ZooClassBody -> empty .)
    GTR             reduce using rule 458 (ZooClassBody -> empty .)
    LEQ             reduce using rule 458 (ZooClassBody -> empty .)
    GEQ             reduce using rule 458 (ZooClassBody -> empty .)
    INSTANCEOF      reduce using rule 458 (ZooClassBody -> empty .)
    EQL             reduce using rule 458 (ZooClassBody -> empty .)
    NEQ             reduce using rule 458 (ZooClassBody -> empty .)
    AND             reduce using rule 458 (ZooClassBody -> empty .)
    XOR             reduce using rule 458 (ZooClassBody -> empty .)
    OR              reduce using rule 458 (ZooClassBody -> empty .)
    LAND            reduce using rule 458 (ZooClassBody -> empty .)
    QUES            reduce using rule 458 (ZooClassBody -> empty .)
    LOR             reduce using rule 458 (ZooClassBody -> empty .)
    RPAREN          reduce using rule 458 (ZooClassBody -> empty .)
    COMMA           reduce using rule 458 (ZooClassBody -> empty .)
    RBRACE          reduce using rule 458 (ZooClassBody -> empty .)
    COLON           reduce using rule 458 (ZooClassBody -> empty .)
    RBRACK          reduce using rule 458 (ZooClassBody -> empty .)
    SEMICOLON       reduce using rule 458 (ZooClassBody -> empty .)


state 1064

    (133) PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS .

    LSS             reduce using rule 133 (PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS .)
    LPAREN          reduce using rule 133 (PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS .)


state 1065

    (149) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 149 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 1066

    (504) TypeBound -> EXTENDS ClassType AdditionalBoundS .

    COMMA           reduce using rule 504 (TypeBound -> EXTENDS ClassType AdditionalBoundS .)
    GTR             reduce using rule 504 (TypeBound -> EXTENDS ClassType AdditionalBoundS .)


state 1067

    (450) EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .

    SEMICOLON       reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FINAL           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    EXTENDS         reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    PUBLIC          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    PROTECTED       reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    PRIVATE         reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ABSTRACT        reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    STATIC          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    STRICTFP        reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ATRATE          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CLASS           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ENUM            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    IMPLEMENTS      reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LBRACE          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    INTERFACE       reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    $end            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    TRANSIENT       reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    VOLATILE        reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SYNCHRONIZED    reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    NATIVE          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LSS             reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    IDENT           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BOOLEAN         reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BYTE            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SHORT           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    INT             reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LONG            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CHAR            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FLOAT           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DOUBLE          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    VOID            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    RBRACE          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    IF              reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    WHILE           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ASSERT          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SWITCH          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DO              reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BREAK           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CONTINUE        reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    RETURN          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    THROW           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    TRY             reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FOR             reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    INC             reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DEC             reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SUPER           reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    PERIOD          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    NEW             reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    THIS            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LPAREN          reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BOOL_LIT        reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    NULL_LIT        reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DECIMAL_LIT     reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    HEX_LIT         reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    OCTAL_LIT       reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BINARY_LIT      reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    STRING_LIT      reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CHAR_LIT        reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CASE            reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DEFAULT         reduce using rule 450 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)


state 1068

    (462) EnumBodyDeclarations -> SEMICOLON ClassBodyDeclarationS .

    RBRACE          reduce using rule 462 (EnumBodyDeclarations -> SEMICOLON ClassBodyDeclarationS .)


state 1069

    (451) COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .

    COMMA           reduce using rule 451 (COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .)
    SEMICOLON       reduce using rule 451 (COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .)
    RBRACE          reduce using rule 451 (COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .)


state 1070

    (454) EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .

    COMMA           reduce using rule 454 (EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .)
    SEMICOLON       reduce using rule 454 (EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .)
    RBRACE          reduce using rule 454 (EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .)


state 1071

    (459) ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1125


state 1072

    (566) IfThenStatement -> IF . LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> IF . LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (568) IfThenElseStatementNoShortIf -> IF . LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf

    LPAREN          shift and go to state 1126


state 1073

    (566) IfThenStatement -> IF LPAREN Expression RPAREN Statement .

    IDENT           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    IF              reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    WHILE           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    LBRACE          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SEMICOLON       reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ASSERT          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SWITCH          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DO              reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BREAK           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CONTINUE        reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    RETURN          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    THROW           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    TRY             reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FOR             reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FINAL           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    EXTENDS         reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    PUBLIC          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    PROTECTED       reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    PRIVATE         reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ABSTRACT        reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    STATIC          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    STRICTFP        reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    INC             reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DEC             reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SUPER           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ATRATE          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    PERIOD          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    NEW             reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    THIS            reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    LPAREN          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BOOL_LIT        reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    NULL_LIT        reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    HEX_LIT         reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    OCTAL_LIT       reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BINARY_LIT      reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    STRING_LIT      reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CHAR_LIT        reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BOOLEAN         reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    VOID            reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BYTE            reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SHORT           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    INT             reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    LONG            reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CHAR            reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FLOAT           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DOUBLE          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CLASS           reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ENUM            reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    IMPLEMENTS      reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    RBRACE          reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CASE            reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DEFAULT         reduce using rule 566 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)


state 1074

    (567) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf . ELSE Statement

    ELSE            shift and go to state 1127


state 1075

    (532) Statement -> StatementWithoutTrailingSubstatement .
    (538) StatementNoShortIf -> StatementWithoutTrailingSubstatement .

    IDENT           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMICOLON       reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ASSERT          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SYNCHRONIZED    reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    THROW           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    TRY             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FINAL           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    EXTENDS         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PUBLIC          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PROTECTED       reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PRIVATE         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ABSTRACT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    STATIC          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    STRICTFP        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ATRATE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    PERIOD          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LIT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    NULL_LIT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LIT     reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LIT         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    OCTAL_LIT       reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LIT      reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_DEC_LIT   reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_HEX_LIT   reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LIT      reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LIT        reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    VOID            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CLASS           reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ENUM            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    IMPLEMENTS      reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    RBRACE          reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 532 (Statement -> StatementWithoutTrailingSubstatement .)
    ELSE            reduce using rule 538 (StatementNoShortIf -> StatementWithoutTrailingSubstatement .)


state 1076

    (539) StatementNoShortIf -> LabeledStatementNoShortIf .

    ELSE            reduce using rule 539 (StatementNoShortIf -> LabeledStatementNoShortIf .)


state 1077

    (540) StatementNoShortIf -> IfThenElseStatementNoShortIf .

    ELSE            reduce using rule 540 (StatementNoShortIf -> IfThenElseStatementNoShortIf .)


state 1078

    (541) StatementNoShortIf -> WhileStatementNoShortIf .

    ELSE            reduce using rule 541 (StatementNoShortIf -> WhileStatementNoShortIf .)


state 1079

    (542) StatementNoShortIf -> ForStatementNoShortIf .

    ELSE            reduce using rule 542 (StatementNoShortIf -> ForStatementNoShortIf .)


state 1080

    (556) LabeledStatement -> IDENT . COLON Statement
    (557) LabeledStatementNoShortIf -> IDENT . COLON StatementNoShortIf
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    COLON           shift and go to state 1128
    INC             shift and go to state 229
    DEC             shift and go to state 230
    LPAREN          shift and go to state 233
    PERIOD          shift and go to state 716
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    COLON_SEP       shift and go to state 234
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1081

    (582) WhileStatement -> WHILE . LPAREN Expression RPAREN Statement
    (583) WhileStatementNoShortIf -> WHILE . LPAREN Expression RPAREN StatementNoShortIf

    LPAREN          shift and go to state 1129


state 1082

    (587) ForStatementNoShortIf -> BasicForStatementNoShortIf .

    ELSE            reduce using rule 587 (ForStatementNoShortIf -> BasicForStatementNoShortIf .)


state 1083

    (588) ForStatementNoShortIf -> EnhancedForStatementNoShortIf .

    ELSE            reduce using rule 588 (ForStatementNoShortIf -> EnhancedForStatementNoShortIf .)


state 1084

    (589) BasicForStatement -> FOR . LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> FOR . LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> FOR . LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> FOR . LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> FOR . LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> FOR . LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf

    LPAREN          shift and go to state 1130


state 1085

    (582) WhileStatement -> WHILE LPAREN Expression RPAREN Statement .

    IDENT           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    IF              reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    WHILE           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    LBRACE          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SEMICOLON       reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ASSERT          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SWITCH          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DO              reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BREAK           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CONTINUE        reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    RETURN          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    THROW           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    TRY             reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FOR             reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FINAL           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    EXTENDS         reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    PUBLIC          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    PROTECTED       reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    PRIVATE         reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ABSTRACT        reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    STATIC          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    STRICTFP        reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    INC             reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DEC             reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SUPER           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ATRATE          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    PERIOD          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    NEW             reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    THIS            reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    LPAREN          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BOOL_LIT        reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    NULL_LIT        reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    HEX_LIT         reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    OCTAL_LIT       reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BINARY_LIT      reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    STRING_LIT      reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CHAR_LIT        reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BOOLEAN         reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    VOID            reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BYTE            reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SHORT           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    INT             reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    LONG            reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CHAR            reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FLOAT           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DOUBLE          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CLASS           reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ENUM            reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    IMPLEMENTS      reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    RBRACE          reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CASE            reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DEFAULT         reduce using rule 582 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)


state 1086

    (570) AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .

    IDENT           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    IF              reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    WHILE           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    LBRACE          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SEMICOLON       reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ASSERT          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SWITCH          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DO              reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BREAK           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CONTINUE        reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    RETURN          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    THROW           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    TRY             reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FOR             reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FINAL           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    EXTENDS         reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    PUBLIC          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    PROTECTED       reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    PRIVATE         reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ABSTRACT        reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    STATIC          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    STRICTFP        reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    INC             reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DEC             reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SUPER           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ATRATE          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    PERIOD          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    NEW             reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    THIS            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    LPAREN          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BOOL_LIT        reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    NULL_LIT        reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    HEX_LIT         reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    OCTAL_LIT       reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BINARY_LIT      reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    STRING_LIT      reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CHAR_LIT        reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BOOLEAN         reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    VOID            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BYTE            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SHORT           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    INT             reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    LONG            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CHAR            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FLOAT           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DOUBLE          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CLASS           reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ENUM            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    IMPLEMENTS      reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    RBRACE          reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CASE            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DEFAULT         reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ELSE            reduce using rule 570 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)


state 1087

    (571) SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .

    IDENT           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IF              reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    WHILE           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LBRACE          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SEMICOLON       reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ASSERT          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SWITCH          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DO              reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BREAK           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CONTINUE        reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    RETURN          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SYNCHRONIZED    reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    THROW           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    TRY             reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FOR             reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FINAL           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    EXTENDS         reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    PUBLIC          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    PROTECTED       reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    PRIVATE         reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ABSTRACT        reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STATIC          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STRICTFP        reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INC             reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEC             reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SUPER           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ATRATE          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    PERIOD          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    NEW             reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    THIS            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LPAREN          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOL_LIT        reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    NULL_LIT        reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DECIMAL_LIT     reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    HEX_LIT         reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    OCTAL_LIT       reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BINARY_LIT      reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT_DEC_LIT   reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT_HEX_LIT   reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STRING_LIT      reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR_LIT        reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOLEAN         reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    VOID            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BYTE            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SHORT           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INT             reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LONG            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DOUBLE          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CLASS           reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ENUM            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IMPLEMENTS      reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    RBRACE          reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CASE            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEFAULT         reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ELSE            reduce using rule 571 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)


state 1088

    (572) SwitchBlock -> LBRACE . SwitchBlockStatementGroupS SwitchLabelS RBRACE
    (573) SwitchBlockStatementGroupS -> . SwitchBlockStatementGroup SwitchBlockStatementGroupS
    (574) SwitchBlockStatementGroupS -> . empty
    (575) SwitchBlockStatementGroup -> . SwitchLabels BlockStatements
    (1) empty -> .
    (576) SwitchLabels -> . SwitchLabel SwitchLabelS
    (579) SwitchLabel -> . CASE ConstantExpression COLON
    (580) SwitchLabel -> . CASE IDENT COLON
    (581) SwitchLabel -> . DEFAULT COLON

  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            shift and go to state 1136
    DEFAULT         shift and go to state 1137

  ! CASE            [ reduce using rule 1 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 1 (empty -> .) ]

    SwitchBlockStatementGroupS     shift and go to state 1131
    SwitchBlockStatementGroup      shift and go to state 1132
    empty                          shift and go to state 1133
    SwitchLabels                   shift and go to state 1134
    SwitchLabel                    shift and go to state 1135

state 1089

    (584) DoStatement -> DO Statement WHILE LPAREN Expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 1138


state 1090

    (613) SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .

    IDENT           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    IF              reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    WHILE           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    LBRACE          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SEMICOLON       reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ASSERT          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SWITCH          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DO              reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BREAK           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CONTINUE        reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    RETURN          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SYNCHRONIZED    reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    THROW           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    TRY             reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FOR             reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FINAL           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    EXTENDS         reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    PUBLIC          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    PROTECTED       reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    PRIVATE         reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ABSTRACT        reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    STATIC          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    STRICTFP        reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    INC             reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DEC             reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SUPER           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ATRATE          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    PERIOD          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    NEW             reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    THIS            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    LPAREN          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BOOL_LIT        reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    NULL_LIT        reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DECIMAL_LIT     reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    HEX_LIT         reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    OCTAL_LIT       reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BINARY_LIT      reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FLOAT_DEC_LIT   reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FLOAT_HEX_LIT   reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    STRING_LIT      reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CHAR_LIT        reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BOOLEAN         reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    VOID            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BYTE            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SHORT           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    INT             reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    LONG            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CHAR            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FLOAT           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DOUBLE          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CLASS           reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ENUM            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    IMPLEMENTS      reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    RBRACE          reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CASE            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DEFAULT         reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ELSE            reduce using rule 613 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)


state 1091

    (627) Finally -> FINALLY Block .

    IDENT           reduce using rule 627 (Finally -> FINALLY Block .)
    IF              reduce using rule 627 (Finally -> FINALLY Block .)
    WHILE           reduce using rule 627 (Finally -> FINALLY Block .)
    LBRACE          reduce using rule 627 (Finally -> FINALLY Block .)
    SEMICOLON       reduce using rule 627 (Finally -> FINALLY Block .)
    ASSERT          reduce using rule 627 (Finally -> FINALLY Block .)
    SWITCH          reduce using rule 627 (Finally -> FINALLY Block .)
    DO              reduce using rule 627 (Finally -> FINALLY Block .)
    BREAK           reduce using rule 627 (Finally -> FINALLY Block .)
    CONTINUE        reduce using rule 627 (Finally -> FINALLY Block .)
    RETURN          reduce using rule 627 (Finally -> FINALLY Block .)
    SYNCHRONIZED    reduce using rule 627 (Finally -> FINALLY Block .)
    THROW           reduce using rule 627 (Finally -> FINALLY Block .)
    TRY             reduce using rule 627 (Finally -> FINALLY Block .)
    FOR             reduce using rule 627 (Finally -> FINALLY Block .)
    FINAL           reduce using rule 627 (Finally -> FINALLY Block .)
    EXTENDS         reduce using rule 627 (Finally -> FINALLY Block .)
    PUBLIC          reduce using rule 627 (Finally -> FINALLY Block .)
    PROTECTED       reduce using rule 627 (Finally -> FINALLY Block .)
    PRIVATE         reduce using rule 627 (Finally -> FINALLY Block .)
    ABSTRACT        reduce using rule 627 (Finally -> FINALLY Block .)
    STATIC          reduce using rule 627 (Finally -> FINALLY Block .)
    STRICTFP        reduce using rule 627 (Finally -> FINALLY Block .)
    INC             reduce using rule 627 (Finally -> FINALLY Block .)
    DEC             reduce using rule 627 (Finally -> FINALLY Block .)
    SUPER           reduce using rule 627 (Finally -> FINALLY Block .)
    ATRATE          reduce using rule 627 (Finally -> FINALLY Block .)
    PERIOD          reduce using rule 627 (Finally -> FINALLY Block .)
    NEW             reduce using rule 627 (Finally -> FINALLY Block .)
    THIS            reduce using rule 627 (Finally -> FINALLY Block .)
    LPAREN          reduce using rule 627 (Finally -> FINALLY Block .)
    BOOL_LIT        reduce using rule 627 (Finally -> FINALLY Block .)
    NULL_LIT        reduce using rule 627 (Finally -> FINALLY Block .)
    DECIMAL_LIT     reduce using rule 627 (Finally -> FINALLY Block .)
    HEX_LIT         reduce using rule 627 (Finally -> FINALLY Block .)
    OCTAL_LIT       reduce using rule 627 (Finally -> FINALLY Block .)
    BINARY_LIT      reduce using rule 627 (Finally -> FINALLY Block .)
    FLOAT_DEC_LIT   reduce using rule 627 (Finally -> FINALLY Block .)
    FLOAT_HEX_LIT   reduce using rule 627 (Finally -> FINALLY Block .)
    STRING_LIT      reduce using rule 627 (Finally -> FINALLY Block .)
    CHAR_LIT        reduce using rule 627 (Finally -> FINALLY Block .)
    BOOLEAN         reduce using rule 627 (Finally -> FINALLY Block .)
    VOID            reduce using rule 627 (Finally -> FINALLY Block .)
    BYTE            reduce using rule 627 (Finally -> FINALLY Block .)
    SHORT           reduce using rule 627 (Finally -> FINALLY Block .)
    INT             reduce using rule 627 (Finally -> FINALLY Block .)
    LONG            reduce using rule 627 (Finally -> FINALLY Block .)
    CHAR            reduce using rule 627 (Finally -> FINALLY Block .)
    FLOAT           reduce using rule 627 (Finally -> FINALLY Block .)
    DOUBLE          reduce using rule 627 (Finally -> FINALLY Block .)
    CLASS           reduce using rule 627 (Finally -> FINALLY Block .)
    ENUM            reduce using rule 627 (Finally -> FINALLY Block .)
    IMPLEMENTS      reduce using rule 627 (Finally -> FINALLY Block .)
    RBRACE          reduce using rule 627 (Finally -> FINALLY Block .)
    CASE            reduce using rule 627 (Finally -> FINALLY Block .)
    DEFAULT         reduce using rule 627 (Finally -> FINALLY Block .)
    ELSE            reduce using rule 627 (Finally -> FINALLY Block .)


state 1092

    (620) CatchClauseS -> CatchClause CatchClauseS .

    IDENT           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    IF              reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    WHILE           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    LBRACE          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    SEMICOLON       reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    ASSERT          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    SWITCH          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    DO              reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    BREAK           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    CONTINUE        reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    RETURN          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    SYNCHRONIZED    reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    THROW           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    TRY             reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    FOR             reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    FINAL           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    EXTENDS         reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    PUBLIC          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    PROTECTED       reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    PRIVATE         reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    ABSTRACT        reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    STATIC          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    STRICTFP        reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    INC             reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    DEC             reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    SUPER           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    ATRATE          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    PERIOD          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    NEW             reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    THIS            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    LPAREN          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    BOOL_LIT        reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    NULL_LIT        reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    DECIMAL_LIT     reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    HEX_LIT         reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    OCTAL_LIT       reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    BINARY_LIT      reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    FLOAT_DEC_LIT   reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    FLOAT_HEX_LIT   reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    STRING_LIT      reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    CHAR_LIT        reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    BOOLEAN         reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    VOID            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    BYTE            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    SHORT           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    INT             reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    LONG            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    CHAR            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    FLOAT           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    DOUBLE          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    CLASS           reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    ENUM            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    IMPLEMENTS      reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    RBRACE          reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    CASE            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    DEFAULT         reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    FINALLY         reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)
    ELSE            reduce using rule 620 (CatchClauseS -> CatchClause CatchClauseS .)


state 1093

    (622) CatchClause -> CATCH LPAREN CatchFormalParameter . RPAREN Block

    RPAREN          shift and go to state 1139


state 1094

    (623) CatchFormalParameter -> VariableModifierS . CatchType VariableDeclaratorId
    (624) CatchType -> . UnannClassType ORClassTypeS
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 1142

    CatchType                      shift and go to state 1140
    UnannClassType                 shift and go to state 1141
    UnannClassOrInterfaceType      shift and go to state 1143
    UnannInterfaceType             shift and go to state 379

state 1095

    (628) TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .

    IDENT           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    IF              reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    WHILE           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    LBRACE          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SEMICOLON       reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ASSERT          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SWITCH          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DO              reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BREAK           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CONTINUE        reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    RETURN          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SYNCHRONIZED    reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    THROW           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    TRY             reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FOR             reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FINAL           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    EXTENDS         reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    PUBLIC          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    PROTECTED       reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    PRIVATE         reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ABSTRACT        reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    STATIC          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    STRICTFP        reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    INC             reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DEC             reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SUPER           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ATRATE          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    PERIOD          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    NEW             reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    THIS            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    LPAREN          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BOOL_LIT        reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    NULL_LIT        reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DECIMAL_LIT     reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    HEX_LIT         reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    OCTAL_LIT       reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BINARY_LIT      reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FLOAT_DEC_LIT   reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FLOAT_HEX_LIT   reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    STRING_LIT      reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CHAR_LIT        reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BOOLEAN         reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    VOID            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BYTE            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SHORT           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    INT             reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    LONG            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CHAR            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FLOAT           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DOUBLE          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CLASS           reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ENUM            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    IMPLEMENTS      reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    RBRACE          reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CASE            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DEFAULT         reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ELSE            reduce using rule 628 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)


state 1096

    (629) ZooFinally -> Finally .

    IDENT           reduce using rule 629 (ZooFinally -> Finally .)
    IF              reduce using rule 629 (ZooFinally -> Finally .)
    WHILE           reduce using rule 629 (ZooFinally -> Finally .)
    LBRACE          reduce using rule 629 (ZooFinally -> Finally .)
    SEMICOLON       reduce using rule 629 (ZooFinally -> Finally .)
    ASSERT          reduce using rule 629 (ZooFinally -> Finally .)
    SWITCH          reduce using rule 629 (ZooFinally -> Finally .)
    DO              reduce using rule 629 (ZooFinally -> Finally .)
    BREAK           reduce using rule 629 (ZooFinally -> Finally .)
    CONTINUE        reduce using rule 629 (ZooFinally -> Finally .)
    RETURN          reduce using rule 629 (ZooFinally -> Finally .)
    SYNCHRONIZED    reduce using rule 629 (ZooFinally -> Finally .)
    THROW           reduce using rule 629 (ZooFinally -> Finally .)
    TRY             reduce using rule 629 (ZooFinally -> Finally .)
    FOR             reduce using rule 629 (ZooFinally -> Finally .)
    FINAL           reduce using rule 629 (ZooFinally -> Finally .)
    EXTENDS         reduce using rule 629 (ZooFinally -> Finally .)
    PUBLIC          reduce using rule 629 (ZooFinally -> Finally .)
    PROTECTED       reduce using rule 629 (ZooFinally -> Finally .)
    PRIVATE         reduce using rule 629 (ZooFinally -> Finally .)
    ABSTRACT        reduce using rule 629 (ZooFinally -> Finally .)
    STATIC          reduce using rule 629 (ZooFinally -> Finally .)
    STRICTFP        reduce using rule 629 (ZooFinally -> Finally .)
    INC             reduce using rule 629 (ZooFinally -> Finally .)
    DEC             reduce using rule 629 (ZooFinally -> Finally .)
    SUPER           reduce using rule 629 (ZooFinally -> Finally .)
    ATRATE          reduce using rule 629 (ZooFinally -> Finally .)
    PERIOD          reduce using rule 629 (ZooFinally -> Finally .)
    NEW             reduce using rule 629 (ZooFinally -> Finally .)
    THIS            reduce using rule 629 (ZooFinally -> Finally .)
    LPAREN          reduce using rule 629 (ZooFinally -> Finally .)
    BOOL_LIT        reduce using rule 629 (ZooFinally -> Finally .)
    NULL_LIT        reduce using rule 629 (ZooFinally -> Finally .)
    DECIMAL_LIT     reduce using rule 629 (ZooFinally -> Finally .)
    HEX_LIT         reduce using rule 629 (ZooFinally -> Finally .)
    OCTAL_LIT       reduce using rule 629 (ZooFinally -> Finally .)
    BINARY_LIT      reduce using rule 629 (ZooFinally -> Finally .)
    FLOAT_DEC_LIT   reduce using rule 629 (ZooFinally -> Finally .)
    FLOAT_HEX_LIT   reduce using rule 629 (ZooFinally -> Finally .)
    STRING_LIT      reduce using rule 629 (ZooFinally -> Finally .)
    CHAR_LIT        reduce using rule 629 (ZooFinally -> Finally .)
    BOOLEAN         reduce using rule 629 (ZooFinally -> Finally .)
    VOID            reduce using rule 629 (ZooFinally -> Finally .)
    BYTE            reduce using rule 629 (ZooFinally -> Finally .)
    SHORT           reduce using rule 629 (ZooFinally -> Finally .)
    INT             reduce using rule 629 (ZooFinally -> Finally .)
    LONG            reduce using rule 629 (ZooFinally -> Finally .)
    CHAR            reduce using rule 629 (ZooFinally -> Finally .)
    FLOAT           reduce using rule 629 (ZooFinally -> Finally .)
    DOUBLE          reduce using rule 629 (ZooFinally -> Finally .)
    CLASS           reduce using rule 629 (ZooFinally -> Finally .)
    ENUM            reduce using rule 629 (ZooFinally -> Finally .)
    IMPLEMENTS      reduce using rule 629 (ZooFinally -> Finally .)
    RBRACE          reduce using rule 629 (ZooFinally -> Finally .)
    CASE            reduce using rule 629 (ZooFinally -> Finally .)
    DEFAULT         reduce using rule 629 (ZooFinally -> Finally .)
    ELSE            reduce using rule 629 (ZooFinally -> Finally .)


state 1097

    (630) ZooFinally -> empty .

    IDENT           reduce using rule 630 (ZooFinally -> empty .)
    IF              reduce using rule 630 (ZooFinally -> empty .)
    WHILE           reduce using rule 630 (ZooFinally -> empty .)
    LBRACE          reduce using rule 630 (ZooFinally -> empty .)
    SEMICOLON       reduce using rule 630 (ZooFinally -> empty .)
    ASSERT          reduce using rule 630 (ZooFinally -> empty .)
    SWITCH          reduce using rule 630 (ZooFinally -> empty .)
    DO              reduce using rule 630 (ZooFinally -> empty .)
    BREAK           reduce using rule 630 (ZooFinally -> empty .)
    CONTINUE        reduce using rule 630 (ZooFinally -> empty .)
    RETURN          reduce using rule 630 (ZooFinally -> empty .)
    SYNCHRONIZED    reduce using rule 630 (ZooFinally -> empty .)
    THROW           reduce using rule 630 (ZooFinally -> empty .)
    TRY             reduce using rule 630 (ZooFinally -> empty .)
    FOR             reduce using rule 630 (ZooFinally -> empty .)
    FINAL           reduce using rule 630 (ZooFinally -> empty .)
    EXTENDS         reduce using rule 630 (ZooFinally -> empty .)
    PUBLIC          reduce using rule 630 (ZooFinally -> empty .)
    PROTECTED       reduce using rule 630 (ZooFinally -> empty .)
    PRIVATE         reduce using rule 630 (ZooFinally -> empty .)
    ABSTRACT        reduce using rule 630 (ZooFinally -> empty .)
    STATIC          reduce using rule 630 (ZooFinally -> empty .)
    STRICTFP        reduce using rule 630 (ZooFinally -> empty .)
    INC             reduce using rule 630 (ZooFinally -> empty .)
    DEC             reduce using rule 630 (ZooFinally -> empty .)
    SUPER           reduce using rule 630 (ZooFinally -> empty .)
    ATRATE          reduce using rule 630 (ZooFinally -> empty .)
    PERIOD          reduce using rule 630 (ZooFinally -> empty .)
    NEW             reduce using rule 630 (ZooFinally -> empty .)
    THIS            reduce using rule 630 (ZooFinally -> empty .)
    LPAREN          reduce using rule 630 (ZooFinally -> empty .)
    BOOL_LIT        reduce using rule 630 (ZooFinally -> empty .)
    NULL_LIT        reduce using rule 630 (ZooFinally -> empty .)
    DECIMAL_LIT     reduce using rule 630 (ZooFinally -> empty .)
    HEX_LIT         reduce using rule 630 (ZooFinally -> empty .)
    OCTAL_LIT       reduce using rule 630 (ZooFinally -> empty .)
    BINARY_LIT      reduce using rule 630 (ZooFinally -> empty .)
    FLOAT_DEC_LIT   reduce using rule 630 (ZooFinally -> empty .)
    FLOAT_HEX_LIT   reduce using rule 630 (ZooFinally -> empty .)
    STRING_LIT      reduce using rule 630 (ZooFinally -> empty .)
    CHAR_LIT        reduce using rule 630 (ZooFinally -> empty .)
    BOOLEAN         reduce using rule 630 (ZooFinally -> empty .)
    VOID            reduce using rule 630 (ZooFinally -> empty .)
    BYTE            reduce using rule 630 (ZooFinally -> empty .)
    SHORT           reduce using rule 630 (ZooFinally -> empty .)
    INT             reduce using rule 630 (ZooFinally -> empty .)
    LONG            reduce using rule 630 (ZooFinally -> empty .)
    CHAR            reduce using rule 630 (ZooFinally -> empty .)
    FLOAT           reduce using rule 630 (ZooFinally -> empty .)
    DOUBLE          reduce using rule 630 (ZooFinally -> empty .)
    CLASS           reduce using rule 630 (ZooFinally -> empty .)
    ENUM            reduce using rule 630 (ZooFinally -> empty .)
    IMPLEMENTS      reduce using rule 630 (ZooFinally -> empty .)
    RBRACE          reduce using rule 630 (ZooFinally -> empty .)
    CASE            reduce using rule 630 (ZooFinally -> empty .)
    DEFAULT         reduce using rule 630 (ZooFinally -> empty .)
    ELSE            reduce using rule 630 (ZooFinally -> empty .)


state 1098

    (633) ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON RPAREN .

    LBRACE          reduce using rule 633 (ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON RPAREN .)


state 1099

    (635) SEMICOLONResourceS -> SEMICOLON Resource . SEMICOLONResourceS
    (635) SEMICOLONResourceS -> . SEMICOLON Resource SEMICOLONResourceS
    (636) SEMICOLONResourceS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 1007
    RPAREN          reduce using rule 1 (empty -> .)

  ! SEMICOLON       [ reduce using rule 1 (empty -> .) ]

    SEMICOLONResourceS             shift and go to state 1144
    empty                          shift and go to state 1008

state 1100

    (637) Resource -> VariableModifierS UnannType VariableDeclaratorId . ASSIGN Expression

    ASSIGN          shift and go to state 1145


state 1101

    (638) Resource -> VariableModifierS IDENT VariableDeclaratorId . ASSIGN Expression

    ASSIGN          shift and go to state 1146


state 1102

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression . SEMICOLON ZooForUpdate RPAREN Statement

    SEMICOLON       shift and go to state 1147


state 1103

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId . COLON Expression RPAREN Statement
    (346) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (344) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (345) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    COLON           shift and go to state 1148
    ASSIGN          shift and go to state 903
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 902
    empty                          shift and go to state 904

state 1104

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId . COLON Expression RPAREN Statement
    (346) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (344) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (345) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    COLON           shift and go to state 1149
    ASSIGN          shift and go to state 903
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 902
    empty                          shift and go to state 904

state 1105

    (601) COMMAStatementExpressionS -> COMMA StatementExpression . COMMAStatementExpressionS
    (601) COMMAStatementExpressionS -> . COMMA StatementExpression COMMAStatementExpressionS
    (602) COMMAStatementExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 1015
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAStatementExpressionS      shift and go to state 1150
    empty                          shift and go to state 1016

state 1106

    (431) ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements . RBRACE

    RBRACE          shift and go to state 1151


state 1107

    (436) ExplicitConstructorInvocation -> ZooTypeArguments THIS . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1152


state 1108

    (437) ExplicitConstructorInvocation -> ZooTypeArguments SUPER . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1153


state 1109

    (438) ExplicitConstructorInvocation -> ExpressionName PERIOD . ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (296) ExpressionName -> ExpressionName PERIOD . IDENT
    (121) ClassInstanceCreationExpression -> ExpressionName PERIOD . UnqualifiedClassInstanceCreationExpression
    (146) MethodInvocation -> ExpressionName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 168
    NEW             shift and go to state 416
    LSS             shift and go to state 181
    SUPER           reduce using rule 1 (empty -> .)

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 1154
    UnqualifiedClassInstanceCreationExpression shift and go to state 452
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 1110

    (439) ExplicitConstructorInvocation -> IDENT PERIOD . ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (122) ClassInstanceCreationExpression -> IDENT PERIOD . UnqualifiedClassInstanceCreationExpression
    (147) MethodInvocation -> IDENT PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    NEW             shift and go to state 416
    LSS             shift and go to state 181
    SUPER           reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 1155
    UnqualifiedClassInstanceCreationExpression shift and go to state 414
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 1111

    (440) ExplicitConstructorInvocation -> Primary PERIOD . ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (123) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> Primary PERIOD . IDENT
    (148) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 449
    NEW             shift and go to state 416
    LSS             shift and go to state 181
    SUPER           reduce using rule 1 (empty -> .)

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 1156
    UnqualifiedClassInstanceCreationExpression shift and go to state 448
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 1112

    (414) COMMAExceptionTypeS -> COMMA ExceptionType . COMMAExceptionTypeS
    (414) COMMAExceptionTypeS -> . COMMA ExceptionType COMMAExceptionTypeS
    (415) COMMAExceptionTypeS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 1026
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAExceptionTypeS            shift and go to state 1157
    empty                          shift and go to state 1027

state 1113

    (430) ConstructorDeclarator -> ZooTypeParameters IDENT LPAREN ZooFormalParameterList RPAREN .

    THROWS          reduce using rule 430 (ConstructorDeclarator -> ZooTypeParameters IDENT LPAREN ZooFormalParameterList RPAREN .)
    LBRACE          reduce using rule 430 (ConstructorDeclarator -> ZooTypeParameters IDENT LPAREN ZooFormalParameterList RPAREN .)


state 1114

    (410) ReceiverParameter -> AnnotationS IDENT . ZooIDENTPERIOD THIS
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (407) ZooIDENTPERIOD -> . IDENT PERIOD
    (408) ZooIDENTPERIOD -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 612
    LBRACE          shift and go to state 237
    THIS            reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 236
    ZooIDENTPERIOD                 shift and go to state 791
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    empty                          shift and go to state 792
    TypeArguments                  shift and go to state 179
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1115

    (341) COMMAVariableDeclaratorS -> COMMA VariableDeclarator COMMAVariableDeclaratorS .

    SEMICOLON       reduce using rule 341 (COMMAVariableDeclaratorS -> COMMA VariableDeclarator COMMAVariableDeclaratorS .)


state 1116

    (388) MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN . ZooDims
    (65) ZooDims -> . Dims
    (66) ZooDims -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
    LBRACE          shift and go to state 237
    THROWS          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    ZooDims                        shift and go to state 1158
    Dims                           shift and go to state 673
    empty                          shift and go to state 674
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1117

    (381) MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows .

    SEMICOLON       reduce using rule 381 (MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows .)
    LBRACE          reduce using rule 381 (MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows .)


state 1118

    (45) InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .

    SEMICOLON       reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    PUBLIC          reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    STATIC          reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    FINAL           reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    ABSTRACT        reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    DEFAULT         reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    STRICTFP        reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    EXTENDS         reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    PROTECTED       reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    PRIVATE         reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    ATRATE          reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    IDENT           reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    BOOLEAN         reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    BYTE            reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    SHORT           reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    INT             reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    LONG            reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    CHAR            reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    FLOAT           reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    DOUBLE          reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    VOID            reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    LSS             reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    CLASS           reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    ENUM            reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    IMPLEMENTS      reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    LBRACE          reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    INTERFACE       reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    RBRACE          reduce using rule 45 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)


state 1119

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN . RPAREN ZooDims ZooDefaultValue SEMICOLON

    RPAREN          shift and go to state 1159


state 1120

    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN . RPAREN ZooDims ZooDefaultValue SEMICOLON

    RPAREN          shift and go to state 1160


state 1121

    (37) ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .

    SEMICOLON       reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PUBLIC          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ABSTRACT        reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STATIC          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FINAL           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    EXTENDS         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PROTECTED       reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PRIVATE         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STRICTFP        reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ATRATE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IDENT           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BOOLEAN         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BYTE            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    SHORT           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INT             reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LONG            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CHAR            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FLOAT           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    DOUBLE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CLASS           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ENUM            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IMPLEMENTS      reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LBRACE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INTERFACE       reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    RBRACE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    DEFAULT         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    VOID            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LSS             reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)


state 1122

    (38) ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .

    SEMICOLON       reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    PUBLIC          reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    ABSTRACT        reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    STATIC          reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    FINAL           reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    EXTENDS         reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    PROTECTED       reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    PRIVATE         reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    STRICTFP        reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    ATRATE          reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    IDENT           reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    BOOLEAN         reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    BYTE            reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    SHORT           reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    INT             reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    LONG            reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    CHAR            reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    FLOAT           reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    DOUBLE          reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    CLASS           reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    ENUM            reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    IMPLEMENTS      reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    LBRACE          reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    INTERFACE       reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    RBRACE          reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    DEFAULT         reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    VOID            reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)
    LSS             reduce using rule 38 (ConstantDeclaration -> ConstantModifierS IDENT VariableDeclaratorList SEMICOLON .)


state 1123

    (150) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1161


state 1124

    (100) COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS .

    COMMA           reduce using rule 100 (COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS .)
    RBRACE          reduce using rule 100 (COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS .)


state 1125

    (459) ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .

    LBRACE          reduce using rule 459 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 459 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 459 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 459 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)


state 1126

    (566) IfThenStatement -> IF LPAREN . Expression RPAREN Statement
    (567) IfThenElseStatement -> IF LPAREN . Expression RPAREN StatementNoShortIf ELSE Statement
    (568) IfThenElseStatementNoShortIf -> IF LPAREN . Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1162
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1127

    (567) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE . Statement
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1163
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1128

    (556) LabeledStatement -> IDENT COLON . Statement
    (557) LabeledStatementNoShortIf -> IDENT COLON . StatementNoShortIf
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 859
    StatementNoShortIf             shift and go to state 1164
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1129

    (582) WhileStatement -> WHILE LPAREN . Expression RPAREN Statement
    (583) WhileStatementNoShortIf -> WHILE LPAREN . Expression RPAREN StatementNoShortIf
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1165
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1130

    (589) BasicForStatement -> FOR LPAREN . ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> FOR LPAREN . VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> FOR LPAREN . VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> FOR LPAREN . ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> FOR LPAREN . VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> FOR LPAREN . VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (594) ZooForInit -> . ForInit
    (595) ZooForInit -> . empty
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (597) ForInit -> . StatementExpressionList
    (598) ForInit -> . LocalVariableDeclaration
    (1) empty -> .
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (600) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (528) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> . VariableModifierS IDENT VariableDeclaratorList
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 377
    ATRATE          shift and go to state 13
    INC             shift and go to state 118
    DEC             shift and go to state 119
    IDENT           shift and go to state 882
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooForInit                     shift and go to state 1166
    VariableModifierS              shift and go to state 1167
    ForInit                        shift and go to state 883
    empty                          shift and go to state 884
    VariableModifier               shift and go to state 517
    StatementExpressionList        shift and go to state 885
    LocalVariableDeclaration       shift and go to state 886
    Annotation                     shift and go to state 887
    StatementExpression            shift and go to state 888
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    TypeName                       shift and go to state 540
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 1131

    (572) SwitchBlock -> LBRACE SwitchBlockStatementGroupS . SwitchLabelS RBRACE
    (577) SwitchLabelS -> . SwitchLabel SwitchLabelS
    (578) SwitchLabelS -> . empty
    (579) SwitchLabel -> . CASE ConstantExpression COLON
    (580) SwitchLabel -> . CASE IDENT COLON
    (581) SwitchLabel -> . DEFAULT COLON
    (1) empty -> .

    CASE            shift and go to state 1136
    DEFAULT         shift and go to state 1137
    RBRACE          reduce using rule 1 (empty -> .)

    SwitchLabelS                   shift and go to state 1168
    SwitchLabel                    shift and go to state 1169
    empty                          shift and go to state 1170

state 1132

    (573) SwitchBlockStatementGroupS -> SwitchBlockStatementGroup . SwitchBlockStatementGroupS
    (573) SwitchBlockStatementGroupS -> . SwitchBlockStatementGroup SwitchBlockStatementGroupS
    (574) SwitchBlockStatementGroupS -> . empty
    (575) SwitchBlockStatementGroup -> . SwitchLabels BlockStatements
    (1) empty -> .
    (576) SwitchLabels -> . SwitchLabel SwitchLabelS
    (579) SwitchLabel -> . CASE ConstantExpression COLON
    (580) SwitchLabel -> . CASE IDENT COLON
    (581) SwitchLabel -> . DEFAULT COLON

  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            shift and go to state 1136
    DEFAULT         shift and go to state 1137

  ! CASE            [ reduce using rule 1 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 1 (empty -> .) ]

    SwitchBlockStatementGroup      shift and go to state 1132
    SwitchBlockStatementGroupS     shift and go to state 1171
    empty                          shift and go to state 1133
    SwitchLabels                   shift and go to state 1134
    SwitchLabel                    shift and go to state 1135

state 1133

    (574) SwitchBlockStatementGroupS -> empty .

    CASE            reduce using rule 574 (SwitchBlockStatementGroupS -> empty .)
    DEFAULT         reduce using rule 574 (SwitchBlockStatementGroupS -> empty .)
    RBRACE          reduce using rule 574 (SwitchBlockStatementGroupS -> empty .)


state 1134

    (575) SwitchBlockStatementGroup -> SwitchLabels . BlockStatements
    (521) BlockStatements -> . BlockStatement BlockStatementS
    (524) BlockStatement -> . LocalVariableDeclarationStatement
    (525) BlockStatement -> . ClassDeclaration
    (526) BlockStatement -> . Statement
    (527) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (297) ClassDeclaration -> . NormalClassDeclaration
    (298) ClassDeclaration -> . EnumDeclaration
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (528) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> . VariableModifierS IDENT VariableDeclaratorList
    (304) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (305) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (443) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (530) VariableModifierS -> . VariableModifier VariableModifierS
    (531) VariableModifierS -> . empty
    (441) ClassModifierS -> . ClassModifier ClassModifierS
    (442) ClassModifierS -> . empty
    (300) ZooSuperClass -> . SuperClass
    (301) ZooSuperClass -> . empty
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (400) VariableModifier -> . Annotation
    (401) VariableModifier -> . FINAL
    (1) empty -> .
    (306) ClassModifier -> . InterfaceModifier
    (307) ClassModifier -> . FINAL
    (299) SuperClass -> . EXTENDS ClassType
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    FINAL           shift and go to state 531
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    EXTENDS         shift and go to state 45
    PUBLIC          shift and go to state 47
    PROTECTED       shift and go to state 48
    PRIVATE         shift and go to state 49
    ABSTRACT        shift and go to state 50
    STATIC          shift and go to state 51
    STRICTFP        shift and go to state 52
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    ATRATE          shift and go to state 13
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    BlockStatements                shift and go to state 1172
    BlockStatement                 shift and go to state 486
    LocalVariableDeclarationStatement shift and go to state 487
    ClassDeclaration               shift and go to state 488
    Statement                      shift and go to state 489
    LocalVariableDeclaration       shift and go to state 490
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    VariableModifierS              shift and go to state 498
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    VariableModifier               shift and go to state 517
    empty                          shift and go to state 1173
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Annotation                     shift and go to state 530
    InterfaceModifier              shift and go to state 73
    ClassType                      shift and go to state 140
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 1135

    (576) SwitchLabels -> SwitchLabel . SwitchLabelS
    (577) SwitchLabelS -> . SwitchLabel SwitchLabelS
    (578) SwitchLabelS -> . empty
    (579) SwitchLabel -> . CASE ConstantExpression COLON
    (580) SwitchLabel -> . CASE IDENT COLON
    (581) SwitchLabel -> . DEFAULT COLON
    (1) empty -> .

    CASE            shift and go to state 1136
    DEFAULT         shift and go to state 1137
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)

    SwitchLabel                    shift and go to state 1169
    SwitchLabelS                   shift and go to state 1174
    empty                          shift and go to state 1170

state 1136

    (579) SwitchLabel -> CASE . ConstantExpression COLON
    (580) SwitchLabel -> CASE . IDENT COLON
    (268) ConstantExpression -> . Expression
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 1176
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ConstantExpression             shift and go to state 1175
    Expression                     shift and go to state 1177
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1137

    (581) SwitchLabel -> DEFAULT . COLON

    COLON           shift and go to state 1178


state 1138

    (584) DoStatement -> DO Statement WHILE LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1179


state 1139

    (622) CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN . Block
    (518) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 1180

state 1140

    (623) CatchFormalParameter -> VariableModifierS CatchType . VariableDeclaratorId
    (347) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 1181

state 1141

    (624) CatchType -> UnannClassType . ORClassTypeS
    (356) UnannClassOrInterfaceType -> UnannClassType .
    (361) UnannInterfaceType -> UnannClassType .
    (625) ORClassTypeS -> . OR ClassType ORClassTypeS
    (626) ORClassTypeS -> . empty
    (1) empty -> .

  ! reduce/reduce conflict for PERIOD resolved using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    PERIOD          reduce using rule 356 (UnannClassOrInterfaceType -> UnannClassType .)
    OR              shift and go to state 1183
    IDENT           reduce using rule 1 (empty -> .)

  ! PERIOD          [ reduce using rule 361 (UnannInterfaceType -> UnannClassType .) ]

    ORClassTypeS                   shift and go to state 1182
    empty                          shift and go to state 1184

state 1142

    (358) UnannClassType -> IDENT . ZooTypeArguments
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 181
    OR              reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 751
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180

state 1143

    (359) UnannClassType -> UnannClassOrInterfaceType . PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> UnannClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments

    PERIOD          shift and go to state 639


state 1144

    (635) SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS .

    SEMICOLON       reduce using rule 635 (SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS .)
    RPAREN          reduce using rule 635 (SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS .)


state 1145

    (637) Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN . Expression
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1185
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1146

    (638) Resource -> VariableModifierS IDENT VariableDeclaratorId ASSIGN . Expression
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1186
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1147

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON . ZooForUpdate RPAREN Statement
    (590) ZooForUpdate -> . ForUpdate
    (591) ZooForUpdate -> . empty
    (599) ForUpdate -> . StatementExpressionList
    (1) empty -> .
    (600) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    INC             shift and go to state 118
    DEC             shift and go to state 119
    IDENT           shift and go to state 882
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ZooForUpdate                   shift and go to state 1187
    ForUpdate                      shift and go to state 1188
    empty                          shift and go to state 1189
    StatementExpressionList        shift and go to state 1190
    StatementExpression            shift and go to state 888
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1148

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON . Expression RPAREN Statement
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1191
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1149

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON . Expression RPAREN Statement
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1192
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1150

    (601) COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS .

    SEMICOLON       reduce using rule 601 (COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS .)
    RPAREN          reduce using rule 601 (COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS .)


state 1151

    (431) ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .

    SEMICOLON       reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    LBRACE          reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    STATIC          reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    PUBLIC          reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    PROTECTED       reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    PRIVATE         reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    FINAL           reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    TRANSIENT       reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    VOLATILE        reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    ABSTRACT        reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    SYNCHRONIZED    reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    NATIVE          reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    STRICTFP        reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    EXTENDS         reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    ATRATE          reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    LSS             reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    IDENT           reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    BOOLEAN         reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    BYTE            reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    SHORT           reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    INT             reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    LONG            reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    CHAR            reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    FLOAT           reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    DOUBLE          reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    VOID            reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    CLASS           reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    ENUM            reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    IMPLEMENTS      reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    INTERFACE       reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    RBRACE          reduce using rule 431 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)


state 1152

    (436) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN . ZooArgumentList RPAREN SEMICOLON
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 1193
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1153

    (437) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN . ZooArgumentList RPAREN SEMICOLON
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 1194
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1154

    (438) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments . SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (146) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    SUPER           shift and go to state 1195
    IDENT           shift and go to state 668


state 1155

    (439) ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments . SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (147) MethodInvocation -> IDENT PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    SUPER           shift and go to state 1196
    IDENT           shift and go to state 653


state 1156

    (440) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments . SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (148) MethodInvocation -> Primary PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    SUPER           shift and go to state 1197
    IDENT           shift and go to state 666


state 1157

    (414) COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS .

    LBRACE          reduce using rule 414 (COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS .)
    SEMICOLON       reduce using rule 414 (COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS .)


state 1158

    (388) MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .

    THROWS          reduce using rule 388 (MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .)
    SEMICOLON       reduce using rule 388 (MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .)
    LBRACE          reduce using rule 388 (MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .)


state 1159

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN . ZooDims ZooDefaultValue SEMICOLON
    (65) ZooDims -> . Dims
    (66) ZooDims -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          shift and go to state 237
    DEFAULT         reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 1198
    Dims                           shift and go to state 673
    empty                          shift and go to state 674
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1160

    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN . ZooDims ZooDefaultValue SEMICOLON
    (65) ZooDims -> . Dims
    (66) ZooDims -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          shift and go to state 237
    DEFAULT         reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 1199
    Dims                           shift and go to state 673
    empty                          shift and go to state 674
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1161

    (150) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 150 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 1162

    (566) IfThenStatement -> IF LPAREN Expression . RPAREN Statement
    (567) IfThenElseStatement -> IF LPAREN Expression . RPAREN StatementNoShortIf ELSE Statement
    (568) IfThenElseStatementNoShortIf -> IF LPAREN Expression . RPAREN StatementNoShortIf ELSE StatementNoShortIf

    RPAREN          shift and go to state 1200


state 1163

    (567) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .

    IDENT           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    IF              reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    WHILE           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    LBRACE          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SEMICOLON       reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ASSERT          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SWITCH          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DO              reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BREAK           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CONTINUE        reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    RETURN          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SYNCHRONIZED    reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    THROW           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    TRY             reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FOR             reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FINAL           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    EXTENDS         reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    PUBLIC          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    PROTECTED       reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    PRIVATE         reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ABSTRACT        reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    STATIC          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    STRICTFP        reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    INC             reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DEC             reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SUPER           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ATRATE          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    PERIOD          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    NEW             reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    THIS            reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    LPAREN          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BOOL_LIT        reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    NULL_LIT        reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DECIMAL_LIT     reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    HEX_LIT         reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    OCTAL_LIT       reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BINARY_LIT      reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FLOAT_DEC_LIT   reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FLOAT_HEX_LIT   reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    STRING_LIT      reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CHAR_LIT        reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BOOLEAN         reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    VOID            reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BYTE            reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SHORT           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    INT             reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    LONG            reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CHAR            reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FLOAT           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DOUBLE          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CLASS           reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ENUM            reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    IMPLEMENTS      reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    RBRACE          reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CASE            reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DEFAULT         reduce using rule 567 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)


state 1164

    (557) LabeledStatementNoShortIf -> IDENT COLON StatementNoShortIf .

    ELSE            reduce using rule 557 (LabeledStatementNoShortIf -> IDENT COLON StatementNoShortIf .)


state 1165

    (582) WhileStatement -> WHILE LPAREN Expression . RPAREN Statement
    (583) WhileStatementNoShortIf -> WHILE LPAREN Expression . RPAREN StatementNoShortIf

    RPAREN          shift and go to state 1201


state 1166

    (589) BasicForStatement -> FOR LPAREN ZooForInit . SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (596) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit . SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf

    SEMICOLON       shift and go to state 1202


state 1167

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS . UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS . IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (605) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS . UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS . IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (528) LocalVariableDeclaration -> VariableModifierS . UnannType VariableDeclaratorList
    (529) LocalVariableDeclaration -> VariableModifierS . IDENT VariableDeclaratorList
    (350) UnannType -> . UnannPrimitiveType
    (351) UnannType -> . UnannReferenceType
    (352) UnannPrimitiveType -> . NumericType
    (353) UnannPrimitiveType -> . BOOLEAN
    (354) UnannReferenceType -> . UnannClassOrInterfaceType
    (355) UnannReferenceType -> . UnannArrayType
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (356) UnannClassOrInterfaceType -> . UnannClassType
    (357) UnannClassOrInterfaceType -> . UnannInterfaceType
    (362) UnannArrayType -> . UnannPrimitiveType Dims
    (363) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (364) UnannArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (358) UnannClassType -> . IDENT ZooTypeArguments
    (359) UnannClassType -> . UnannClassOrInterfaceType PERIOD IDENT ZooTypeArguments
    (360) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (361) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 1204
    BOOLEAN         shift and go to state 553
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    UnannType                      shift and go to state 1203
    UnannPrimitiveType             shift and go to state 371
    UnannReferenceType             shift and go to state 372
    NumericType                    shift and go to state 552
    UnannClassOrInterfaceType      shift and go to state 375
    UnannArrayType                 shift and go to state 376
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    UnannClassType                 shift and go to state 378
    UnannInterfaceType             shift and go to state 379

state 1168

    (572) SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS . RBRACE

    RBRACE          shift and go to state 1205


state 1169

    (577) SwitchLabelS -> SwitchLabel . SwitchLabelS
    (577) SwitchLabelS -> . SwitchLabel SwitchLabelS
    (578) SwitchLabelS -> . empty
    (579) SwitchLabel -> . CASE ConstantExpression COLON
    (580) SwitchLabel -> . CASE IDENT COLON
    (581) SwitchLabel -> . DEFAULT COLON
    (1) empty -> .

    CASE            shift and go to state 1136
    DEFAULT         shift and go to state 1137
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)

    SwitchLabel                    shift and go to state 1169
    SwitchLabelS                   shift and go to state 1206
    empty                          shift and go to state 1170

state 1170

    (578) SwitchLabelS -> empty .

    RBRACE          reduce using rule 578 (SwitchLabelS -> empty .)
    IDENT           reduce using rule 578 (SwitchLabelS -> empty .)
    IF              reduce using rule 578 (SwitchLabelS -> empty .)
    WHILE           reduce using rule 578 (SwitchLabelS -> empty .)
    LBRACE          reduce using rule 578 (SwitchLabelS -> empty .)
    SEMICOLON       reduce using rule 578 (SwitchLabelS -> empty .)
    ASSERT          reduce using rule 578 (SwitchLabelS -> empty .)
    SWITCH          reduce using rule 578 (SwitchLabelS -> empty .)
    DO              reduce using rule 578 (SwitchLabelS -> empty .)
    BREAK           reduce using rule 578 (SwitchLabelS -> empty .)
    CONTINUE        reduce using rule 578 (SwitchLabelS -> empty .)
    RETURN          reduce using rule 578 (SwitchLabelS -> empty .)
    SYNCHRONIZED    reduce using rule 578 (SwitchLabelS -> empty .)
    THROW           reduce using rule 578 (SwitchLabelS -> empty .)
    TRY             reduce using rule 578 (SwitchLabelS -> empty .)
    FOR             reduce using rule 578 (SwitchLabelS -> empty .)
    FINAL           reduce using rule 578 (SwitchLabelS -> empty .)
    EXTENDS         reduce using rule 578 (SwitchLabelS -> empty .)
    PUBLIC          reduce using rule 578 (SwitchLabelS -> empty .)
    PROTECTED       reduce using rule 578 (SwitchLabelS -> empty .)
    PRIVATE         reduce using rule 578 (SwitchLabelS -> empty .)
    ABSTRACT        reduce using rule 578 (SwitchLabelS -> empty .)
    STATIC          reduce using rule 578 (SwitchLabelS -> empty .)
    STRICTFP        reduce using rule 578 (SwitchLabelS -> empty .)
    INC             reduce using rule 578 (SwitchLabelS -> empty .)
    DEC             reduce using rule 578 (SwitchLabelS -> empty .)
    SUPER           reduce using rule 578 (SwitchLabelS -> empty .)
    ATRATE          reduce using rule 578 (SwitchLabelS -> empty .)
    PERIOD          reduce using rule 578 (SwitchLabelS -> empty .)
    NEW             reduce using rule 578 (SwitchLabelS -> empty .)
    THIS            reduce using rule 578 (SwitchLabelS -> empty .)
    LPAREN          reduce using rule 578 (SwitchLabelS -> empty .)
    BOOL_LIT        reduce using rule 578 (SwitchLabelS -> empty .)
    NULL_LIT        reduce using rule 578 (SwitchLabelS -> empty .)
    DECIMAL_LIT     reduce using rule 578 (SwitchLabelS -> empty .)
    HEX_LIT         reduce using rule 578 (SwitchLabelS -> empty .)
    OCTAL_LIT       reduce using rule 578 (SwitchLabelS -> empty .)
    BINARY_LIT      reduce using rule 578 (SwitchLabelS -> empty .)
    FLOAT_DEC_LIT   reduce using rule 578 (SwitchLabelS -> empty .)
    FLOAT_HEX_LIT   reduce using rule 578 (SwitchLabelS -> empty .)
    STRING_LIT      reduce using rule 578 (SwitchLabelS -> empty .)
    CHAR_LIT        reduce using rule 578 (SwitchLabelS -> empty .)
    BOOLEAN         reduce using rule 578 (SwitchLabelS -> empty .)
    VOID            reduce using rule 578 (SwitchLabelS -> empty .)
    BYTE            reduce using rule 578 (SwitchLabelS -> empty .)
    SHORT           reduce using rule 578 (SwitchLabelS -> empty .)
    INT             reduce using rule 578 (SwitchLabelS -> empty .)
    LONG            reduce using rule 578 (SwitchLabelS -> empty .)
    CHAR            reduce using rule 578 (SwitchLabelS -> empty .)
    FLOAT           reduce using rule 578 (SwitchLabelS -> empty .)
    DOUBLE          reduce using rule 578 (SwitchLabelS -> empty .)
    CLASS           reduce using rule 578 (SwitchLabelS -> empty .)
    ENUM            reduce using rule 578 (SwitchLabelS -> empty .)
    IMPLEMENTS      reduce using rule 578 (SwitchLabelS -> empty .)


state 1171

    (573) SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .

    CASE            reduce using rule 573 (SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .)
    DEFAULT         reduce using rule 573 (SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .)
    RBRACE          reduce using rule 573 (SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .)


state 1172

    (575) SwitchBlockStatementGroup -> SwitchLabels BlockStatements .

    CASE            reduce using rule 575 (SwitchBlockStatementGroup -> SwitchLabels BlockStatements .)
    DEFAULT         reduce using rule 575 (SwitchBlockStatementGroup -> SwitchLabels BlockStatements .)
    RBRACE          reduce using rule 575 (SwitchBlockStatementGroup -> SwitchLabels BlockStatements .)


state 1173

    (531) VariableModifierS -> empty .
    (442) ClassModifierS -> empty .
    (301) ZooSuperClass -> empty .

    IDENT           reduce using rule 531 (VariableModifierS -> empty .)
    BOOLEAN         reduce using rule 531 (VariableModifierS -> empty .)
    BYTE            reduce using rule 531 (VariableModifierS -> empty .)
    SHORT           reduce using rule 531 (VariableModifierS -> empty .)
    INT             reduce using rule 531 (VariableModifierS -> empty .)
    LONG            reduce using rule 531 (VariableModifierS -> empty .)
    CHAR            reduce using rule 531 (VariableModifierS -> empty .)
    FLOAT           reduce using rule 531 (VariableModifierS -> empty .)
    DOUBLE          reduce using rule 531 (VariableModifierS -> empty .)
    CLASS           reduce using rule 442 (ClassModifierS -> empty .)
    ENUM            reduce using rule 442 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 301 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 301 (ZooSuperClass -> empty .)


state 1174

    (576) SwitchLabels -> SwitchLabel SwitchLabelS .

    IDENT           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    IF              reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    WHILE           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    LBRACE          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SEMICOLON       reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ASSERT          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SWITCH          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DO              reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BREAK           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CONTINUE        reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    RETURN          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SYNCHRONIZED    reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    THROW           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    TRY             reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FOR             reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FINAL           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    EXTENDS         reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    PUBLIC          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    PROTECTED       reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    PRIVATE         reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ABSTRACT        reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    STATIC          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    STRICTFP        reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    INC             reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DEC             reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SUPER           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ATRATE          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    PERIOD          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    NEW             reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    THIS            reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    LPAREN          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BOOL_LIT        reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    NULL_LIT        reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DECIMAL_LIT     reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    HEX_LIT         reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    OCTAL_LIT       reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BINARY_LIT      reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FLOAT_DEC_LIT   reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FLOAT_HEX_LIT   reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    STRING_LIT      reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CHAR_LIT        reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BOOLEAN         reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    VOID            reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BYTE            reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SHORT           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    INT             reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    LONG            reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CHAR            reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FLOAT           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DOUBLE          reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CLASS           reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ENUM            reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    IMPLEMENTS      reduce using rule 576 (SwitchLabels -> SwitchLabel SwitchLabelS .)


state 1175

    (579) SwitchLabel -> CASE ConstantExpression . COLON

    COLON           shift and go to state 1207


state 1176

    (580) SwitchLabel -> CASE IDENT . COLON
    (174) LambdaParameters -> IDENT .
    (186) LeftHandSide -> IDENT .
    (142) ArrayAccess -> IDENT . LBRACK Expression RBRACK
    (122) ClassInstanceCreationExpression -> IDENT . PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> IDENT . LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> IDENT . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (155) MethodReference -> IDENT . COLON_SEP ZooTypeArguments IDENT
    (480) ReferenceType -> IDENT .
    (483) ClassType -> IDENT . ZooTypeArguments
    (490) ArrayType -> IDENT . Dims
    (231) MultiplicativeExpression -> IDENT .
    (258) PostIncrementExpression -> IDENT . INC
    (260) PostDecrementExpression -> IDENT . DEC
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    COLON           shift and go to state 1208
    ARROW           reduce using rule 174 (LambdaParameters -> IDENT .)
    ASSIGN          reduce using rule 186 (LeftHandSide -> IDENT .)
    MUL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    QUO_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    REM_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    ADD_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SUB_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHL_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 186 (LeftHandSide -> IDENT .)
    AND_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    XOR_ASSIGN      reduce using rule 186 (LeftHandSide -> IDENT .)
    OR_ASSIGN       reduce using rule 186 (LeftHandSide -> IDENT .)
    LBRACK          shift and go to state 232
    PERIOD          shift and go to state 231
    LPAREN          shift and go to state 233
    COLON_SEP       shift and go to state 234
    MUL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUO             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    REM             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    ADD             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SUB             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    SHR_UN          reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GTR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    GEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INSTANCEOF      reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    EQL             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    NEQ             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    AND             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    XOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    OR              reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LAND            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    QUES            reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    LOR             reduce using rule 231 (MultiplicativeExpression -> IDENT .)
    INC             shift and go to state 229
    DEC             shift and go to state 230
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    ATRATE          shift and go to state 13

  ! COLON_SEP       [ reduce using rule 480 (ReferenceType -> IDENT .) ]
  ! LSS             [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! COLON           [ reduce using rule 231 (MultiplicativeExpression -> IDENT .) ]
  ! COLON_SEP       [ reduce using rule 1 (empty -> .) ]
  ! PERIOD          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 182
    Dims                           shift and go to state 235
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    AnnotationS                    shift and go to state 236
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1177

    (268) ConstantExpression -> Expression .

    COLON           reduce using rule 268 (ConstantExpression -> Expression .)


state 1178

    (581) SwitchLabel -> DEFAULT COLON .

    CASE            reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    DEFAULT         reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    IDENT           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    IF              reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    WHILE           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    LBRACE          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    SEMICOLON       reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    ASSERT          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    SWITCH          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    DO              reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    BREAK           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    CONTINUE        reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    RETURN          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    SYNCHRONIZED    reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    THROW           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    TRY             reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    FOR             reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    FINAL           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    EXTENDS         reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    PUBLIC          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    PROTECTED       reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    PRIVATE         reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    ABSTRACT        reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    STATIC          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    STRICTFP        reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    INC             reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    DEC             reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    SUPER           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    ATRATE          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    PERIOD          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    NEW             reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    THIS            reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    LPAREN          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    BOOL_LIT        reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    NULL_LIT        reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    DECIMAL_LIT     reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    HEX_LIT         reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    OCTAL_LIT       reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    BINARY_LIT      reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    FLOAT_DEC_LIT   reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    FLOAT_HEX_LIT   reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    STRING_LIT      reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    CHAR_LIT        reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    BOOLEAN         reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    VOID            reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    BYTE            reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    SHORT           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    INT             reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    LONG            reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    CHAR            reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    FLOAT           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    DOUBLE          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    CLASS           reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    ENUM            reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    IMPLEMENTS      reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)
    RBRACE          reduce using rule 581 (SwitchLabel -> DEFAULT COLON .)


state 1179

    (584) DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .

    IDENT           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    IF              reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ASSERT          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SWITCH          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DO              reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    THROW           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    TRY             reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FOR             reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FINAL           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    STATIC          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    INC             reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DEC             reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SUPER           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ATRATE          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    PERIOD          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    NEW             reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    THIS            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    VOID            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BYTE            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SHORT           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    INT             reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    LONG            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CLASS           reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ENUM            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CASE            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 584 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)


state 1180

    (622) CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .

    CATCH           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    IDENT           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    IF              reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    WHILE           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    LBRACE          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SEMICOLON       reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ASSERT          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SWITCH          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DO              reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BREAK           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CONTINUE        reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    RETURN          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SYNCHRONIZED    reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    THROW           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    TRY             reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FOR             reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FINAL           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    EXTENDS         reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    PUBLIC          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    PROTECTED       reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    PRIVATE         reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ABSTRACT        reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    STATIC          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    STRICTFP        reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    INC             reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DEC             reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SUPER           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ATRATE          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    PERIOD          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    NEW             reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    THIS            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    LPAREN          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BOOL_LIT        reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    NULL_LIT        reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DECIMAL_LIT     reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    HEX_LIT         reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    OCTAL_LIT       reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BINARY_LIT      reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FLOAT_DEC_LIT   reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FLOAT_HEX_LIT   reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    STRING_LIT      reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CHAR_LIT        reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BOOLEAN         reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    VOID            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BYTE            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SHORT           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    INT             reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    LONG            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CHAR            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FLOAT           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DOUBLE          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CLASS           reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ENUM            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    IMPLEMENTS      reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    RBRACE          reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CASE            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DEFAULT         reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FINALLY         reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ELSE            reduce using rule 622 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)


state 1181

    (623) CatchFormalParameter -> VariableModifierS CatchType VariableDeclaratorId .

    RPAREN          reduce using rule 623 (CatchFormalParameter -> VariableModifierS CatchType VariableDeclaratorId .)


state 1182

    (624) CatchType -> UnannClassType ORClassTypeS .

    IDENT           reduce using rule 624 (CatchType -> UnannClassType ORClassTypeS .)


state 1183

    (625) ORClassTypeS -> OR . ClassType ORClassTypeS
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (486) TypeVariable -> . AnnotationS IDENT
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 79
    ATRATE          shift and go to state 13

    ClassType                      shift and go to state 1209
    TypeVariable                   shift and go to state 78
    AnnotationS                    shift and go to state 80
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1184

    (626) ORClassTypeS -> empty .

    IDENT           reduce using rule 626 (ORClassTypeS -> empty .)


state 1185

    (637) Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression .

    SEMICOLON       reduce using rule 637 (Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression .)
    RPAREN          reduce using rule 637 (Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression .)


state 1186

    (638) Resource -> VariableModifierS IDENT VariableDeclaratorId ASSIGN Expression .

    SEMICOLON       reduce using rule 638 (Resource -> VariableModifierS IDENT VariableDeclaratorId ASSIGN Expression .)
    RPAREN          reduce using rule 638 (Resource -> VariableModifierS IDENT VariableDeclaratorId ASSIGN Expression .)


state 1187

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate . RPAREN Statement

    RPAREN          shift and go to state 1210


state 1188

    (590) ZooForUpdate -> ForUpdate .

    RPAREN          reduce using rule 590 (ZooForUpdate -> ForUpdate .)


state 1189

    (591) ZooForUpdate -> empty .

    RPAREN          reduce using rule 591 (ZooForUpdate -> empty .)


state 1190

    (599) ForUpdate -> StatementExpressionList .

    RPAREN          reduce using rule 599 (ForUpdate -> StatementExpressionList .)


state 1191

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression . RPAREN Statement

    RPAREN          shift and go to state 1211


state 1192

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression . RPAREN Statement

    RPAREN          shift and go to state 1212


state 1193

    (436) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1213


state 1194

    (437) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1214


state 1195

    (438) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1215


state 1196

    (439) ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1216


state 1197

    (440) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1217


state 1198

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims . ZooDefaultValue SEMICOLON
    (67) ZooDefaultValue -> . DefaultValue
    (68) ZooDefaultValue -> . empty
    (74) DefaultValue -> . DEFAULT ElementValue
    (1) empty -> .

    DEFAULT         shift and go to state 1221
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooDefaultValue                shift and go to state 1218
    DefaultValue                   shift and go to state 1219
    empty                          shift and go to state 1220

state 1199

    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims . ZooDefaultValue SEMICOLON
    (67) ZooDefaultValue -> . DefaultValue
    (68) ZooDefaultValue -> . empty
    (74) DefaultValue -> . DEFAULT ElementValue
    (1) empty -> .

    DEFAULT         shift and go to state 1221
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooDefaultValue                shift and go to state 1222
    DefaultValue                   shift and go to state 1219
    empty                          shift and go to state 1220

state 1200

    (566) IfThenStatement -> IF LPAREN Expression RPAREN . Statement
    (567) IfThenElseStatement -> IF LPAREN Expression RPAREN . StatementNoShortIf ELSE Statement
    (568) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN . StatementNoShortIf ELSE StatementNoShortIf
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1073
    StatementNoShortIf             shift and go to state 1223
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1201

    (582) WhileStatement -> WHILE LPAREN Expression RPAREN . Statement
    (583) WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN . StatementNoShortIf
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1085
    StatementNoShortIf             shift and go to state 1224
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1202

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON . ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (596) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON . ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (592) ZooExpression -> . Expression
    (593) ZooExpression -> . empty
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (1) empty -> .
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooExpression                  shift and go to state 1225
    Expression                     shift and go to state 728
    empty                          shift and go to state 729
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1203

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType . VariableDeclaratorId COLON Expression RPAREN Statement
    (605) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType . VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (528) LocalVariableDeclaration -> VariableModifierS UnannType . VariableDeclaratorList
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer

    IDENT           shift and go to state 748

    VariableDeclaratorId           shift and go to state 1226
    VariableDeclaratorList         shift and go to state 857
    VariableDeclarator             shift and go to state 746

state 1204

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT . VariableDeclaratorId COLON Expression RPAREN Statement
    (606) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT . VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (529) LocalVariableDeclaration -> VariableModifierS IDENT . VariableDeclaratorList
    (364) UnannArrayType -> IDENT . Dims
    (358) UnannClassType -> IDENT . ZooTypeArguments
    (347) VariableDeclaratorId -> . IDENT ZooDims
    (343) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (491) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (492) Dims -> . LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) ZooTypeArguments -> . TypeArguments
    (126) ZooTypeArguments -> . empty
    (346) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (506) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           shift and go to state 748
    LBRACE          shift and go to state 237
    LSS             shift and go to state 181
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    VariableDeclaratorId           shift and go to state 1227
    VariableDeclaratorList         shift and go to state 858
    Dims                           shift and go to state 750
    ZooTypeArguments               shift and go to state 751
    VariableDeclarator             shift and go to state 746
    AnnotationS                    shift and go to state 236
    TypeArguments                  shift and go to state 179
    empty                          shift and go to state 180
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1205

    (572) SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .

    IDENT           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    IF              reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    WHILE           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    LBRACE          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SEMICOLON       reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ASSERT          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SWITCH          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DO              reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BREAK           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CONTINUE        reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    RETURN          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SYNCHRONIZED    reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    THROW           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    TRY             reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FOR             reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FINAL           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    EXTENDS         reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    PUBLIC          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    PROTECTED       reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    PRIVATE         reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ABSTRACT        reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    STATIC          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    STRICTFP        reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    INC             reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DEC             reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SUPER           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ATRATE          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    PERIOD          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    NEW             reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    THIS            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    LPAREN          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BOOL_LIT        reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    NULL_LIT        reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DECIMAL_LIT     reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    HEX_LIT         reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    OCTAL_LIT       reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BINARY_LIT      reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    STRING_LIT      reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CHAR_LIT        reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BOOLEAN         reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    VOID            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BYTE            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SHORT           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    INT             reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    LONG            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CHAR            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FLOAT           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DOUBLE          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CLASS           reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ENUM            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    IMPLEMENTS      reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    RBRACE          reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CASE            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DEFAULT         reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ELSE            reduce using rule 572 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)


state 1206

    (577) SwitchLabelS -> SwitchLabel SwitchLabelS .

    RBRACE          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    IDENT           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    IF              reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    WHILE           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    LBRACE          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SEMICOLON       reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ASSERT          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SWITCH          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DO              reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BREAK           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CONTINUE        reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    RETURN          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SYNCHRONIZED    reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    THROW           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    TRY             reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FOR             reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FINAL           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    EXTENDS         reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    PUBLIC          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    PROTECTED       reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    PRIVATE         reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ABSTRACT        reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    STATIC          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    STRICTFP        reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    INC             reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DEC             reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SUPER           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ATRATE          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    PERIOD          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    NEW             reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    THIS            reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    LPAREN          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BOOL_LIT        reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    NULL_LIT        reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DECIMAL_LIT     reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    HEX_LIT         reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    OCTAL_LIT       reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BINARY_LIT      reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FLOAT_DEC_LIT   reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FLOAT_HEX_LIT   reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    STRING_LIT      reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CHAR_LIT        reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BOOLEAN         reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    VOID            reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BYTE            reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SHORT           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    INT             reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    LONG            reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CHAR            reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FLOAT           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DOUBLE          reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CLASS           reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ENUM            reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    IMPLEMENTS      reduce using rule 577 (SwitchLabelS -> SwitchLabel SwitchLabelS .)


state 1207

    (579) SwitchLabel -> CASE ConstantExpression COLON .

    CASE            reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEFAULT         reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    IDENT           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    IF              reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    WHILE           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    LBRACE          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    SEMICOLON       reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    ASSERT          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    SWITCH          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    DO              reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    BREAK           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    CONTINUE        reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    RETURN          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    SYNCHRONIZED    reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    THROW           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    TRY             reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    FOR             reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    FINAL           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    EXTENDS         reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    PUBLIC          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    PROTECTED       reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    PRIVATE         reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    ABSTRACT        reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    STATIC          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    STRICTFP        reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    INC             reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEC             reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    SUPER           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    ATRATE          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    PERIOD          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    NEW             reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    THIS            reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    LPAREN          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOL_LIT        reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    NULL_LIT        reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    DECIMAL_LIT     reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    HEX_LIT         reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    OCTAL_LIT       reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    BINARY_LIT      reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT_DEC_LIT   reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT_HEX_LIT   reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    STRING_LIT      reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR_LIT        reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOLEAN         reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    VOID            reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    BYTE            reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    SHORT           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    INT             reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    LONG            reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR            reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    DOUBLE          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    CLASS           reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    ENUM            reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    IMPLEMENTS      reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)
    RBRACE          reduce using rule 579 (SwitchLabel -> CASE ConstantExpression COLON .)


state 1208

    (580) SwitchLabel -> CASE IDENT COLON .

    CASE            reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    DEFAULT         reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    IDENT           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    IF              reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    WHILE           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    LBRACE          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    SEMICOLON       reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    ASSERT          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    SWITCH          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    DO              reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    BREAK           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    CONTINUE        reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    RETURN          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    SYNCHRONIZED    reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    THROW           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    TRY             reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    FOR             reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    FINAL           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    EXTENDS         reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    PUBLIC          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    PROTECTED       reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    PRIVATE         reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    ABSTRACT        reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    STATIC          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    STRICTFP        reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    INC             reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    DEC             reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    SUPER           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    ATRATE          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    PERIOD          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    NEW             reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    THIS            reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    LPAREN          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    BOOL_LIT        reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    NULL_LIT        reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    DECIMAL_LIT     reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    HEX_LIT         reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    OCTAL_LIT       reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    BINARY_LIT      reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    FLOAT_DEC_LIT   reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    FLOAT_HEX_LIT   reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    STRING_LIT      reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    CHAR_LIT        reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    BOOLEAN         reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    VOID            reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    BYTE            reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    SHORT           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    INT             reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    LONG            reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    CHAR            reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    FLOAT           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    DOUBLE          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    CLASS           reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    ENUM            reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    IMPLEMENTS      reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)
    RBRACE          reduce using rule 580 (SwitchLabel -> CASE IDENT COLON .)


state 1209

    (625) ORClassTypeS -> OR ClassType . ORClassTypeS
    (484) ClassType -> ClassType . PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> ClassType . PERIOD IDENT ZooTypeArguments
    (625) ORClassTypeS -> . OR ClassType ORClassTypeS
    (626) ORClassTypeS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 177
    OR              shift and go to state 1183
    IDENT           reduce using rule 1 (empty -> .)

    ORClassTypeS                   shift and go to state 1228
    empty                          shift and go to state 1184

state 1210

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN . Statement
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1229
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1211

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN . Statement
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1230
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1212

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN . Statement
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 499
    IF              shift and go to state 512
    WHILE           shift and go to state 514
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 529
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1231
    StatementWithoutTrailingSubstatement shift and go to state 492
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1213

    (436) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1232


state 1214

    (437) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1233


state 1215

    (438) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN . ZooArgumentList RPAREN SEMICOLON
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ExpressionName                 shift and go to state 211
    ZooArgumentList                shift and go to state 1234
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1216

    (439) ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN . ZooArgumentList RPAREN SEMICOLON
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    ZooArgumentList                shift and go to state 1235
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1217

    (440) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN . ZooArgumentList RPAREN SEMICOLON
    (434) ZooArgumentList -> . ArgumentList
    (435) ZooArgumentList -> . empty
    (151) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Primary                        shift and go to state 214
    ZooArgumentList                shift and go to state 1236
    ArgumentList                   shift and go to state 419
    empty                          shift and go to state 420
    Expression                     shift and go to state 421
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1218

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue . SEMICOLON

    SEMICOLON       shift and go to state 1237


state 1219

    (67) ZooDefaultValue -> DefaultValue .

    SEMICOLON       reduce using rule 67 (ZooDefaultValue -> DefaultValue .)


state 1220

    (68) ZooDefaultValue -> empty .

    SEMICOLON       reduce using rule 68 (ZooDefaultValue -> empty .)


state 1221

    (74) DefaultValue -> DEFAULT . ElementValue
    (85) ElementValue -> . ConditionalExpression
    (86) ElementValue -> . ElementValueArrayInitializer
    (87) ElementValue -> . Annotation
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (88) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (294) TypeName -> . ExpressionName
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation

    LBRACE          shift and go to state 100
    ATRATE          shift and go to state 13
    IDENT           shift and go to state 227
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122
    LPAREN          shift and go to state 90
    PERIOD          shift and go to state 27
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    SUPER           shift and go to state 155
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166

    ElementValue                   shift and go to state 1238
    ConditionalExpression          shift and go to state 95
    ElementValueArrayInitializer   shift and go to state 96
    Annotation                     shift and go to state 97
    ConditionalOrExpression        shift and go to state 99
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 102
    TypeName                       shift and go to state 89
    InclusiveOrExpression          shift and go to state 103
    ExclusiveOrExpression          shift and go to state 104
    AndExpression                  shift and go to state 105
    EqualityExpression             shift and go to state 106
    RelationalExpression           shift and go to state 107
    ShiftExpression                shift and go to state 108
    ReferenceType                  shift and go to state 109
    AdditiveExpression             shift and go to state 110
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    Primary                        shift and go to state 124
    ExpressionName                 shift and go to state 125
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127
    PrimitiveType                  shift and go to state 128
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    FieldAccess                    shift and go to state 135
    ArrayAccess                    shift and go to state 136
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167

state 1222

    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue . SEMICOLON

    SEMICOLON       shift and go to state 1239


state 1223

    (567) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf . ELSE Statement
    (568) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf . ELSE StatementNoShortIf

    ELSE            shift and go to state 1240


state 1224

    (583) WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN StatementNoShortIf .

    ELSE            reduce using rule 583 (WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN StatementNoShortIf .)


state 1225

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression . SEMICOLON ZooForUpdate RPAREN Statement
    (596) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression . SEMICOLON ZooForUpdate RPAREN StatementNoShortIf

    SEMICOLON       shift and go to state 1241


state 1226

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId . COLON Expression RPAREN Statement
    (605) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId . COLON Expression RPAREN StatementNoShortIf
    (346) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (344) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (345) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    COLON           shift and go to state 1242
    ASSIGN          shift and go to state 903
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 902
    empty                          shift and go to state 904

state 1227

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId . COLON Expression RPAREN Statement
    (606) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId . COLON Expression RPAREN StatementNoShortIf
    (346) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (344) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (345) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    COLON           shift and go to state 1243
    ASSIGN          shift and go to state 903
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 902
    empty                          shift and go to state 904

state 1228

    (625) ORClassTypeS -> OR ClassType ORClassTypeS .

    IDENT           reduce using rule 625 (ORClassTypeS -> OR ClassType ORClassTypeS .)


state 1229

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .

    IDENT           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    IF              reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    WHILE           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    LBRACE          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SEMICOLON       reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ASSERT          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SWITCH          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DO              reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BREAK           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CONTINUE        reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    RETURN          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    THROW           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    TRY             reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FOR             reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FINAL           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    EXTENDS         reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    PUBLIC          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    PROTECTED       reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    PRIVATE         reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ABSTRACT        reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    STATIC          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    STRICTFP        reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    INC             reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DEC             reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SUPER           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ATRATE          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    PERIOD          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    NEW             reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    THIS            reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    LPAREN          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BOOL_LIT        reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    NULL_LIT        reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    HEX_LIT         reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    OCTAL_LIT       reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BINARY_LIT      reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    STRING_LIT      reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CHAR_LIT        reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BOOLEAN         reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    VOID            reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BYTE            reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SHORT           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    INT             reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    LONG            reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CHAR            reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FLOAT           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DOUBLE          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CLASS           reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ENUM            reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    IMPLEMENTS      reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    RBRACE          reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CASE            reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DEFAULT         reduce using rule 589 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)


state 1230

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .

    IDENT           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    IF              reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    WHILE           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    LBRACE          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SEMICOLON       reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ASSERT          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SWITCH          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DO              reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BREAK           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CONTINUE        reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    RETURN          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    THROW           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    TRY             reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FOR             reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FINAL           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    EXTENDS         reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    PUBLIC          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    PROTECTED       reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    PRIVATE         reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ABSTRACT        reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    STATIC          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    STRICTFP        reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    INC             reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DEC             reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SUPER           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ATRATE          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    PERIOD          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    NEW             reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    THIS            reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    LPAREN          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BOOL_LIT        reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    NULL_LIT        reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    HEX_LIT         reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    OCTAL_LIT       reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BINARY_LIT      reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    STRING_LIT      reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CHAR_LIT        reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BOOLEAN         reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    VOID            reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BYTE            reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SHORT           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    INT             reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    LONG            reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CHAR            reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DOUBLE          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CLASS           reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ENUM            reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    IMPLEMENTS      reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    RBRACE          reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CASE            reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DEFAULT         reduce using rule 603 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)


state 1231

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .

    IDENT           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    IF              reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    WHILE           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    LBRACE          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    SEMICOLON       reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    ASSERT          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    SWITCH          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    DO              reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    BREAK           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    CONTINUE        reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    RETURN          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    THROW           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    TRY             reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    FOR             reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    FINAL           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    EXTENDS         reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    PUBLIC          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    PROTECTED       reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    PRIVATE         reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    ABSTRACT        reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    STATIC          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    STRICTFP        reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    INC             reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    DEC             reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    SUPER           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    ATRATE          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    PERIOD          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    NEW             reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    THIS            reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    LPAREN          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    BOOL_LIT        reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    NULL_LIT        reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    HEX_LIT         reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    OCTAL_LIT       reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    BINARY_LIT      reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    STRING_LIT      reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    CHAR_LIT        reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    BOOLEAN         reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    VOID            reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    BYTE            reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    SHORT           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    INT             reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    LONG            reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    CHAR            reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    DOUBLE          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    CLASS           reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    ENUM            reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    IMPLEMENTS      reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    RBRACE          reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    CASE            reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)
    DEFAULT         reduce using rule 604 (EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement .)


state 1232

    (436) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PERIOD          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 436 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1233

    (437) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PERIOD          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 437 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1234

    (438) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1244


state 1235

    (439) ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1245


state 1236

    (440) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1246


state 1237

    (63) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .

    SEMICOLON       reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PUBLIC          reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ABSTRACT        reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    STATIC          reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    FINAL           reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    EXTENDS         reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PROTECTED       reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PRIVATE         reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    STRICTFP        reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ATRATE          reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    IDENT           reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    BOOLEAN         reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    BYTE            reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    SHORT           reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    INT             reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    LONG            reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    CHAR            reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    FLOAT           reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    DOUBLE          reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    CLASS           reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ENUM            reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    IMPLEMENTS      reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    LBRACE          reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    INTERFACE       reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    RBRACE          reduce using rule 63 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)


state 1238

    (74) DefaultValue -> DEFAULT ElementValue .

    SEMICOLON       reduce using rule 74 (DefaultValue -> DEFAULT ElementValue .)


state 1239

    (64) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .

    SEMICOLON       reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PUBLIC          reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ABSTRACT        reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    STATIC          reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    FINAL           reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    EXTENDS         reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PROTECTED       reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PRIVATE         reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    STRICTFP        reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ATRATE          reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    IDENT           reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    BOOLEAN         reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    BYTE            reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    SHORT           reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    INT             reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    LONG            reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    CHAR            reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    FLOAT           reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    DOUBLE          reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    CLASS           reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ENUM            reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    IMPLEMENTS      reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    LBRACE          reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    INTERFACE       reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    RBRACE          reduce using rule 64 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS IDENT IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)


state 1240

    (567) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE . Statement
    (568) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE . StatementNoShortIf
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    StatementNoShortIf             shift and go to state 1247
    Statement                      shift and go to state 1163
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1241

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON . ZooForUpdate RPAREN Statement
    (596) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON . ZooForUpdate RPAREN StatementNoShortIf
    (590) ZooForUpdate -> . ForUpdate
    (591) ZooForUpdate -> . empty
    (599) ForUpdate -> . StatementExpressionList
    (1) empty -> .
    (600) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    INC             shift and go to state 118
    DEC             shift and go to state 119
    IDENT           shift and go to state 882
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    ZooForUpdate                   shift and go to state 1248
    ForUpdate                      shift and go to state 1188
    empty                          shift and go to state 1189
    StatementExpressionList        shift and go to state 1190
    StatementExpression            shift and go to state 888
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1242

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON . Expression RPAREN Statement
    (605) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON . Expression RPAREN StatementNoShortIf
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1249
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1243

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON . Expression RPAREN Statement
    (606) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON . Expression RPAREN StatementNoShortIf
    (171) Expression -> . LambdaExpression
    (172) Expression -> . AssignmentExpression
    (173) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (182) AssignmentExpression -> . ConditionalExpression
    (183) AssignmentExpression -> . Assignment
    (174) LambdaParameters -> . IDENT
    (175) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (176) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (201) ConditionalExpression -> . ConditionalOrExpression
    (202) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (203) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (204) ConditionalOrExpression -> . ConditionalAndExpression
    (205) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (206) ConditionalAndExpression -> . InclusiveOrExpression
    (207) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (208) InclusiveOrExpression -> . ExclusiveOrExpression
    (209) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (294) TypeName -> . ExpressionName
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (210) ExclusiveOrExpression -> . AndExpression
    (211) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (212) AndExpression -> . EqualityExpression
    (213) AndExpression -> . AndExpression AND EqualityExpression
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (214) EqualityExpression -> . RelationalExpression
    (215) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (216) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (217) RelationalExpression -> . ShiftExpression
    (218) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (219) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (220) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (221) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (222) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (223) ShiftExpression -> . AdditiveExpression
    (224) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (225) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (226) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (227) AdditiveExpression -> . MultiplicativeExpression
    (228) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (229) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (230) MultiplicativeExpression -> . UnaryExpression
    (231) MultiplicativeExpression -> . IDENT
    (232) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (233) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (234) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (235) MultiplicativeExpression -> . MultiplicativeExpression MUL IDENT
    (236) MultiplicativeExpression -> . MultiplicativeExpression QUO IDENT
    (237) MultiplicativeExpression -> . MultiplicativeExpression REM IDENT
    (238) UnaryExpression -> . PreIncrementExpression
    (239) UnaryExpression -> . PreDecrementExpression
    (240) UnaryExpression -> . ADD UnaryExpression
    (241) UnaryExpression -> . SUB UnaryExpression
    (242) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (247) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (248) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (249) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (250) UnaryExpressionNotPlusMinus -> . LNOT IDENT
    (251) UnaryExpressionNotPlusMinus -> . NOT IDENT
    (252) UnaryExpressionNotPlusMinus -> . CastExpression
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (261) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (262) CastExpression -> . LPAREN PrimitiveType RPAREN IDENT
    (263) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (264) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN IDENT
    (265) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC

    IDENT           shift and go to state 405
    LPAREN          shift and go to state 194
    PERIOD          shift and go to state 27
    SUPER           shift and go to state 155
    THIS            shift and go to state 133
    NEW             shift and go to state 139
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13
    ADD             shift and go to state 112
    SUB             shift and go to state 113
    INC             shift and go to state 118
    DEC             shift and go to state 119
    LNOT            shift and go to state 121
    NOT             shift and go to state 122

    Expression                     shift and go to state 1250
    LambdaExpression               shift and go to state 198
    AssignmentExpression           shift and go to state 205
    LambdaParameters               shift and go to state 206
    ConditionalExpression          shift and go to state 207
    Assignment                     shift and go to state 208
    ConditionalOrExpression        shift and go to state 99
    LeftHandSide                   shift and go to state 209
    ConditionalAndExpression       shift and go to state 102
    ExpressionName                 shift and go to state 211
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    InclusiveOrExpression          shift and go to state 103
    Primary                        shift and go to state 214
    TypeName                       shift and go to state 210
    PrimaryNoNewArray              shift and go to state 215
    ExclusiveOrExpression          shift and go to state 104
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    ClassInstanceCreationExpression shift and go to state 134
    MethodInvocation               shift and go to state 137
    MethodReference                shift and go to state 138
    AndExpression                  shift and go to state 105
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    EqualityExpression             shift and go to state 106
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    RelationalExpression           shift and go to state 107
    AnnotationS                    shift and go to state 167
    ShiftExpression                shift and go to state 108
    Annotation                     shift and go to state 81
    AdditiveExpression             shift and go to state 110
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    MultiplicativeExpression       shift and go to state 111
    UnaryExpression                shift and go to state 114
    PreIncrementExpression         shift and go to state 115
    PreDecrementExpression         shift and go to state 116
    UnaryExpressionNotPlusMinus    shift and go to state 117
    PostfixExpression              shift and go to state 120
    CastExpression                 shift and go to state 123
    PostIncrementExpression        shift and go to state 126
    PostDecrementExpression        shift and go to state 127

state 1244

    (438) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1251


state 1245

    (439) ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1252


state 1246

    (440) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1253


state 1247

    (568) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf .

    ELSE            reduce using rule 568 (IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf .)


state 1248

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate . RPAREN Statement
    (596) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate . RPAREN StatementNoShortIf

    RPAREN          shift and go to state 1254


state 1249

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression . RPAREN Statement
    (605) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression . RPAREN StatementNoShortIf

    RPAREN          shift and go to state 1255


state 1250

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression . RPAREN Statement
    (606) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression . RPAREN StatementNoShortIf

    RPAREN          shift and go to state 1256


state 1251

    (438) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PERIOD          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 438 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1252

    (439) ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PERIOD          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 439 (ExplicitConstructorInvocation -> IDENT PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1253

    (440) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PERIOD          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 440 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1254

    (589) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN . Statement
    (596) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN . StatementNoShortIf
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1229
    StatementNoShortIf             shift and go to state 1257
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1255

    (603) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN . Statement
    (605) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN . StatementNoShortIf
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1230
    StatementNoShortIf             shift and go to state 1258
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1256

    (604) EnhancedForStatement -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN . Statement
    (606) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN . StatementNoShortIf
    (532) Statement -> . StatementWithoutTrailingSubstatement
    (533) Statement -> . LabeledStatement
    (534) Statement -> . IfThenStatement
    (535) Statement -> . IfThenElseStatement
    (536) Statement -> . WhileStatement
    (537) Statement -> . ForStatement
    (538) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (539) StatementNoShortIf -> . LabeledStatementNoShortIf
    (540) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (541) StatementNoShortIf -> . WhileStatementNoShortIf
    (542) StatementNoShortIf -> . ForStatementNoShortIf
    (543) StatementWithoutTrailingSubstatement -> . Block
    (544) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (545) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (546) StatementWithoutTrailingSubstatement -> . AssertStatement
    (547) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (548) StatementWithoutTrailingSubstatement -> . DoStatement
    (549) StatementWithoutTrailingSubstatement -> . BreakStatement
    (550) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (551) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (552) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (553) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (554) StatementWithoutTrailingSubstatement -> . TryStatement
    (556) LabeledStatement -> . IDENT COLON Statement
    (566) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (567) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (582) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (585) ForStatement -> . BasicForStatement
    (586) ForStatement -> . EnhancedForStatement
    (557) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (568) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (583) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (587) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (588) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (518) Block -> . LBRACE ZooBlockStatements RBRACE
    (555) EmptyStatement -> . SEMICOLON
    (558) ExpressionStatement -> . StatementExpression SEMICOLON
    (569) AssertStatement -> . ASSERT Expression SEMICOLON
    (570) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (571) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (584) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (607) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (610) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (611) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (613) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (612) ThrowStatement -> . THROW Expression SEMICOLON
    (614) TryStatement -> . TRY Block Catches
    (615) TryStatement -> . TRY Block ZooCatches Finally
    (616) TryStatement -> . TryWithResourcesStatement
    (589) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (603) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (604) EnhancedForStatement -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement
    (596) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (605) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (606) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (559) StatementExpression -> . Assignment
    (560) StatementExpression -> . PreIncrementExpression
    (561) StatementExpression -> . PreDecrementExpression
    (562) StatementExpression -> . PostIncrementExpression
    (563) StatementExpression -> . PostDecrementExpression
    (564) StatementExpression -> . MethodInvocation
    (565) StatementExpression -> . ClassInstanceCreationExpression
    (628) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (184) Assignment -> . LeftHandSide AssignmentOperator Expression
    (243) PreIncrementExpression -> . INC UnaryExpression
    (244) PreIncrementExpression -> . INC IDENT
    (245) PreDecrementExpression -> . DEC UnaryExpression
    (246) PreDecrementExpression -> . DEC IDENT
    (257) PostIncrementExpression -> . PostfixExpression INC
    (258) PostIncrementExpression -> . IDENT INC
    (259) PostDecrementExpression -> . PostfixExpression DEC
    (260) PostDecrementExpression -> . IDENT DEC
    (144) MethodInvocation -> . IDENT LPAREN ZooArgumentList RPAREN
    (145) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (146) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodInvocation -> . IDENT PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (148) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (121) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (122) ClassInstanceCreationExpression -> . IDENT PERIOD UnqualifiedClassInstanceCreationExpression
    (123) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (185) LeftHandSide -> . ExpressionName
    (186) LeftHandSide -> . IDENT
    (187) LeftHandSide -> . FieldAccess
    (188) LeftHandSide -> . ArrayAccess
    (253) PostfixExpression -> . Primary
    (254) PostfixExpression -> . ExpressionName
    (255) PostfixExpression -> . PostIncrementExpression
    (256) PostfixExpression -> . PostDecrementExpression
    (294) TypeName -> . ExpressionName
    (295) ExpressionName -> . PERIOD IDENT
    (296) ExpressionName -> . ExpressionName PERIOD IDENT
    (102) Primary -> . PrimaryNoNewArray
    (103) Primary -> . ArrayCreationExpression
    (124) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (138) FieldAccess -> . Primary PERIOD IDENT
    (139) FieldAccess -> . SUPER PERIOD IDENT
    (140) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (141) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (142) ArrayAccess -> . IDENT LBRACK Expression RBRACK
    (143) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (104) PrimaryNoNewArray -> . Literal
    (105) PrimaryNoNewArray -> . ClassLiteral
    (106) PrimaryNoNewArray -> . THIS
    (107) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (108) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (109) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (110) PrimaryNoNewArray -> . FieldAccess
    (111) PrimaryNoNewArray -> . ArrayAccess
    (112) PrimaryNoNewArray -> . MethodInvocation
    (113) PrimaryNoNewArray -> . MethodReference
    (162) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (163) ArrayCreationExpression -> . NEW ClassType DimExprs ZooDims
    (164) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (165) ArrayCreationExpression -> . NEW ClassType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (114) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (116) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (117) ClassLiteral -> . VOID PERIOD CLASS
    (154) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (155) MethodReference -> . IDENT COLON_SEP ZooTypeArguments IDENT
    (156) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (157) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (158) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (159) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (160) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (161) MethodReference -> . ArrayType COLON_SEP NEW
    (469) NumericType -> . IntegralType
    (470) NumericType -> . FloatingPointType
    (478) ReferenceType -> . ClassType
    (479) ReferenceType -> . TypeVariable
    (480) ReferenceType -> . IDENT
    (481) ReferenceType -> . ArrayType
    (482) ClassType -> . TypeVariable ZooTypeArguments
    (483) ClassType -> . IDENT ZooTypeArguments
    (484) ClassType -> . ClassType PERIOD TypeVariable ZooTypeArguments
    (485) ClassType -> . ClassType PERIOD IDENT ZooTypeArguments
    (487) ArrayType -> . PrimitiveType Dims
    (488) ArrayType -> . ClassType Dims
    (489) ArrayType -> . TypeVariable Dims
    (490) ArrayType -> . IDENT Dims
    (471) IntegralType -> . BYTE
    (472) IntegralType -> . SHORT
    (473) IntegralType -> . INT
    (474) IntegralType -> . LONG
    (475) IntegralType -> . CHAR
    (476) FloatingPointType -> . FLOAT
    (477) FloatingPointType -> . DOUBLE
    (486) TypeVariable -> . AnnotationS IDENT
    (465) PrimitiveType -> . AnnotationS NumericType
    (466) PrimitiveType -> . NumericType
    (467) PrimitiveType -> . AnnotationS BOOLEAN
    (468) PrimitiveType -> . BOOLEAN
    (129) AnnotationS -> . Annotation AnnotationS
    (130) AnnotationS -> . Annotation
    (75) Annotation -> . NormalAnnotation
    (76) Annotation -> . MarkerAnnotation
    (77) Annotation -> . SingleElementAnnotation
    (78) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (94) MarkerAnnotation -> . ATRATE TypeName
    (95) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           shift and go to state 1080
    IF              shift and go to state 1072
    WHILE           shift and go to state 1081
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 491
    ASSERT          shift and go to state 519
    SWITCH          shift and go to state 520
    DO              shift and go to state 521
    BREAK           shift and go to state 522
    CONTINUE        shift and go to state 523
    RETURN          shift and go to state 524
    SYNCHRONIZED    shift and go to state 525
    THROW           shift and go to state 526
    TRY             shift and go to state 527
    FOR             shift and go to state 1084
    INC             shift and go to state 118
    DEC             shift and go to state 119
    SUPER           shift and go to state 543
    PERIOD          shift and go to state 27
    NEW             shift and go to state 544
    THIS            shift and go to state 133
    LPAREN          shift and go to state 513
    BOOL_LIT        shift and go to state 141
    NULL_LIT        shift and go to state 142
    DECIMAL_LIT     shift and go to state 143
    HEX_LIT         shift and go to state 144
    OCTAL_LIT       shift and go to state 145
    BINARY_LIT      shift and go to state 146
    FLOAT_DEC_LIT   shift and go to state 147
    FLOAT_HEX_LIT   shift and go to state 148
    STRING_LIT      shift and go to state 149
    CHAR_LIT        shift and go to state 150
    BOOLEAN         shift and go to state 152
    VOID            shift and go to state 153
    BYTE            shift and go to state 160
    SHORT           shift and go to state 161
    INT             shift and go to state 162
    LONG            shift and go to state 163
    CHAR            shift and go to state 164
    FLOAT           shift and go to state 165
    DOUBLE          shift and go to state 166
    ATRATE          shift and go to state 13

    Statement                      shift and go to state 1231
    StatementNoShortIf             shift and go to state 1259
    StatementWithoutTrailingSubstatement shift and go to state 1075
    LabeledStatement               shift and go to state 493
    IfThenStatement                shift and go to state 494
    IfThenElseStatement            shift and go to state 495
    WhileStatement                 shift and go to state 496
    ForStatement                   shift and go to state 497
    LabeledStatementNoShortIf      shift and go to state 1076
    IfThenElseStatementNoShortIf   shift and go to state 1077
    WhileStatementNoShortIf        shift and go to state 1078
    ForStatementNoShortIf          shift and go to state 1079
    Block                          shift and go to state 500
    EmptyStatement                 shift and go to state 501
    ExpressionStatement            shift and go to state 502
    AssertStatement                shift and go to state 503
    SwitchStatement                shift and go to state 504
    DoStatement                    shift and go to state 505
    BreakStatement                 shift and go to state 506
    ContinueStatement              shift and go to state 507
    ReturnStatement                shift and go to state 508
    SynchronizedStatement          shift and go to state 509
    ThrowStatement                 shift and go to state 510
    TryStatement                   shift and go to state 511
    BasicForStatement              shift and go to state 515
    EnhancedForStatement           shift and go to state 516
    BasicForStatementNoShortIf     shift and go to state 1082
    EnhancedForStatementNoShortIf  shift and go to state 1083
    StatementExpression            shift and go to state 518
    TryWithResourcesStatement      shift and go to state 528
    Assignment                     shift and go to state 532
    PreIncrementExpression         shift and go to state 533
    PreDecrementExpression         shift and go to state 534
    PostIncrementExpression        shift and go to state 535
    PostDecrementExpression        shift and go to state 536
    MethodInvocation               shift and go to state 537
    ClassInstanceCreationExpression shift and go to state 538
    LeftHandSide                   shift and go to state 209
    PostfixExpression              shift and go to state 539
    TypeName                       shift and go to state 540
    ExpressionName                 shift and go to state 541
    Primary                        shift and go to state 542
    UnqualifiedClassInstanceCreationExpression shift and go to state 154
    FieldAccess                    shift and go to state 212
    ArrayAccess                    shift and go to state 213
    PrimaryNoNewArray              shift and go to state 129
    ArrayCreationExpression        shift and go to state 130
    Literal                        shift and go to state 131
    ClassLiteral                   shift and go to state 132
    MethodReference                shift and go to state 138
    PrimitiveType                  shift and go to state 128
    ClassType                      shift and go to state 140
    NumericType                    shift and go to state 151
    ReferenceType                  shift and go to state 109
    ArrayType                      shift and go to state 156
    IntegralType                   shift and go to state 157
    FloatingPointType              shift and go to state 158
    TypeVariable                   shift and go to state 159
    AnnotationS                    shift and go to state 167
    Annotation                     shift and go to state 81
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1257

    (596) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf .

    ELSE            reduce using rule 596 (BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf .)


state 1258

    (605) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf .

    ELSE            reduce using rule 605 (EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf .)


state 1259

    (606) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf .

    ELSE            reduce using rule 606 (EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ATRATE in state 2 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 14 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 26 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 29 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 43 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 43 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 43 resolved as shift
WARNING: shift/reduce conflict for ABSTRACT in state 43 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 43 resolved as shift
WARNING: shift/reduce conflict for STRICTFP in state 43 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 43 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 74 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 89 resolved as shift
WARNING: shift/reduce conflict for QUES in state 99 resolved as shift
WARNING: shift/reduce conflict for LOR in state 99 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 101 resolved as shift
WARNING: shift/reduce conflict for LSS in state 101 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 101 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 101 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 101 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 101 resolved as shift
WARNING: shift/reduce conflict for LAND in state 102 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for XOR in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 105 resolved as shift
WARNING: shift/reduce conflict for EQL in state 106 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for LSS in state 107 resolved as shift
WARNING: shift/reduce conflict for GTR in state 107 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for INSTANCEOF in state 107 resolved as shift
WARNING: shift/reduce conflict for SHL in state 108 resolved as shift
WARNING: shift/reduce conflict for SHR in state 108 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 108 resolved as shift
WARNING: shift/reduce conflict for ADD in state 110 resolved as shift
WARNING: shift/reduce conflict for SUB in state 110 resolved as shift
WARNING: shift/reduce conflict for MUL in state 111 resolved as shift
WARNING: shift/reduce conflict for QUO in state 111 resolved as shift
WARNING: shift/reduce conflict for REM in state 111 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 125 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 125 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 139 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 139 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 140 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 156 resolved as shift
WARNING: shift/reduce conflict for LSS in state 159 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 159 resolved as shift
WARNING: shift/reduce conflict for LSS in state 159 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 159 resolved as shift
WARNING: shift/reduce conflict for LSS in state 169 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 172 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 172 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 194 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 194 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 194 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 194 resolved as shift
WARNING: shift/reduce conflict for INT in state 194 resolved as shift
WARNING: shift/reduce conflict for LONG in state 194 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 194 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 194 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 194 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 196 resolved as shift
WARNING: shift/reduce conflict for LSS in state 196 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 196 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 196 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 196 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 196 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 203 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 204 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 210 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 211 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 211 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 226 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 227 resolved as shift
WARNING: shift/reduce conflict for LSS in state 227 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 227 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 227 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 227 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 227 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 259 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 259 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 259 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 259 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 259 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 262 resolved as shift
WARNING: shift/reduce conflict for LSS in state 262 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 262 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 262 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 262 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 262 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 264 resolved as shift
WARNING: shift/reduce conflict for LSS in state 264 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 264 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 264 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 264 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 264 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 268 resolved as shift
WARNING: shift/reduce conflict for LSS in state 268 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 268 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 268 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 268 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 268 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 270 resolved as shift
WARNING: shift/reduce conflict for LSS in state 270 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 270 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 270 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 270 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 270 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 271 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 273 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 288 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 299 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 299 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 299 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 299 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 299 resolved as shift
WARNING: shift/reduce conflict for INT in state 299 resolved as shift
WARNING: shift/reduce conflict for LONG in state 299 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 299 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 299 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 299 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 301 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 301 resolved as shift
WARNING: shift/reduce conflict for LSS in state 335 resolved as shift
WARNING: shift/reduce conflict for LSS in state 336 resolved as shift
WARNING: shift/reduce conflict for LSS in state 342 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 342 resolved as shift
WARNING: shift/reduce conflict for LSS in state 342 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 342 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 358 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 358 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 358 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 358 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 358 resolved as shift
WARNING: shift/reduce conflict for LSS in state 358 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 358 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 364 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 367 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 369 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 371 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 375 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 401 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 405 resolved as shift
WARNING: shift/reduce conflict for LSS in state 405 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 405 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 405 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 405 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 405 resolved as shift
WARNING: shift/reduce conflict for LAND in state 406 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 424 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 424 resolved as shift
WARNING: shift/reduce conflict for OR in state 425 resolved as shift
WARNING: shift/reduce conflict for XOR in state 426 resolved as shift
WARNING: shift/reduce conflict for AND in state 427 resolved as shift
WARNING: shift/reduce conflict for EQL in state 428 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 428 resolved as shift
WARNING: shift/reduce conflict for LSS in state 429 resolved as shift
WARNING: shift/reduce conflict for GTR in state 429 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 429 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 429 resolved as shift
WARNING: shift/reduce conflict for INSTANCEOF in state 429 resolved as shift
WARNING: shift/reduce conflict for LSS in state 430 resolved as shift
WARNING: shift/reduce conflict for GTR in state 430 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 430 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 430 resolved as shift
WARNING: shift/reduce conflict for INSTANCEOF in state 430 resolved as shift
WARNING: shift/reduce conflict for SHL in state 431 resolved as shift
WARNING: shift/reduce conflict for SHR in state 431 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 431 resolved as shift
WARNING: shift/reduce conflict for SHL in state 432 resolved as shift
WARNING: shift/reduce conflict for SHR in state 432 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 432 resolved as shift
WARNING: shift/reduce conflict for SHL in state 433 resolved as shift
WARNING: shift/reduce conflict for SHR in state 433 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 433 resolved as shift
WARNING: shift/reduce conflict for SHL in state 434 resolved as shift
WARNING: shift/reduce conflict for SHR in state 434 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 434 resolved as shift
WARNING: shift/reduce conflict for ADD in state 436 resolved as shift
WARNING: shift/reduce conflict for SUB in state 436 resolved as shift
WARNING: shift/reduce conflict for ADD in state 437 resolved as shift
WARNING: shift/reduce conflict for SUB in state 437 resolved as shift
WARNING: shift/reduce conflict for ADD in state 438 resolved as shift
WARNING: shift/reduce conflict for SUB in state 438 resolved as shift
WARNING: shift/reduce conflict for MUL in state 440 resolved as shift
WARNING: shift/reduce conflict for QUO in state 440 resolved as shift
WARNING: shift/reduce conflict for REM in state 440 resolved as shift
WARNING: shift/reduce conflict for MUL in state 441 resolved as shift
WARNING: shift/reduce conflict for QUO in state 441 resolved as shift
WARNING: shift/reduce conflict for REM in state 441 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 443 resolved as shift
WARNING: shift/reduce conflict for LSS in state 443 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 443 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 443 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 443 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 443 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 445 resolved as shift
WARNING: shift/reduce conflict for LSS in state 445 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 445 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 445 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 445 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 445 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 447 resolved as shift
WARNING: shift/reduce conflict for LSS in state 447 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 447 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 447 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 447 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 447 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 459 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 486 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 486 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 486 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 486 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 486 resolved as shift
WARNING: shift/reduce conflict for INT in state 486 resolved as shift
WARNING: shift/reduce conflict for LONG in state 486 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 486 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 486 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 486 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 499 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 499 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 499 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 499 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 499 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 530 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 540 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 541 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 541 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 544 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 544 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 551 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 551 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 551 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 558 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 558 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 590 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 605 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 621 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 621 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 621 resolved as shift
WARNING: shift/reduce conflict for LSS in state 621 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 621 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 631 resolved as shift
WARNING: shift/reduce conflict for ELLIPSIS in state 631 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 631 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 634 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 634 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 634 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 641 resolved as shift
WARNING: shift/reduce conflict for LSS in state 641 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 641 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 641 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 641 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 641 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 652 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 660 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 660 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 677 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 704 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 709 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 709 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 709 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 709 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 709 resolved as shift
WARNING: shift/reduce conflict for INT in state 709 resolved as shift
WARNING: shift/reduce conflict for LONG in state 709 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 709 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 709 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 709 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 714 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 714 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 714 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 735 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 735 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 735 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 735 resolved as shift
WARNING: shift/reduce conflict for INT in state 735 resolved as shift
WARNING: shift/reduce conflict for LONG in state 735 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 735 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 735 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 735 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 737 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 738 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 739 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 761 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 764 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 794 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 809 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 809 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 809 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 809 resolved as shift
WARNING: shift/reduce conflict for INT in state 809 resolved as shift
WARNING: shift/reduce conflict for LONG in state 809 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 809 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 809 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 809 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 811 resolved as shift
WARNING: shift/reduce conflict for LSS in state 811 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 811 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 811 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 811 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 811 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 815 resolved as shift
WARNING: shift/reduce conflict for LSS in state 815 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 815 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 815 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 815 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 815 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 816 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 816 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 816 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 816 resolved as shift
WARNING: shift/reduce conflict for INT in state 816 resolved as shift
WARNING: shift/reduce conflict for LONG in state 816 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 816 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 816 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 816 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 821 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 821 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 828 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 878 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 882 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 882 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 882 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 882 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 882 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 887 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 891 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 891 resolved as shift
WARNING: shift/reduce conflict for THIS in state 891 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 891 resolved as shift
WARNING: shift/reduce conflict for NEW in state 891 resolved as shift
WARNING: shift/reduce conflict for BOOL_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for NULL_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for DECIMAL_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for HEX_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for OCTAL_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for BINARY_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for FLOAT_DEC_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for FLOAT_HEX_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for STRING_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for CHAR_LIT in state 891 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 891 resolved as shift
WARNING: shift/reduce conflict for VOID in state 891 resolved as shift
WARNING: shift/reduce conflict for SUPER in state 891 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 891 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 891 resolved as shift
WARNING: shift/reduce conflict for INT in state 891 resolved as shift
WARNING: shift/reduce conflict for LONG in state 891 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 891 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 891 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 891 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 891 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 897 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 897 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 897 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 897 resolved as shift
WARNING: shift/reduce conflict for INT in state 897 resolved as shift
WARNING: shift/reduce conflict for LONG in state 897 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 897 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 897 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 897 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 908 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 908 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 908 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 908 resolved as shift
WARNING: shift/reduce conflict for INT in state 908 resolved as shift
WARNING: shift/reduce conflict for LONG in state 908 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 908 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 908 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 908 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 912 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 930 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 930 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 930 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 932 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 932 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 932 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 959 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 959 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 959 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 959 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 959 resolved as shift
WARNING: shift/reduce conflict for LSS in state 959 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 959 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 963 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 963 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 984 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 984 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 985 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1010 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1010 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1010 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1013 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1013 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1013 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1017 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1018 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1018 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1018 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1018 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1018 resolved as shift
WARNING: shift/reduce conflict for INT in state 1018 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1018 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1018 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1018 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1018 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 1022 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 1022 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 1023 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 1023 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 1023 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1023 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1023 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1028 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1028 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1028 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 1060 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 1080 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 1080 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 1080 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1080 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1080 resolved as shift
WARNING: shift/reduce conflict for CASE in state 1088 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 1088 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 1099 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1109 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1111 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1114 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1114 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1114 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1116 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1130 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1130 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1130 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1130 resolved as shift
WARNING: shift/reduce conflict for INT in state 1130 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1130 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1130 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1130 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1130 resolved as shift
WARNING: shift/reduce conflict for CASE in state 1132 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 1132 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1134 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1134 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1134 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1134 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1134 resolved as shift
WARNING: shift/reduce conflict for INT in state 1134 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1134 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1134 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1134 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1134 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 1176 resolved as shift
WARNING: shift/reduce conflict for COLON in state 1176 resolved as shift
WARNING: shift/reduce conflict for LSS in state 1176 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 1176 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 1176 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1176 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1176 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1204 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1204 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 1204 resolved as shift
WARNING: reduce/reduce conflict in state 43 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ClassModifier -> InterfaceModifier) in state 43
WARNING: reduce/reduce conflict in state 159 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ReferenceType -> TypeVariable) in state 159
WARNING: reduce/reduce conflict in state 196 resolved using rule (MultiplicativeExpression -> IDENT)
WARNING: rejected rule (ReferenceType -> IDENT) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (empty -> <empty>)
WARNING: rejected rule (MultiplicativeExpression -> IDENT) in state 196
WARNING: reduce/reduce conflict in state 302 resolved using rule (FieldModifierS -> empty)
WARNING: rejected rule (ConstructorModifierS -> empty) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (FieldModifierS -> empty)
WARNING: rejected rule (MethodModifierS -> empty) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (MethodModifierS -> empty)
WARNING: rejected rule (ConstructorModifierS -> empty) in state 302
WARNING: reduce/reduce conflict in state 312 resolved using rule (FieldModifier -> STATIC)
WARNING: rejected rule (MethodModifier -> STATIC) in state 312
WARNING: reduce/reduce conflict in state 312 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (FieldModifier -> STATIC) in state 312
WARNING: reduce/reduce conflict in state 312 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (MethodModifier -> STATIC) in state 312
WARNING: reduce/reduce conflict in state 319 resolved using rule (FieldModifier -> Annotation)
WARNING: rejected rule (ConstructorModifier -> Annotation) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (FieldModifier -> Annotation)
WARNING: rejected rule (MethodModifier -> Annotation) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (MethodModifier -> Annotation)
WARNING: rejected rule (ConstructorModifier -> Annotation) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (FieldModifier -> Annotation) in state 319
WARNING: reduce/reduce conflict in state 319 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (MethodModifier -> Annotation) in state 319
WARNING: reduce/reduce conflict in state 320 resolved using rule (FieldModifier -> PUBLIC)
WARNING: rejected rule (ConstructorModifier -> PUBLIC) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (FieldModifier -> PUBLIC)
WARNING: rejected rule (MethodModifier -> PUBLIC) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (MethodModifier -> PUBLIC)
WARNING: rejected rule (ConstructorModifier -> PUBLIC) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (FieldModifier -> PUBLIC) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (MethodModifier -> PUBLIC) in state 320
WARNING: reduce/reduce conflict in state 321 resolved using rule (FieldModifier -> PROTECTED)
WARNING: rejected rule (ConstructorModifier -> PROTECTED) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (FieldModifier -> PROTECTED)
WARNING: rejected rule (MethodModifier -> PROTECTED) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (MethodModifier -> PROTECTED)
WARNING: rejected rule (ConstructorModifier -> PROTECTED) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (InterfaceModifier -> PROTECTED)
WARNING: rejected rule (FieldModifier -> PROTECTED) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (InterfaceModifier -> PROTECTED)
WARNING: rejected rule (MethodModifier -> PROTECTED) in state 321
WARNING: reduce/reduce conflict in state 322 resolved using rule (FieldModifier -> PRIVATE)
WARNING: rejected rule (ConstructorModifier -> PRIVATE) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (FieldModifier -> PRIVATE)
WARNING: rejected rule (MethodModifier -> PRIVATE) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (MethodModifier -> PRIVATE)
WARNING: rejected rule (ConstructorModifier -> PRIVATE) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (InterfaceModifier -> PRIVATE)
WARNING: rejected rule (FieldModifier -> PRIVATE) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (InterfaceModifier -> PRIVATE)
WARNING: rejected rule (MethodModifier -> PRIVATE) in state 322
WARNING: reduce/reduce conflict in state 323 resolved using rule (FieldModifier -> FINAL)
WARNING: rejected rule (MethodModifier -> FINAL) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (ClassModifier -> FINAL)
WARNING: rejected rule (FieldModifier -> FINAL) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (ClassModifier -> FINAL)
WARNING: rejected rule (MethodModifier -> FINAL) in state 323
WARNING: reduce/reduce conflict in state 326 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (MethodModifier -> ABSTRACT) in state 326
WARNING: reduce/reduce conflict in state 329 resolved using rule (InterfaceModifier -> STRICTFP)
WARNING: rejected rule (MethodModifier -> STRICTFP) in state 329
WARNING: reduce/reduce conflict in state 342 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ReferenceType -> IDENT) in state 342
WARNING: reduce/reduce conflict in state 358 resolved using rule (MultiplicativeExpression -> IDENT)
WARNING: rejected rule (ReferenceType -> IDENT) in state 358
WARNING: reduce/reduce conflict in state 358 resolved using rule (empty -> <empty>)
WARNING: rejected rule (MultiplicativeExpression -> IDENT) in state 358
WARNING: reduce/reduce conflict in state 360 resolved using rule (ZooVariableModifier -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 360
WARNING: reduce/reduce conflict in state 362 resolved using rule (UnannPrimitiveType -> NumericType)
WARNING: rejected rule (PrimitiveType -> NumericType) in state 362
WARNING: reduce/reduce conflict in state 363 resolved using rule (UnannPrimitiveType -> BOOLEAN)
WARNING: rejected rule (PrimitiveType -> BOOLEAN) in state 363
WARNING: reduce/reduce conflict in state 367 resolved using rule (AnnotationS -> Annotation)
WARNING: rejected rule (VariableModifier -> Annotation) in state 367
WARNING: reduce/reduce conflict in state 374 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ZooVariableModifier -> VariableModifier) in state 374
WARNING: reduce/reduce conflict in state 378 resolved using rule (UnannClassOrInterfaceType -> UnannClassType)
WARNING: rejected rule (UnannInterfaceType -> UnannClassType) in state 378
WARNING: reduce/reduce conflict in state 530 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (VariableModifier -> Annotation) in state 530
WARNING: reduce/reduce conflict in state 530 resolved using rule (AnnotationS -> Annotation)
WARNING: rejected rule (VariableModifier -> Annotation) in state 530
WARNING: reduce/reduce conflict in state 531 resolved using rule (ClassModifier -> FINAL)
WARNING: rejected rule (VariableModifier -> FINAL) in state 531
WARNING: reduce/reduce conflict in state 558 resolved using rule (empty -> <empty>)
WARNING: rejected rule (Result -> IDENT) in state 558
WARNING: reduce/reduce conflict in state 614 resolved using rule (UnannClassType -> IDENT ZooTypeArguments)
WARNING: rejected rule (ClassType -> IDENT ZooTypeArguments) in state 614
WARNING: reduce/reduce conflict in state 618 resolved using rule (ZooTypeArguments -> empty)
WARNING: rejected rule (COMMAIDENTS -> empty) in state 618
WARNING: reduce/reduce conflict in state 618 resolved using rule (ZooTypeArguments -> empty)
WARNING: rejected rule (ZooIDENTPERIOD -> empty) in state 618
WARNING: reduce/reduce conflict in state 619 resolved using rule (UnannPrimitiveType -> NumericType)
WARNING: rejected rule (PrimitiveType -> AnnotationS NumericType) in state 619
WARNING: reduce/reduce conflict in state 620 resolved using rule (UnannPrimitiveType -> BOOLEAN)
WARNING: rejected rule (PrimitiveType -> AnnotationS BOOLEAN) in state 620
WARNING: reduce/reduce conflict in state 621 resolved using rule (empty -> <empty>)
WARNING: rejected rule (TypeVariable -> AnnotationS IDENT) in state 621
WARNING: reduce/reduce conflict in state 765 resolved using rule (ConstantModifierS -> empty)
WARNING: rejected rule (AnnotationTypeElementModifierS -> empty) in state 765
WARNING: reduce/reduce conflict in state 775 resolved using rule (ConstantModifier -> Annotation)
WARNING: rejected rule (AnnotationTypeElementModifier -> Annotation) in state 775
WARNING: reduce/reduce conflict in state 775 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ConstantModifier -> Annotation) in state 775
WARNING: reduce/reduce conflict in state 775 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (AnnotationTypeElementModifier -> Annotation) in state 775
WARNING: reduce/reduce conflict in state 776 resolved using rule (ConstantModifier -> PUBLIC)
WARNING: rejected rule (AnnotationTypeElementModifier -> PUBLIC) in state 776
WARNING: reduce/reduce conflict in state 776 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ConstantModifier -> PUBLIC) in state 776
WARNING: reduce/reduce conflict in state 776 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (AnnotationTypeElementModifier -> PUBLIC) in state 776
WARNING: reduce/reduce conflict in state 777 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (AnnotationTypeElementModifier -> ABSTRACT) in state 777
WARNING: reduce/reduce conflict in state 778 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ConstantModifier -> STATIC) in state 778
WARNING: reduce/reduce conflict in state 779 resolved using rule (ConstantModifier -> FINAL)
WARNING: rejected rule (ClassModifier -> FINAL) in state 779
WARNING: reduce/reduce conflict in state 792 resolved using rule (ZooTypeArguments -> empty)
WARNING: rejected rule (ZooIDENTPERIOD -> empty) in state 792
WARNING: reduce/reduce conflict in state 799 resolved using rule (ZooVariableModifier -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 799
WARNING: reduce/reduce conflict in state 887 resolved using rule (AnnotationS -> Annotation)
WARNING: rejected rule (VariableModifier -> Annotation) in state 887
WARNING: reduce/reduce conflict in state 895 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ExceptionType -> TypeVariable) in state 895
WARNING: reduce/reduce conflict in state 896 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ExceptionType -> IDENT) in state 896
WARNING: reduce/reduce conflict in state 913 resolved using rule (ConstantModifierS -> empty)
WARNING: rejected rule (InterfaceMethodModifierS -> empty) in state 913
WARNING: reduce/reduce conflict in state 921 resolved using rule (ConstantModifier -> Annotation)
WARNING: rejected rule (InterfaceMethodModifier -> Annotation) in state 921
WARNING: reduce/reduce conflict in state 921 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ConstantModifier -> Annotation) in state 921
WARNING: reduce/reduce conflict in state 921 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (InterfaceMethodModifier -> Annotation) in state 921
WARNING: reduce/reduce conflict in state 922 resolved using rule (ConstantModifier -> PUBLIC)
WARNING: rejected rule (InterfaceMethodModifier -> PUBLIC) in state 922
WARNING: reduce/reduce conflict in state 922 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ConstantModifier -> PUBLIC) in state 922
WARNING: reduce/reduce conflict in state 922 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (InterfaceMethodModifier -> PUBLIC) in state 922
WARNING: reduce/reduce conflict in state 923 resolved using rule (ConstantModifier -> STATIC)
WARNING: rejected rule (InterfaceMethodModifier -> STATIC) in state 923
WARNING: reduce/reduce conflict in state 923 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ConstantModifier -> STATIC) in state 923
WARNING: reduce/reduce conflict in state 923 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (InterfaceMethodModifier -> STATIC) in state 923
WARNING: reduce/reduce conflict in state 924 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (InterfaceMethodModifier -> ABSTRACT) in state 924
WARNING: reduce/reduce conflict in state 926 resolved using rule (InterfaceModifier -> STRICTFP)
WARNING: rejected rule (InterfaceMethodModifier -> STRICTFP) in state 926
WARNING: reduce/reduce conflict in state 959 resolved using rule (MultiplicativeExpression -> IDENT)
WARNING: rejected rule (ReferenceType -> IDENT) in state 959
WARNING: reduce/reduce conflict in state 959 resolved using rule (empty -> <empty>)
WARNING: rejected rule (MultiplicativeExpression -> IDENT) in state 959
WARNING: reduce/reduce conflict in state 978 resolved using rule (empty -> <empty>)
WARNING: rejected rule (TypeBound -> EXTENDS TypeVariable) in state 978
WARNING: reduce/reduce conflict in state 979 resolved using rule (empty -> <empty>)
WARNING: rejected rule (TypeBound -> EXTENDS IDENT) in state 979
WARNING: reduce/reduce conflict in state 1020 resolved using rule (ZooTypeArguments -> empty)
WARNING: rejected rule (ZooExplicitConstructorInvocation -> empty) in state 1020
WARNING: reduce/reduce conflict in state 1141 resolved using rule (UnannClassOrInterfaceType -> UnannClassType)
WARNING: rejected rule (UnannInterfaceType -> UnannClassType) in state 1141
WARNING: Rule (ReferenceType -> TypeVariable) is never reduced
WARNING: Rule (ReferenceType -> IDENT) is never reduced
WARNING: Rule (UnannInterfaceType -> UnannClassType) is never reduced
WARNING: Rule (Result -> IDENT) is never reduced
WARNING: Rule (ExceptionType -> TypeVariable) is never reduced
WARNING: Rule (ExceptionType -> IDENT) is never reduced
WARNING: Rule (TypeBound -> EXTENDS TypeVariable) is never reduced
WARNING: Rule (TypeBound -> EXTENDS IDENT) is never reduced
