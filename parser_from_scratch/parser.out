Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CONST
    GOTO
    UNCLOSED_CHAR
    UNCLOSED_STR

Grammar

Rule 0     S' -> start
Rule 1     empty -> <empty>
Rule 2     Literal -> BOOL_LIT
Rule 3     Literal -> NULL_LIT
Rule 4     Literal -> DECIMAL_LIT
Rule 5     Literal -> HEX_LIT
Rule 6     Literal -> OCTAL_LIT
Rule 7     Literal -> BINARY_LIT
Rule 8     Literal -> FLOAT_DEC_LIT
Rule 9     Literal -> FLOAT_HEX_LIT
Rule 10    Literal -> STRING_LIT
Rule 11    Literal -> CHAR_LIT
Rule 12    InterfaceDeclaration -> NormalInterfaceDeclaration
Rule 13    InterfaceDeclaration -> AnnotationTypeDeclaration
Rule 14    NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
Rule 15    ZooTypeParameters -> TypeParameters
Rule 16    ZooTypeParameters -> empty
Rule 17    ZooExtendsInterfaces -> ExtendsInterfaces
Rule 18    ZooExtendsInterfaces -> empty
Rule 19    InterfaceModifierS -> InterfaceModifier InterfaceModifierS
Rule 20    InterfaceModifierS -> empty
Rule 21    InterfaceModifier -> Annotation
Rule 22    InterfaceModifier -> PUBLIC
Rule 23    InterfaceModifier -> PROTECTED
Rule 24    InterfaceModifier -> PRIVATE
Rule 25    InterfaceModifier -> ABSTRACT
Rule 26    InterfaceModifier -> STATIC
Rule 27    InterfaceModifier -> STRICTFP
Rule 28    ExtendsInterfaces -> EXTENDS InterfaceTypeList
Rule 29    InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE
Rule 30    InterfaceMemberDeclarationS -> InterfaceMemberDeclaration InterfaceMemberDeclarationS
Rule 31    InterfaceMemberDeclarationS -> empty
Rule 32    InterfaceMemberDeclaration -> ConstantDeclaration
Rule 33    InterfaceMemberDeclaration -> InterfaceMethodDeclaration
Rule 34    InterfaceMemberDeclaration -> ClassDeclaration
Rule 35    InterfaceMemberDeclaration -> InterfaceDeclaration
Rule 36    InterfaceMemberDeclaration -> SEMICOLON
Rule 37    ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
Rule 38    ConstantModifierS -> ConstantModifier ConstantModifierS
Rule 39    ConstantModifierS -> empty
Rule 40    ConstantModifier -> Annotation
Rule 41    ConstantModifier -> PUBLIC
Rule 42    ConstantModifier -> STATIC
Rule 43    ConstantModifier -> FINAL
Rule 44    InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody
Rule 45    InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS
Rule 46    InterfaceMethodModifierS -> empty
Rule 47    InterfaceMethodModifier -> Annotation
Rule 48    InterfaceMethodModifier -> PUBLIC
Rule 49    InterfaceMethodModifier -> ABSTRACT
Rule 50    InterfaceMethodModifier -> DEFAULT
Rule 51    InterfaceMethodModifier -> STATIC
Rule 52    InterfaceMethodModifier -> STRICTFP
Rule 53    AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
Rule 54    AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE
Rule 55    AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS
Rule 56    AnnotationTypeMemberDeclarationS -> empty
Rule 57    AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration
Rule 58    AnnotationTypeMemberDeclaration -> ConstantDeclaration
Rule 59    AnnotationTypeMemberDeclaration -> ClassDeclaration
Rule 60    AnnotationTypeMemberDeclaration -> InterfaceDeclaration
Rule 61    AnnotationTypeMemberDeclaration -> SEMICOLON
Rule 62    AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
Rule 63    ZooDims -> Dims
Rule 64    ZooDims -> empty
Rule 65    ZooDefaultValue -> DefaultValue
Rule 66    ZooDefaultValue -> empty
Rule 67    AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS
Rule 68    AnnotationTypeElementModifierS -> empty
Rule 69    AnnotationTypeElementModifier -> Annotation
Rule 70    AnnotationTypeElementModifier -> PUBLIC
Rule 71    AnnotationTypeElementModifier -> ABSTRACT
Rule 72    DefaultValue -> DEFAULT ElementValue
Rule 73    Annotation -> NormalAnnotation
Rule 74    Annotation -> MarkerAnnotation
Rule 75    Annotation -> SingleElementAnnotation
Rule 76    NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
Rule 77    ZooElementValuePairList -> ElementValuePairList
Rule 78    ZooElementValuePairList -> empty
Rule 79    ElementValuePairList -> ElementValuePair COMMAElementValuePairS
Rule 80    COMMAElementValuePairS -> COMMA ElementValuePair COMMAElementValuePairS
Rule 81    COMMAElementValuePairS -> empty
Rule 82    ElementValuePair -> IDENT ASSIGN ElementValue
Rule 83    ElementValue -> ConditionalExpression
Rule 84    ElementValue -> ElementValueArrayInitializer
Rule 85    ElementValue -> Annotation
Rule 86    ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE
Rule 87    ZooElementValueList -> ElementValueList
Rule 88    ZooElementValueList -> empty
Rule 89    ElementValueList -> ElementValue COMMAElementValueS
Rule 90    COMMAElementValueS -> COMMA ElementValue COMMAElementValueS
Rule 91    COMMAElementValueS -> empty
Rule 92    MarkerAnnotation -> ATRATE TypeName
Rule 93    SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN
Rule 94    ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
Rule 95    ZooVariableInitializerList -> VariableInitializerList
Rule 96    ZooVariableInitializerList -> empty
Rule 97    VariableInitializerList -> VariableInitializer COMMAVariableInitializerS
Rule 98    COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS
Rule 99    COMMAVariableInitializerS -> empty
Rule 100   Primary -> PrimaryNoNewArray
Rule 101   Primary -> ArrayCreationExpression
Rule 102   PrimaryNoNewArray -> Literal
Rule 103   PrimaryNoNewArray -> ClassLiteral
Rule 104   PrimaryNoNewArray -> THIS
Rule 105   PrimaryNoNewArray -> TypeName PERIOD THIS
Rule 106   PrimaryNoNewArray -> LPAREN Expression RPAREN
Rule 107   PrimaryNoNewArray -> ClassInstanceCreationExpression
Rule 108   PrimaryNoNewArray -> FieldAccess
Rule 109   PrimaryNoNewArray -> ArrayAccess
Rule 110   PrimaryNoNewArray -> MethodInvocation
Rule 111   PrimaryNoNewArray -> MethodReference
Rule 112   ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS
Rule 113   ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS
Rule 114   ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS
Rule 115   ClassLiteral -> VOID PERIOD CLASS
Rule 116   LBRACKRBRACKS -> LBRACK RBRACK LBRACKRBRACKS
Rule 117   LBRACKRBRACKS -> empty
Rule 118   ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression
Rule 119   ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
Rule 120   ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression
Rule 121   UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
Rule 122   ZooTypeArguments -> TypeArguments
Rule 123   ZooTypeArguments -> empty
Rule 124   ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
Rule 125   AnnotationS -> Annotation AnnotationS
Rule 126   AnnotationS -> empty
Rule 127   ZooTypeArgumentsOrDiamond -> TypeArgumentsOrDiamond
Rule 128   ZooTypeArgumentsOrDiamond -> empty
Rule 129   PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
Rule 130   PERIODAnnotationSIDENTS -> empty
Rule 131   TypeArgumentsOrDiamond -> TypeArguments
Rule 132   TypeArgumentsOrDiamond -> LSS GTR
Rule 133   FieldAccess -> Primary PERIOD IDENT
Rule 134   FieldAccess -> SUPER PERIOD IDENT
Rule 135   FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT
Rule 136   ArrayAccess -> ExpressionName LBRACK Expression RBRACK
Rule 137   ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK
Rule 138   MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN
Rule 139   MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 140   MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 141   MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 142   MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 143   MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
Rule 144   ArgumentList -> Expression COMMAExpressionS
Rule 145   COMMAExpressionS -> COMMA Expression COMMAExpressionS
Rule 146   COMMAExpressionS -> empty
Rule 147   MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT
Rule 148   MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT
Rule 149   MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT
Rule 150   MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT
Rule 151   MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
Rule 152   MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW
Rule 153   MethodReference -> ArrayType COLON_SEP NEW
Rule 154   ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims
Rule 155   ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims
Rule 156   ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer
Rule 157   ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer
Rule 158   DimExprs -> DimExpr DimExprS
Rule 159   DimExprS -> DimExpr DimExprS
Rule 160   DimExprS -> empty
Rule 161   DimExpr -> AnnotationS LBRACK Expression RBRACK
Rule 162   Expression -> LambdaExpression
Rule 163   Expression -> AssignmentExpression
Rule 164   LambdaExpression -> LambdaParameters ARROW LambdaBody
Rule 165   LambdaParameters -> IDENT
Rule 166   LambdaParameters -> LPAREN ZooFormalParameterList RPAREN
Rule 167   LambdaParameters -> LPAREN InferredFormalParameterList RPAREN
Rule 168   InferredFormalParameterList -> IDENT COMMAIDENTS
Rule 169   COMMAIDENTS -> COMMA IDENT COMMAIDENTS
Rule 170   COMMAIDENTS -> empty
Rule 171   LambdaBody -> Expression
Rule 172   LambdaBody -> Block
Rule 173   AssignmentExpression -> ConditionalExpression
Rule 174   AssignmentExpression -> Assignment
Rule 175   Assignment -> LeftHandSide AssignmentOperator Expression
Rule 176   LeftHandSide -> ExpressionName
Rule 177   LeftHandSide -> FieldAccess
Rule 178   LeftHandSide -> ArrayAccess
Rule 179   AssignmentOperator -> ASSIGN
Rule 180   AssignmentOperator -> MUL_ASSIGN
Rule 181   AssignmentOperator -> QUO_ASSIGN
Rule 182   AssignmentOperator -> REM_ASSIGN
Rule 183   AssignmentOperator -> ADD_ASSIGN
Rule 184   AssignmentOperator -> SUB_ASSIGN
Rule 185   AssignmentOperator -> SHL_ASSIGN
Rule 186   AssignmentOperator -> SHR_ASSIGN
Rule 187   AssignmentOperator -> SHR_UN_ASSIGN
Rule 188   AssignmentOperator -> AND_ASSIGN
Rule 189   AssignmentOperator -> XOR_ASSIGN
Rule 190   AssignmentOperator -> OR_ASSIGN
Rule 191   ConditionalExpression -> ConditionalOrExpression
Rule 192   ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression
Rule 193   ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression
Rule 194   ConditionalOrExpression -> ConditionalAndExpression
Rule 195   ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression
Rule 196   ConditionalAndExpression -> InclusiveOrExpression
Rule 197   ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression
Rule 198   InclusiveOrExpression -> ExclusiveOrExpression
Rule 199   InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression
Rule 200   ExclusiveOrExpression -> AndExpression
Rule 201   ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression
Rule 202   AndExpression -> EqualityExpression
Rule 203   AndExpression -> AndExpression AND EqualityExpression
Rule 204   EqualityExpression -> RelationalExpression
Rule 205   EqualityExpression -> EqualityExpression EQL RelationalExpression
Rule 206   EqualityExpression -> EqualityExpression NEQ RelationalExpression
Rule 207   RelationalExpression -> ShiftExpression
Rule 208   RelationalExpression -> RelationalExpression LSS ShiftExpression
Rule 209   RelationalExpression -> RelationalExpression GTR ShiftExpression
Rule 210   RelationalExpression -> RelationalExpression LEQ ShiftExpression
Rule 211   RelationalExpression -> RelationalExpression GEQ ShiftExpression
Rule 212   RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType
Rule 213   ShiftExpression -> AdditiveExpression
Rule 214   ShiftExpression -> ShiftExpression SHL AdditiveExpression
Rule 215   ShiftExpression -> ShiftExpression SHR AdditiveExpression
Rule 216   ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression
Rule 217   AdditiveExpression -> MultiplicativeExpression
Rule 218   AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression
Rule 219   AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression
Rule 220   MultiplicativeExpression -> UnaryExpression
Rule 221   MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression
Rule 222   MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression
Rule 223   MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression
Rule 224   UnaryExpression -> PreIncrementExpression
Rule 225   UnaryExpression -> PreDecrementExpression
Rule 226   UnaryExpression -> ADD UnaryExpression
Rule 227   UnaryExpression -> SUB UnaryExpression
Rule 228   UnaryExpression -> UnaryExpressionNotPlusMinus
Rule 229   PreIncrementExpression -> INC UnaryExpression
Rule 230   PreDecrementExpression -> DEC UnaryExpression
Rule 231   UnaryExpressionNotPlusMinus -> PostfixExpression
Rule 232   UnaryExpressionNotPlusMinus -> LNOT UnaryExpression
Rule 233   UnaryExpressionNotPlusMinus -> NOT UnaryExpression
Rule 234   UnaryExpressionNotPlusMinus -> CastExpression
Rule 235   PostfixExpression -> Primary
Rule 236   PostfixExpression -> ExpressionName
Rule 237   PostfixExpression -> PostIncrementExpression
Rule 238   PostfixExpression -> PostDecrementExpression
Rule 239   PostIncrementExpression -> PostfixExpression INC
Rule 240   PostDecrementExpression -> PostfixExpression DEC
Rule 241   CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression
Rule 242   CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
Rule 243   CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
Rule 244   AdditionalBoundS -> AdditionalBound AdditionalBoundS
Rule 245   AdditionalBoundS -> empty
Rule 246   ConstantExpression -> Expression
Rule 247   CompilationUnit -> ZooPackageDeclaration ImportDeclarationS TypeDeclarationS
Rule 248   ZooPackageDeclaration -> PackageDeclaration
Rule 249   ZooPackageDeclaration -> empty
Rule 250   ImportDeclarationS -> ImportDeclaration ImportDeclarationS
Rule 251   ImportDeclarationS -> empty
Rule 252   TypeDeclarationS -> TypeDeclaration TypeDeclarationS
Rule 253   TypeDeclarationS -> empty
Rule 254   PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON
Rule 255   PackageModifierS -> PackageModifier PackageModifierS
Rule 256   PackageModifierS -> empty
Rule 257   PERIODIDENTS -> PERIOD IDENT PERIODIDENTS
Rule 258   PERIODIDENTS -> empty
Rule 259   PackageModifier -> Annotation
Rule 260   ImportDeclaration -> SingleTypeImportDeclaration
Rule 261   ImportDeclaration -> TypeImportOnDemandDeclaration
Rule 262   ImportDeclaration -> SingleStaticImportDeclaration
Rule 263   ImportDeclaration -> StaticImportOnDemandDeclaration
Rule 264   SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON
Rule 265   TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON
Rule 266   SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON
Rule 267   StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON
Rule 268   TypeDeclaration -> ClassDeclaration
Rule 269   TypeDeclaration -> InterfaceDeclaration
Rule 270   TypeDeclaration -> SEMICOLON
Rule 271   TypeName -> IDENT
Rule 272   TypeName -> PackageOrTypeName PERIOD IDENT
Rule 273   PackageOrTypeName -> IDENT
Rule 274   PackageOrTypeName -> PackageOrTypeName PERIOD IDENT
Rule 275   ExpressionName -> IDENT
Rule 276   ExpressionName -> AmbiguousName PERIOD IDENT
Rule 277   MethodName -> IDENT
Rule 278   PackageName -> IDENT
Rule 279   PackageName -> PackageName PERIOD IDENT
Rule 280   AmbiguousName -> IDENT
Rule 281   AmbiguousName -> AmbiguousName PERIOD IDENT
Rule 282   ClassDeclaration -> NormalClassDeclaration
Rule 283   ClassDeclaration -> EnumDeclaration
Rule 284   SuperClass -> EXTENDS ClassType
Rule 285   ZooSuperClass -> SuperClass
Rule 286   ZooSuperClass -> empty
Rule 287   ZooSuperinterfaces -> Superinterfaces
Rule 288   ZooSuperinterfaces -> empty
Rule 289   NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters
Rule 290   NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody
Rule 291   ClassModifier -> Annotation
Rule 292   ClassModifier -> PUBLIC
Rule 293   ClassModifier -> PROTECTED
Rule 294   ClassModifier -> PRIVATE
Rule 295   ClassModifier -> ABSTRACT
Rule 296   ClassModifier -> STATIC
Rule 297   ClassModifier -> FINAL
Rule 298   ClassModifier -> STRICTFP
Rule 299   TypeParameters -> LSS TypeParameterList GTR
Rule 300   COMMMATypeParameterS -> COMMA TypeParameter COMMMATypeParameterS
Rule 301   COMMMATypeParameterS -> empty
Rule 302   TypeParameterList -> TypeParameter COMMMATypeParameterS
Rule 303   Superclass -> EXTENDS ClassType
Rule 304   Superinterfaces -> IMPLEMENTS InterfaceTypeList
Rule 305   COMMAInterfaceTypeS -> COMMA InterfaceType COMMAInterfaceTypeS
Rule 306   COMMAInterfaceTypeS -> empty
Rule 307   InterfaceTypeList -> InterfaceType COMMAInterfaceTypeS
Rule 308   ClassBodyDeclarationS -> ClassBodyDeclaration ClassBodyDeclarationS
Rule 309   ClassBodyDeclarationS -> empty
Rule 310   ClassBody -> LBRACE ClassBodyDeclarationS RBRACE
Rule 311   ClassBodyDeclaration -> ClassMemberDeclaration
Rule 312   ClassBodyDeclaration -> InstanceInitializer
Rule 313   ClassBodyDeclaration -> StaticInitializer
Rule 314   ClassBodyDeclaration -> ConstructorDeclaration
Rule 315   ClassMemberDeclaration -> FieldDeclaration
Rule 316   ClassMemberDeclaration -> MethodDeclaration
Rule 317   ClassMemberDeclaration -> ClassDeclaration
Rule 318   ClassMemberDeclaration -> InterfaceDeclaration
Rule 319   ClassMemberDeclaration -> SEMICOLON
Rule 320   FieldModifierS -> FieldModifier FieldModifierS
Rule 321   FieldModifierS -> empty
Rule 322   FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON
Rule 323   FieldModifier -> Annotation
Rule 324   FieldModifier -> PUBLIC
Rule 325   FieldModifier -> PROTECTED
Rule 326   FieldModifier -> PRIVATE
Rule 327   FieldModifier -> STATIC
Rule 328   FieldModifier -> FINAL
Rule 329   FieldModifier -> TRANSIENT
Rule 330   FieldModifier -> VOLATILE
Rule 331   COMMAVariableDeclaratorS -> COMMA VariableDeclarator COMMAVariableDeclaratorS
Rule 332   COMMAVariableDeclaratorS -> empty
Rule 333   VariableDeclaratorList -> VariableDeclarator COMMAVariableDeclaratorS
Rule 334   ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer
Rule 335   ZooASSIGNVariableInitializer -> empty
Rule 336   VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer
Rule 337   VariableDeclaratorId -> IDENT ZooDims
Rule 338   VariableInitializer -> Expression
Rule 339   VariableInitializer -> ArrayInitializer
Rule 340   UnannType -> UnannPrimitiveType
Rule 341   UnannType -> UnannReferenceType
Rule 342   UnannPrimitiveType -> NumericType
Rule 343   UnannPrimitiveType -> BOOLEAN
Rule 344   UnannReferenceType -> UnannClassOrInterfaceType
Rule 345   UnannReferenceType -> UnannTypeVariable
Rule 346   UnannReferenceType -> UnannArrayType
Rule 347   UnannClassOrInterfaceType -> UnannClassType
Rule 348   UnannClassOrInterfaceType -> UnannInterfaceType
Rule 349   UnannClassType -> IDENT ZooTypeArguments
Rule 350   UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
Rule 351   UnannInterfaceType -> UnannClassType
Rule 352   UnannTypeVariable -> IDENT
Rule 353   UnannArrayType -> UnannPrimitiveType Dims
Rule 354   UnannArrayType -> UnannClassOrInterfaceType Dims
Rule 355   UnannArrayType -> UnannTypeVariable Dims
Rule 356   MethodModifierS -> MethodModifier MethodModifierS
Rule 357   MethodModifierS -> empty
Rule 358   MethodDeclaration -> MethodModifierS MethodHeader MethodBody
Rule 359   MethodModifier -> Annotation
Rule 360   MethodModifier -> PUBLIC
Rule 361   MethodModifier -> PROTECTED
Rule 362   MethodModifier -> PRIVATE
Rule 363   MethodModifier -> ABSTRACT
Rule 364   MethodModifier -> STATIC
Rule 365   MethodModifier -> FINAL
Rule 366   MethodModifier -> SYNCHRONIZED
Rule 367   MethodModifier -> NATIVE
Rule 368   MethodModifier -> STRICTFP
Rule 369   ZooThrows -> Throws
Rule 370   ZooThrows -> empty
Rule 371   MethodHeader -> Result MethodDeclarator ZooThrows
Rule 372   MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows
Rule 373   Result -> UnannType
Rule 374   Result -> VOID
Rule 375   ZooFormalParameterList -> FormalParameterList
Rule 376   ZooFormalParameterList -> empty
Rule 377   MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims
Rule 378   FormalParameterList -> ReceiverParameter
Rule 379   FormalParameterList -> FormalParameters COMMA LastFormalParameter
Rule 380   FormalParameterList -> LastFormalParameter
Rule 381   COMMAFormalParameterS -> COMMA FormalParameter COMMAFormalParameterS
Rule 382   COMMAFormalParameterS -> empty
Rule 383   FormalParameters -> FormalParameter COMMAFormalParameterS
Rule 384   FormalParameters -> ReceiverParameter COMMAFormalParameterS
Rule 385   ZooVariableModifier -> VariableModifier
Rule 386   ZooVariableModifier -> empty
Rule 387   FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId
Rule 388   VariableModifier -> Annotation
Rule 389   VariableModifier -> FINAL
Rule 390   LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
Rule 391   LastFormalParameter -> FormalParameter
Rule 392   ZooIDENTPERIOD -> IDENT PERIOD
Rule 393   ZooIDENTPERIOD -> empty
Rule 394   ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS
Rule 395   Throws -> THROWS ExceptionTypeList
Rule 396   COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS
Rule 397   COMMAExceptionTypeS -> empty
Rule 398   ExceptionTypeList -> ExceptionType COMMAExceptionTypeS
Rule 399   ExceptionType -> ClassType
Rule 400   ExceptionType -> TypeVariable
Rule 401   MethodBody -> Block
Rule 402   MethodBody -> SEMICOLON
Rule 403   InstanceInitializer -> Block
Rule 404   StaticInitializer -> STATIC Block
Rule 405   ConstructorModifierS -> ConstructorModifier ConstructorModifierS
Rule 406   ConstructorModifierS -> empty
Rule 407   ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
Rule 408   ConstructorModifier -> Annotation
Rule 409   ConstructorModifier -> PUBLIC
Rule 410   ConstructorModifier -> PROTECTED
Rule 411   ConstructorModifier -> PRIVATE
Rule 412   ConstructorDeclarator -> ZooTypeParameters SimpleTypeName LPAREN ZooFormalParameterList RPAREN
Rule 413   SimpleTypeName -> IDENT
Rule 414   ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE
Rule 415   ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation
Rule 416   ZooExplicitConstructorInvocation -> empty
Rule 417   ZooArgumentList -> ArgumentList
Rule 418   ZooArgumentList -> empty
Rule 419   ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 420   ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 421   ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 422   ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
Rule 423   ClassModifierS -> ClassModifier ClassModifierS
Rule 424   ClassModifierS -> empty
Rule 425   EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
Rule 426   ZooEnumConstantList -> EnumConstantList
Rule 427   ZooEnumConstantList -> empty
Rule 428   ZooCOMMA -> COMMA
Rule 429   ZooCOMMA -> empty
Rule 430   ZooEnumBodyDeclarations -> EnumBodyDeclarations
Rule 431   ZooEnumBodyDeclarations -> empty
Rule 432   EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE
Rule 433   COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS
Rule 434   COMMAEnumConstantS -> empty
Rule 435   EnumConstantList -> EnumConstant COMMAEnumConstantS
Rule 436   EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody
Rule 437   EnumConstantModifierS -> EnumConstantModifier EnumConstantModifierS
Rule 438   EnumConstantModifierS -> empty
Rule 439   ZooClassBody -> ClassBody
Rule 440   ZooClassBody -> empty
Rule 441   ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN
Rule 442   ZooLPARENZooArgumentListRPAREN -> empty
Rule 443   EnumConstantModifier -> Annotation
Rule 444   EnumBodyDeclarations -> SEMICOLON ClassBodyDeclarationS
Rule 445   Type -> PrimitiveType
Rule 446   Type -> ReferenceType
Rule 447   PrimitiveType -> AnnotationS NumericType
Rule 448   PrimitiveType -> AnnotationS BOOLEAN
Rule 449   NumericType -> IntegralType
Rule 450   NumericType -> FloatingPointType
Rule 451   IntegralType -> BYTE
Rule 452   IntegralType -> SHORT
Rule 453   IntegralType -> INT
Rule 454   IntegralType -> LONG
Rule 455   IntegralType -> CHAR
Rule 456   FloatingPointType -> FLOAT
Rule 457   FloatingPointType -> DOUBLE
Rule 458   ReferenceType -> ClassOrInterfaceType
Rule 459   ReferenceType -> TypeVariable
Rule 460   ReferenceType -> ArrayType
Rule 461   ClassOrInterfaceType -> ClassType
Rule 462   ClassOrInterfaceType -> InterfaceType
Rule 463   ClassType -> AnnotationS IDENT ZooTypeArguments
Rule 464   ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
Rule 465   InterfaceType -> ClassType
Rule 466   TypeVariable -> AnnotationS IDENT
Rule 467   ArrayType -> PrimitiveType Dims
Rule 468   ArrayType -> ClassOrInterfaceType Dims
Rule 469   ArrayType -> TypeVariable Dims
Rule 470   Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
Rule 471   AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
Rule 472   AnnotationSLBRACERBRACES -> empty
Rule 473   TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound
Rule 474   TypeParameterModifierS -> TypeParameterModifier TypeParameterModifierS
Rule 475   TypeParameterModifierS -> empty
Rule 476   ZooTypeBound -> TypeBound
Rule 477   ZooTypeBound -> empty
Rule 478   TypeParameterModifier -> Annotation
Rule 479   TypeBound -> EXTENDS TypeVariable
Rule 480   TypeBound -> EXTENDS ClassOrInterfaceType AdditionalBoundS
Rule 481   AdditionalBound -> AND InterfaceType
Rule 482   TypeArguments -> LSS TypeArgumentList GTR
Rule 483   TypeArgumentList -> TypeArgument COMMATypeArgumentS
Rule 484   COMMATypeArgumentS -> COMMA TypeArgument COMMATypeArgumentS
Rule 485   COMMATypeArgumentS -> empty
Rule 486   TypeArgument -> ReferenceType
Rule 487   TypeArgument -> Wildcard
Rule 488   Wildcard -> AnnotationS QUES ZooWildcardBounds
Rule 489   ZooWildcardBounds -> WildcardBounds
Rule 490   ZooWildcardBounds -> empty
Rule 491   WildcardBounds -> EXTENDS ReferenceType
Rule 492   WildcardBounds -> SUPER ReferenceType
Rule 493   Block -> LBRACE ZooBlockStatements RBRACE
Rule 494   ZooBlockStatements -> BlockStatements
Rule 495   ZooBlockStatements -> empty
Rule 496   BlockStatements -> BlockStatement BlockStatementS
Rule 497   BlockStatementS -> BlockStatement BlockStatementS
Rule 498   BlockStatementS -> empty
Rule 499   BlockStatement -> LocalVariableDeclarationStatement
Rule 500   BlockStatement -> ClassDeclaration
Rule 501   BlockStatement -> Statement
Rule 502   LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON
Rule 503   LocalVariableDeclaration -> VariableModifierS UnannType VariableDeclaratorList
Rule 504   VariableModifierS -> VariableModifier VariableModifierS
Rule 505   VariableModifierS -> empty
Rule 506   Statement -> StatementWithoutTrailingSubstatement
Rule 507   Statement -> LabeledStatement
Rule 508   Statement -> IfThenStatement
Rule 509   Statement -> IfThenElseStatement
Rule 510   Statement -> WhileStatement
Rule 511   Statement -> ForStatement
Rule 512   StatementNoShortIf -> StatementWithoutTrailingSubstatement
Rule 513   StatementNoShortIf -> LabeledStatementNoShortIf
Rule 514   StatementNoShortIf -> IfThenElseStatementNoShortIf
Rule 515   StatementNoShortIf -> WhileStatementNoShortIf
Rule 516   StatementNoShortIf -> ForStatementNoShortIf
Rule 517   StatementWithoutTrailingSubstatement -> Block
Rule 518   StatementWithoutTrailingSubstatement -> EmptyStatement
Rule 519   StatementWithoutTrailingSubstatement -> ExpressionStatement
Rule 520   StatementWithoutTrailingSubstatement -> AssertStatement
Rule 521   StatementWithoutTrailingSubstatement -> SwitchStatement
Rule 522   StatementWithoutTrailingSubstatement -> DoStatement
Rule 523   StatementWithoutTrailingSubstatement -> BreakStatement
Rule 524   StatementWithoutTrailingSubstatement -> ContinueStatement
Rule 525   StatementWithoutTrailingSubstatement -> ReturnStatement
Rule 526   StatementWithoutTrailingSubstatement -> SynchronizedStatement
Rule 527   StatementWithoutTrailingSubstatement -> ThrowStatement
Rule 528   StatementWithoutTrailingSubstatement -> TryStatement
Rule 529   EmptyStatement -> SEMICOLON
Rule 530   LabeledStatement -> IDENT COLON Statement
Rule 531   LabeledStatementNoShortIf -> IDENT COLON StatementNoShortIf
Rule 532   ExpressionStatement -> StatementExpression SEMICOLON
Rule 533   StatementExpression -> Assignment
Rule 534   StatementExpression -> PreIncrementExpression
Rule 535   StatementExpression -> PreDecrementExpression
Rule 536   StatementExpression -> PostIncrementExpression
Rule 537   StatementExpression -> PostDecrementExpression
Rule 538   StatementExpression -> MethodInvocation
Rule 539   StatementExpression -> ClassInstanceCreationExpression
Rule 540   IfThenStatement -> IF LPAREN Expression RPAREN Statement
Rule 541   IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
Rule 542   IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
Rule 543   AssertStatement -> ASSERT Expression SEMICOLON
Rule 544   AssertStatement -> ASSERT Expression COLON Expression SEMICOLON
Rule 545   SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock
Rule 546   SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE
Rule 547   SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS
Rule 548   SwitchBlockStatementGroupS -> empty
Rule 549   SwitchBlockStatementGroup -> SwitchLabels BlockStatements
Rule 550   SwitchLabels -> SwitchLabel SwitchLabelS
Rule 551   SwitchLabelS -> SwitchLabel SwitchLabelS
Rule 552   SwitchLabelS -> empty
Rule 553   SwitchLabel -> CASE ConstantExpression COLON
Rule 554   SwitchLabel -> CASE EnumConstantName COLON
Rule 555   SwitchLabel -> DEFAULT COLON
Rule 556   EnumConstantName -> IDENT
Rule 557   WhileStatement -> WHILE LPAREN Expression RPAREN Statement
Rule 558   WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN StatementNoShortIf
Rule 559   DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
Rule 560   ForStatement -> BasicForStatement
Rule 561   ForStatement -> EnhancedForStatement
Rule 562   ForStatementNoShortIf -> BasicForStatementNoShortIf
Rule 563   ForStatementNoShortIf -> EnhancedForStatementNoShortIf
Rule 564   BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
Rule 565   ZooForUpdate -> ForUpdate
Rule 566   ZooForUpdate -> empty
Rule 567   ZooExpression -> Expression
Rule 568   ZooExpression -> empty
Rule 569   ZooForInit -> ForInit
Rule 570   ZooForInit -> empty
Rule 571   BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
Rule 572   ForInit -> StatementExpressionList
Rule 573   ForInit -> LocalVariableDeclaration
Rule 574   ForUpdate -> StatementExpressionList
Rule 575   StatementExpressionList -> StatementExpression COMMAStatementExpressionS
Rule 576   COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS
Rule 577   COMMAStatementExpressionS -> empty
Rule 578   EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
Rule 579   EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
Rule 580   BreakStatement -> BREAK ZooIDENT SEMICOLON
Rule 581   ZooIDENT -> IDENT
Rule 582   ZooIDENT -> empty
Rule 583   ContinueStatement -> CONTINUE ZooIDENT SEMICOLON
Rule 584   ReturnStatement -> RETURN ZooExpression SEMICOLON
Rule 585   ThrowStatement -> THROW Expression SEMICOLON
Rule 586   SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block
Rule 587   TryStatement -> TRY Block Catches
Rule 588   TryStatement -> TRY Block ZooCatches Finally
Rule 589   TryStatement -> TryWithResourcesStatement
Rule 590   ZooCatches -> Catches
Rule 591   ZooCatches -> empty
Rule 592   Catches -> CatchClause CatchClauseS
Rule 593   CatchClauseS -> CatchClause CatchClauseS
Rule 594   CatchClauseS -> empty
Rule 595   CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block
Rule 596   CatchFormalParameter -> VariableModifierS CatchType VariableDeclaratorId
Rule 597   CatchType -> UnannClassType ORClassTypeS
Rule 598   ORClassTypeS -> OR ClassType ORClassTypeS
Rule 599   ORClassTypeS -> empty
Rule 600   Finally -> FINALLY Block
Rule 601   TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally
Rule 602   ZooFinally -> Finally
Rule 603   ZooFinally -> empty
Rule 604   ZooSEMICOLON -> SEMICOLON
Rule 605   ZooSEMICOLON -> empty
Rule 606   ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON RPAREN
Rule 607   ResourceList -> Resource SEMICOLONResourceS
Rule 608   SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS
Rule 609   SEMICOLONResourceS -> empty
Rule 610   Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression
Rule 611   start -> INC CompilationUnit

Terminals, with rules where they appear

ABSTRACT             : 25 49 71 295 363
ADD                  : 218 226
ADD_ASSIGN           : 183
AND                  : 203 481
AND_ASSIGN           : 188
ARROW                : 164
ASSERT               : 543 544
ASSIGN               : 82 179 334 610
ATRATE               : 53 76 92 93
BINARY_LIT           : 7
BOOLEAN              : 114 343 448
BOOL_LIT             : 2
BREAK                : 580
BYTE                 : 451
CASE                 : 553 554
CATCH                : 595
CHAR                 : 455
CHAR_LIT             : 11
CLASS                : 112 113 114 115 289
COLON                : 192 193 530 531 544 553 554 555 578 579
COLON_SEP            : 147 148 149 150 151 152 153
COMMA                : 80 90 98 145 169 300 305 331 379 381 396 428 433 484 576
COMMENT              : 
CONST                : 
CONTINUE             : 583
DEC                  : 230 240
DECIMAL_LIT          : 4
DEFAULT              : 50 72 555
DO                   : 559
DOUBLE               : 457
ELLIPSIS             : 390
ELSE                 : 541 542
ENUM                 : 425
EQL                  : 205
EXTENDS              : 28 284 303 479 480 491
FINAL                : 43 297 328 365 389
FINALLY              : 600
FLOAT                : 456
FLOAT_DEC_LIT        : 8
FLOAT_HEX_LIT        : 9
FOR                  : 564 571 578 579
GEQ                  : 211
GOTO                 : 
GTR                  : 132 209 299 482
HEX_LIT              : 5
IDENT                : 14 53 62 82 124 129 133 134 135 139 140 141 142 143 147 148 149 150 151 165 168 169 254 257 266 271 272 273 274 275 276 277 278 279 280 281 289 337 349 350 352 377 392 413 425 436 463 464 466 473 530 531 556 581
IF                   : 540 541 542
IMPLEMENTS           : 304
IMPORT               : 264 265 266 267
INC                  : 229 239 611
INSTANCEOF           : 212
INT                  : 453
INTERFACE            : 14 53
LAND                 : 197
LBRACE               : 29 54 86 94 310 414 432 470 471 493 546
LBRACK               : 116 136 137 161
LEQ                  : 210
LNOT                 : 232
LONG                 : 454
LOR                  : 195
LPAREN               : 62 76 93 106 121 138 139 140 141 142 143 166 167 241 242 243 377 412 419 420 421 422 441 540 541 542 545 557 558 559 564 571 578 579 586 595 606
LSS                  : 132 208 299 482
MUL                  : 221 265 267
MUL_ASSIGN           : 180
NATIVE               : 367
NEQ                  : 206
NEW                  : 121 152 153 154 155 156 157
NOT                  : 233
NULL_LIT             : 3
OCTAL_LIT            : 6
OR                   : 199 598
OR_ASSIGN            : 190
PACKAGE              : 254
PERIOD               : 105 112 113 114 115 119 120 129 133 134 135 135 139 140 141 142 143 143 151 257 265 266 267 272 274 276 279 281 350 392 421 422 464
PRIVATE              : 24 294 326 362 411
PROTECTED            : 23 293 325 361 410
PUBLIC               : 22 41 48 70 292 324 360 409
QUES                 : 192 193 488
QUO                  : 222
QUO_ASSIGN           : 181
RBRACE               : 29 54 86 94 310 414 432 470 471 493 546
RBRACK               : 116 136 137 161
REM                  : 223
REM_ASSIGN           : 182
RETURN               : 584
RPAREN               : 62 76 93 106 121 138 139 140 141 142 143 166 167 241 242 243 377 412 419 420 421 422 441 540 541 542 545 557 558 559 564 571 578 579 586 595 606
SEMICOLON            : 36 37 61 62 254 264 265 266 267 270 319 322 402 419 420 421 422 444 502 529 532 543 544 559 564 564 571 571 580 583 584 585 604 608
SHL                  : 214
SHL_ASSIGN           : 185
SHORT                : 452
SHR                  : 215
SHR_ASSIGN           : 186
SHR_UN               : 216
SHR_UN_ASSIGN        : 187
STATIC               : 26 42 51 266 267 296 327 364 404
STRICTFP             : 27 52 298 368
STRING_LIT           : 10
SUB                  : 219 227
SUB_ASSIGN           : 184
SUPER                : 134 135 142 143 150 151 420 421 422 492
SWITCH               : 545
SYNCHRONIZED         : 366 586
THIS                 : 104 105 394 419
THROW                : 585
THROWS               : 395
TRANSIENT            : 329
TRY                  : 587 588 601
UNCLOSED_CHAR        : 
UNCLOSED_STR         : 
VOID                 : 115 374
VOLATILE             : 330
WHILE                : 557 558 559
XOR                  : 201
XOR_ASSIGN           : 189
error                : 

Nonterminals, with rules where they appear

AdditionalBound      : 244
AdditionalBoundS     : 242 243 244 480
AdditiveExpression   : 213 214 215 216 218 219
AmbiguousName        : 276 281
AndExpression        : 200 201 203
Annotation           : 21 40 47 69 85 125 259 291 323 359 388 408 443 478
AnnotationS          : 124 125 129 161 350 372 390 394 447 448 463 464 466 470 471 488
AnnotationSLBRACERBRACES : 470 471
AnnotationTypeBody   : 53
AnnotationTypeDeclaration : 13
AnnotationTypeElementDeclaration : 57
AnnotationTypeElementModifier : 67
AnnotationTypeElementModifierS : 62 67
AnnotationTypeMemberDeclaration : 55
AnnotationTypeMemberDeclarationS : 54 55
ArgumentList         : 417
ArrayAccess          : 109 178
ArrayCreationExpression : 101
ArrayInitializer     : 156 157 339
ArrayType            : 153 460
AssertStatement      : 520
Assignment           : 174 533
AssignmentExpression : 163
AssignmentOperator   : 175
BasicForStatement    : 560
BasicForStatementNoShortIf : 562
Block                : 172 401 403 404 517 586 587 588 595 600 601
BlockStatement       : 496 497
BlockStatementS      : 496 497
BlockStatements      : 494 549
BreakStatement       : 523
COMMAElementValuePairS : 79 80
COMMAElementValueS   : 89 90
COMMAEnumConstantS   : 433 435
COMMAExceptionTypeS  : 396 398
COMMAExpressionS     : 144 145
COMMAFormalParameterS : 381 383 384
COMMAIDENTS          : 168 169
COMMAInterfaceTypeS  : 305 307
COMMAStatementExpressionS : 575 576
COMMATypeArgumentS   : 483 484
COMMAVariableDeclaratorS : 331 333
COMMAVariableInitializerS : 97 98
COMMMATypeParameterS : 300 302
CastExpression       : 234
CatchClause          : 592 593
CatchClauseS         : 592 593
CatchFormalParameter : 595
CatchType            : 596
Catches              : 587 590
ClassBody            : 290 439
ClassBodyDeclaration : 308
ClassBodyDeclarationS : 308 310 444
ClassDeclaration     : 34 59 268 317 500
ClassInstanceCreationExpression : 107 539
ClassLiteral         : 103
ClassMemberDeclaration : 311
ClassModifier        : 423
ClassModifierS       : 289 423 425
ClassOrInterfaceType : 155 157 458 464 468 480
ClassOrInterfaceTypeToInstantiate : 121
ClassType            : 152 284 303 399 461 465 598
CompilationUnit      : 611
ConditionalAndExpression : 194 195 197
ConditionalExpression : 83 173 192
ConditionalOrExpression : 191 192 193 195
ConstantDeclaration  : 32 58
ConstantExpression   : 553
ConstantModifier     : 38
ConstantModifierS    : 37 38
ConstructorBody      : 407
ConstructorDeclaration : 314
ConstructorDeclarator : 407
ConstructorModifier  : 405
ConstructorModifierS : 405 407
ContinueStatement    : 524
DefaultValue         : 65
DimExpr              : 158 159
DimExprS             : 158 159
DimExprs             : 154 155
Dims                 : 63 156 157 353 354 355 467 468 469
DoStatement          : 522
ElementValue         : 72 82 89 90 93
ElementValueArrayInitializer : 84
ElementValueList     : 87
ElementValuePair     : 79 80
ElementValuePairList : 77
EmptyStatement       : 518
EnhancedForStatement : 561
EnhancedForStatementNoShortIf : 563
EnumBody             : 425
EnumBodyDeclarations : 430
EnumConstant         : 433 435
EnumConstantList     : 426
EnumConstantModifier : 437
EnumConstantModifierS : 436 437
EnumConstantName     : 554
EnumDeclaration      : 283
EqualityExpression   : 202 203 205 206
ExceptionType        : 396 398
ExceptionTypeList    : 395
ExclusiveOrExpression : 198 199 201
ExplicitConstructorInvocation : 415
Expression           : 106 136 137 144 145 161 171 175 192 193 246 338 540 541 542 543 544 544 545 557 558 559 567 578 579 585 586 610
ExpressionName       : 119 136 140 147 176 236 421
ExpressionStatement  : 519
ExtendsInterfaces    : 17
FieldAccess          : 108 177
FieldDeclaration     : 315
FieldModifier        : 320
FieldModifierS       : 320 322
Finally              : 588 602
FloatingPointType    : 450
ForInit              : 569
ForStatement         : 511
ForStatementNoShortIf : 516
ForUpdate            : 565
FormalParameter      : 381 383 391
FormalParameterList  : 375
FormalParameters     : 379
IfThenElseStatement  : 509
IfThenElseStatementNoShortIf : 514
IfThenStatement      : 508
ImportDeclaration    : 250
ImportDeclarationS   : 247 250
InclusiveOrExpression : 196 197 199
InferredFormalParameterList : 167
InstanceInitializer  : 312
IntegralType         : 449
InterfaceBody        : 14
InterfaceDeclaration : 35 60 269 318
InterfaceMemberDeclaration : 30
InterfaceMemberDeclarationS : 29 30
InterfaceMethodDeclaration : 33
InterfaceMethodModifier : 45
InterfaceMethodModifierS : 44 45
InterfaceModifier    : 19
InterfaceModifierS   : 14 19 53
InterfaceType        : 305 307 462 481
InterfaceTypeList    : 28 304
LBRACKRBRACKS        : 112 113 114 116
LabeledStatement     : 507
LabeledStatementNoShortIf : 513
LambdaBody           : 164
LambdaExpression     : 162 193 243
LambdaParameters     : 164
LastFormalParameter  : 379 380
LeftHandSide         : 175
Literal              : 102
LocalVariableDeclaration : 502 573
LocalVariableDeclarationStatement : 499
MarkerAnnotation     : 74
MethodBody           : 44 358
MethodDeclaration    : 316
MethodDeclarator     : 371 372
MethodHeader         : 44 358
MethodInvocation     : 110 538
MethodModifier       : 356
MethodModifierS      : 356 358
MethodName           : 138
MethodReference      : 111
MultiplicativeExpression : 217 218 219 221 222 223
NormalAnnotation     : 73
NormalClassDeclaration : 282
NormalInterfaceDeclaration : 12
NumericType          : 113 342 447
ORClassTypeS         : 597 598
PERIODAnnotationSIDENTS : 124 129
PERIODIDENTS         : 254 257
PackageDeclaration   : 248
PackageModifier      : 255
PackageModifierS     : 254 255
PackageName          : 279
PackageOrTypeName    : 265 272 274
PostDecrementExpression : 238 537
PostIncrementExpression : 237 536
PostfixExpression    : 231 239 240
PreDecrementExpression : 225 535
PreIncrementExpression : 224 534
Primary              : 120 133 141 149 235 422
PrimaryNoNewArray    : 100 137
PrimitiveType        : 154 156 241 445 467
ReceiverParameter    : 378 384
ReferenceType        : 148 212 242 243 446 486 491 492
RelationalExpression : 204 205 206 208 209 210 211 212
Resource             : 607 608
ResourceList         : 606
ResourceSpecification : 601
Result               : 371 372
ReturnStatement      : 525
SEMICOLONResourceS   : 607 608
ShiftExpression      : 207 208 209 210 211 214 215 216
SimpleTypeName       : 412
SingleElementAnnotation : 75
SingleStaticImportDeclaration : 262
SingleTypeImportDeclaration : 260
Statement            : 501 530 540 541 557 559 564 578
StatementExpression  : 532 575 576
StatementExpressionList : 572 574
StatementNoShortIf   : 531 541 542 542 558 571 579
StatementWithoutTrailingSubstatement : 506 512
StaticImportOnDemandDeclaration : 263
StaticInitializer    : 313
SuperClass           : 285
Superclass           : 
Superinterfaces      : 287
SwitchBlock          : 545
SwitchBlockStatementGroup : 547
SwitchBlockStatementGroupS : 546 547
SwitchLabel          : 550 551
SwitchLabelS         : 546 550 551
SwitchLabels         : 549
SwitchStatement      : 521
SynchronizedStatement : 526
ThrowStatement       : 527
Throws               : 369
TryStatement         : 528
TryWithResourcesStatement : 589
Type                 : 
TypeArgument         : 483 484
TypeArgumentList     : 482
TypeArguments        : 122 131
TypeArgumentsOrDiamond : 127
TypeBound            : 476
TypeDeclaration      : 252
TypeDeclarationS     : 247 252
TypeImportOnDemandDeclaration : 261
TypeName             : 76 92 93 105 112 135 139 143 151 264 266 267
TypeParameter        : 300 302
TypeParameterList    : 299
TypeParameterModifier : 474
TypeParameterModifierS : 473 474
TypeParameters       : 15 372
TypeVariable         : 400 459 469 479
UnannArrayType       : 346
UnannClassOrInterfaceType : 344 350 354
UnannClassType       : 347 351 597
UnannInterfaceType   : 348
UnannPrimitiveType   : 340 353
UnannReferenceType   : 341
UnannType            : 37 62 322 373 387 390 394 503 578 579 610
UnannTypeVariable    : 345 355
UnaryExpression      : 220 221 222 223 226 227 229 230 232 233 241
UnaryExpressionNotPlusMinus : 228 242
UnqualifiedClassInstanceCreationExpression : 118 119 120
VariableDeclarator   : 331 333
VariableDeclaratorId : 336 387 390 578 579 596 610
VariableDeclaratorList : 37 322 503
VariableInitializer  : 97 98 334
VariableInitializerList : 95
VariableModifier     : 385 504
VariableModifierS    : 390 503 504 578 579 596 610
WhileStatement       : 510
WhileStatementNoShortIf : 515
Wildcard             : 487
WildcardBounds       : 489
ZooASSIGNVariableInitializer : 336
ZooArgumentList      : 121 138 139 140 141 142 143 419 420 421 422 441
ZooBlockStatements   : 414 493
ZooCOMMA             : 86 94 432
ZooCatches           : 588 601
ZooClassBody         : 121 436
ZooDefaultValue      : 62
ZooDims              : 62 154 155 337 377
ZooElementValueList  : 86
ZooElementValuePairList : 76
ZooEnumBodyDeclarations : 432
ZooEnumConstantList  : 432
ZooExplicitConstructorInvocation : 414
ZooExpression        : 564 571 584
ZooExtendsInterfaces : 14
ZooFinally           : 601
ZooForInit           : 564 571
ZooForUpdate         : 564 571
ZooFormalParameterList : 166 377 412
ZooIDENT             : 580 583
ZooIDENTPERIOD       : 394
ZooLPARENZooArgumentListRPAREN : 436
ZooPackageDeclaration : 247
ZooSEMICOLON         : 606
ZooSuperClass        : 290
ZooSuperinterfaces   : 290 425
ZooThrows            : 371 372 407
ZooTypeArguments     : 121 139 140 141 142 143 147 148 149 150 151 152 349 350 419 420 421 422 463 464
ZooTypeArgumentsOrDiamond : 124
ZooTypeBound         : 473
ZooTypeParameters    : 14 289 412
ZooVariableInitializerList : 94
ZooVariableModifier  : 387
ZooWildcardBounds    : 488
empty                : 16 18 20 31 39 46 56 64 66 68 78 81 88 91 96 99 117 123 126 128 130 146 160 170 245 249 251 253 256 258 286 288 301 306 309 321 332 335 357 370 376 382 386 393 397 406 416 418 424 427 429 431 434 438 440 442 472 475 477 485 490 495 498 505 548 552 566 568 570 577 582 591 594 599 603 605 609
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (611) start -> . INC CompilationUnit

    INC             shift and go to state 2

    start                          shift and go to state 1

state 1

    (0) S' -> start .



state 2

    (611) start -> INC . CompilationUnit
    (247) CompilationUnit -> . ZooPackageDeclaration ImportDeclarationS TypeDeclarationS
    (248) ZooPackageDeclaration -> . PackageDeclaration
    (249) ZooPackageDeclaration -> . empty
    (254) PackageDeclaration -> . PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON
    (1) empty -> .
    (255) PackageModifierS -> . PackageModifier PackageModifierS
    (256) PackageModifierS -> . empty
    (259) PackageModifier -> . Annotation
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    IMPORT          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    PACKAGE         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    CompilationUnit                shift and go to state 3
    ZooPackageDeclaration          shift and go to state 4
    PackageDeclaration             shift and go to state 5
    empty                          shift and go to state 6
    PackageModifierS               shift and go to state 7
    PackageModifier                shift and go to state 8
    Annotation                     shift and go to state 9
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 3

    (611) start -> INC CompilationUnit .

    $end            reduce using rule 611 (start -> INC CompilationUnit .)


state 4

    (247) CompilationUnit -> ZooPackageDeclaration . ImportDeclarationS TypeDeclarationS
    (250) ImportDeclarationS -> . ImportDeclaration ImportDeclarationS
    (251) ImportDeclarationS -> . empty
    (260) ImportDeclaration -> . SingleTypeImportDeclaration
    (261) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (262) ImportDeclaration -> . SingleStaticImportDeclaration
    (263) ImportDeclaration -> . StaticImportOnDemandDeclaration
    (1) empty -> .
    (264) SingleTypeImportDeclaration -> . IMPORT TypeName SEMICOLON
    (265) TypeImportOnDemandDeclaration -> . IMPORT PackageOrTypeName PERIOD MUL SEMICOLON
    (266) SingleStaticImportDeclaration -> . IMPORT STATIC TypeName PERIOD IDENT SEMICOLON
    (267) StaticImportOnDemandDeclaration -> . IMPORT STATIC TypeName PERIOD MUL SEMICOLON

    SEMICOLON       reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    IMPORT          shift and go to state 21

    ImportDeclarationS             shift and go to state 14
    ImportDeclaration              shift and go to state 15
    empty                          shift and go to state 16
    SingleTypeImportDeclaration    shift and go to state 17
    TypeImportOnDemandDeclaration  shift and go to state 18
    SingleStaticImportDeclaration  shift and go to state 19
    StaticImportOnDemandDeclaration shift and go to state 20

state 5

    (248) ZooPackageDeclaration -> PackageDeclaration .

    IMPORT          reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    SEMICOLON       reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    PUBLIC          reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    PROTECTED       reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    PRIVATE         reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    ABSTRACT        reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    STATIC          reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    FINAL           reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    STRICTFP        reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    EXTENDS         reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    ATRATE          reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    CLASS           reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    ENUM            reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    IMPLEMENTS      reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    LBRACE          reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    INTERFACE       reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)
    $end            reduce using rule 248 (ZooPackageDeclaration -> PackageDeclaration .)


state 6

    (249) ZooPackageDeclaration -> empty .
    (256) PackageModifierS -> empty .

    IMPORT          reduce using rule 249 (ZooPackageDeclaration -> empty .)
    SEMICOLON       reduce using rule 249 (ZooPackageDeclaration -> empty .)
    PUBLIC          reduce using rule 249 (ZooPackageDeclaration -> empty .)
    PROTECTED       reduce using rule 249 (ZooPackageDeclaration -> empty .)
    PRIVATE         reduce using rule 249 (ZooPackageDeclaration -> empty .)
    ABSTRACT        reduce using rule 249 (ZooPackageDeclaration -> empty .)
    STATIC          reduce using rule 249 (ZooPackageDeclaration -> empty .)
    FINAL           reduce using rule 249 (ZooPackageDeclaration -> empty .)
    STRICTFP        reduce using rule 249 (ZooPackageDeclaration -> empty .)
    EXTENDS         reduce using rule 249 (ZooPackageDeclaration -> empty .)
    ATRATE          reduce using rule 249 (ZooPackageDeclaration -> empty .)
    CLASS           reduce using rule 249 (ZooPackageDeclaration -> empty .)
    ENUM            reduce using rule 249 (ZooPackageDeclaration -> empty .)
    IMPLEMENTS      reduce using rule 249 (ZooPackageDeclaration -> empty .)
    LBRACE          reduce using rule 249 (ZooPackageDeclaration -> empty .)
    INTERFACE       reduce using rule 249 (ZooPackageDeclaration -> empty .)
    $end            reduce using rule 249 (ZooPackageDeclaration -> empty .)
    PACKAGE         reduce using rule 256 (PackageModifierS -> empty .)


state 7

    (254) PackageDeclaration -> PackageModifierS . PACKAGE IDENT PERIODIDENTS SEMICOLON

    PACKAGE         shift and go to state 22


state 8

    (255) PackageModifierS -> PackageModifier . PackageModifierS
    (255) PackageModifierS -> . PackageModifier PackageModifierS
    (256) PackageModifierS -> . empty
    (259) PackageModifier -> . Annotation
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PACKAGE         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    PackageModifier                shift and go to state 8
    PackageModifierS               shift and go to state 23
    empty                          shift and go to state 24
    Annotation                     shift and go to state 9
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 9

    (259) PackageModifier -> Annotation .

    ATRATE          reduce using rule 259 (PackageModifier -> Annotation .)
    PACKAGE         reduce using rule 259 (PackageModifier -> Annotation .)


state 10

    (73) Annotation -> NormalAnnotation .

    ATRATE          reduce using rule 73 (Annotation -> NormalAnnotation .)
    PACKAGE         reduce using rule 73 (Annotation -> NormalAnnotation .)
    PUBLIC          reduce using rule 73 (Annotation -> NormalAnnotation .)
    PROTECTED       reduce using rule 73 (Annotation -> NormalAnnotation .)
    PRIVATE         reduce using rule 73 (Annotation -> NormalAnnotation .)
    ABSTRACT        reduce using rule 73 (Annotation -> NormalAnnotation .)
    STATIC          reduce using rule 73 (Annotation -> NormalAnnotation .)
    FINAL           reduce using rule 73 (Annotation -> NormalAnnotation .)
    STRICTFP        reduce using rule 73 (Annotation -> NormalAnnotation .)
    CLASS           reduce using rule 73 (Annotation -> NormalAnnotation .)
    ENUM            reduce using rule 73 (Annotation -> NormalAnnotation .)
    INTERFACE       reduce using rule 73 (Annotation -> NormalAnnotation .)
    IDENT           reduce using rule 73 (Annotation -> NormalAnnotation .)
    RPAREN          reduce using rule 73 (Annotation -> NormalAnnotation .)
    BOOLEAN         reduce using rule 73 (Annotation -> NormalAnnotation .)
    BYTE            reduce using rule 73 (Annotation -> NormalAnnotation .)
    SHORT           reduce using rule 73 (Annotation -> NormalAnnotation .)
    INT             reduce using rule 73 (Annotation -> NormalAnnotation .)
    LONG            reduce using rule 73 (Annotation -> NormalAnnotation .)
    CHAR            reduce using rule 73 (Annotation -> NormalAnnotation .)
    FLOAT           reduce using rule 73 (Annotation -> NormalAnnotation .)
    DOUBLE          reduce using rule 73 (Annotation -> NormalAnnotation .)
    LBRACE          reduce using rule 73 (Annotation -> NormalAnnotation .)
    LBRACK          reduce using rule 73 (Annotation -> NormalAnnotation .)
    QUES            reduce using rule 73 (Annotation -> NormalAnnotation .)
    VOID            reduce using rule 73 (Annotation -> NormalAnnotation .)
    ELLIPSIS        reduce using rule 73 (Annotation -> NormalAnnotation .)
    COMMA           reduce using rule 73 (Annotation -> NormalAnnotation .)
    RBRACE          reduce using rule 73 (Annotation -> NormalAnnotation .)
    LSS             reduce using rule 73 (Annotation -> NormalAnnotation .)
    TRANSIENT       reduce using rule 73 (Annotation -> NormalAnnotation .)
    VOLATILE        reduce using rule 73 (Annotation -> NormalAnnotation .)
    SYNCHRONIZED    reduce using rule 73 (Annotation -> NormalAnnotation .)
    NATIVE          reduce using rule 73 (Annotation -> NormalAnnotation .)
    DEFAULT         reduce using rule 73 (Annotation -> NormalAnnotation .)
    SEMICOLON       reduce using rule 73 (Annotation -> NormalAnnotation .)


state 11

    (74) Annotation -> MarkerAnnotation .

    ATRATE          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    PACKAGE         reduce using rule 74 (Annotation -> MarkerAnnotation .)
    PUBLIC          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    PROTECTED       reduce using rule 74 (Annotation -> MarkerAnnotation .)
    PRIVATE         reduce using rule 74 (Annotation -> MarkerAnnotation .)
    ABSTRACT        reduce using rule 74 (Annotation -> MarkerAnnotation .)
    STATIC          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    FINAL           reduce using rule 74 (Annotation -> MarkerAnnotation .)
    STRICTFP        reduce using rule 74 (Annotation -> MarkerAnnotation .)
    CLASS           reduce using rule 74 (Annotation -> MarkerAnnotation .)
    ENUM            reduce using rule 74 (Annotation -> MarkerAnnotation .)
    INTERFACE       reduce using rule 74 (Annotation -> MarkerAnnotation .)
    IDENT           reduce using rule 74 (Annotation -> MarkerAnnotation .)
    RPAREN          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    BOOLEAN         reduce using rule 74 (Annotation -> MarkerAnnotation .)
    BYTE            reduce using rule 74 (Annotation -> MarkerAnnotation .)
    SHORT           reduce using rule 74 (Annotation -> MarkerAnnotation .)
    INT             reduce using rule 74 (Annotation -> MarkerAnnotation .)
    LONG            reduce using rule 74 (Annotation -> MarkerAnnotation .)
    CHAR            reduce using rule 74 (Annotation -> MarkerAnnotation .)
    FLOAT           reduce using rule 74 (Annotation -> MarkerAnnotation .)
    DOUBLE          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    LBRACE          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    LBRACK          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    QUES            reduce using rule 74 (Annotation -> MarkerAnnotation .)
    VOID            reduce using rule 74 (Annotation -> MarkerAnnotation .)
    ELLIPSIS        reduce using rule 74 (Annotation -> MarkerAnnotation .)
    COMMA           reduce using rule 74 (Annotation -> MarkerAnnotation .)
    RBRACE          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    LSS             reduce using rule 74 (Annotation -> MarkerAnnotation .)
    TRANSIENT       reduce using rule 74 (Annotation -> MarkerAnnotation .)
    VOLATILE        reduce using rule 74 (Annotation -> MarkerAnnotation .)
    SYNCHRONIZED    reduce using rule 74 (Annotation -> MarkerAnnotation .)
    NATIVE          reduce using rule 74 (Annotation -> MarkerAnnotation .)
    DEFAULT         reduce using rule 74 (Annotation -> MarkerAnnotation .)
    SEMICOLON       reduce using rule 74 (Annotation -> MarkerAnnotation .)


state 12

    (75) Annotation -> SingleElementAnnotation .

    ATRATE          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    PACKAGE         reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    PUBLIC          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    PROTECTED       reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    PRIVATE         reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    ABSTRACT        reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    STATIC          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    FINAL           reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    STRICTFP        reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    CLASS           reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    ENUM            reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    INTERFACE       reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    IDENT           reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    RPAREN          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    BOOLEAN         reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    BYTE            reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    SHORT           reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    INT             reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    LONG            reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    CHAR            reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    FLOAT           reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    DOUBLE          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    LBRACE          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    LBRACK          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    QUES            reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    VOID            reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    ELLIPSIS        reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    COMMA           reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    RBRACE          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    LSS             reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    TRANSIENT       reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    VOLATILE        reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    SYNCHRONIZED    reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    NATIVE          reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    DEFAULT         reduce using rule 75 (Annotation -> SingleElementAnnotation .)
    SEMICOLON       reduce using rule 75 (Annotation -> SingleElementAnnotation .)


state 13

    (76) NormalAnnotation -> ATRATE . TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> ATRATE . TypeName
    (93) SingleElementAnnotation -> ATRATE . TypeName LPAREN ElementValue RPAREN
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT

    IDENT           shift and go to state 26

    TypeName                       shift and go to state 25
    PackageOrTypeName              shift and go to state 27

state 14

    (247) CompilationUnit -> ZooPackageDeclaration ImportDeclarationS . TypeDeclarationS
    (252) TypeDeclarationS -> . TypeDeclaration TypeDeclarationS
    (253) TypeDeclarationS -> . empty
    (268) TypeDeclaration -> . ClassDeclaration
    (269) TypeDeclaration -> . InterfaceDeclaration
    (270) TypeDeclaration -> . SEMICOLON
    (1) empty -> .
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 33
    $end            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 45
    PROTECTED       shift and go to state 46
    PRIVATE         shift and go to state 47
    ABSTRACT        shift and go to state 48
    STATIC          shift and go to state 49
    FINAL           shift and go to state 50
    STRICTFP        shift and go to state 51
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    TypeDeclarationS               shift and go to state 28
    TypeDeclaration                shift and go to state 29
    empty                          shift and go to state 30
    ClassDeclaration               shift and go to state 31
    InterfaceDeclaration           shift and go to state 32
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    Annotation                     shift and go to state 44
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 15

    (250) ImportDeclarationS -> ImportDeclaration . ImportDeclarationS
    (250) ImportDeclarationS -> . ImportDeclaration ImportDeclarationS
    (251) ImportDeclarationS -> . empty
    (260) ImportDeclaration -> . SingleTypeImportDeclaration
    (261) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (262) ImportDeclaration -> . SingleStaticImportDeclaration
    (263) ImportDeclaration -> . StaticImportOnDemandDeclaration
    (1) empty -> .
    (264) SingleTypeImportDeclaration -> . IMPORT TypeName SEMICOLON
    (265) TypeImportOnDemandDeclaration -> . IMPORT PackageOrTypeName PERIOD MUL SEMICOLON
    (266) SingleStaticImportDeclaration -> . IMPORT STATIC TypeName PERIOD IDENT SEMICOLON
    (267) StaticImportOnDemandDeclaration -> . IMPORT STATIC TypeName PERIOD MUL SEMICOLON

    SEMICOLON       reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    IMPORT          shift and go to state 21

    ImportDeclaration              shift and go to state 15
    ImportDeclarationS             shift and go to state 53
    empty                          shift and go to state 16
    SingleTypeImportDeclaration    shift and go to state 17
    TypeImportOnDemandDeclaration  shift and go to state 18
    SingleStaticImportDeclaration  shift and go to state 19
    StaticImportOnDemandDeclaration shift and go to state 20

state 16

    (251) ImportDeclarationS -> empty .

    SEMICOLON       reduce using rule 251 (ImportDeclarationS -> empty .)
    PUBLIC          reduce using rule 251 (ImportDeclarationS -> empty .)
    PROTECTED       reduce using rule 251 (ImportDeclarationS -> empty .)
    PRIVATE         reduce using rule 251 (ImportDeclarationS -> empty .)
    ABSTRACT        reduce using rule 251 (ImportDeclarationS -> empty .)
    STATIC          reduce using rule 251 (ImportDeclarationS -> empty .)
    FINAL           reduce using rule 251 (ImportDeclarationS -> empty .)
    STRICTFP        reduce using rule 251 (ImportDeclarationS -> empty .)
    EXTENDS         reduce using rule 251 (ImportDeclarationS -> empty .)
    ATRATE          reduce using rule 251 (ImportDeclarationS -> empty .)
    CLASS           reduce using rule 251 (ImportDeclarationS -> empty .)
    ENUM            reduce using rule 251 (ImportDeclarationS -> empty .)
    IMPLEMENTS      reduce using rule 251 (ImportDeclarationS -> empty .)
    LBRACE          reduce using rule 251 (ImportDeclarationS -> empty .)
    INTERFACE       reduce using rule 251 (ImportDeclarationS -> empty .)
    $end            reduce using rule 251 (ImportDeclarationS -> empty .)


state 17

    (260) ImportDeclaration -> SingleTypeImportDeclaration .

    IMPORT          reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    SEMICOLON       reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PUBLIC          reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PROTECTED       reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PRIVATE         reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    ABSTRACT        reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    STATIC          reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    FINAL           reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    STRICTFP        reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    EXTENDS         reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    ATRATE          reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    CLASS           reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    ENUM            reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    IMPLEMENTS      reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    LBRACE          reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    INTERFACE       reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)
    $end            reduce using rule 260 (ImportDeclaration -> SingleTypeImportDeclaration .)


state 18

    (261) ImportDeclaration -> TypeImportOnDemandDeclaration .

    IMPORT          reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    SEMICOLON       reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    ABSTRACT        reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    STATIC          reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    FINAL           reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    STRICTFP        reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    EXTENDS         reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    ATRATE          reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    CLASS           reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    ENUM            reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    IMPLEMENTS      reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    LBRACE          reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    INTERFACE       reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    $end            reduce using rule 261 (ImportDeclaration -> TypeImportOnDemandDeclaration .)


state 19

    (262) ImportDeclaration -> SingleStaticImportDeclaration .

    IMPORT          reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    SEMICOLON       reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    PUBLIC          reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    PROTECTED       reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    PRIVATE         reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    ABSTRACT        reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    STATIC          reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    FINAL           reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    STRICTFP        reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    EXTENDS         reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    ATRATE          reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    CLASS           reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    ENUM            reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    IMPLEMENTS      reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    LBRACE          reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    INTERFACE       reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)
    $end            reduce using rule 262 (ImportDeclaration -> SingleStaticImportDeclaration .)


state 20

    (263) ImportDeclaration -> StaticImportOnDemandDeclaration .

    IMPORT          reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    SEMICOLON       reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    ABSTRACT        reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    STATIC          reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    FINAL           reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    STRICTFP        reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    EXTENDS         reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    ATRATE          reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    CLASS           reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    ENUM            reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    IMPLEMENTS      reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    LBRACE          reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    INTERFACE       reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)
    $end            reduce using rule 263 (ImportDeclaration -> StaticImportOnDemandDeclaration .)


state 21

    (264) SingleTypeImportDeclaration -> IMPORT . TypeName SEMICOLON
    (265) TypeImportOnDemandDeclaration -> IMPORT . PackageOrTypeName PERIOD MUL SEMICOLON
    (266) SingleStaticImportDeclaration -> IMPORT . STATIC TypeName PERIOD IDENT SEMICOLON
    (267) StaticImportOnDemandDeclaration -> IMPORT . STATIC TypeName PERIOD MUL SEMICOLON
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT

    STATIC          shift and go to state 56
    IDENT           shift and go to state 26

    TypeName                       shift and go to state 54
    PackageOrTypeName              shift and go to state 55

state 22

    (254) PackageDeclaration -> PackageModifierS PACKAGE . IDENT PERIODIDENTS SEMICOLON

    IDENT           shift and go to state 57


state 23

    (255) PackageModifierS -> PackageModifier PackageModifierS .

    PACKAGE         reduce using rule 255 (PackageModifierS -> PackageModifier PackageModifierS .)


state 24

    (256) PackageModifierS -> empty .

    PACKAGE         reduce using rule 256 (PackageModifierS -> empty .)


state 25

    (76) NormalAnnotation -> ATRATE TypeName . LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> ATRATE TypeName .
    (93) SingleElementAnnotation -> ATRATE TypeName . LPAREN ElementValue RPAREN

    LPAREN          shift and go to state 58
    ATRATE          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    PACKAGE         reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    PUBLIC          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    PROTECTED       reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    PRIVATE         reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    ABSTRACT        reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    STATIC          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    FINAL           reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    STRICTFP        reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    CLASS           reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    ENUM            reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    INTERFACE       reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    IDENT           reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    RPAREN          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    BOOLEAN         reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    BYTE            reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    SHORT           reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    INT             reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    LONG            reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    CHAR            reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    FLOAT           reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    DOUBLE          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    LBRACE          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    LBRACK          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    QUES            reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    VOID            reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    ELLIPSIS        reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    COMMA           reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    RBRACE          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    LSS             reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    TRANSIENT       reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    VOLATILE        reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    SYNCHRONIZED    reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    NATIVE          reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    DEFAULT         reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)
    SEMICOLON       reduce using rule 92 (MarkerAnnotation -> ATRATE TypeName .)


state 26

    (271) TypeName -> IDENT .
    (273) PackageOrTypeName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    LPAREN          reduce using rule 271 (TypeName -> IDENT .)
    ATRATE          reduce using rule 271 (TypeName -> IDENT .)
    PACKAGE         reduce using rule 271 (TypeName -> IDENT .)
    PUBLIC          reduce using rule 271 (TypeName -> IDENT .)
    PROTECTED       reduce using rule 271 (TypeName -> IDENT .)
    PRIVATE         reduce using rule 271 (TypeName -> IDENT .)
    ABSTRACT        reduce using rule 271 (TypeName -> IDENT .)
    STATIC          reduce using rule 271 (TypeName -> IDENT .)
    FINAL           reduce using rule 271 (TypeName -> IDENT .)
    STRICTFP        reduce using rule 271 (TypeName -> IDENT .)
    CLASS           reduce using rule 271 (TypeName -> IDENT .)
    ENUM            reduce using rule 271 (TypeName -> IDENT .)
    INTERFACE       reduce using rule 271 (TypeName -> IDENT .)
    IDENT           reduce using rule 271 (TypeName -> IDENT .)
    RPAREN          reduce using rule 271 (TypeName -> IDENT .)
    BOOLEAN         reduce using rule 271 (TypeName -> IDENT .)
    BYTE            reduce using rule 271 (TypeName -> IDENT .)
    SHORT           reduce using rule 271 (TypeName -> IDENT .)
    INT             reduce using rule 271 (TypeName -> IDENT .)
    LONG            reduce using rule 271 (TypeName -> IDENT .)
    CHAR            reduce using rule 271 (TypeName -> IDENT .)
    FLOAT           reduce using rule 271 (TypeName -> IDENT .)
    DOUBLE          reduce using rule 271 (TypeName -> IDENT .)
    LBRACE          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    QUES            reduce using rule 271 (TypeName -> IDENT .)
    VOID            reduce using rule 271 (TypeName -> IDENT .)
    ELLIPSIS        reduce using rule 271 (TypeName -> IDENT .)
    COMMA           reduce using rule 271 (TypeName -> IDENT .)
    RBRACE          reduce using rule 271 (TypeName -> IDENT .)
    LSS             reduce using rule 271 (TypeName -> IDENT .)
    TRANSIENT       reduce using rule 271 (TypeName -> IDENT .)
    VOLATILE        reduce using rule 271 (TypeName -> IDENT .)
    SYNCHRONIZED    reduce using rule 271 (TypeName -> IDENT .)
    NATIVE          reduce using rule 271 (TypeName -> IDENT .)
    DEFAULT         reduce using rule 271 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 271 (TypeName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)

  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]


state 27

    (272) TypeName -> PackageOrTypeName . PERIOD IDENT
    (274) PackageOrTypeName -> PackageOrTypeName . PERIOD IDENT

    PERIOD          shift and go to state 59


state 28

    (247) CompilationUnit -> ZooPackageDeclaration ImportDeclarationS TypeDeclarationS .

    $end            reduce using rule 247 (CompilationUnit -> ZooPackageDeclaration ImportDeclarationS TypeDeclarationS .)


state 29

    (252) TypeDeclarationS -> TypeDeclaration . TypeDeclarationS
    (252) TypeDeclarationS -> . TypeDeclaration TypeDeclarationS
    (253) TypeDeclarationS -> . empty
    (268) TypeDeclaration -> . ClassDeclaration
    (269) TypeDeclaration -> . InterfaceDeclaration
    (270) TypeDeclaration -> . SEMICOLON
    (1) empty -> .
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 33
    $end            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 45
    PROTECTED       shift and go to state 46
    PRIVATE         shift and go to state 47
    ABSTRACT        shift and go to state 48
    STATIC          shift and go to state 49
    FINAL           shift and go to state 50
    STRICTFP        shift and go to state 51
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    TypeDeclaration                shift and go to state 29
    TypeDeclarationS               shift and go to state 60
    empty                          shift and go to state 30
    ClassDeclaration               shift and go to state 31
    InterfaceDeclaration           shift and go to state 32
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    Annotation                     shift and go to state 44
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 30

    (253) TypeDeclarationS -> empty .
    (424) ClassModifierS -> empty .
    (286) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

    $end            reduce using rule 253 (TypeDeclarationS -> empty .)
    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 286 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 286 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)


state 31

    (268) TypeDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)
    $end            reduce using rule 268 (TypeDeclaration -> ClassDeclaration .)


state 32

    (269) TypeDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)
    $end            reduce using rule 269 (TypeDeclaration -> InterfaceDeclaration .)


state 33

    (270) TypeDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 270 (TypeDeclaration -> SEMICOLON .)
    $end            reduce using rule 270 (TypeDeclaration -> SEMICOLON .)


state 34

    (282) ClassDeclaration -> NormalClassDeclaration .

    SEMICOLON       reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    PUBLIC          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    PROTECTED       reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    PRIVATE         reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    ABSTRACT        reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    STATIC          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    FINAL           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    STRICTFP        reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    EXTENDS         reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    ATRATE          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    CLASS           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    ENUM            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    IMPLEMENTS      reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    LBRACE          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    INTERFACE       reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    $end            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    TRANSIENT       reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    VOLATILE        reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    SYNCHRONIZED    reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    NATIVE          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    LSS             reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    IDENT           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    BOOLEAN         reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    BYTE            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    SHORT           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    INT             reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    LONG            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    CHAR            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    FLOAT           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    DOUBLE          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    VOID            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    RBRACE          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    IF              reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    WHILE           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    ASSERT          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    SWITCH          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    DO              reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    BREAK           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    CONTINUE        reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    RETURN          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    THROW           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    TRY             reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    FOR             reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    INC             reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    DEC             reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    SUPER           reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    NEW             reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    THIS            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    LPAREN          reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    BOOL_LIT        reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    NULL_LIT        reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    DECIMAL_LIT     reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    HEX_LIT         reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    OCTAL_LIT       reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    BINARY_LIT      reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    FLOAT_DEC_LIT   reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    FLOAT_HEX_LIT   reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    STRING_LIT      reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    CHAR_LIT        reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    CASE            reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)
    DEFAULT         reduce using rule 282 (ClassDeclaration -> NormalClassDeclaration .)


state 35

    (283) ClassDeclaration -> EnumDeclaration .

    SEMICOLON       reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    PUBLIC          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    PROTECTED       reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    PRIVATE         reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    ABSTRACT        reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    STATIC          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    FINAL           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    STRICTFP        reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    EXTENDS         reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    ATRATE          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    CLASS           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    ENUM            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    IMPLEMENTS      reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    LBRACE          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    INTERFACE       reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    $end            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    TRANSIENT       reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    VOLATILE        reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    SYNCHRONIZED    reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    NATIVE          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    LSS             reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    IDENT           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    BOOLEAN         reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    BYTE            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    SHORT           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    INT             reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    LONG            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    CHAR            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    FLOAT           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    DOUBLE          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    VOID            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    RBRACE          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    IF              reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    WHILE           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    ASSERT          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    SWITCH          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    DO              reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    BREAK           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    CONTINUE        reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    RETURN          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    THROW           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    TRY             reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    FOR             reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    INC             reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    DEC             reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    SUPER           reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    NEW             reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    THIS            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    LPAREN          reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    BOOL_LIT        reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    NULL_LIT        reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    DECIMAL_LIT     reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    HEX_LIT         reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    OCTAL_LIT       reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    BINARY_LIT      reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    FLOAT_DEC_LIT   reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    FLOAT_HEX_LIT   reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    STRING_LIT      reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    CHAR_LIT        reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    CASE            reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)
    DEFAULT         reduce using rule 283 (ClassDeclaration -> EnumDeclaration .)


state 36

    (12) InterfaceDeclaration -> NormalInterfaceDeclaration .

    SEMICOLON       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    PUBLIC          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    PROTECTED       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    PRIVATE         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    ABSTRACT        reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    STATIC          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    FINAL           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    STRICTFP        reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    EXTENDS         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    ATRATE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    CLASS           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    ENUM            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    LBRACE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    INTERFACE       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    $end            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    TRANSIENT       reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    VOLATILE        reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    NATIVE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    LSS             reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    IDENT           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    BOOLEAN         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    BYTE            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    SHORT           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    INT             reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    LONG            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    CHAR            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    FLOAT           reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    DOUBLE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    VOID            reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    RBRACE          reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)
    DEFAULT         reduce using rule 12 (InterfaceDeclaration -> NormalInterfaceDeclaration .)


state 37

    (13) InterfaceDeclaration -> AnnotationTypeDeclaration .

    SEMICOLON       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    PUBLIC          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    PROTECTED       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    PRIVATE         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    ABSTRACT        reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    STATIC          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    FINAL           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    STRICTFP        reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    EXTENDS         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    ATRATE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    CLASS           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    ENUM            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    IMPLEMENTS      reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    LBRACE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    INTERFACE       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    $end            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    TRANSIENT       reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    VOLATILE        reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    SYNCHRONIZED    reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    NATIVE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    LSS             reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    IDENT           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    BOOLEAN         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    BYTE            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    SHORT           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    INT             reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    LONG            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    CHAR            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    FLOAT           reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    DOUBLE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    VOID            reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    RBRACE          reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)
    DEFAULT         reduce using rule 13 (InterfaceDeclaration -> AnnotationTypeDeclaration .)


state 38

    (289) NormalClassDeclaration -> ClassModifierS . CLASS IDENT ZooTypeParameters
    (425) EnumDeclaration -> ClassModifierS . ENUM IDENT ZooSuperinterfaces EnumBody

    CLASS           shift and go to state 61
    ENUM            shift and go to state 62


state 39

    (290) NormalClassDeclaration -> ZooSuperClass . ZooSuperinterfaces ClassBody
    (287) ZooSuperinterfaces -> . Superinterfaces
    (288) ZooSuperinterfaces -> . empty
    (304) Superinterfaces -> . IMPLEMENTS InterfaceTypeList
    (1) empty -> .

    IMPLEMENTS      shift and go to state 66
    LBRACE          reduce using rule 1 (empty -> .)

    ZooSuperinterfaces             shift and go to state 63
    Superinterfaces                shift and go to state 64
    empty                          shift and go to state 65

state 40

    (14) NormalInterfaceDeclaration -> InterfaceModifierS . INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> InterfaceModifierS . ATRATE INTERFACE IDENT AnnotationTypeBody

    INTERFACE       shift and go to state 67
    ATRATE          shift and go to state 68


state 41

    (423) ClassModifierS -> ClassModifier . ClassModifierS
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 72
    PROTECTED       shift and go to state 73
    PRIVATE         shift and go to state 74
    ABSTRACT        shift and go to state 75
    STATIC          shift and go to state 76
    FINAL           shift and go to state 50
    STRICTFP        shift and go to state 77
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ClassModifier                  shift and go to state 41
    ClassModifierS                 shift and go to state 69
    empty                          shift and go to state 70
    Annotation                     shift and go to state 71
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 42

    (285) ZooSuperClass -> SuperClass .

    IMPLEMENTS      reduce using rule 285 (ZooSuperClass -> SuperClass .)
    LBRACE          reduce using rule 285 (ZooSuperClass -> SuperClass .)


state 43

    (19) InterfaceModifierS -> InterfaceModifier . InterfaceModifierS
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    PUBLIC          shift and go to state 81
    PROTECTED       shift and go to state 82
    PRIVATE         shift and go to state 83
    ABSTRACT        shift and go to state 84
    STATIC          shift and go to state 85
    STRICTFP        shift and go to state 86
    INTERFACE       reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    InterfaceModifier              shift and go to state 43
    InterfaceModifierS             shift and go to state 78
    empty                          shift and go to state 79
    Annotation                     shift and go to state 80
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 44

    (291) ClassModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
    FINAL           reduce using rule 291 (ClassModifier -> Annotation .)
    CLASS           reduce using rule 291 (ClassModifier -> Annotation .)
    ENUM            reduce using rule 291 (ClassModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)

  ! PUBLIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 291 (ClassModifier -> Annotation .) ]


state 45

    (292) ClassModifier -> PUBLIC .
    (22) InterfaceModifier -> PUBLIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 292 (ClassModifier -> PUBLIC .)
    CLASS           reduce using rule 292 (ClassModifier -> PUBLIC .)
    ENUM            reduce using rule 292 (ClassModifier -> PUBLIC .)
    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)

  ! PUBLIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]


state 46

    (293) ClassModifier -> PROTECTED .
    (23) InterfaceModifier -> PROTECTED .

  ! reduce/reduce conflict for PUBLIC resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for STATIC resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 23 (InterfaceModifier -> PROTECTED .)
    FINAL           reduce using rule 293 (ClassModifier -> PROTECTED .)
    CLASS           reduce using rule 293 (ClassModifier -> PROTECTED .)
    ENUM            reduce using rule 293 (ClassModifier -> PROTECTED .)
    PUBLIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PROTECTED       reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PRIVATE         reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STATIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STRICTFP        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ATRATE          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    INTERFACE       reduce using rule 23 (InterfaceModifier -> PROTECTED .)

  ! PUBLIC          [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! ABSTRACT        [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! STATIC          [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! STRICTFP        [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]


state 47

    (294) ClassModifier -> PRIVATE .
    (24) InterfaceModifier -> PRIVATE .

  ! reduce/reduce conflict for PUBLIC resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for STATIC resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 24 (InterfaceModifier -> PRIVATE .)
    FINAL           reduce using rule 294 (ClassModifier -> PRIVATE .)
    CLASS           reduce using rule 294 (ClassModifier -> PRIVATE .)
    ENUM            reduce using rule 294 (ClassModifier -> PRIVATE .)
    PUBLIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PROTECTED       reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PRIVATE         reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STATIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STRICTFP        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ATRATE          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    INTERFACE       reduce using rule 24 (InterfaceModifier -> PRIVATE .)

  ! PUBLIC          [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! ABSTRACT        [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! STATIC          [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! STRICTFP        [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]


state 48

    (295) ClassModifier -> ABSTRACT .
    (25) InterfaceModifier -> ABSTRACT .

  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
    FINAL           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    CLASS           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    ENUM            reduce using rule 295 (ClassModifier -> ABSTRACT .)
    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)

  ! PUBLIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PROTECTED       [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PRIVATE         [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]


state 49

    (296) ClassModifier -> STATIC .
    (26) InterfaceModifier -> STATIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 26 (InterfaceModifier -> STATIC .)
    FINAL           reduce using rule 296 (ClassModifier -> STATIC .)
    CLASS           reduce using rule 296 (ClassModifier -> STATIC .)
    ENUM            reduce using rule 296 (ClassModifier -> STATIC .)
    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)

  ! PUBLIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 296 (ClassModifier -> STATIC .) ]


state 50

    (297) ClassModifier -> FINAL .

    PUBLIC          reduce using rule 297 (ClassModifier -> FINAL .)
    PROTECTED       reduce using rule 297 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 297 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 297 (ClassModifier -> FINAL .)
    STATIC          reduce using rule 297 (ClassModifier -> FINAL .)
    FINAL           reduce using rule 297 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 297 (ClassModifier -> FINAL .)
    ATRATE          reduce using rule 297 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 297 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 297 (ClassModifier -> FINAL .)


state 51

    (298) ClassModifier -> STRICTFP .
    (27) InterfaceModifier -> STRICTFP .

  ! reduce/reduce conflict for PUBLIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STATIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ATRATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
    FINAL           reduce using rule 298 (ClassModifier -> STRICTFP .)
    CLASS           reduce using rule 298 (ClassModifier -> STRICTFP .)
    ENUM            reduce using rule 298 (ClassModifier -> STRICTFP .)
    PUBLIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ATRATE          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 27 (InterfaceModifier -> STRICTFP .)

  ! PUBLIC          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! PROTECTED       [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! PRIVATE         [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! ABSTRACT        [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! STATIC          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! STRICTFP        [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! ATRATE          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]


state 52

    (284) SuperClass -> EXTENDS . ClassType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (465) InterfaceType -> . ClassType
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ClassType                      shift and go to state 87
    AnnotationS                    shift and go to state 88
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    InterfaceType                  shift and go to state 92
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 53

    (250) ImportDeclarationS -> ImportDeclaration ImportDeclarationS .

    SEMICOLON       reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    PUBLIC          reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    PROTECTED       reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    PRIVATE         reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    ABSTRACT        reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    STATIC          reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    FINAL           reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    STRICTFP        reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    EXTENDS         reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    ATRATE          reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    CLASS           reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    ENUM            reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    IMPLEMENTS      reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    LBRACE          reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    INTERFACE       reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)
    $end            reduce using rule 250 (ImportDeclarationS -> ImportDeclaration ImportDeclarationS .)


state 54

    (264) SingleTypeImportDeclaration -> IMPORT TypeName . SEMICOLON

    SEMICOLON       shift and go to state 93


state 55

    (265) TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName . PERIOD MUL SEMICOLON
    (272) TypeName -> PackageOrTypeName . PERIOD IDENT
    (274) PackageOrTypeName -> PackageOrTypeName . PERIOD IDENT

    PERIOD          shift and go to state 94


state 56

    (266) SingleStaticImportDeclaration -> IMPORT STATIC . TypeName PERIOD IDENT SEMICOLON
    (267) StaticImportOnDemandDeclaration -> IMPORT STATIC . TypeName PERIOD MUL SEMICOLON
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT

    IDENT           shift and go to state 26

    TypeName                       shift and go to state 95
    PackageOrTypeName              shift and go to state 27

state 57

    (254) PackageDeclaration -> PackageModifierS PACKAGE IDENT . PERIODIDENTS SEMICOLON
    (257) PERIODIDENTS -> . PERIOD IDENT PERIODIDENTS
    (258) PERIODIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 97
    SEMICOLON       reduce using rule 1 (empty -> .)

    PERIODIDENTS                   shift and go to state 96
    empty                          shift and go to state 98

state 58

    (76) NormalAnnotation -> ATRATE TypeName LPAREN . ZooElementValuePairList RPAREN
    (93) SingleElementAnnotation -> ATRATE TypeName LPAREN . ElementValue RPAREN
    (77) ZooElementValuePairList -> . ElementValuePairList
    (78) ZooElementValuePairList -> . empty
    (83) ElementValue -> . ConditionalExpression
    (84) ElementValue -> . ElementValueArrayInitializer
    (85) ElementValue -> . Annotation
    (79) ElementValuePairList -> . ElementValuePair COMMAElementValuePairS
    (1) empty -> .
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (86) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (82) ElementValuePair -> . IDENT ASSIGN ElementValue
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    LBRACE          shift and go to state 110
    IDENT           shift and go to state 111
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    TypeName                       shift and go to state 99
    ZooElementValuePairList        shift and go to state 101
    ElementValue                   shift and go to state 102
    ElementValuePairList           shift and go to state 103
    empty                          shift and go to state 104
    ConditionalExpression          shift and go to state 105
    ElementValueArrayInitializer   shift and go to state 106
    Annotation                     shift and go to state 107
    ElementValuePair               shift and go to state 108
    ConditionalOrExpression        shift and go to state 109
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 112
    InclusiveOrExpression          shift and go to state 113
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 59

    (272) TypeName -> PackageOrTypeName PERIOD . IDENT
    (274) PackageOrTypeName -> PackageOrTypeName PERIOD . IDENT

    IDENT           shift and go to state 181


state 60

    (252) TypeDeclarationS -> TypeDeclaration TypeDeclarationS .

    $end            reduce using rule 252 (TypeDeclarationS -> TypeDeclaration TypeDeclarationS .)


state 61

    (289) NormalClassDeclaration -> ClassModifierS CLASS . IDENT ZooTypeParameters

    IDENT           shift and go to state 182


state 62

    (425) EnumDeclaration -> ClassModifierS ENUM . IDENT ZooSuperinterfaces EnumBody

    IDENT           shift and go to state 183


state 63

    (290) NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces . ClassBody
    (310) ClassBody -> . LBRACE ClassBodyDeclarationS RBRACE

    LBRACE          shift and go to state 185

    ClassBody                      shift and go to state 184

state 64

    (287) ZooSuperinterfaces -> Superinterfaces .

    LBRACE          reduce using rule 287 (ZooSuperinterfaces -> Superinterfaces .)


state 65

    (288) ZooSuperinterfaces -> empty .

    LBRACE          reduce using rule 288 (ZooSuperinterfaces -> empty .)


state 66

    (304) Superinterfaces -> IMPLEMENTS . InterfaceTypeList
    (307) InterfaceTypeList -> . InterfaceType COMMAInterfaceTypeS
    (465) InterfaceType -> . ClassType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    InterfaceTypeList              shift and go to state 186
    InterfaceType                  shift and go to state 187
    ClassType                      shift and go to state 188
    AnnotationS                    shift and go to state 88
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 67

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE . IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody

    IDENT           shift and go to state 189


state 68

    (53) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE . INTERFACE IDENT AnnotationTypeBody

    INTERFACE       shift and go to state 190


state 69

    (423) ClassModifierS -> ClassModifier ClassModifierS .

    CLASS           reduce using rule 423 (ClassModifierS -> ClassModifier ClassModifierS .)
    ENUM            reduce using rule 423 (ClassModifierS -> ClassModifier ClassModifierS .)


state 70

    (424) ClassModifierS -> empty .

    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)


state 71

    (291) ClassModifier -> Annotation .

    PUBLIC          reduce using rule 291 (ClassModifier -> Annotation .)
    PROTECTED       reduce using rule 291 (ClassModifier -> Annotation .)
    PRIVATE         reduce using rule 291 (ClassModifier -> Annotation .)
    ABSTRACT        reduce using rule 291 (ClassModifier -> Annotation .)
    STATIC          reduce using rule 291 (ClassModifier -> Annotation .)
    FINAL           reduce using rule 291 (ClassModifier -> Annotation .)
    STRICTFP        reduce using rule 291 (ClassModifier -> Annotation .)
    ATRATE          reduce using rule 291 (ClassModifier -> Annotation .)
    CLASS           reduce using rule 291 (ClassModifier -> Annotation .)
    ENUM            reduce using rule 291 (ClassModifier -> Annotation .)


state 72

    (292) ClassModifier -> PUBLIC .

    PUBLIC          reduce using rule 292 (ClassModifier -> PUBLIC .)
    PROTECTED       reduce using rule 292 (ClassModifier -> PUBLIC .)
    PRIVATE         reduce using rule 292 (ClassModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 292 (ClassModifier -> PUBLIC .)
    STATIC          reduce using rule 292 (ClassModifier -> PUBLIC .)
    FINAL           reduce using rule 292 (ClassModifier -> PUBLIC .)
    STRICTFP        reduce using rule 292 (ClassModifier -> PUBLIC .)
    ATRATE          reduce using rule 292 (ClassModifier -> PUBLIC .)
    CLASS           reduce using rule 292 (ClassModifier -> PUBLIC .)
    ENUM            reduce using rule 292 (ClassModifier -> PUBLIC .)


state 73

    (293) ClassModifier -> PROTECTED .

    PUBLIC          reduce using rule 293 (ClassModifier -> PROTECTED .)
    PROTECTED       reduce using rule 293 (ClassModifier -> PROTECTED .)
    PRIVATE         reduce using rule 293 (ClassModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 293 (ClassModifier -> PROTECTED .)
    STATIC          reduce using rule 293 (ClassModifier -> PROTECTED .)
    FINAL           reduce using rule 293 (ClassModifier -> PROTECTED .)
    STRICTFP        reduce using rule 293 (ClassModifier -> PROTECTED .)
    ATRATE          reduce using rule 293 (ClassModifier -> PROTECTED .)
    CLASS           reduce using rule 293 (ClassModifier -> PROTECTED .)
    ENUM            reduce using rule 293 (ClassModifier -> PROTECTED .)


state 74

    (294) ClassModifier -> PRIVATE .

    PUBLIC          reduce using rule 294 (ClassModifier -> PRIVATE .)
    PROTECTED       reduce using rule 294 (ClassModifier -> PRIVATE .)
    PRIVATE         reduce using rule 294 (ClassModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 294 (ClassModifier -> PRIVATE .)
    STATIC          reduce using rule 294 (ClassModifier -> PRIVATE .)
    FINAL           reduce using rule 294 (ClassModifier -> PRIVATE .)
    STRICTFP        reduce using rule 294 (ClassModifier -> PRIVATE .)
    ATRATE          reduce using rule 294 (ClassModifier -> PRIVATE .)
    CLASS           reduce using rule 294 (ClassModifier -> PRIVATE .)
    ENUM            reduce using rule 294 (ClassModifier -> PRIVATE .)


state 75

    (295) ClassModifier -> ABSTRACT .

    PUBLIC          reduce using rule 295 (ClassModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 295 (ClassModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 295 (ClassModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 295 (ClassModifier -> ABSTRACT .)
    STATIC          reduce using rule 295 (ClassModifier -> ABSTRACT .)
    FINAL           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 295 (ClassModifier -> ABSTRACT .)
    ATRATE          reduce using rule 295 (ClassModifier -> ABSTRACT .)
    CLASS           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    ENUM            reduce using rule 295 (ClassModifier -> ABSTRACT .)


state 76

    (296) ClassModifier -> STATIC .

    PUBLIC          reduce using rule 296 (ClassModifier -> STATIC .)
    PROTECTED       reduce using rule 296 (ClassModifier -> STATIC .)
    PRIVATE         reduce using rule 296 (ClassModifier -> STATIC .)
    ABSTRACT        reduce using rule 296 (ClassModifier -> STATIC .)
    STATIC          reduce using rule 296 (ClassModifier -> STATIC .)
    FINAL           reduce using rule 296 (ClassModifier -> STATIC .)
    STRICTFP        reduce using rule 296 (ClassModifier -> STATIC .)
    ATRATE          reduce using rule 296 (ClassModifier -> STATIC .)
    CLASS           reduce using rule 296 (ClassModifier -> STATIC .)
    ENUM            reduce using rule 296 (ClassModifier -> STATIC .)


state 77

    (298) ClassModifier -> STRICTFP .

    PUBLIC          reduce using rule 298 (ClassModifier -> STRICTFP .)
    PROTECTED       reduce using rule 298 (ClassModifier -> STRICTFP .)
    PRIVATE         reduce using rule 298 (ClassModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 298 (ClassModifier -> STRICTFP .)
    STATIC          reduce using rule 298 (ClassModifier -> STRICTFP .)
    FINAL           reduce using rule 298 (ClassModifier -> STRICTFP .)
    STRICTFP        reduce using rule 298 (ClassModifier -> STRICTFP .)
    ATRATE          reduce using rule 298 (ClassModifier -> STRICTFP .)
    CLASS           reduce using rule 298 (ClassModifier -> STRICTFP .)
    ENUM            reduce using rule 298 (ClassModifier -> STRICTFP .)


state 78

    (19) InterfaceModifierS -> InterfaceModifier InterfaceModifierS .

    INTERFACE       reduce using rule 19 (InterfaceModifierS -> InterfaceModifier InterfaceModifierS .)
    ATRATE          reduce using rule 19 (InterfaceModifierS -> InterfaceModifier InterfaceModifierS .)


state 79

    (20) InterfaceModifierS -> empty .

    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)


state 80

    (21) InterfaceModifier -> Annotation .

    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)


state 81

    (22) InterfaceModifier -> PUBLIC .

    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)


state 82

    (23) InterfaceModifier -> PROTECTED .

    PUBLIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PROTECTED       reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PRIVATE         reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STATIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STRICTFP        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ATRATE          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    INTERFACE       reduce using rule 23 (InterfaceModifier -> PROTECTED .)


state 83

    (24) InterfaceModifier -> PRIVATE .

    PUBLIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PROTECTED       reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PRIVATE         reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STATIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STRICTFP        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ATRATE          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    INTERFACE       reduce using rule 24 (InterfaceModifier -> PRIVATE .)


state 84

    (25) InterfaceModifier -> ABSTRACT .

    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)


state 85

    (26) InterfaceModifier -> STATIC .

    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)


state 86

    (27) InterfaceModifier -> STRICTFP .

    PUBLIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ATRATE          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 27 (InterfaceModifier -> STRICTFP .)


state 87

    (284) SuperClass -> EXTENDS ClassType .
    (461) ClassOrInterfaceType -> ClassType .
    (465) InterfaceType -> ClassType .

  ! reduce/reduce conflict for PERIOD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
    IMPLEMENTS      reduce using rule 284 (SuperClass -> EXTENDS ClassType .)
    LBRACE          reduce using rule 284 (SuperClass -> EXTENDS ClassType .)
    PERIOD          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)

  ! PERIOD          [ reduce using rule 465 (InterfaceType -> ClassType .) ]


state 88

    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments

    IDENT           shift and go to state 191


state 89

    (464) ClassType -> ClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments

    PERIOD          shift and go to state 192


state 90

    (125) AnnotationS -> Annotation . AnnotationS
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Annotation                     shift and go to state 90
    AnnotationS                    shift and go to state 193
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 91

    (126) AnnotationS -> empty .

    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)
    LBRACE          reduce using rule 126 (AnnotationS -> empty .)
    LBRACK          reduce using rule 126 (AnnotationS -> empty .)
    QUES            reduce using rule 126 (AnnotationS -> empty .)
    VOID            reduce using rule 126 (AnnotationS -> empty .)
    ELLIPSIS        reduce using rule 126 (AnnotationS -> empty .)


state 92

    (462) ClassOrInterfaceType -> InterfaceType .

    PERIOD          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    ATRATE          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    LBRACE          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    COLON_SEP       reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    AND             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    RPAREN          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    LBRACK          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    LSS             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    GTR             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    LEQ             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    GEQ             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    INSTANCEOF      reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    EQL             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    NEQ             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    XOR             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    OR              reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    LAND            reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    QUES            reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    LOR             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    COMMA           reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    RBRACE          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    COLON           reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    MUL             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    QUO             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    REM             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    ADD             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    SUB             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    SHL             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    SHR             reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    SHR_UN          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    RBRACK          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    SEMICOLON       reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)


state 93

    (264) SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .

    IMPORT          reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    SEMICOLON       reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    PUBLIC          reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    PROTECTED       reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    PRIVATE         reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    ABSTRACT        reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    STATIC          reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    FINAL           reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    STRICTFP        reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    EXTENDS         reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    ATRATE          reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    CLASS           reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    ENUM            reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    IMPLEMENTS      reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    LBRACE          reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    INTERFACE       reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)
    $end            reduce using rule 264 (SingleTypeImportDeclaration -> IMPORT TypeName SEMICOLON .)


state 94

    (265) TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD . MUL SEMICOLON
    (272) TypeName -> PackageOrTypeName PERIOD . IDENT
    (274) PackageOrTypeName -> PackageOrTypeName PERIOD . IDENT

    MUL             shift and go to state 194
    IDENT           shift and go to state 181


state 95

    (266) SingleStaticImportDeclaration -> IMPORT STATIC TypeName . PERIOD IDENT SEMICOLON
    (267) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName . PERIOD MUL SEMICOLON

    PERIOD          shift and go to state 195


state 96

    (254) PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS . SEMICOLON

    SEMICOLON       shift and go to state 196


state 97

    (257) PERIODIDENTS -> PERIOD . IDENT PERIODIDENTS

    IDENT           shift and go to state 197


state 98

    (258) PERIODIDENTS -> empty .

    SEMICOLON       reduce using rule 258 (PERIODIDENTS -> empty .)


state 99

    (105) PrimaryNoNewArray -> TypeName . PERIOD THIS
    (112) ClassLiteral -> TypeName . LBRACKRBRACKS PERIOD CLASS
    (135) FieldAccess -> TypeName . PERIOD SUPER PERIOD IDENT
    (139) MethodInvocation -> TypeName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> TypeName . PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (151) MethodReference -> TypeName . PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (116) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (117) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for PERIOD resolved as shift
    PERIOD          shift and go to state 198
    LBRACK          shift and go to state 200

  ! PERIOD          [ reduce using rule 1 (empty -> .) ]

    LBRACKRBRACKS                  shift and go to state 199
    empty                          shift and go to state 201

state 100

    (241) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (106) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    ATRATE          shift and go to state 13
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    PrimitiveType                  shift and go to state 203
    UnaryExpression                shift and go to state 124
    ReferenceType                  shift and go to state 204
    UnaryExpressionNotPlusMinus    shift and go to state 127
    LambdaExpression               shift and go to state 205
    Expression                     shift and go to state 206
    AnnotationS                    shift and go to state 207
    NumericType                    shift and go to state 162
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 209
    AssignmentExpression           shift and go to state 210
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ClassType                      shift and go to state 211
    InterfaceType                  shift and go to state 92
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    TypeName                       shift and go to state 217
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 101

    (76) NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList . RPAREN

    RPAREN          shift and go to state 223


state 102

    (93) SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue . RPAREN

    RPAREN          shift and go to state 224


state 103

    (77) ZooElementValuePairList -> ElementValuePairList .

    RPAREN          reduce using rule 77 (ZooElementValuePairList -> ElementValuePairList .)


state 104

    (78) ZooElementValuePairList -> empty .
    (126) AnnotationS -> empty .

    RPAREN          reduce using rule 78 (ZooElementValuePairList -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)


state 105

    (83) ElementValue -> ConditionalExpression .

    RPAREN          reduce using rule 83 (ElementValue -> ConditionalExpression .)
    COMMA           reduce using rule 83 (ElementValue -> ConditionalExpression .)
    RBRACE          reduce using rule 83 (ElementValue -> ConditionalExpression .)
    SEMICOLON       reduce using rule 83 (ElementValue -> ConditionalExpression .)


state 106

    (84) ElementValue -> ElementValueArrayInitializer .

    RPAREN          reduce using rule 84 (ElementValue -> ElementValueArrayInitializer .)
    COMMA           reduce using rule 84 (ElementValue -> ElementValueArrayInitializer .)
    RBRACE          reduce using rule 84 (ElementValue -> ElementValueArrayInitializer .)
    SEMICOLON       reduce using rule 84 (ElementValue -> ElementValueArrayInitializer .)


state 107

    (85) ElementValue -> Annotation .
    (125) AnnotationS -> Annotation . AnnotationS
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          reduce using rule 85 (ElementValue -> Annotation .)
    COMMA           reduce using rule 85 (ElementValue -> Annotation .)
    RBRACE          reduce using rule 85 (ElementValue -> Annotation .)
    SEMICOLON       reduce using rule 85 (ElementValue -> Annotation .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Annotation                     shift and go to state 90
    AnnotationS                    shift and go to state 193
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 108

    (79) ElementValuePairList -> ElementValuePair . COMMAElementValuePairS
    (80) COMMAElementValuePairS -> . COMMA ElementValuePair COMMAElementValuePairS
    (81) COMMAElementValuePairS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 226
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAElementValuePairS         shift and go to state 225
    empty                          shift and go to state 227

state 109

    (191) ConditionalExpression -> ConditionalOrExpression .
    (192) ConditionalExpression -> ConditionalOrExpression . QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> ConditionalOrExpression . QUES Expression COLON LambdaExpression
    (195) ConditionalOrExpression -> ConditionalOrExpression . LOR ConditionalAndExpression

  ! shift/reduce conflict for QUES resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
    RPAREN          reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    COMMA           reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACE          reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    COLON           reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACK          reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    MUL             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    QUO             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    REM             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    ADD             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    SUB             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    SHL             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    SHR             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    SHR_UN          reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    LSS             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    GTR             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    LEQ             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    GEQ             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    INSTANCEOF      reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    EQL             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    NEQ             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    AND             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    XOR             reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    OR              reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    LAND            reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    SEMICOLON       reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .)
    QUES            shift and go to state 228
    LOR             shift and go to state 229

  ! QUES            [ reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .) ]
  ! LOR             [ reduce using rule 191 (ConditionalExpression -> ConditionalOrExpression .) ]


state 110

    (86) ElementValueArrayInitializer -> LBRACE . ZooElementValueList ZooCOMMA RBRACE
    (87) ZooElementValueList -> . ElementValueList
    (88) ZooElementValueList -> . empty
    (89) ElementValueList -> . ElementValue COMMAElementValueS
    (1) empty -> .
    (83) ElementValue -> . ConditionalExpression
    (84) ElementValue -> . ElementValueArrayInitializer
    (85) ElementValue -> . Annotation
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (86) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    LBRACE          shift and go to state 110
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooElementValueList            shift and go to state 230
    ElementValueList               shift and go to state 231
    empty                          shift and go to state 232
    ElementValue                   shift and go to state 233
    ConditionalExpression          shift and go to state 105
    ElementValueArrayInitializer   shift and go to state 106
    Annotation                     shift and go to state 107
    ConditionalOrExpression        shift and go to state 109
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 112
    TypeName                       shift and go to state 99
    InclusiveOrExpression          shift and go to state 113
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 111

    (82) ElementValuePair -> IDENT . ASSIGN ElementValue
    (275) ExpressionName -> IDENT .
    (280) AmbiguousName -> IDENT .
    (271) TypeName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (277) MethodName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 275 (ExpressionName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    ASSIGN          shift and go to state 235
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)
    MUL             reduce using rule 275 (ExpressionName -> IDENT .)
    QUO             reduce using rule 275 (ExpressionName -> IDENT .)
    REM             reduce using rule 275 (ExpressionName -> IDENT .)
    ADD             reduce using rule 275 (ExpressionName -> IDENT .)
    SUB             reduce using rule 275 (ExpressionName -> IDENT .)
    SHL             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN          reduce using rule 275 (ExpressionName -> IDENT .)
    LSS             reduce using rule 275 (ExpressionName -> IDENT .)
    GTR             reduce using rule 275 (ExpressionName -> IDENT .)
    LEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    GEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    INSTANCEOF      reduce using rule 275 (ExpressionName -> IDENT .)
    EQL             reduce using rule 275 (ExpressionName -> IDENT .)
    NEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    AND             reduce using rule 275 (ExpressionName -> IDENT .)
    XOR             reduce using rule 275 (ExpressionName -> IDENT .)
    OR              reduce using rule 275 (ExpressionName -> IDENT .)
    LAND            reduce using rule 275 (ExpressionName -> IDENT .)
    QUES            reduce using rule 275 (ExpressionName -> IDENT .)
    LOR             reduce using rule 275 (ExpressionName -> IDENT .)
    RPAREN          reduce using rule 275 (ExpressionName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)

  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]


state 112

    (194) ConditionalOrExpression -> ConditionalAndExpression .
    (197) ConditionalAndExpression -> ConditionalAndExpression . LAND InclusiveOrExpression

  ! shift/reduce conflict for LAND resolved as shift
    QUES            reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    LOR             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    RPAREN          reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    COMMA           reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACE          reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    COLON           reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACK          reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    MUL             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    QUO             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    REM             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    ADD             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    SUB             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    SHL             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    SHR             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    SHR_UN          reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    LSS             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    GTR             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    LEQ             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    GEQ             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    INSTANCEOF      reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    EQL             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    NEQ             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    AND             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    XOR             reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    OR              reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    SEMICOLON       reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .)
    LAND            shift and go to state 236

  ! LAND            [ reduce using rule 194 (ConditionalOrExpression -> ConditionalAndExpression .) ]


state 113

    (196) ConditionalAndExpression -> InclusiveOrExpression .
    (199) InclusiveOrExpression -> InclusiveOrExpression . OR ExclusiveOrExpression

  ! shift/reduce conflict for OR resolved as shift
    LAND            reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    QUES            reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    LOR             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    RPAREN          reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    COMMA           reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACE          reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    COLON           reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    MUL             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    QUO             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    REM             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    ADD             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    SUB             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    SHL             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    SHR             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    SHR_UN          reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    LSS             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    GTR             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    LEQ             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    GEQ             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    INSTANCEOF      reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    EQL             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    NEQ             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    AND             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    XOR             reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACK          reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    SEMICOLON       reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .)
    OR              shift and go to state 237

  ! OR              [ reduce using rule 196 (ConditionalAndExpression -> InclusiveOrExpression .) ]


state 114

    (198) InclusiveOrExpression -> ExclusiveOrExpression .
    (201) ExclusiveOrExpression -> ExclusiveOrExpression . XOR AndExpression

  ! shift/reduce conflict for XOR resolved as shift
    OR              reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LAND            reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    QUES            reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LOR             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RPAREN          reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COMMA           reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACE          reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COLON           reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    MUL             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    QUO             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    REM             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    ADD             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SUB             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SHL             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SHR             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SHR_UN          reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LSS             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    GTR             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    LEQ             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    GEQ             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    INSTANCEOF      reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    EQL             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    NEQ             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    AND             reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACK          reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SEMICOLON       reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .)
    XOR             shift and go to state 238

  ! XOR             [ reduce using rule 198 (InclusiveOrExpression -> ExclusiveOrExpression .) ]


state 115

    (200) ExclusiveOrExpression -> AndExpression .
    (203) AndExpression -> AndExpression . AND EqualityExpression

  ! shift/reduce conflict for AND resolved as shift
    XOR             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    OR              reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    LAND            reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    QUES            reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    LOR             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    RPAREN          reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    COMMA           reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    RBRACE          reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    COLON           reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    MUL             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    QUO             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    REM             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    ADD             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    SUB             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    SHL             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    SHR             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    SHR_UN          reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    LSS             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    GTR             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    LEQ             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    GEQ             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    INSTANCEOF      reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    EQL             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    NEQ             reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    RBRACK          reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    SEMICOLON       reduce using rule 200 (ExclusiveOrExpression -> AndExpression .)
    AND             shift and go to state 239

  ! AND             [ reduce using rule 200 (ExclusiveOrExpression -> AndExpression .) ]


state 116

    (202) AndExpression -> EqualityExpression .
    (205) EqualityExpression -> EqualityExpression . EQL RelationalExpression
    (206) EqualityExpression -> EqualityExpression . NEQ RelationalExpression

  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    AND             reduce using rule 202 (AndExpression -> EqualityExpression .)
    XOR             reduce using rule 202 (AndExpression -> EqualityExpression .)
    OR              reduce using rule 202 (AndExpression -> EqualityExpression .)
    LAND            reduce using rule 202 (AndExpression -> EqualityExpression .)
    QUES            reduce using rule 202 (AndExpression -> EqualityExpression .)
    LOR             reduce using rule 202 (AndExpression -> EqualityExpression .)
    RPAREN          reduce using rule 202 (AndExpression -> EqualityExpression .)
    COMMA           reduce using rule 202 (AndExpression -> EqualityExpression .)
    RBRACE          reduce using rule 202 (AndExpression -> EqualityExpression .)
    COLON           reduce using rule 202 (AndExpression -> EqualityExpression .)
    MUL             reduce using rule 202 (AndExpression -> EqualityExpression .)
    QUO             reduce using rule 202 (AndExpression -> EqualityExpression .)
    REM             reduce using rule 202 (AndExpression -> EqualityExpression .)
    ADD             reduce using rule 202 (AndExpression -> EqualityExpression .)
    SUB             reduce using rule 202 (AndExpression -> EqualityExpression .)
    SHL             reduce using rule 202 (AndExpression -> EqualityExpression .)
    SHR             reduce using rule 202 (AndExpression -> EqualityExpression .)
    SHR_UN          reduce using rule 202 (AndExpression -> EqualityExpression .)
    LSS             reduce using rule 202 (AndExpression -> EqualityExpression .)
    GTR             reduce using rule 202 (AndExpression -> EqualityExpression .)
    LEQ             reduce using rule 202 (AndExpression -> EqualityExpression .)
    GEQ             reduce using rule 202 (AndExpression -> EqualityExpression .)
    INSTANCEOF      reduce using rule 202 (AndExpression -> EqualityExpression .)
    RBRACK          reduce using rule 202 (AndExpression -> EqualityExpression .)
    SEMICOLON       reduce using rule 202 (AndExpression -> EqualityExpression .)
    EQL             shift and go to state 240
    NEQ             shift and go to state 241

  ! EQL             [ reduce using rule 202 (AndExpression -> EqualityExpression .) ]
  ! NEQ             [ reduce using rule 202 (AndExpression -> EqualityExpression .) ]


state 117

    (204) EqualityExpression -> RelationalExpression .
    (208) RelationalExpression -> RelationalExpression . LSS ShiftExpression
    (209) RelationalExpression -> RelationalExpression . GTR ShiftExpression
    (210) RelationalExpression -> RelationalExpression . LEQ ShiftExpression
    (211) RelationalExpression -> RelationalExpression . GEQ ShiftExpression
    (212) RelationalExpression -> RelationalExpression . INSTANCEOF ReferenceType

  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for INSTANCEOF resolved as shift
    EQL             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    NEQ             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    AND             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    XOR             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    OR              reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    LAND            reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    QUES            reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    LOR             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    RPAREN          reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    COMMA           reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    RBRACE          reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    COLON           reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    MUL             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    QUO             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    REM             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    ADD             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    SUB             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    SHL             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    SHR             reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    SHR_UN          reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    RBRACK          reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    SEMICOLON       reduce using rule 204 (EqualityExpression -> RelationalExpression .)
    LSS             shift and go to state 242
    GTR             shift and go to state 243
    LEQ             shift and go to state 244
    GEQ             shift and go to state 245
    INSTANCEOF      shift and go to state 246

  ! LSS             [ reduce using rule 204 (EqualityExpression -> RelationalExpression .) ]
  ! GTR             [ reduce using rule 204 (EqualityExpression -> RelationalExpression .) ]
  ! LEQ             [ reduce using rule 204 (EqualityExpression -> RelationalExpression .) ]
  ! GEQ             [ reduce using rule 204 (EqualityExpression -> RelationalExpression .) ]
  ! INSTANCEOF      [ reduce using rule 204 (EqualityExpression -> RelationalExpression .) ]


state 118

    (207) RelationalExpression -> ShiftExpression .
    (214) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (215) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (216) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    GTR             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    LEQ             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    GEQ             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    INSTANCEOF      reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    EQL             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    NEQ             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    AND             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    XOR             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    OR              reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    LAND            reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    QUES            reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    LOR             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    RPAREN          reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    COMMA           reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    RBRACE          reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    COLON           reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    MUL             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    QUO             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    REM             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    ADD             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    SUB             reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    RBRACK          reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    SEMICOLON       reduce using rule 207 (RelationalExpression -> ShiftExpression .)
    SHL             shift and go to state 247
    SHR             shift and go to state 248
    SHR_UN          shift and go to state 249

  ! SHL             [ reduce using rule 207 (RelationalExpression -> ShiftExpression .) ]
  ! SHR             [ reduce using rule 207 (RelationalExpression -> ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 207 (RelationalExpression -> ShiftExpression .) ]


state 119

    (148) MethodReference -> ReferenceType . COLON_SEP ZooTypeArguments IDENT

    COLON_SEP       shift and go to state 250


state 120

    (213) ShiftExpression -> AdditiveExpression .
    (218) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (219) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    SHR             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    SHR_UN          reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    LSS             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    GTR             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    LEQ             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    GEQ             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    INSTANCEOF      reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    EQL             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    NEQ             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    AND             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    XOR             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    OR              reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    LAND            reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    QUES            reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    LOR             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    RPAREN          reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    COMMA           reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    RBRACE          reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    COLON           reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    MUL             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    QUO             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    REM             reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    RBRACK          reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    SEMICOLON       reduce using rule 213 (ShiftExpression -> AdditiveExpression .)
    ADD             shift and go to state 251
    SUB             shift and go to state 252

  ! ADD             [ reduce using rule 213 (ShiftExpression -> AdditiveExpression .) ]
  ! SUB             [ reduce using rule 213 (ShiftExpression -> AdditiveExpression .) ]


state 121

    (217) AdditiveExpression -> MultiplicativeExpression .
    (221) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (222) MultiplicativeExpression -> MultiplicativeExpression . QUO UnaryExpression
    (223) MultiplicativeExpression -> MultiplicativeExpression . REM UnaryExpression

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
    ADD             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    SUB             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    SHL             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    SHR             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    SHR_UN          reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    LSS             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    GTR             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    LEQ             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    GEQ             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    INSTANCEOF      reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    EQL             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    NEQ             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    AND             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    XOR             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    OR              reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    LAND            reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    QUES            reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    LOR             reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    RPAREN          reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    COMMA           reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACE          reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    COLON           reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACK          reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    SEMICOLON       reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .)
    MUL             shift and go to state 253
    QUO             shift and go to state 254
    REM             shift and go to state 255

  ! MUL             [ reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .) ]
  ! QUO             [ reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .) ]
  ! REM             [ reduce using rule 217 (AdditiveExpression -> MultiplicativeExpression .) ]


state 122

    (226) UnaryExpression -> ADD . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 256
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 123

    (227) UnaryExpression -> SUB . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 257
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 124

    (220) MultiplicativeExpression -> UnaryExpression .

    MUL             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    QUO             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    REM             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    ADD             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    SUB             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    SHL             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    SHR             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    SHR_UN          reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    LSS             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    GTR             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    LEQ             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    GEQ             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    INSTANCEOF      reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    EQL             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    NEQ             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    AND             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    XOR             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    OR              reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    LAND            reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    QUES            reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    LOR             reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    RPAREN          reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    COMMA           reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    RBRACE          reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    COLON           reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    RBRACK          reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)
    SEMICOLON       reduce using rule 220 (MultiplicativeExpression -> UnaryExpression .)


state 125

    (224) UnaryExpression -> PreIncrementExpression .

    MUL             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    QUO             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    REM             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    ADD             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    SUB             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    SHL             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    SHR             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    SHR_UN          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    LSS             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    GTR             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    LEQ             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    GEQ             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    INSTANCEOF      reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    EQL             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    NEQ             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    AND             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    XOR             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    OR              reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    LAND            reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    QUES            reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    LOR             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    RBRACE          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    COLON           reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    RBRACK          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    SEMICOLON       reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)


state 126

    (225) UnaryExpression -> PreDecrementExpression .

    MUL             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    QUO             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    REM             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    ADD             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    SUB             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    SHL             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    SHR             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    SHR_UN          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    LSS             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    GTR             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    LEQ             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    GEQ             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    INSTANCEOF      reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    EQL             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    NEQ             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    AND             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    XOR             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    OR              reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    LAND            reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    QUES            reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    LOR             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    RBRACE          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    COLON           reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    RBRACK          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    SEMICOLON       reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)


state 127

    (228) UnaryExpression -> UnaryExpressionNotPlusMinus .

    MUL             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    QUO             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    REM             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    ADD             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SUB             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SHL             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SHR             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SHR_UN          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LSS             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    GTR             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LEQ             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    GEQ             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    EQL             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    NEQ             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    AND             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    XOR             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    OR              reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LAND            reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    QUES            reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    LOR             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    RBRACE          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    COLON           reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    RBRACK          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)
    SEMICOLON       reduce using rule 228 (UnaryExpression -> UnaryExpressionNotPlusMinus .)


state 128

    (229) PreIncrementExpression -> INC . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 258
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 129

    (230) PreDecrementExpression -> DEC . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 259
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 130

    (231) UnaryExpressionNotPlusMinus -> PostfixExpression .
    (239) PostIncrementExpression -> PostfixExpression . INC
    (240) PostDecrementExpression -> PostfixExpression . DEC

    MUL             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    QUO             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    REM             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    ADD             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SUB             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SHL             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SHR             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SHR_UN          reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LSS             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    GTR             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LEQ             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    GEQ             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    INSTANCEOF      reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    EQL             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    NEQ             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    AND             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    XOR             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    OR              reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LAND            reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    QUES            reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    LOR             reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    RPAREN          reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    COMMA           reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    RBRACE          reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    COLON           reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    RBRACK          reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    SEMICOLON       reduce using rule 231 (UnaryExpressionNotPlusMinus -> PostfixExpression .)
    INC             shift and go to state 260
    DEC             shift and go to state 261


state 131

    (232) UnaryExpressionNotPlusMinus -> LNOT . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 262
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 132

    (233) UnaryExpressionNotPlusMinus -> NOT . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 263
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 133

    (234) UnaryExpressionNotPlusMinus -> CastExpression .

    MUL             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    QUO             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    REM             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    ADD             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SUB             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SHL             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SHR             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SHR_UN          reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LSS             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    GTR             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LEQ             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    GEQ             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    INSTANCEOF      reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    EQL             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    NEQ             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    AND             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    XOR             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    OR              reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LAND            reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    QUES            reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    LOR             reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    RPAREN          reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    COMMA           reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    RBRACE          reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    COLON           reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    RBRACK          reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)
    SEMICOLON       reduce using rule 234 (UnaryExpressionNotPlusMinus -> CastExpression .)


state 134

    (235) PostfixExpression -> Primary .
    (120) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> Primary . PERIOD IDENT
    (141) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT

    INC             reduce using rule 235 (PostfixExpression -> Primary .)
    DEC             reduce using rule 235 (PostfixExpression -> Primary .)
    MUL             reduce using rule 235 (PostfixExpression -> Primary .)
    QUO             reduce using rule 235 (PostfixExpression -> Primary .)
    REM             reduce using rule 235 (PostfixExpression -> Primary .)
    ADD             reduce using rule 235 (PostfixExpression -> Primary .)
    SUB             reduce using rule 235 (PostfixExpression -> Primary .)
    SHL             reduce using rule 235 (PostfixExpression -> Primary .)
    SHR             reduce using rule 235 (PostfixExpression -> Primary .)
    SHR_UN          reduce using rule 235 (PostfixExpression -> Primary .)
    LSS             reduce using rule 235 (PostfixExpression -> Primary .)
    GTR             reduce using rule 235 (PostfixExpression -> Primary .)
    LEQ             reduce using rule 235 (PostfixExpression -> Primary .)
    GEQ             reduce using rule 235 (PostfixExpression -> Primary .)
    INSTANCEOF      reduce using rule 235 (PostfixExpression -> Primary .)
    EQL             reduce using rule 235 (PostfixExpression -> Primary .)
    NEQ             reduce using rule 235 (PostfixExpression -> Primary .)
    AND             reduce using rule 235 (PostfixExpression -> Primary .)
    XOR             reduce using rule 235 (PostfixExpression -> Primary .)
    OR              reduce using rule 235 (PostfixExpression -> Primary .)
    LAND            reduce using rule 235 (PostfixExpression -> Primary .)
    QUES            reduce using rule 235 (PostfixExpression -> Primary .)
    LOR             reduce using rule 235 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 235 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 235 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 235 (PostfixExpression -> Primary .)
    COLON           reduce using rule 235 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 235 (PostfixExpression -> Primary .)
    SEMICOLON       reduce using rule 235 (PostfixExpression -> Primary .)
    PERIOD          shift and go to state 264
    COLON_SEP       shift and go to state 265


state 135

    (236) PostfixExpression -> ExpressionName .
    (119) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (136) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (140) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT

    INC             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    DEC             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    MUL             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    QUO             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    REM             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    ADD             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SUB             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SHL             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SHR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SHR_UN          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LSS             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    GTR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LEQ             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    GEQ             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    INSTANCEOF      reduce using rule 236 (PostfixExpression -> ExpressionName .)
    EQL             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    NEQ             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    AND             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    XOR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    OR              reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LAND            reduce using rule 236 (PostfixExpression -> ExpressionName .)
    QUES            reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LOR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    RPAREN          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    COMMA           reduce using rule 236 (PostfixExpression -> ExpressionName .)
    RBRACE          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    COLON           reduce using rule 236 (PostfixExpression -> ExpressionName .)
    RBRACK          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SEMICOLON       reduce using rule 236 (PostfixExpression -> ExpressionName .)
    PERIOD          shift and go to state 266
    LBRACK          shift and go to state 267
    COLON_SEP       shift and go to state 268


state 136

    (237) PostfixExpression -> PostIncrementExpression .

    INC             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    MUL             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    QUO             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    REM             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    ADD             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    SUB             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    SHL             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    SHR             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    SHR_UN          reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    LSS             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    GTR             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    LEQ             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    GEQ             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    INSTANCEOF      reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    EQL             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    NEQ             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    AND             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    XOR             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    OR              reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    LAND            reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    QUES            reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    LOR             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    RBRACE          reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    COLON           reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    RBRACK          reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    SEMICOLON       reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)


state 137

    (238) PostfixExpression -> PostDecrementExpression .

    INC             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    MUL             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    QUO             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    REM             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    ADD             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    SUB             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    SHL             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    SHR             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    SHR_UN          reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    LSS             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    GTR             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    LEQ             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    GEQ             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    INSTANCEOF      reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    EQL             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    NEQ             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    AND             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    XOR             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    OR              reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    LAND            reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    QUES            reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    LOR             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    RBRACE          reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    COLON           reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    RBRACK          reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    SEMICOLON       reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)


state 138

    (467) ArrayType -> PrimitiveType . Dims
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Dims                           shift and go to state 269
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 139

    (100) Primary -> PrimaryNoNewArray .
    (137) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK

    PERIOD          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    COLON_SEP       reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    QUO             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    REM             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SHL             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SHR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SHR_UN          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LSS             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    GTR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LEQ             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    GEQ             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    INSTANCEOF      reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    EQL             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    NEQ             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    XOR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LAND            reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    QUES            reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LOR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SEMICOLON       reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LBRACK          shift and go to state 271


state 140

    (101) Primary -> ArrayCreationExpression .

    PERIOD          reduce using rule 101 (Primary -> ArrayCreationExpression .)
    COLON_SEP       reduce using rule 101 (Primary -> ArrayCreationExpression .)
    INC             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    DEC             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    MUL             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    QUO             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    REM             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    ADD             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    SUB             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    SHL             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    SHR             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    SHR_UN          reduce using rule 101 (Primary -> ArrayCreationExpression .)
    LSS             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    GTR             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    LEQ             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    GEQ             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    INSTANCEOF      reduce using rule 101 (Primary -> ArrayCreationExpression .)
    EQL             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    NEQ             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    AND             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    XOR             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    OR              reduce using rule 101 (Primary -> ArrayCreationExpression .)
    LAND            reduce using rule 101 (Primary -> ArrayCreationExpression .)
    QUES            reduce using rule 101 (Primary -> ArrayCreationExpression .)
    LOR             reduce using rule 101 (Primary -> ArrayCreationExpression .)
    RPAREN          reduce using rule 101 (Primary -> ArrayCreationExpression .)
    COMMA           reduce using rule 101 (Primary -> ArrayCreationExpression .)
    RBRACE          reduce using rule 101 (Primary -> ArrayCreationExpression .)
    COLON           reduce using rule 101 (Primary -> ArrayCreationExpression .)
    RBRACK          reduce using rule 101 (Primary -> ArrayCreationExpression .)
    SEMICOLON       reduce using rule 101 (Primary -> ArrayCreationExpression .)


state 141

    (276) ExpressionName -> AmbiguousName . PERIOD IDENT
    (281) AmbiguousName -> AmbiguousName . PERIOD IDENT

    PERIOD          shift and go to state 272


state 142

    (102) PrimaryNoNewArray -> Literal .

    LBRACK          reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    PERIOD          reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    COLON_SEP       reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    INC             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    DEC             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    MUL             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    QUO             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    REM             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    ADD             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    SUB             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    SHL             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    SHR             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    SHR_UN          reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    LSS             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    GTR             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    LEQ             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    GEQ             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    INSTANCEOF      reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    EQL             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    NEQ             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    AND             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    XOR             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    OR              reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    LAND            reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    QUES            reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    LOR             reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    RPAREN          reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    COMMA           reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    RBRACE          reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    COLON           reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    RBRACK          reduce using rule 102 (PrimaryNoNewArray -> Literal .)
    SEMICOLON       reduce using rule 102 (PrimaryNoNewArray -> Literal .)


state 143

    (103) PrimaryNoNewArray -> ClassLiteral .

    LBRACK          reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    PERIOD          reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    COLON_SEP       reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    INC             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    DEC             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    MUL             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    QUO             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    REM             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    ADD             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    SUB             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    SHL             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    SHR             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    SHR_UN          reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    LSS             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    GTR             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    LEQ             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    GEQ             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    INSTANCEOF      reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    EQL             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    NEQ             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    AND             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    XOR             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    OR              reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    LAND            reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    QUES            reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    LOR             reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    RPAREN          reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    COMMA           reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    RBRACE          reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    COLON           reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    RBRACK          reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)
    SEMICOLON       reduce using rule 103 (PrimaryNoNewArray -> ClassLiteral .)


state 144

    (104) PrimaryNoNewArray -> THIS .

    LBRACK          reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    PERIOD          reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    COLON_SEP       reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    INC             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    DEC             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    MUL             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    QUO             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    REM             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    ADD             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    SUB             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    SHL             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    SHR             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    SHR_UN          reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    LSS             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    GTR             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    LEQ             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    GEQ             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    INSTANCEOF      reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    EQL             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    NEQ             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    AND             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    XOR             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    OR              reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    LAND            reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    QUES            reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    LOR             reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    RPAREN          reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    COMMA           reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    RBRACE          reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    COLON           reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    RBRACK          reduce using rule 104 (PrimaryNoNewArray -> THIS .)
    SEMICOLON       reduce using rule 104 (PrimaryNoNewArray -> THIS .)


state 145

    (107) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    LBRACK          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    PERIOD          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    MUL             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    QUO             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    REM             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    ADD             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SUB             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SHL             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SHR             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LSS             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GTR             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LEQ             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GEQ             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    EQL             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    NEQ             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    AND             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    XOR             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    OR              reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LAND            reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    QUES            reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LOR             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACE          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON           reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACK          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 146

    (108) PrimaryNoNewArray -> FieldAccess .

    LBRACK          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    PERIOD          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    COLON_SEP       reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    QUO             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    REM             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SHL             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SHR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SHR_UN          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LSS             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    GTR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LEQ             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    GEQ             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    INSTANCEOF      reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    EQL             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    NEQ             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    XOR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LAND            reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    QUES            reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LOR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SEMICOLON       reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)


state 147

    (109) PrimaryNoNewArray -> ArrayAccess .

    LBRACK          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    PERIOD          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    COLON_SEP       reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    QUO             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    REM             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SHL             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SHR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SHR_UN          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LSS             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    GTR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LEQ             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    GEQ             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    INSTANCEOF      reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    EQL             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    NEQ             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    XOR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LAND            reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    QUES            reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LOR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SEMICOLON       reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)


state 148

    (110) PrimaryNoNewArray -> MethodInvocation .

    LBRACK          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    PERIOD          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    COLON_SEP       reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    MUL             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    QUO             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    REM             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    ADD             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    SUB             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    SHL             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    SHR             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    SHR_UN          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    LSS             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    GTR             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    LEQ             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    GEQ             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    INSTANCEOF      reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    EQL             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    NEQ             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    AND             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    XOR             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    OR              reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    LAND            reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    QUES            reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    LOR             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    RPAREN          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    COMMA           reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACE          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    COLON           reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACK          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    SEMICOLON       reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)


state 149

    (111) PrimaryNoNewArray -> MethodReference .

    LBRACK          reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    PERIOD          reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    COLON_SEP       reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    INC             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    DEC             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    MUL             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    QUO             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    REM             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    ADD             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    SUB             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    SHL             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    SHR             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    SHR_UN          reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    LSS             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    GTR             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    LEQ             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    GEQ             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    INSTANCEOF      reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    EQL             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    NEQ             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    AND             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    XOR             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    OR              reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    LAND            reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    QUES            reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    LOR             reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    RPAREN          reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    COMMA           reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    RBRACE          reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    COLON           reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    RBRACK          reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)
    SEMICOLON       reduce using rule 111 (PrimaryNoNewArray -> MethodReference .)


state 150

    (154) ArrayCreationExpression -> NEW . PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> NEW . ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> NEW . PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> NEW . ClassOrInterfaceType Dims ArrayInitializer
    (121) UnqualifiedClassInstanceCreationExpression -> NEW . ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    PrimitiveType                  shift and go to state 273
    ClassOrInterfaceType           shift and go to state 274
    ZooTypeArguments               shift and go to state 275
    AnnotationS                    shift and go to state 276
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 279
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 151

    (458) ReferenceType -> ClassOrInterfaceType .
    (464) ClassType -> ClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments
    (468) ArrayType -> ClassOrInterfaceType . Dims
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    COLON_SEP       reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    PERIOD          shift and go to state 192
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 270
    Dims                           shift and go to state 281
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 152

    (2) Literal -> BOOL_LIT .

    LBRACK          reduce using rule 2 (Literal -> BOOL_LIT .)
    PERIOD          reduce using rule 2 (Literal -> BOOL_LIT .)
    COLON_SEP       reduce using rule 2 (Literal -> BOOL_LIT .)
    INC             reduce using rule 2 (Literal -> BOOL_LIT .)
    DEC             reduce using rule 2 (Literal -> BOOL_LIT .)
    MUL             reduce using rule 2 (Literal -> BOOL_LIT .)
    QUO             reduce using rule 2 (Literal -> BOOL_LIT .)
    REM             reduce using rule 2 (Literal -> BOOL_LIT .)
    ADD             reduce using rule 2 (Literal -> BOOL_LIT .)
    SUB             reduce using rule 2 (Literal -> BOOL_LIT .)
    SHL             reduce using rule 2 (Literal -> BOOL_LIT .)
    SHR             reduce using rule 2 (Literal -> BOOL_LIT .)
    SHR_UN          reduce using rule 2 (Literal -> BOOL_LIT .)
    LSS             reduce using rule 2 (Literal -> BOOL_LIT .)
    GTR             reduce using rule 2 (Literal -> BOOL_LIT .)
    LEQ             reduce using rule 2 (Literal -> BOOL_LIT .)
    GEQ             reduce using rule 2 (Literal -> BOOL_LIT .)
    INSTANCEOF      reduce using rule 2 (Literal -> BOOL_LIT .)
    EQL             reduce using rule 2 (Literal -> BOOL_LIT .)
    NEQ             reduce using rule 2 (Literal -> BOOL_LIT .)
    AND             reduce using rule 2 (Literal -> BOOL_LIT .)
    XOR             reduce using rule 2 (Literal -> BOOL_LIT .)
    OR              reduce using rule 2 (Literal -> BOOL_LIT .)
    LAND            reduce using rule 2 (Literal -> BOOL_LIT .)
    QUES            reduce using rule 2 (Literal -> BOOL_LIT .)
    LOR             reduce using rule 2 (Literal -> BOOL_LIT .)
    RPAREN          reduce using rule 2 (Literal -> BOOL_LIT .)
    COMMA           reduce using rule 2 (Literal -> BOOL_LIT .)
    RBRACE          reduce using rule 2 (Literal -> BOOL_LIT .)
    COLON           reduce using rule 2 (Literal -> BOOL_LIT .)
    RBRACK          reduce using rule 2 (Literal -> BOOL_LIT .)
    SEMICOLON       reduce using rule 2 (Literal -> BOOL_LIT .)


state 153

    (3) Literal -> NULL_LIT .

    LBRACK          reduce using rule 3 (Literal -> NULL_LIT .)
    PERIOD          reduce using rule 3 (Literal -> NULL_LIT .)
    COLON_SEP       reduce using rule 3 (Literal -> NULL_LIT .)
    INC             reduce using rule 3 (Literal -> NULL_LIT .)
    DEC             reduce using rule 3 (Literal -> NULL_LIT .)
    MUL             reduce using rule 3 (Literal -> NULL_LIT .)
    QUO             reduce using rule 3 (Literal -> NULL_LIT .)
    REM             reduce using rule 3 (Literal -> NULL_LIT .)
    ADD             reduce using rule 3 (Literal -> NULL_LIT .)
    SUB             reduce using rule 3 (Literal -> NULL_LIT .)
    SHL             reduce using rule 3 (Literal -> NULL_LIT .)
    SHR             reduce using rule 3 (Literal -> NULL_LIT .)
    SHR_UN          reduce using rule 3 (Literal -> NULL_LIT .)
    LSS             reduce using rule 3 (Literal -> NULL_LIT .)
    GTR             reduce using rule 3 (Literal -> NULL_LIT .)
    LEQ             reduce using rule 3 (Literal -> NULL_LIT .)
    GEQ             reduce using rule 3 (Literal -> NULL_LIT .)
    INSTANCEOF      reduce using rule 3 (Literal -> NULL_LIT .)
    EQL             reduce using rule 3 (Literal -> NULL_LIT .)
    NEQ             reduce using rule 3 (Literal -> NULL_LIT .)
    AND             reduce using rule 3 (Literal -> NULL_LIT .)
    XOR             reduce using rule 3 (Literal -> NULL_LIT .)
    OR              reduce using rule 3 (Literal -> NULL_LIT .)
    LAND            reduce using rule 3 (Literal -> NULL_LIT .)
    QUES            reduce using rule 3 (Literal -> NULL_LIT .)
    LOR             reduce using rule 3 (Literal -> NULL_LIT .)
    RPAREN          reduce using rule 3 (Literal -> NULL_LIT .)
    COMMA           reduce using rule 3 (Literal -> NULL_LIT .)
    RBRACE          reduce using rule 3 (Literal -> NULL_LIT .)
    COLON           reduce using rule 3 (Literal -> NULL_LIT .)
    RBRACK          reduce using rule 3 (Literal -> NULL_LIT .)
    SEMICOLON       reduce using rule 3 (Literal -> NULL_LIT .)


state 154

    (4) Literal -> DECIMAL_LIT .

    LBRACK          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    PERIOD          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    COLON_SEP       reduce using rule 4 (Literal -> DECIMAL_LIT .)
    INC             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    DEC             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    MUL             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    QUO             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    REM             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    ADD             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SUB             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SHL             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SHR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SHR_UN          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LSS             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    GTR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LEQ             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    GEQ             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    INSTANCEOF      reduce using rule 4 (Literal -> DECIMAL_LIT .)
    EQL             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    NEQ             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    AND             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    XOR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    OR              reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LAND            reduce using rule 4 (Literal -> DECIMAL_LIT .)
    QUES            reduce using rule 4 (Literal -> DECIMAL_LIT .)
    LOR             reduce using rule 4 (Literal -> DECIMAL_LIT .)
    RPAREN          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    COMMA           reduce using rule 4 (Literal -> DECIMAL_LIT .)
    RBRACE          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    COLON           reduce using rule 4 (Literal -> DECIMAL_LIT .)
    RBRACK          reduce using rule 4 (Literal -> DECIMAL_LIT .)
    SEMICOLON       reduce using rule 4 (Literal -> DECIMAL_LIT .)


state 155

    (5) Literal -> HEX_LIT .

    LBRACK          reduce using rule 5 (Literal -> HEX_LIT .)
    PERIOD          reduce using rule 5 (Literal -> HEX_LIT .)
    COLON_SEP       reduce using rule 5 (Literal -> HEX_LIT .)
    INC             reduce using rule 5 (Literal -> HEX_LIT .)
    DEC             reduce using rule 5 (Literal -> HEX_LIT .)
    MUL             reduce using rule 5 (Literal -> HEX_LIT .)
    QUO             reduce using rule 5 (Literal -> HEX_LIT .)
    REM             reduce using rule 5 (Literal -> HEX_LIT .)
    ADD             reduce using rule 5 (Literal -> HEX_LIT .)
    SUB             reduce using rule 5 (Literal -> HEX_LIT .)
    SHL             reduce using rule 5 (Literal -> HEX_LIT .)
    SHR             reduce using rule 5 (Literal -> HEX_LIT .)
    SHR_UN          reduce using rule 5 (Literal -> HEX_LIT .)
    LSS             reduce using rule 5 (Literal -> HEX_LIT .)
    GTR             reduce using rule 5 (Literal -> HEX_LIT .)
    LEQ             reduce using rule 5 (Literal -> HEX_LIT .)
    GEQ             reduce using rule 5 (Literal -> HEX_LIT .)
    INSTANCEOF      reduce using rule 5 (Literal -> HEX_LIT .)
    EQL             reduce using rule 5 (Literal -> HEX_LIT .)
    NEQ             reduce using rule 5 (Literal -> HEX_LIT .)
    AND             reduce using rule 5 (Literal -> HEX_LIT .)
    XOR             reduce using rule 5 (Literal -> HEX_LIT .)
    OR              reduce using rule 5 (Literal -> HEX_LIT .)
    LAND            reduce using rule 5 (Literal -> HEX_LIT .)
    QUES            reduce using rule 5 (Literal -> HEX_LIT .)
    LOR             reduce using rule 5 (Literal -> HEX_LIT .)
    RPAREN          reduce using rule 5 (Literal -> HEX_LIT .)
    COMMA           reduce using rule 5 (Literal -> HEX_LIT .)
    RBRACE          reduce using rule 5 (Literal -> HEX_LIT .)
    COLON           reduce using rule 5 (Literal -> HEX_LIT .)
    RBRACK          reduce using rule 5 (Literal -> HEX_LIT .)
    SEMICOLON       reduce using rule 5 (Literal -> HEX_LIT .)


state 156

    (6) Literal -> OCTAL_LIT .

    LBRACK          reduce using rule 6 (Literal -> OCTAL_LIT .)
    PERIOD          reduce using rule 6 (Literal -> OCTAL_LIT .)
    COLON_SEP       reduce using rule 6 (Literal -> OCTAL_LIT .)
    INC             reduce using rule 6 (Literal -> OCTAL_LIT .)
    DEC             reduce using rule 6 (Literal -> OCTAL_LIT .)
    MUL             reduce using rule 6 (Literal -> OCTAL_LIT .)
    QUO             reduce using rule 6 (Literal -> OCTAL_LIT .)
    REM             reduce using rule 6 (Literal -> OCTAL_LIT .)
    ADD             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SUB             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SHL             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SHR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    SHR_UN          reduce using rule 6 (Literal -> OCTAL_LIT .)
    LSS             reduce using rule 6 (Literal -> OCTAL_LIT .)
    GTR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    LEQ             reduce using rule 6 (Literal -> OCTAL_LIT .)
    GEQ             reduce using rule 6 (Literal -> OCTAL_LIT .)
    INSTANCEOF      reduce using rule 6 (Literal -> OCTAL_LIT .)
    EQL             reduce using rule 6 (Literal -> OCTAL_LIT .)
    NEQ             reduce using rule 6 (Literal -> OCTAL_LIT .)
    AND             reduce using rule 6 (Literal -> OCTAL_LIT .)
    XOR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    OR              reduce using rule 6 (Literal -> OCTAL_LIT .)
    LAND            reduce using rule 6 (Literal -> OCTAL_LIT .)
    QUES            reduce using rule 6 (Literal -> OCTAL_LIT .)
    LOR             reduce using rule 6 (Literal -> OCTAL_LIT .)
    RPAREN          reduce using rule 6 (Literal -> OCTAL_LIT .)
    COMMA           reduce using rule 6 (Literal -> OCTAL_LIT .)
    RBRACE          reduce using rule 6 (Literal -> OCTAL_LIT .)
    COLON           reduce using rule 6 (Literal -> OCTAL_LIT .)
    RBRACK          reduce using rule 6 (Literal -> OCTAL_LIT .)
    SEMICOLON       reduce using rule 6 (Literal -> OCTAL_LIT .)


state 157

    (7) Literal -> BINARY_LIT .

    LBRACK          reduce using rule 7 (Literal -> BINARY_LIT .)
    PERIOD          reduce using rule 7 (Literal -> BINARY_LIT .)
    COLON_SEP       reduce using rule 7 (Literal -> BINARY_LIT .)
    INC             reduce using rule 7 (Literal -> BINARY_LIT .)
    DEC             reduce using rule 7 (Literal -> BINARY_LIT .)
    MUL             reduce using rule 7 (Literal -> BINARY_LIT .)
    QUO             reduce using rule 7 (Literal -> BINARY_LIT .)
    REM             reduce using rule 7 (Literal -> BINARY_LIT .)
    ADD             reduce using rule 7 (Literal -> BINARY_LIT .)
    SUB             reduce using rule 7 (Literal -> BINARY_LIT .)
    SHL             reduce using rule 7 (Literal -> BINARY_LIT .)
    SHR             reduce using rule 7 (Literal -> BINARY_LIT .)
    SHR_UN          reduce using rule 7 (Literal -> BINARY_LIT .)
    LSS             reduce using rule 7 (Literal -> BINARY_LIT .)
    GTR             reduce using rule 7 (Literal -> BINARY_LIT .)
    LEQ             reduce using rule 7 (Literal -> BINARY_LIT .)
    GEQ             reduce using rule 7 (Literal -> BINARY_LIT .)
    INSTANCEOF      reduce using rule 7 (Literal -> BINARY_LIT .)
    EQL             reduce using rule 7 (Literal -> BINARY_LIT .)
    NEQ             reduce using rule 7 (Literal -> BINARY_LIT .)
    AND             reduce using rule 7 (Literal -> BINARY_LIT .)
    XOR             reduce using rule 7 (Literal -> BINARY_LIT .)
    OR              reduce using rule 7 (Literal -> BINARY_LIT .)
    LAND            reduce using rule 7 (Literal -> BINARY_LIT .)
    QUES            reduce using rule 7 (Literal -> BINARY_LIT .)
    LOR             reduce using rule 7 (Literal -> BINARY_LIT .)
    RPAREN          reduce using rule 7 (Literal -> BINARY_LIT .)
    COMMA           reduce using rule 7 (Literal -> BINARY_LIT .)
    RBRACE          reduce using rule 7 (Literal -> BINARY_LIT .)
    COLON           reduce using rule 7 (Literal -> BINARY_LIT .)
    RBRACK          reduce using rule 7 (Literal -> BINARY_LIT .)
    SEMICOLON       reduce using rule 7 (Literal -> BINARY_LIT .)


state 158

    (8) Literal -> FLOAT_DEC_LIT .

    LBRACK          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    PERIOD          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    COLON_SEP       reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    INC             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    DEC             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    MUL             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    QUO             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    REM             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    ADD             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SUB             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SHL             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SHR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SHR_UN          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LSS             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    GTR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LEQ             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    GEQ             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    INSTANCEOF      reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    EQL             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    NEQ             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    AND             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    XOR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    OR              reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LAND            reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    QUES            reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    LOR             reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    RPAREN          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    COMMA           reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    RBRACE          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    COLON           reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    RBRACK          reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)
    SEMICOLON       reduce using rule 8 (Literal -> FLOAT_DEC_LIT .)


state 159

    (9) Literal -> FLOAT_HEX_LIT .

    LBRACK          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    PERIOD          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    COLON_SEP       reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    INC             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    DEC             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    MUL             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    QUO             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    REM             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    ADD             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SUB             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SHL             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SHR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SHR_UN          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LSS             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    GTR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LEQ             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    GEQ             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    INSTANCEOF      reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    EQL             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    NEQ             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    AND             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    XOR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    OR              reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LAND            reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    QUES            reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    LOR             reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    RPAREN          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    COMMA           reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    RBRACE          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    COLON           reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    RBRACK          reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)
    SEMICOLON       reduce using rule 9 (Literal -> FLOAT_HEX_LIT .)


state 160

    (10) Literal -> STRING_LIT .

    LBRACK          reduce using rule 10 (Literal -> STRING_LIT .)
    PERIOD          reduce using rule 10 (Literal -> STRING_LIT .)
    COLON_SEP       reduce using rule 10 (Literal -> STRING_LIT .)
    INC             reduce using rule 10 (Literal -> STRING_LIT .)
    DEC             reduce using rule 10 (Literal -> STRING_LIT .)
    MUL             reduce using rule 10 (Literal -> STRING_LIT .)
    QUO             reduce using rule 10 (Literal -> STRING_LIT .)
    REM             reduce using rule 10 (Literal -> STRING_LIT .)
    ADD             reduce using rule 10 (Literal -> STRING_LIT .)
    SUB             reduce using rule 10 (Literal -> STRING_LIT .)
    SHL             reduce using rule 10 (Literal -> STRING_LIT .)
    SHR             reduce using rule 10 (Literal -> STRING_LIT .)
    SHR_UN          reduce using rule 10 (Literal -> STRING_LIT .)
    LSS             reduce using rule 10 (Literal -> STRING_LIT .)
    GTR             reduce using rule 10 (Literal -> STRING_LIT .)
    LEQ             reduce using rule 10 (Literal -> STRING_LIT .)
    GEQ             reduce using rule 10 (Literal -> STRING_LIT .)
    INSTANCEOF      reduce using rule 10 (Literal -> STRING_LIT .)
    EQL             reduce using rule 10 (Literal -> STRING_LIT .)
    NEQ             reduce using rule 10 (Literal -> STRING_LIT .)
    AND             reduce using rule 10 (Literal -> STRING_LIT .)
    XOR             reduce using rule 10 (Literal -> STRING_LIT .)
    OR              reduce using rule 10 (Literal -> STRING_LIT .)
    LAND            reduce using rule 10 (Literal -> STRING_LIT .)
    QUES            reduce using rule 10 (Literal -> STRING_LIT .)
    LOR             reduce using rule 10 (Literal -> STRING_LIT .)
    RPAREN          reduce using rule 10 (Literal -> STRING_LIT .)
    COMMA           reduce using rule 10 (Literal -> STRING_LIT .)
    RBRACE          reduce using rule 10 (Literal -> STRING_LIT .)
    COLON           reduce using rule 10 (Literal -> STRING_LIT .)
    RBRACK          reduce using rule 10 (Literal -> STRING_LIT .)
    SEMICOLON       reduce using rule 10 (Literal -> STRING_LIT .)


state 161

    (11) Literal -> CHAR_LIT .

    LBRACK          reduce using rule 11 (Literal -> CHAR_LIT .)
    PERIOD          reduce using rule 11 (Literal -> CHAR_LIT .)
    COLON_SEP       reduce using rule 11 (Literal -> CHAR_LIT .)
    INC             reduce using rule 11 (Literal -> CHAR_LIT .)
    DEC             reduce using rule 11 (Literal -> CHAR_LIT .)
    MUL             reduce using rule 11 (Literal -> CHAR_LIT .)
    QUO             reduce using rule 11 (Literal -> CHAR_LIT .)
    REM             reduce using rule 11 (Literal -> CHAR_LIT .)
    ADD             reduce using rule 11 (Literal -> CHAR_LIT .)
    SUB             reduce using rule 11 (Literal -> CHAR_LIT .)
    SHL             reduce using rule 11 (Literal -> CHAR_LIT .)
    SHR             reduce using rule 11 (Literal -> CHAR_LIT .)
    SHR_UN          reduce using rule 11 (Literal -> CHAR_LIT .)
    LSS             reduce using rule 11 (Literal -> CHAR_LIT .)
    GTR             reduce using rule 11 (Literal -> CHAR_LIT .)
    LEQ             reduce using rule 11 (Literal -> CHAR_LIT .)
    GEQ             reduce using rule 11 (Literal -> CHAR_LIT .)
    INSTANCEOF      reduce using rule 11 (Literal -> CHAR_LIT .)
    EQL             reduce using rule 11 (Literal -> CHAR_LIT .)
    NEQ             reduce using rule 11 (Literal -> CHAR_LIT .)
    AND             reduce using rule 11 (Literal -> CHAR_LIT .)
    XOR             reduce using rule 11 (Literal -> CHAR_LIT .)
    OR              reduce using rule 11 (Literal -> CHAR_LIT .)
    LAND            reduce using rule 11 (Literal -> CHAR_LIT .)
    QUES            reduce using rule 11 (Literal -> CHAR_LIT .)
    LOR             reduce using rule 11 (Literal -> CHAR_LIT .)
    RPAREN          reduce using rule 11 (Literal -> CHAR_LIT .)
    COMMA           reduce using rule 11 (Literal -> CHAR_LIT .)
    RBRACE          reduce using rule 11 (Literal -> CHAR_LIT .)
    COLON           reduce using rule 11 (Literal -> CHAR_LIT .)
    RBRACK          reduce using rule 11 (Literal -> CHAR_LIT .)
    SEMICOLON       reduce using rule 11 (Literal -> CHAR_LIT .)


state 162

    (113) ClassLiteral -> NumericType . LBRACKRBRACKS PERIOD CLASS
    (116) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (117) LBRACKRBRACKS -> . empty
    (1) empty -> .

    LBRACK          shift and go to state 200
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 282
    empty                          shift and go to state 201

state 163

    (114) ClassLiteral -> BOOLEAN . LBRACKRBRACKS PERIOD CLASS
    (116) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (117) LBRACKRBRACKS -> . empty
    (1) empty -> .

    LBRACK          shift and go to state 200
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 283
    empty                          shift and go to state 201

state 164

    (115) ClassLiteral -> VOID . PERIOD CLASS

    PERIOD          shift and go to state 284


state 165

    (118) ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .

    LBRACK          reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    PERIOD          reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    INC             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    DEC             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    MUL             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    QUO             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    REM             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    ADD             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SUB             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SHL             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SHR             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LSS             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    GTR             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LEQ             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    GEQ             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    EQL             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    NEQ             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    AND             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    XOR             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    OR              reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LAND            reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    QUES            reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    LOR             reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    RPAREN          reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    COMMA           reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    RBRACE          reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    COLON           reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    RBRACK          reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 118 (ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression .)


state 166

    (134) FieldAccess -> SUPER . PERIOD IDENT
    (142) MethodInvocation -> SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (150) MethodReference -> SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 285
    COLON_SEP       shift and go to state 286


state 167

    (138) MethodInvocation -> MethodName . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 287


state 168

    (152) MethodReference -> ClassType . COLON_SEP ZooTypeArguments NEW
    (461) ClassOrInterfaceType -> ClassType .
    (465) InterfaceType -> ClassType .

  ! shift/reduce conflict for COLON_SEP resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for ATRATE resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LBRACE resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! shift/reduce conflict for COLON_SEP resolved as shift
    COLON_SEP       shift and go to state 288
    PERIOD          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    ATRATE          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LBRACE          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)

  ! COLON_SEP       [ reduce using rule 461 (ClassOrInterfaceType -> ClassType .) ]
  ! PERIOD          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! ATRATE          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LBRACE          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! COLON_SEP       [ reduce using rule 465 (InterfaceType -> ClassType .) ]


state 169

    (153) MethodReference -> ArrayType . COLON_SEP NEW
    (460) ReferenceType -> ArrayType .

  ! shift/reduce conflict for COLON_SEP resolved as shift
    COLON_SEP       shift and go to state 289

  ! COLON_SEP       [ reduce using rule 460 (ReferenceType -> ArrayType .) ]


state 170

    (449) NumericType -> IntegralType .

    LBRACK          reduce using rule 449 (NumericType -> IntegralType .)
    PERIOD          reduce using rule 449 (NumericType -> IntegralType .)
    ATRATE          reduce using rule 449 (NumericType -> IntegralType .)
    LBRACE          reduce using rule 449 (NumericType -> IntegralType .)
    RPAREN          reduce using rule 449 (NumericType -> IntegralType .)
    IDENT           reduce using rule 449 (NumericType -> IntegralType .)
    THIS            reduce using rule 449 (NumericType -> IntegralType .)
    ELLIPSIS        reduce using rule 449 (NumericType -> IntegralType .)


state 171

    (450) NumericType -> FloatingPointType .

    LBRACK          reduce using rule 450 (NumericType -> FloatingPointType .)
    PERIOD          reduce using rule 450 (NumericType -> FloatingPointType .)
    ATRATE          reduce using rule 450 (NumericType -> FloatingPointType .)
    LBRACE          reduce using rule 450 (NumericType -> FloatingPointType .)
    RPAREN          reduce using rule 450 (NumericType -> FloatingPointType .)
    IDENT           reduce using rule 450 (NumericType -> FloatingPointType .)
    THIS            reduce using rule 450 (NumericType -> FloatingPointType .)
    ELLIPSIS        reduce using rule 450 (NumericType -> FloatingPointType .)


state 172

    (459) ReferenceType -> TypeVariable .
    (469) ArrayType -> TypeVariable . Dims
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    COLON_SEP       reduce using rule 459 (ReferenceType -> TypeVariable .)
    AND             reduce using rule 459 (ReferenceType -> TypeVariable .)
    RPAREN          reduce using rule 459 (ReferenceType -> TypeVariable .)
    LSS             reduce using rule 459 (ReferenceType -> TypeVariable .)
    GTR             reduce using rule 459 (ReferenceType -> TypeVariable .)
    LEQ             reduce using rule 459 (ReferenceType -> TypeVariable .)
    GEQ             reduce using rule 459 (ReferenceType -> TypeVariable .)
    INSTANCEOF      reduce using rule 459 (ReferenceType -> TypeVariable .)
    EQL             reduce using rule 459 (ReferenceType -> TypeVariable .)
    NEQ             reduce using rule 459 (ReferenceType -> TypeVariable .)
    XOR             reduce using rule 459 (ReferenceType -> TypeVariable .)
    OR              reduce using rule 459 (ReferenceType -> TypeVariable .)
    LAND            reduce using rule 459 (ReferenceType -> TypeVariable .)
    QUES            reduce using rule 459 (ReferenceType -> TypeVariable .)
    LOR             reduce using rule 459 (ReferenceType -> TypeVariable .)
    COMMA           reduce using rule 459 (ReferenceType -> TypeVariable .)
    RBRACE          reduce using rule 459 (ReferenceType -> TypeVariable .)
    COLON           reduce using rule 459 (ReferenceType -> TypeVariable .)
    MUL             reduce using rule 459 (ReferenceType -> TypeVariable .)
    QUO             reduce using rule 459 (ReferenceType -> TypeVariable .)
    REM             reduce using rule 459 (ReferenceType -> TypeVariable .)
    ADD             reduce using rule 459 (ReferenceType -> TypeVariable .)
    SUB             reduce using rule 459 (ReferenceType -> TypeVariable .)
    SHL             reduce using rule 459 (ReferenceType -> TypeVariable .)
    SHR             reduce using rule 459 (ReferenceType -> TypeVariable .)
    SHR_UN          reduce using rule 459 (ReferenceType -> TypeVariable .)
    RBRACK          reduce using rule 459 (ReferenceType -> TypeVariable .)
    SEMICOLON       reduce using rule 459 (ReferenceType -> TypeVariable .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Dims                           shift and go to state 290
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 173

    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (466) TypeVariable -> AnnotationS . IDENT
    (447) PrimitiveType -> AnnotationS . NumericType
    (448) PrimitiveType -> AnnotationS . BOOLEAN
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 291
    BOOLEAN         shift and go to state 293
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171

state 174

    (451) IntegralType -> BYTE .

    LBRACK          reduce using rule 451 (IntegralType -> BYTE .)
    PERIOD          reduce using rule 451 (IntegralType -> BYTE .)
    ATRATE          reduce using rule 451 (IntegralType -> BYTE .)
    LBRACE          reduce using rule 451 (IntegralType -> BYTE .)
    RPAREN          reduce using rule 451 (IntegralType -> BYTE .)
    IDENT           reduce using rule 451 (IntegralType -> BYTE .)
    THIS            reduce using rule 451 (IntegralType -> BYTE .)
    ELLIPSIS        reduce using rule 451 (IntegralType -> BYTE .)


state 175

    (452) IntegralType -> SHORT .

    LBRACK          reduce using rule 452 (IntegralType -> SHORT .)
    PERIOD          reduce using rule 452 (IntegralType -> SHORT .)
    ATRATE          reduce using rule 452 (IntegralType -> SHORT .)
    LBRACE          reduce using rule 452 (IntegralType -> SHORT .)
    RPAREN          reduce using rule 452 (IntegralType -> SHORT .)
    IDENT           reduce using rule 452 (IntegralType -> SHORT .)
    THIS            reduce using rule 452 (IntegralType -> SHORT .)
    ELLIPSIS        reduce using rule 452 (IntegralType -> SHORT .)


state 176

    (453) IntegralType -> INT .

    LBRACK          reduce using rule 453 (IntegralType -> INT .)
    PERIOD          reduce using rule 453 (IntegralType -> INT .)
    ATRATE          reduce using rule 453 (IntegralType -> INT .)
    LBRACE          reduce using rule 453 (IntegralType -> INT .)
    RPAREN          reduce using rule 453 (IntegralType -> INT .)
    IDENT           reduce using rule 453 (IntegralType -> INT .)
    THIS            reduce using rule 453 (IntegralType -> INT .)
    ELLIPSIS        reduce using rule 453 (IntegralType -> INT .)


state 177

    (454) IntegralType -> LONG .

    LBRACK          reduce using rule 454 (IntegralType -> LONG .)
    PERIOD          reduce using rule 454 (IntegralType -> LONG .)
    ATRATE          reduce using rule 454 (IntegralType -> LONG .)
    LBRACE          reduce using rule 454 (IntegralType -> LONG .)
    RPAREN          reduce using rule 454 (IntegralType -> LONG .)
    IDENT           reduce using rule 454 (IntegralType -> LONG .)
    THIS            reduce using rule 454 (IntegralType -> LONG .)
    ELLIPSIS        reduce using rule 454 (IntegralType -> LONG .)


state 178

    (455) IntegralType -> CHAR .

    LBRACK          reduce using rule 455 (IntegralType -> CHAR .)
    PERIOD          reduce using rule 455 (IntegralType -> CHAR .)
    ATRATE          reduce using rule 455 (IntegralType -> CHAR .)
    LBRACE          reduce using rule 455 (IntegralType -> CHAR .)
    RPAREN          reduce using rule 455 (IntegralType -> CHAR .)
    IDENT           reduce using rule 455 (IntegralType -> CHAR .)
    THIS            reduce using rule 455 (IntegralType -> CHAR .)
    ELLIPSIS        reduce using rule 455 (IntegralType -> CHAR .)


state 179

    (456) FloatingPointType -> FLOAT .

    LBRACK          reduce using rule 456 (FloatingPointType -> FLOAT .)
    PERIOD          reduce using rule 456 (FloatingPointType -> FLOAT .)
    ATRATE          reduce using rule 456 (FloatingPointType -> FLOAT .)
    LBRACE          reduce using rule 456 (FloatingPointType -> FLOAT .)
    RPAREN          reduce using rule 456 (FloatingPointType -> FLOAT .)
    IDENT           reduce using rule 456 (FloatingPointType -> FLOAT .)
    THIS            reduce using rule 456 (FloatingPointType -> FLOAT .)
    ELLIPSIS        reduce using rule 456 (FloatingPointType -> FLOAT .)


state 180

    (457) FloatingPointType -> DOUBLE .

    LBRACK          reduce using rule 457 (FloatingPointType -> DOUBLE .)
    PERIOD          reduce using rule 457 (FloatingPointType -> DOUBLE .)
    ATRATE          reduce using rule 457 (FloatingPointType -> DOUBLE .)
    LBRACE          reduce using rule 457 (FloatingPointType -> DOUBLE .)
    RPAREN          reduce using rule 457 (FloatingPointType -> DOUBLE .)
    IDENT           reduce using rule 457 (FloatingPointType -> DOUBLE .)
    THIS            reduce using rule 457 (FloatingPointType -> DOUBLE .)
    ELLIPSIS        reduce using rule 457 (FloatingPointType -> DOUBLE .)


state 181

    (272) TypeName -> PackageOrTypeName PERIOD IDENT .
    (274) PackageOrTypeName -> PackageOrTypeName PERIOD IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    LPAREN          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    ATRATE          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    PACKAGE         reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    PUBLIC          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    PROTECTED       reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    PRIVATE         reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    ABSTRACT        reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    STATIC          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    FINAL           reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    STRICTFP        reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    CLASS           reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    ENUM            reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    INTERFACE       reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    IDENT           reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    RPAREN          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    BOOLEAN         reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    BYTE            reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    SHORT           reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    INT             reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    LONG            reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    CHAR            reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    FLOAT           reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    DOUBLE          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    LBRACE          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    LBRACK          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    QUES            reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    VOID            reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    ELLIPSIS        reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    COMMA           reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    RBRACE          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    LSS             reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    TRANSIENT       reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    VOLATILE        reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    SYNCHRONIZED    reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    NATIVE          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    DEFAULT         reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    SEMICOLON       reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)
    PERIOD          reduce using rule 272 (TypeName -> PackageOrTypeName PERIOD IDENT .)

  ! PERIOD          [ reduce using rule 274 (PackageOrTypeName -> PackageOrTypeName PERIOD IDENT .) ]


state 182

    (289) NormalClassDeclaration -> ClassModifierS CLASS IDENT . ZooTypeParameters
    (15) ZooTypeParameters -> . TypeParameters
    (16) ZooTypeParameters -> . empty
    (299) TypeParameters -> . LSS TypeParameterList GTR
    (1) empty -> .

  ! shift/reduce conflict for LSS resolved as shift
    LSS             shift and go to state 297
    SEMICOLON       reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    $end            reduce using rule 1 (empty -> .)
    TRANSIENT       reduce using rule 1 (empty -> .)
    VOLATILE        reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    NATIVE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)

  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeParameters              shift and go to state 294
    TypeParameters                 shift and go to state 295
    empty                          shift and go to state 296

state 183

    (425) EnumDeclaration -> ClassModifierS ENUM IDENT . ZooSuperinterfaces EnumBody
    (287) ZooSuperinterfaces -> . Superinterfaces
    (288) ZooSuperinterfaces -> . empty
    (304) Superinterfaces -> . IMPLEMENTS InterfaceTypeList
    (1) empty -> .

    IMPLEMENTS      shift and go to state 66
    LBRACE          reduce using rule 1 (empty -> .)

    ZooSuperinterfaces             shift and go to state 298
    Superinterfaces                shift and go to state 64
    empty                          shift and go to state 65

state 184

    (290) NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .

    SEMICOLON       reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    PUBLIC          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    PROTECTED       reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    PRIVATE         reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ABSTRACT        reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    STATIC          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FINAL           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    STRICTFP        reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    EXTENDS         reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ATRATE          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CLASS           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ENUM            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    IMPLEMENTS      reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LBRACE          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    INTERFACE       reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    $end            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    TRANSIENT       reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    VOLATILE        reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SYNCHRONIZED    reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    NATIVE          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LSS             reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    IDENT           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BOOLEAN         reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BYTE            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SHORT           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    INT             reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LONG            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CHAR            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FLOAT           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DOUBLE          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    VOID            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    RBRACE          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    IF              reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    WHILE           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    ASSERT          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SWITCH          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DO              reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BREAK           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CONTINUE        reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    RETURN          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    THROW           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    TRY             reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FOR             reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    INC             reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DEC             reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    SUPER           reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    NEW             reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    THIS            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    LPAREN          reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BOOL_LIT        reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    NULL_LIT        reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DECIMAL_LIT     reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    HEX_LIT         reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    OCTAL_LIT       reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    BINARY_LIT      reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FLOAT_DEC_LIT   reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    FLOAT_HEX_LIT   reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    STRING_LIT      reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CHAR_LIT        reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    CASE            reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)
    DEFAULT         reduce using rule 290 (NormalClassDeclaration -> ZooSuperClass ZooSuperinterfaces ClassBody .)


state 185

    (310) ClassBody -> LBRACE . ClassBodyDeclarationS RBRACE
    (308) ClassBodyDeclarationS -> . ClassBodyDeclaration ClassBodyDeclarationS
    (309) ClassBodyDeclarationS -> . empty
    (311) ClassBodyDeclaration -> . ClassMemberDeclaration
    (312) ClassBodyDeclaration -> . InstanceInitializer
    (313) ClassBodyDeclaration -> . StaticInitializer
    (314) ClassBodyDeclaration -> . ConstructorDeclaration
    (1) empty -> .
    (315) ClassMemberDeclaration -> . FieldDeclaration
    (316) ClassMemberDeclaration -> . MethodDeclaration
    (317) ClassMemberDeclaration -> . ClassDeclaration
    (318) ClassMemberDeclaration -> . InterfaceDeclaration
    (319) ClassMemberDeclaration -> . SEMICOLON
    (403) InstanceInitializer -> . Block
    (404) StaticInitializer -> . STATIC Block
    (407) ConstructorDeclaration -> . ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
    (322) FieldDeclaration -> . FieldModifierS UnannType VariableDeclaratorList SEMICOLON
    (358) MethodDeclaration -> . MethodModifierS MethodHeader MethodBody
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (405) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (406) ConstructorModifierS -> . empty
    (320) FieldModifierS -> . FieldModifier FieldModifierS
    (321) FieldModifierS -> . empty
    (356) MethodModifierS -> . MethodModifier MethodModifierS
    (357) MethodModifierS -> . empty
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (408) ConstructorModifier -> . Annotation
    (409) ConstructorModifier -> . PUBLIC
    (410) ConstructorModifier -> . PROTECTED
    (411) ConstructorModifier -> . PRIVATE
    (323) FieldModifier -> . Annotation
    (324) FieldModifier -> . PUBLIC
    (325) FieldModifier -> . PROTECTED
    (326) FieldModifier -> . PRIVATE
    (327) FieldModifier -> . STATIC
    (328) FieldModifier -> . FINAL
    (329) FieldModifier -> . TRANSIENT
    (330) FieldModifier -> . VOLATILE
    (359) MethodModifier -> . Annotation
    (360) MethodModifier -> . PUBLIC
    (361) MethodModifier -> . PROTECTED
    (362) MethodModifier -> . PRIVATE
    (363) MethodModifier -> . ABSTRACT
    (364) MethodModifier -> . STATIC
    (365) MethodModifier -> . FINAL
    (366) MethodModifier -> . SYNCHRONIZED
    (367) MethodModifier -> . NATIVE
    (368) MethodModifier -> . STRICTFP
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    SEMICOLON       shift and go to state 311
    STATIC          shift and go to state 313
    LBRACE          shift and go to state 299
    PUBLIC          shift and go to state 321
    PROTECTED       shift and go to state 322
    PRIVATE         shift and go to state 323
    FINAL           shift and go to state 324
    TRANSIENT       shift and go to state 325
    VOLATILE        shift and go to state 326
    ABSTRACT        shift and go to state 327
    SYNCHRONIZED    shift and go to state 328
    NATIVE          shift and go to state 329
    STRICTFP        shift and go to state 330
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ClassBodyDeclarationS          shift and go to state 300
    ClassBodyDeclaration           shift and go to state 301
    empty                          shift and go to state 302
    ClassMemberDeclaration         shift and go to state 303
    InstanceInitializer            shift and go to state 304
    StaticInitializer              shift and go to state 305
    ConstructorDeclaration         shift and go to state 306
    FieldDeclaration               shift and go to state 307
    MethodDeclaration              shift and go to state 308
    ClassDeclaration               shift and go to state 309
    InterfaceDeclaration           shift and go to state 310
    Block                          shift and go to state 312
    ConstructorModifierS           shift and go to state 314
    FieldModifierS                 shift and go to state 315
    MethodModifierS                shift and go to state 316
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstructorModifier            shift and go to state 317
    FieldModifier                  shift and go to state 318
    MethodModifier                 shift and go to state 319
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 320
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 186

    (304) Superinterfaces -> IMPLEMENTS InterfaceTypeList .

    LBRACE          reduce using rule 304 (Superinterfaces -> IMPLEMENTS InterfaceTypeList .)


state 187

    (307) InterfaceTypeList -> InterfaceType . COMMAInterfaceTypeS
    (462) ClassOrInterfaceType -> InterfaceType .
    (305) COMMAInterfaceTypeS -> . COMMA InterfaceType COMMAInterfaceTypeS
    (306) COMMAInterfaceTypeS -> . empty
    (1) empty -> .

    PERIOD          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    COMMA           shift and go to state 332
    LBRACE          reduce using rule 1 (empty -> .)

    COMMAInterfaceTypeS            shift and go to state 331
    empty                          shift and go to state 333

state 188

    (465) InterfaceType -> ClassType .
    (461) ClassOrInterfaceType -> ClassType .

  ! reduce/reduce conflict for PERIOD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
    COMMA           reduce using rule 465 (InterfaceType -> ClassType .)
    LBRACE          reduce using rule 465 (InterfaceType -> ClassType .)
    AND             reduce using rule 465 (InterfaceType -> ClassType .)
    RPAREN          reduce using rule 465 (InterfaceType -> ClassType .)
    GTR             reduce using rule 465 (InterfaceType -> ClassType .)
    PERIOD          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)

  ! PERIOD          [ reduce using rule 465 (InterfaceType -> ClassType .) ]


state 189

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT . ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (15) ZooTypeParameters -> . TypeParameters
    (16) ZooTypeParameters -> . empty
    (299) TypeParameters -> . LSS TypeParameterList GTR
    (1) empty -> .

    LSS             shift and go to state 297
    EXTENDS         reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    ZooTypeParameters              shift and go to state 334
    TypeParameters                 shift and go to state 295
    empty                          shift and go to state 296

state 190

    (53) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE . IDENT AnnotationTypeBody

    IDENT           shift and go to state 335


state 191

    (463) ClassType -> AnnotationS IDENT . ZooTypeArguments
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 336
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 192

    (464) ClassType -> ClassOrInterfaceType PERIOD . AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 338
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 193

    (125) AnnotationS -> Annotation AnnotationS .

    IDENT           reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    BOOLEAN         reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    BYTE            reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    SHORT           reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    INT             reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    LONG            reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    CHAR            reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    FLOAT           reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    DOUBLE          reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    LBRACE          reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    LBRACK          reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    QUES            reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    VOID            reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)
    ELLIPSIS        reduce using rule 125 (AnnotationS -> Annotation AnnotationS .)


state 194

    (265) TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL . SEMICOLON

    SEMICOLON       shift and go to state 339


state 195

    (266) SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD . IDENT SEMICOLON
    (267) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD . MUL SEMICOLON

    IDENT           shift and go to state 340
    MUL             shift and go to state 341


state 196

    (254) PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .

    IMPORT          reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    SEMICOLON       reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    PUBLIC          reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    PROTECTED       reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    PRIVATE         reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    ABSTRACT        reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    STATIC          reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    FINAL           reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    STRICTFP        reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    EXTENDS         reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    ATRATE          reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    CLASS           reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    ENUM            reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    IMPLEMENTS      reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    LBRACE          reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    INTERFACE       reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)
    $end            reduce using rule 254 (PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON .)


state 197

    (257) PERIODIDENTS -> PERIOD IDENT . PERIODIDENTS
    (257) PERIODIDENTS -> . PERIOD IDENT PERIODIDENTS
    (258) PERIODIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 97
    SEMICOLON       reduce using rule 1 (empty -> .)

    PERIODIDENTS                   shift and go to state 342
    empty                          shift and go to state 98

state 198

    (105) PrimaryNoNewArray -> TypeName PERIOD . THIS
    (135) FieldAccess -> TypeName PERIOD . SUPER PERIOD IDENT
    (139) MethodInvocation -> TypeName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> TypeName PERIOD . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (151) MethodReference -> TypeName PERIOD . SUPER COLON_SEP ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    THIS            shift and go to state 343
    SUPER           shift and go to state 344
    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 345
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 199

    (112) ClassLiteral -> TypeName LBRACKRBRACKS . PERIOD CLASS

    PERIOD          shift and go to state 346


state 200

    (116) LBRACKRBRACKS -> LBRACK . RBRACK LBRACKRBRACKS

    RBRACK          shift and go to state 347


state 201

    (117) LBRACKRBRACKS -> empty .

    PERIOD          reduce using rule 117 (LBRACKRBRACKS -> empty .)


state 202

    (166) LambdaParameters -> LPAREN . ZooFormalParameterList RPAREN
    (167) LambdaParameters -> LPAREN . InferredFormalParameterList RPAREN
    (106) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (241) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (375) ZooFormalParameterList -> . FormalParameterList
    (376) ZooFormalParameterList -> . empty
    (168) InferredFormalParameterList -> . IDENT COMMAIDENTS
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (378) FormalParameterList -> . ReceiverParameter
    (379) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (380) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (394) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (383) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (384) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (390) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (391) LastFormalParameter -> . FormalParameter
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (387) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (385) ZooVariableModifier -> . VariableModifier
    (386) ZooVariableModifier -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 352
    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 202
    ATRATE          shift and go to state 13
    FINAL           shift and go to state 362
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooFormalParameterList         shift and go to state 348
    InferredFormalParameterList    shift and go to state 349
    Expression                     shift and go to state 206
    PrimitiveType                  shift and go to state 203
    UnaryExpression                shift and go to state 124
    ReferenceType                  shift and go to state 204
    UnaryExpressionNotPlusMinus    shift and go to state 127
    LambdaExpression               shift and go to state 205
    FormalParameterList            shift and go to state 350
    empty                          shift and go to state 351
    AssignmentExpression           shift and go to state 210
    AnnotationS                    shift and go to state 353
    NumericType                    shift and go to state 162
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 209
    ReceiverParameter              shift and go to state 354
    FormalParameters               shift and go to state 355
    LastFormalParameter            shift and go to state 356
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    Annotation                     shift and go to state 357
    ClassType                      shift and go to state 211
    InterfaceType                  shift and go to state 92
    FormalParameter                shift and go to state 358
    VariableModifierS              shift and go to state 359
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ZooVariableModifier            shift and go to state 360
    VariableModifier               shift and go to state 361
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    TypeName                       shift and go to state 217
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 203

    (241) CastExpression -> LPAREN PrimitiveType . RPAREN UnaryExpression
    (467) ArrayType -> PrimitiveType . Dims
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          shift and go to state 363
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Dims                           shift and go to state 269
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 204

    (242) CastExpression -> LPAREN ReferenceType . AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> LPAREN ReferenceType . AdditionalBoundS RPAREN LambdaExpression
    (148) MethodReference -> ReferenceType . COLON_SEP ZooTypeArguments IDENT
    (244) AdditionalBoundS -> . AdditionalBound AdditionalBoundS
    (245) AdditionalBoundS -> . empty
    (481) AdditionalBound -> . AND InterfaceType
    (1) empty -> .

    COLON_SEP       shift and go to state 250
    AND             shift and go to state 367
    RPAREN          reduce using rule 1 (empty -> .)

    AdditionalBoundS               shift and go to state 364
    AdditionalBound                shift and go to state 365
    empty                          shift and go to state 366

state 205

    (162) Expression -> LambdaExpression .

    RPAREN          reduce using rule 162 (Expression -> LambdaExpression .)
    COLON           reduce using rule 162 (Expression -> LambdaExpression .)
    RBRACK          reduce using rule 162 (Expression -> LambdaExpression .)
    COMMA           reduce using rule 162 (Expression -> LambdaExpression .)
    MUL             reduce using rule 162 (Expression -> LambdaExpression .)
    QUO             reduce using rule 162 (Expression -> LambdaExpression .)
    REM             reduce using rule 162 (Expression -> LambdaExpression .)
    ADD             reduce using rule 162 (Expression -> LambdaExpression .)
    SUB             reduce using rule 162 (Expression -> LambdaExpression .)
    SHL             reduce using rule 162 (Expression -> LambdaExpression .)
    SHR             reduce using rule 162 (Expression -> LambdaExpression .)
    SHR_UN          reduce using rule 162 (Expression -> LambdaExpression .)
    LSS             reduce using rule 162 (Expression -> LambdaExpression .)
    GTR             reduce using rule 162 (Expression -> LambdaExpression .)
    LEQ             reduce using rule 162 (Expression -> LambdaExpression .)
    GEQ             reduce using rule 162 (Expression -> LambdaExpression .)
    INSTANCEOF      reduce using rule 162 (Expression -> LambdaExpression .)
    EQL             reduce using rule 162 (Expression -> LambdaExpression .)
    NEQ             reduce using rule 162 (Expression -> LambdaExpression .)
    AND             reduce using rule 162 (Expression -> LambdaExpression .)
    XOR             reduce using rule 162 (Expression -> LambdaExpression .)
    OR              reduce using rule 162 (Expression -> LambdaExpression .)
    LAND            reduce using rule 162 (Expression -> LambdaExpression .)
    QUES            reduce using rule 162 (Expression -> LambdaExpression .)
    LOR             reduce using rule 162 (Expression -> LambdaExpression .)
    RBRACE          reduce using rule 162 (Expression -> LambdaExpression .)
    SEMICOLON       reduce using rule 162 (Expression -> LambdaExpression .)


state 206

    (106) PrimaryNoNewArray -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 368


state 207

    (447) PrimitiveType -> AnnotationS . NumericType
    (448) PrimitiveType -> AnnotationS . BOOLEAN
    (466) TypeVariable -> AnnotationS . IDENT
    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE

    BOOLEAN         shift and go to state 293
    IDENT           shift and go to state 369
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171

state 208

    (458) ReferenceType -> ClassOrInterfaceType .
    (468) ArrayType -> ClassOrInterfaceType . Dims
    (464) ClassType -> ClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    COLON_SEP       reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    AND             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    RPAREN          reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    LSS             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    GTR             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    LEQ             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    GEQ             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    INSTANCEOF      reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    EQL             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    NEQ             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    XOR             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    OR              reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    LAND            reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    QUES            reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    LOR             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    COMMA           reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    RBRACE          reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    COLON           reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    MUL             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    QUO             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    REM             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    ADD             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    SUB             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    SHL             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    SHR             reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    SHR_UN          reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    RBRACK          reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    SEMICOLON       reduce using rule 458 (ReferenceType -> ClassOrInterfaceType .)
    PERIOD          shift and go to state 192
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Dims                           shift and go to state 281
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 209

    (460) ReferenceType -> ArrayType .
    (153) MethodReference -> ArrayType . COLON_SEP NEW

  ! shift/reduce conflict for COLON_SEP resolved as shift
    AND             reduce using rule 460 (ReferenceType -> ArrayType .)
    RPAREN          reduce using rule 460 (ReferenceType -> ArrayType .)
    COLON_SEP       shift and go to state 289

  ! COLON_SEP       [ reduce using rule 460 (ReferenceType -> ArrayType .) ]


state 210

    (163) Expression -> AssignmentExpression .

    RPAREN          reduce using rule 163 (Expression -> AssignmentExpression .)
    COLON           reduce using rule 163 (Expression -> AssignmentExpression .)
    RBRACK          reduce using rule 163 (Expression -> AssignmentExpression .)
    COMMA           reduce using rule 163 (Expression -> AssignmentExpression .)
    MUL             reduce using rule 163 (Expression -> AssignmentExpression .)
    QUO             reduce using rule 163 (Expression -> AssignmentExpression .)
    REM             reduce using rule 163 (Expression -> AssignmentExpression .)
    ADD             reduce using rule 163 (Expression -> AssignmentExpression .)
    SUB             reduce using rule 163 (Expression -> AssignmentExpression .)
    SHL             reduce using rule 163 (Expression -> AssignmentExpression .)
    SHR             reduce using rule 163 (Expression -> AssignmentExpression .)
    SHR_UN          reduce using rule 163 (Expression -> AssignmentExpression .)
    LSS             reduce using rule 163 (Expression -> AssignmentExpression .)
    GTR             reduce using rule 163 (Expression -> AssignmentExpression .)
    LEQ             reduce using rule 163 (Expression -> AssignmentExpression .)
    GEQ             reduce using rule 163 (Expression -> AssignmentExpression .)
    INSTANCEOF      reduce using rule 163 (Expression -> AssignmentExpression .)
    EQL             reduce using rule 163 (Expression -> AssignmentExpression .)
    NEQ             reduce using rule 163 (Expression -> AssignmentExpression .)
    AND             reduce using rule 163 (Expression -> AssignmentExpression .)
    XOR             reduce using rule 163 (Expression -> AssignmentExpression .)
    OR              reduce using rule 163 (Expression -> AssignmentExpression .)
    LAND            reduce using rule 163 (Expression -> AssignmentExpression .)
    QUES            reduce using rule 163 (Expression -> AssignmentExpression .)
    LOR             reduce using rule 163 (Expression -> AssignmentExpression .)
    RBRACE          reduce using rule 163 (Expression -> AssignmentExpression .)
    SEMICOLON       reduce using rule 163 (Expression -> AssignmentExpression .)


state 211

    (461) ClassOrInterfaceType -> ClassType .
    (465) InterfaceType -> ClassType .
    (152) MethodReference -> ClassType . COLON_SEP ZooTypeArguments NEW

  ! reduce/reduce conflict for PERIOD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for ATRATE resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LBRACE resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for COLON_SEP resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for AND resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for RPAREN resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! shift/reduce conflict for COLON_SEP resolved as shift
    PERIOD          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    ATRATE          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LBRACE          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    AND             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    RPAREN          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    COLON_SEP       shift and go to state 288

  ! COLON_SEP       [ reduce using rule 461 (ClassOrInterfaceType -> ClassType .) ]
  ! PERIOD          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! ATRATE          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LBRACE          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! COLON_SEP       [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! AND             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! RPAREN          [ reduce using rule 465 (InterfaceType -> ClassType .) ]


state 212

    (165) LambdaParameters -> IDENT .
    (275) ExpressionName -> IDENT .
    (280) AmbiguousName -> IDENT .
    (271) TypeName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (277) MethodName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 275 (ExpressionName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    ARROW           reduce using rule 165 (LambdaParameters -> IDENT .)
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    ASSIGN          reduce using rule 275 (ExpressionName -> IDENT .)
    MUL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    QUO_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    REM_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    ADD_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SUB_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 275 (ExpressionName -> IDENT .)
    AND_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    XOR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    OR_ASSIGN       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)
    MUL             reduce using rule 275 (ExpressionName -> IDENT .)
    QUO             reduce using rule 275 (ExpressionName -> IDENT .)
    REM             reduce using rule 275 (ExpressionName -> IDENT .)
    ADD             reduce using rule 275 (ExpressionName -> IDENT .)
    SUB             reduce using rule 275 (ExpressionName -> IDENT .)
    SHL             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN          reduce using rule 275 (ExpressionName -> IDENT .)
    LSS             reduce using rule 275 (ExpressionName -> IDENT .)
    GTR             reduce using rule 275 (ExpressionName -> IDENT .)
    LEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    GEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    INSTANCEOF      reduce using rule 275 (ExpressionName -> IDENT .)
    EQL             reduce using rule 275 (ExpressionName -> IDENT .)
    NEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    AND             reduce using rule 275 (ExpressionName -> IDENT .)
    XOR             reduce using rule 275 (ExpressionName -> IDENT .)
    OR              reduce using rule 275 (ExpressionName -> IDENT .)
    LAND            reduce using rule 275 (ExpressionName -> IDENT .)
    QUES            reduce using rule 275 (ExpressionName -> IDENT .)
    LOR             reduce using rule 275 (ExpressionName -> IDENT .)
    RPAREN          reduce using rule 275 (ExpressionName -> IDENT .)
    COLON           reduce using rule 275 (ExpressionName -> IDENT .)
    RBRACK          reduce using rule 275 (ExpressionName -> IDENT .)
    COMMA           reduce using rule 275 (ExpressionName -> IDENT .)
    RBRACE          reduce using rule 275 (ExpressionName -> IDENT .)
    SEMICOLON       reduce using rule 275 (ExpressionName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)

  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]


state 213

    (164) LambdaExpression -> LambdaParameters . ARROW LambdaBody

    ARROW           shift and go to state 370


state 214

    (173) AssignmentExpression -> ConditionalExpression .

    RPAREN          reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    COLON           reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    RBRACK          reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    COMMA           reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    MUL             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    QUO             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    REM             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    ADD             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    SUB             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    SHL             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    SHR             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    SHR_UN          reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    LSS             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    GTR             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    LEQ             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    GEQ             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    INSTANCEOF      reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    EQL             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    NEQ             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    AND             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    XOR             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    OR              reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    LAND            reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    QUES            reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    LOR             reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    RBRACE          reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)
    SEMICOLON       reduce using rule 173 (AssignmentExpression -> ConditionalExpression .)


state 215

    (174) AssignmentExpression -> Assignment .

    RPAREN          reduce using rule 174 (AssignmentExpression -> Assignment .)
    COLON           reduce using rule 174 (AssignmentExpression -> Assignment .)
    RBRACK          reduce using rule 174 (AssignmentExpression -> Assignment .)
    COMMA           reduce using rule 174 (AssignmentExpression -> Assignment .)
    MUL             reduce using rule 174 (AssignmentExpression -> Assignment .)
    QUO             reduce using rule 174 (AssignmentExpression -> Assignment .)
    REM             reduce using rule 174 (AssignmentExpression -> Assignment .)
    ADD             reduce using rule 174 (AssignmentExpression -> Assignment .)
    SUB             reduce using rule 174 (AssignmentExpression -> Assignment .)
    SHL             reduce using rule 174 (AssignmentExpression -> Assignment .)
    SHR             reduce using rule 174 (AssignmentExpression -> Assignment .)
    SHR_UN          reduce using rule 174 (AssignmentExpression -> Assignment .)
    LSS             reduce using rule 174 (AssignmentExpression -> Assignment .)
    GTR             reduce using rule 174 (AssignmentExpression -> Assignment .)
    LEQ             reduce using rule 174 (AssignmentExpression -> Assignment .)
    GEQ             reduce using rule 174 (AssignmentExpression -> Assignment .)
    INSTANCEOF      reduce using rule 174 (AssignmentExpression -> Assignment .)
    EQL             reduce using rule 174 (AssignmentExpression -> Assignment .)
    NEQ             reduce using rule 174 (AssignmentExpression -> Assignment .)
    AND             reduce using rule 174 (AssignmentExpression -> Assignment .)
    XOR             reduce using rule 174 (AssignmentExpression -> Assignment .)
    OR              reduce using rule 174 (AssignmentExpression -> Assignment .)
    LAND            reduce using rule 174 (AssignmentExpression -> Assignment .)
    QUES            reduce using rule 174 (AssignmentExpression -> Assignment .)
    LOR             reduce using rule 174 (AssignmentExpression -> Assignment .)
    RBRACE          reduce using rule 174 (AssignmentExpression -> Assignment .)
    SEMICOLON       reduce using rule 174 (AssignmentExpression -> Assignment .)


state 216

    (175) Assignment -> LeftHandSide . AssignmentOperator Expression
    (179) AssignmentOperator -> . ASSIGN
    (180) AssignmentOperator -> . MUL_ASSIGN
    (181) AssignmentOperator -> . QUO_ASSIGN
    (182) AssignmentOperator -> . REM_ASSIGN
    (183) AssignmentOperator -> . ADD_ASSIGN
    (184) AssignmentOperator -> . SUB_ASSIGN
    (185) AssignmentOperator -> . SHL_ASSIGN
    (186) AssignmentOperator -> . SHR_ASSIGN
    (187) AssignmentOperator -> . SHR_UN_ASSIGN
    (188) AssignmentOperator -> . AND_ASSIGN
    (189) AssignmentOperator -> . XOR_ASSIGN
    (190) AssignmentOperator -> . OR_ASSIGN

    ASSIGN          shift and go to state 372
    MUL_ASSIGN      shift and go to state 373
    QUO_ASSIGN      shift and go to state 374
    REM_ASSIGN      shift and go to state 375
    ADD_ASSIGN      shift and go to state 376
    SUB_ASSIGN      shift and go to state 377
    SHL_ASSIGN      shift and go to state 378
    SHR_ASSIGN      shift and go to state 379
    SHR_UN_ASSIGN   shift and go to state 380
    AND_ASSIGN      shift and go to state 381
    XOR_ASSIGN      shift and go to state 382
    OR_ASSIGN       shift and go to state 383

    AssignmentOperator             shift and go to state 371

state 217

    (135) FieldAccess -> TypeName . PERIOD SUPER PERIOD IDENT
    (105) PrimaryNoNewArray -> TypeName . PERIOD THIS
    (112) ClassLiteral -> TypeName . LBRACKRBRACKS PERIOD CLASS
    (139) MethodInvocation -> TypeName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> TypeName . PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (151) MethodReference -> TypeName . PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (116) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (117) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for PERIOD resolved as shift
    PERIOD          shift and go to state 384
    LBRACK          shift and go to state 200

  ! PERIOD          [ reduce using rule 1 (empty -> .) ]

    LBRACKRBRACKS                  shift and go to state 199
    empty                          shift and go to state 201

state 218

    (176) LeftHandSide -> ExpressionName .
    (136) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (119) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (140) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT
    (236) PostfixExpression -> ExpressionName .

    ASSIGN          reduce using rule 176 (LeftHandSide -> ExpressionName .)
    MUL_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    QUO_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    REM_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    ADD_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SUB_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SHL_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SHR_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SHR_UN_ASSIGN   reduce using rule 176 (LeftHandSide -> ExpressionName .)
    AND_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    XOR_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    OR_ASSIGN       reduce using rule 176 (LeftHandSide -> ExpressionName .)
    LBRACK          shift and go to state 267
    PERIOD          shift and go to state 266
    COLON_SEP       shift and go to state 268
    INC             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    DEC             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    MUL             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    QUO             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    REM             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    ADD             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SUB             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SHL             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SHR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SHR_UN          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LSS             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    GTR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LEQ             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    GEQ             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    INSTANCEOF      reduce using rule 236 (PostfixExpression -> ExpressionName .)
    EQL             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    NEQ             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    AND             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    XOR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    OR              reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LAND            reduce using rule 236 (PostfixExpression -> ExpressionName .)
    QUES            reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LOR             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    RPAREN          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    COLON           reduce using rule 236 (PostfixExpression -> ExpressionName .)
    RBRACK          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    COMMA           reduce using rule 236 (PostfixExpression -> ExpressionName .)
    RBRACE          reduce using rule 236 (PostfixExpression -> ExpressionName .)
    SEMICOLON       reduce using rule 236 (PostfixExpression -> ExpressionName .)


state 219

    (177) LeftHandSide -> FieldAccess .
    (108) PrimaryNoNewArray -> FieldAccess .

    ASSIGN          reduce using rule 177 (LeftHandSide -> FieldAccess .)
    MUL_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    QUO_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    REM_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    ADD_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    SUB_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    SHL_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    SHR_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    SHR_UN_ASSIGN   reduce using rule 177 (LeftHandSide -> FieldAccess .)
    AND_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    XOR_ASSIGN      reduce using rule 177 (LeftHandSide -> FieldAccess .)
    OR_ASSIGN       reduce using rule 177 (LeftHandSide -> FieldAccess .)
    LBRACK          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    PERIOD          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    COLON_SEP       reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    QUO             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    REM             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SHL             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SHR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SHR_UN          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LSS             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    GTR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LEQ             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    GEQ             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    INSTANCEOF      reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    EQL             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    NEQ             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    XOR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LAND            reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    QUES            reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    LOR             reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)
    SEMICOLON       reduce using rule 108 (PrimaryNoNewArray -> FieldAccess .)


state 220

    (178) LeftHandSide -> ArrayAccess .
    (109) PrimaryNoNewArray -> ArrayAccess .

    ASSIGN          reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    MUL_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    QUO_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    REM_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    ADD_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    SUB_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    SHL_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    SHR_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    SHR_UN_ASSIGN   reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    AND_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    XOR_ASSIGN      reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    OR_ASSIGN       reduce using rule 178 (LeftHandSide -> ArrayAccess .)
    LBRACK          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    PERIOD          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    COLON_SEP       reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    QUO             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    REM             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SHL             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SHR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SHR_UN          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LSS             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    GTR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LEQ             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    GEQ             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    INSTANCEOF      reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    EQL             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    NEQ             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    XOR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LAND            reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    QUES            reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    LOR             reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)
    SEMICOLON       reduce using rule 109 (PrimaryNoNewArray -> ArrayAccess .)


state 221

    (133) FieldAccess -> Primary . PERIOD IDENT
    (120) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (141) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT
    (235) PostfixExpression -> Primary .

    PERIOD          shift and go to state 385
    COLON_SEP       shift and go to state 265
    INC             reduce using rule 235 (PostfixExpression -> Primary .)
    DEC             reduce using rule 235 (PostfixExpression -> Primary .)
    MUL             reduce using rule 235 (PostfixExpression -> Primary .)
    QUO             reduce using rule 235 (PostfixExpression -> Primary .)
    REM             reduce using rule 235 (PostfixExpression -> Primary .)
    ADD             reduce using rule 235 (PostfixExpression -> Primary .)
    SUB             reduce using rule 235 (PostfixExpression -> Primary .)
    SHL             reduce using rule 235 (PostfixExpression -> Primary .)
    SHR             reduce using rule 235 (PostfixExpression -> Primary .)
    SHR_UN          reduce using rule 235 (PostfixExpression -> Primary .)
    LSS             reduce using rule 235 (PostfixExpression -> Primary .)
    GTR             reduce using rule 235 (PostfixExpression -> Primary .)
    LEQ             reduce using rule 235 (PostfixExpression -> Primary .)
    GEQ             reduce using rule 235 (PostfixExpression -> Primary .)
    INSTANCEOF      reduce using rule 235 (PostfixExpression -> Primary .)
    EQL             reduce using rule 235 (PostfixExpression -> Primary .)
    NEQ             reduce using rule 235 (PostfixExpression -> Primary .)
    AND             reduce using rule 235 (PostfixExpression -> Primary .)
    XOR             reduce using rule 235 (PostfixExpression -> Primary .)
    OR              reduce using rule 235 (PostfixExpression -> Primary .)
    LAND            reduce using rule 235 (PostfixExpression -> Primary .)
    QUES            reduce using rule 235 (PostfixExpression -> Primary .)
    LOR             reduce using rule 235 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 235 (PostfixExpression -> Primary .)
    COLON           reduce using rule 235 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 235 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 235 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 235 (PostfixExpression -> Primary .)
    SEMICOLON       reduce using rule 235 (PostfixExpression -> Primary .)


state 222

    (137) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK
    (100) Primary -> PrimaryNoNewArray .

    LBRACK          shift and go to state 271
    PERIOD          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    COLON_SEP       reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    QUO             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    REM             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SHL             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SHR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SHR_UN          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LSS             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    GTR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LEQ             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    GEQ             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    INSTANCEOF      reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    EQL             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    NEQ             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    XOR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LAND            reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    QUES            reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    LOR             reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 100 (Primary -> PrimaryNoNewArray .)
    SEMICOLON       reduce using rule 100 (Primary -> PrimaryNoNewArray .)


state 223

    (76) NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .

    ATRATE          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PACKAGE         reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PUBLIC          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PROTECTED       reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    PRIVATE         reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    ABSTRACT        reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    STATIC          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    FINAL           reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    STRICTFP        reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    CLASS           reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    ENUM            reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    INTERFACE       reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    IDENT           reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    RPAREN          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    BOOLEAN         reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    BYTE            reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    SHORT           reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    INT             reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LONG            reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    CHAR            reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    FLOAT           reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    DOUBLE          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LBRACE          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LBRACK          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    QUES            reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    VOID            reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    ELLIPSIS        reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    COMMA           reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    RBRACE          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    LSS             reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    TRANSIENT       reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    VOLATILE        reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    SYNCHRONIZED    reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    NATIVE          reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    DEFAULT         reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)
    SEMICOLON       reduce using rule 76 (NormalAnnotation -> ATRATE TypeName LPAREN ZooElementValuePairList RPAREN .)


state 224

    (93) SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .

    ATRATE          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PACKAGE         reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PUBLIC          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PROTECTED       reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    PRIVATE         reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    ABSTRACT        reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    STATIC          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    FINAL           reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    STRICTFP        reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    CLASS           reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    ENUM            reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    INTERFACE       reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    IDENT           reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    RPAREN          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    BOOLEAN         reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    BYTE            reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    SHORT           reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    INT             reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LONG            reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    CHAR            reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    FLOAT           reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    DOUBLE          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LBRACE          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LBRACK          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    QUES            reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    VOID            reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    ELLIPSIS        reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    COMMA           reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    RBRACE          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    LSS             reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    TRANSIENT       reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    VOLATILE        reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    SYNCHRONIZED    reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    NATIVE          reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    DEFAULT         reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)
    SEMICOLON       reduce using rule 93 (SingleElementAnnotation -> ATRATE TypeName LPAREN ElementValue RPAREN .)


state 225

    (79) ElementValuePairList -> ElementValuePair COMMAElementValuePairS .

    RPAREN          reduce using rule 79 (ElementValuePairList -> ElementValuePair COMMAElementValuePairS .)


state 226

    (80) COMMAElementValuePairS -> COMMA . ElementValuePair COMMAElementValuePairS
    (82) ElementValuePair -> . IDENT ASSIGN ElementValue

    IDENT           shift and go to state 387

    ElementValuePair               shift and go to state 386

state 227

    (81) COMMAElementValuePairS -> empty .

    RPAREN          reduce using rule 81 (COMMAElementValuePairS -> empty .)


state 228

    (192) ConditionalExpression -> ConditionalOrExpression QUES . Expression COLON ConditionalExpression
    (193) ConditionalExpression -> ConditionalOrExpression QUES . Expression COLON LambdaExpression
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ConditionalOrExpression        shift and go to state 109
    Expression                     shift and go to state 388
    ConditionalExpression          shift and go to state 214
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    Assignment                     shift and go to state 215
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 229

    (195) ConditionalOrExpression -> ConditionalOrExpression LOR . ConditionalAndExpression
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ConditionalAndExpression       shift and go to state 389
    InclusiveOrExpression          shift and go to state 113
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 230

    (86) ElementValueArrayInitializer -> LBRACE ZooElementValueList . ZooCOMMA RBRACE
    (428) ZooCOMMA -> . COMMA
    (429) ZooCOMMA -> . empty
    (1) empty -> .

    COMMA           shift and go to state 391
    RBRACE          reduce using rule 1 (empty -> .)

    ZooCOMMA                       shift and go to state 390
    empty                          shift and go to state 392

state 231

    (87) ZooElementValueList -> ElementValueList .

    COMMA           reduce using rule 87 (ZooElementValueList -> ElementValueList .)
    RBRACE          reduce using rule 87 (ZooElementValueList -> ElementValueList .)


state 232

    (88) ZooElementValueList -> empty .
    (126) AnnotationS -> empty .

    COMMA           reduce using rule 88 (ZooElementValueList -> empty .)
    RBRACE          reduce using rule 88 (ZooElementValueList -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)


state 233

    (89) ElementValueList -> ElementValue . COMMAElementValueS
    (90) COMMAElementValueS -> . COMMA ElementValue COMMAElementValueS
    (91) COMMAElementValueS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 394
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAElementValueS             shift and go to state 393
    empty                          shift and go to state 395

state 234

    (275) ExpressionName -> IDENT .
    (280) AmbiguousName -> IDENT .
    (271) TypeName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (277) MethodName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 275 (ExpressionName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)
    MUL             reduce using rule 275 (ExpressionName -> IDENT .)
    QUO             reduce using rule 275 (ExpressionName -> IDENT .)
    REM             reduce using rule 275 (ExpressionName -> IDENT .)
    ADD             reduce using rule 275 (ExpressionName -> IDENT .)
    SUB             reduce using rule 275 (ExpressionName -> IDENT .)
    SHL             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN          reduce using rule 275 (ExpressionName -> IDENT .)
    LSS             reduce using rule 275 (ExpressionName -> IDENT .)
    GTR             reduce using rule 275 (ExpressionName -> IDENT .)
    LEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    GEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    INSTANCEOF      reduce using rule 275 (ExpressionName -> IDENT .)
    EQL             reduce using rule 275 (ExpressionName -> IDENT .)
    NEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    AND             reduce using rule 275 (ExpressionName -> IDENT .)
    XOR             reduce using rule 275 (ExpressionName -> IDENT .)
    OR              reduce using rule 275 (ExpressionName -> IDENT .)
    LAND            reduce using rule 275 (ExpressionName -> IDENT .)
    QUES            reduce using rule 275 (ExpressionName -> IDENT .)
    LOR             reduce using rule 275 (ExpressionName -> IDENT .)
    COMMA           reduce using rule 275 (ExpressionName -> IDENT .)
    RBRACE          reduce using rule 275 (ExpressionName -> IDENT .)
    RPAREN          reduce using rule 275 (ExpressionName -> IDENT .)
    COLON           reduce using rule 275 (ExpressionName -> IDENT .)
    RBRACK          reduce using rule 275 (ExpressionName -> IDENT .)
    SEMICOLON       reduce using rule 275 (ExpressionName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)

  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]


state 235

    (82) ElementValuePair -> IDENT ASSIGN . ElementValue
    (83) ElementValue -> . ConditionalExpression
    (84) ElementValue -> . ElementValueArrayInitializer
    (85) ElementValue -> . Annotation
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (86) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    LBRACE          shift and go to state 110
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ElementValue                   shift and go to state 396
    ConditionalExpression          shift and go to state 105
    ElementValueArrayInitializer   shift and go to state 106
    Annotation                     shift and go to state 107
    ConditionalOrExpression        shift and go to state 109
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 112
    TypeName                       shift and go to state 99
    InclusiveOrExpression          shift and go to state 113
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    empty                          shift and go to state 91

state 236

    (197) ConditionalAndExpression -> ConditionalAndExpression LAND . InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    InclusiveOrExpression          shift and go to state 397
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 237

    (199) InclusiveOrExpression -> InclusiveOrExpression OR . ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ExclusiveOrExpression          shift and go to state 398
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 238

    (201) ExclusiveOrExpression -> ExclusiveOrExpression XOR . AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    AndExpression                  shift and go to state 399
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 239

    (203) AndExpression -> AndExpression AND . EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    EqualityExpression             shift and go to state 400
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 240

    (205) EqualityExpression -> EqualityExpression EQL . RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    RelationalExpression           shift and go to state 401
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 241

    (206) EqualityExpression -> EqualityExpression NEQ . RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    RelationalExpression           shift and go to state 402
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 242

    (208) RelationalExpression -> RelationalExpression LSS . ShiftExpression
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ShiftExpression                shift and go to state 403
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 243

    (209) RelationalExpression -> RelationalExpression GTR . ShiftExpression
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ShiftExpression                shift and go to state 404
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 244

    (210) RelationalExpression -> RelationalExpression LEQ . ShiftExpression
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ShiftExpression                shift and go to state 405
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 245

    (211) RelationalExpression -> RelationalExpression GEQ . ShiftExpression
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ShiftExpression                shift and go to state 406
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 246

    (212) RelationalExpression -> RelationalExpression INSTANCEOF . ReferenceType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ReferenceType                  shift and go to state 407
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 408
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    AnnotationS                    shift and go to state 409
    PrimitiveType                  shift and go to state 138
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 247

    (214) ShiftExpression -> ShiftExpression SHL . AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    AdditiveExpression             shift and go to state 410
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 248

    (215) ShiftExpression -> ShiftExpression SHR . AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    AdditiveExpression             shift and go to state 411
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 249

    (216) ShiftExpression -> ShiftExpression SHR_UN . AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    AdditiveExpression             shift and go to state 412
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 250

    (148) MethodReference -> ReferenceType COLON_SEP . ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 413
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 251

    (218) AdditiveExpression -> AdditiveExpression ADD . MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    MultiplicativeExpression       shift and go to state 414
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 252

    (219) AdditiveExpression -> AdditiveExpression SUB . MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    MultiplicativeExpression       shift and go to state 415
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 253

    (221) MultiplicativeExpression -> MultiplicativeExpression MUL . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 416
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 254

    (222) MultiplicativeExpression -> MultiplicativeExpression QUO . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 417
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 255

    (223) MultiplicativeExpression -> MultiplicativeExpression REM . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    UnaryExpression                shift and go to state 418
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 256

    (226) UnaryExpression -> ADD UnaryExpression .

    MUL             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    QUO             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    REM             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    ADD             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    SUB             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    SHL             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    SHR             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    SHR_UN          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    LSS             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    GTR             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    LEQ             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    GEQ             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    INSTANCEOF      reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    EQL             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    NEQ             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    AND             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    XOR             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    OR              reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    LAND            reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    QUES            reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    LOR             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    RPAREN          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    COMMA           reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    RBRACE          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    COLON           reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    RBRACK          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    SEMICOLON       reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)


state 257

    (227) UnaryExpression -> SUB UnaryExpression .

    MUL             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    QUO             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    REM             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    ADD             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    SUB             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    SHL             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    SHR             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    SHR_UN          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    LSS             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    GTR             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    LEQ             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    GEQ             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    INSTANCEOF      reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    EQL             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    NEQ             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    AND             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    XOR             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    OR              reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    LAND            reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    QUES            reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    LOR             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    RPAREN          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    COMMA           reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    RBRACE          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    COLON           reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    RBRACK          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    SEMICOLON       reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)


state 258

    (229) PreIncrementExpression -> INC UnaryExpression .

    MUL             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    QUO             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    REM             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    ADD             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    SUB             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    SHL             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    SHR             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    SHR_UN          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    LSS             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    GTR             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    LEQ             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    GEQ             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    INSTANCEOF      reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    EQL             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    NEQ             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    AND             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    XOR             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    OR              reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    LAND            reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    QUES            reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    LOR             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    RPAREN          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    COMMA           reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACE          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    COLON           reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACK          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    SEMICOLON       reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)


state 259

    (230) PreDecrementExpression -> DEC UnaryExpression .

    MUL             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    QUO             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    REM             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    ADD             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    SUB             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    SHL             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    SHR             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    SHR_UN          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    LSS             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    GTR             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    LEQ             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    GEQ             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    INSTANCEOF      reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    EQL             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    NEQ             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    AND             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    XOR             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    OR              reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    LAND            reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    QUES            reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    LOR             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    RPAREN          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    COMMA           reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACE          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    COLON           reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACK          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    SEMICOLON       reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)


state 260

    (239) PostIncrementExpression -> PostfixExpression INC .

    INC             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    DEC             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    MUL             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    QUO             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    REM             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    ADD             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    SUB             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    SHL             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    SHR             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    SHR_UN          reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    LSS             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    GTR             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    LEQ             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    GEQ             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    INSTANCEOF      reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    EQL             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    NEQ             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    AND             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    XOR             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    OR              reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    LAND            reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    QUES            reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    LOR             reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    RPAREN          reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    COMMA           reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACE          reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    COLON           reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACK          reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)
    SEMICOLON       reduce using rule 239 (PostIncrementExpression -> PostfixExpression INC .)


state 261

    (240) PostDecrementExpression -> PostfixExpression DEC .

    INC             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    DEC             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    MUL             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    QUO             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    REM             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    ADD             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    SUB             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    SHL             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    SHR             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    SHR_UN          reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    LSS             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    GTR             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    LEQ             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    GEQ             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    INSTANCEOF      reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    EQL             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    NEQ             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    AND             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    XOR             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    OR              reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    LAND            reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    QUES            reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    LOR             reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    RPAREN          reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    COMMA           reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACE          reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    COLON           reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACK          reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)
    SEMICOLON       reduce using rule 240 (PostDecrementExpression -> PostfixExpression DEC .)


state 262

    (232) UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .

    MUL             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    QUO             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    REM             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    ADD             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SUB             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SHL             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SHR             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SHR_UN          reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LSS             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    GTR             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LEQ             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    GEQ             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    INSTANCEOF      reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    EQL             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    NEQ             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    AND             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    XOR             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    OR              reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LAND            reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    QUES            reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    LOR             reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    RPAREN          reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    COMMA           reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    RBRACE          reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    COLON           reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    RBRACK          reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)
    SEMICOLON       reduce using rule 232 (UnaryExpressionNotPlusMinus -> LNOT UnaryExpression .)


state 263

    (233) UnaryExpressionNotPlusMinus -> NOT UnaryExpression .

    MUL             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    QUO             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    REM             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    ADD             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SUB             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SHL             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SHR             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SHR_UN          reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LSS             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    GTR             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LEQ             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    GEQ             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    INSTANCEOF      reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    EQL             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    NEQ             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    AND             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    XOR             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    OR              reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LAND            reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    QUES            reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    LOR             reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    RPAREN          reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    COMMA           reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    RBRACE          reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    COLON           reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    RBRACK          reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)
    SEMICOLON       reduce using rule 233 (UnaryExpressionNotPlusMinus -> NOT UnaryExpression .)


state 264

    (120) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> Primary PERIOD . IDENT
    (141) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 420
    NEW             shift and go to state 422
    LSS             shift and go to state 280

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    UnqualifiedClassInstanceCreationExpression shift and go to state 419
    ZooTypeArguments               shift and go to state 421
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 265

    (149) MethodReference -> Primary COLON_SEP . ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 423
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 266

    (119) ClassInstanceCreationExpression -> ExpressionName PERIOD . UnqualifiedClassInstanceCreationExpression
    (140) MethodInvocation -> ExpressionName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    NEW             shift and go to state 422
    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    UnqualifiedClassInstanceCreationExpression shift and go to state 424
    ZooTypeArguments               shift and go to state 425
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 267

    (136) ArrayAccess -> ExpressionName LBRACK . Expression RBRACK
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ExpressionName                 shift and go to state 218
    Expression                     shift and go to state 426
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 268

    (147) MethodReference -> ExpressionName COLON_SEP . ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 427
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 269

    (467) ArrayType -> PrimitiveType Dims .

    COLON_SEP       reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    AND             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    RPAREN          reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    LSS             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    GTR             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    LEQ             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    GEQ             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    INSTANCEOF      reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    EQL             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    NEQ             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    XOR             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    OR              reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    LAND            reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    QUES            reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    LOR             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    COMMA           reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    RBRACE          reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    COLON           reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    MUL             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    QUO             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    REM             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    ADD             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    SUB             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    SHL             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    SHR             reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    SHR_UN          reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    RBRACK          reduce using rule 467 (ArrayType -> PrimitiveType Dims .)
    SEMICOLON       reduce using rule 467 (ArrayType -> PrimitiveType Dims .)


state 270

    (470) Dims -> AnnotationS . LBRACE RBRACE AnnotationSLBRACERBRACES

    LBRACE          shift and go to state 428


state 271

    (137) ArrayAccess -> PrimaryNoNewArray LBRACK . Expression RBRACK
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    PrimaryNoNewArray              shift and go to state 222
    Expression                     shift and go to state 429
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 272

    (276) ExpressionName -> AmbiguousName PERIOD . IDENT
    (281) AmbiguousName -> AmbiguousName PERIOD . IDENT

    IDENT           shift and go to state 430


state 273

    (154) ArrayCreationExpression -> NEW PrimitiveType . DimExprs ZooDims
    (156) ArrayCreationExpression -> NEW PrimitiveType . Dims ArrayInitializer
    (158) DimExprs -> . DimExpr DimExprS
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (161) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    LBRACE          reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    DimExprs                       shift and go to state 431
    Dims                           shift and go to state 432
    DimExpr                        shift and go to state 433
    AnnotationS                    shift and go to state 434
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 274

    (155) ArrayCreationExpression -> NEW ClassOrInterfaceType . DimExprs ZooDims
    (157) ArrayCreationExpression -> NEW ClassOrInterfaceType . Dims ArrayInitializer
    (464) ClassType -> ClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments
    (158) DimExprs -> . DimExpr DimExprS
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (161) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PERIOD          shift and go to state 192
    LBRACE          reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    DimExprs                       shift and go to state 435
    Dims                           shift and go to state 436
    AnnotationS                    shift and go to state 434
    DimExpr                        shift and go to state 433
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 275

    (121) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments . ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (124) ClassOrInterfaceTypeToInstantiate -> . AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ClassOrInterfaceTypeToInstantiate shift and go to state 437
    AnnotationS                    shift and go to state 438
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 276

    (447) PrimitiveType -> AnnotationS . NumericType
    (448) PrimitiveType -> AnnotationS . BOOLEAN
    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE

    BOOLEAN         shift and go to state 293
    IDENT           shift and go to state 191
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171

state 277

    (461) ClassOrInterfaceType -> ClassType .
    (465) InterfaceType -> ClassType .

  ! reduce/reduce conflict for PERIOD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for ATRATE resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LBRACE resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LBRACK resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LSS resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for GTR resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LEQ resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for GEQ resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for INSTANCEOF resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for EQL resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for NEQ resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for AND resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for XOR resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for OR resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LAND resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for QUES resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for LOR resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for RPAREN resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for COMMA resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for RBRACE resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for COLON resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for MUL resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for QUO resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for REM resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for ADD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for SUB resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for SHL resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for SHR resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for SHR_UN resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for RBRACK resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
    PERIOD          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    ATRATE          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LBRACE          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LBRACK          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LSS             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    GTR             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LEQ             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    GEQ             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    INSTANCEOF      reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    EQL             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    NEQ             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    AND             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    XOR             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    OR              reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LAND            reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    QUES            reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    LOR             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    RPAREN          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    COMMA           reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    RBRACE          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    COLON           reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    MUL             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    QUO             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    REM             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    ADD             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    SUB             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    SHL             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    SHR             reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    SHR_UN          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    RBRACK          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    SEMICOLON       reduce using rule 461 (ClassOrInterfaceType -> ClassType .)

  ! PERIOD          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! ATRATE          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LBRACE          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LBRACK          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LSS             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! GTR             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LEQ             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! GEQ             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! INSTANCEOF      [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! EQL             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! NEQ             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! AND             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! XOR             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! OR              [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LAND            [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! QUES            [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! LOR             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! RPAREN          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! COMMA           [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! RBRACE          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! COLON           [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! MUL             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! QUO             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! REM             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! ADD             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! SUB             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! SHL             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! SHR             [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! SHR_UN          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! RBRACK          [ reduce using rule 465 (InterfaceType -> ClassType .) ]
  ! SEMICOLON       [ reduce using rule 465 (InterfaceType -> ClassType .) ]


state 278

    (122) ZooTypeArguments -> TypeArguments .

    ATRATE          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    IDENT           reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    IMPLEMENTS      reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    LBRACE          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    PERIOD          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    COMMA           reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    LBRACK          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    AND             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    RPAREN          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    GTR             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    OR              reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    NEW             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    COLON_SEP       reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    SEMICOLON       reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    LSS             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    LEQ             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    GEQ             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    INSTANCEOF      reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    EQL             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    NEQ             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    XOR             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    LAND            reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    QUES            reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    LOR             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    RBRACE          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    COLON           reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    MUL             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    QUO             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    REM             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    ADD             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    SUB             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    SHL             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    SHR             reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    SHR_UN          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    RBRACK          reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    ELLIPSIS        reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    THIS            reduce using rule 122 (ZooTypeArguments -> TypeArguments .)
    SUPER           reduce using rule 122 (ZooTypeArguments -> TypeArguments .)


state 279

    (123) ZooTypeArguments -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 123 (ZooTypeArguments -> empty .)
    ATRATE          reduce using rule 123 (ZooTypeArguments -> empty .)
    IDENT           reduce using rule 123 (ZooTypeArguments -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)

  ! IDENT           [ reduce using rule 126 (AnnotationS -> empty .) ]


state 280

    (482) TypeArguments -> LSS . TypeArgumentList GTR
    (483) TypeArgumentList -> . TypeArgument COMMATypeArgumentS
    (486) TypeArgument -> . ReferenceType
    (487) TypeArgument -> . Wildcard
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (488) Wildcard -> . AnnotationS QUES ZooWildcardBounds
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    QUES            reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeArgumentList               shift and go to state 439
    TypeArgument                   shift and go to state 440
    ReferenceType                  shift and go to state 441
    Wildcard                       shift and go to state 442
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 408
    AnnotationS                    shift and go to state 443
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    PrimitiveType                  shift and go to state 138
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 281

    (468) ArrayType -> ClassOrInterfaceType Dims .

    COLON_SEP       reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    AND             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    RPAREN          reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    LSS             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    GTR             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    LEQ             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    GEQ             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    INSTANCEOF      reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    EQL             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    NEQ             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    XOR             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    OR              reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    LAND            reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    QUES            reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    LOR             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    COMMA           reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    RBRACE          reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    COLON           reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    MUL             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    QUO             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    REM             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    ADD             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    SUB             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    SHL             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    SHR             reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    SHR_UN          reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    RBRACK          reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)
    SEMICOLON       reduce using rule 468 (ArrayType -> ClassOrInterfaceType Dims .)


state 282

    (113) ClassLiteral -> NumericType LBRACKRBRACKS . PERIOD CLASS

    PERIOD          shift and go to state 444


state 283

    (114) ClassLiteral -> BOOLEAN LBRACKRBRACKS . PERIOD CLASS

    PERIOD          shift and go to state 445


state 284

    (115) ClassLiteral -> VOID PERIOD . CLASS

    CLASS           shift and go to state 446


state 285

    (134) FieldAccess -> SUPER PERIOD . IDENT
    (142) MethodInvocation -> SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 447
    LSS             shift and go to state 280

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 448
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 286

    (150) MethodReference -> SUPER COLON_SEP . ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 449
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 287

    (138) MethodInvocation -> MethodName LPAREN . ZooArgumentList RPAREN
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    MethodName                     shift and go to state 167
    ZooArgumentList                shift and go to state 450
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 288

    (152) MethodReference -> ClassType COLON_SEP . ZooTypeArguments NEW
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    NEW             reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 454
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 289

    (153) MethodReference -> ArrayType COLON_SEP . NEW

    NEW             shift and go to state 455


state 290

    (469) ArrayType -> TypeVariable Dims .

    COLON_SEP       reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    AND             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    RPAREN          reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    LSS             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    GTR             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    LEQ             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    GEQ             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    INSTANCEOF      reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    EQL             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    NEQ             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    XOR             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    OR              reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    LAND            reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    QUES            reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    LOR             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    COMMA           reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    RBRACE          reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    COLON           reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    MUL             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    QUO             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    REM             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    ADD             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    SUB             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    SHL             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    SHR             reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    SHR_UN          reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    RBRACK          reduce using rule 469 (ArrayType -> TypeVariable Dims .)
    SEMICOLON       reduce using rule 469 (ArrayType -> TypeVariable Dims .)


state 291

    (463) ClassType -> AnnotationS IDENT . ZooTypeArguments
    (466) TypeVariable -> AnnotationS IDENT .
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! reduce/reduce conflict for COLON_SEP resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for ATRATE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 1 (empty -> .)
    LSS             shift and go to state 280
    COLON_SEP       reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

  ! ATRATE          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LBRACE          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! COLON_SEP       [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! COMMA           [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! SEMICOLON       [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]

    ZooTypeArguments               shift and go to state 336
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 292

    (447) PrimitiveType -> AnnotationS NumericType .

    ATRATE          reduce using rule 447 (PrimitiveType -> AnnotationS NumericType .)
    LBRACE          reduce using rule 447 (PrimitiveType -> AnnotationS NumericType .)
    RPAREN          reduce using rule 447 (PrimitiveType -> AnnotationS NumericType .)
    LBRACK          reduce using rule 447 (PrimitiveType -> AnnotationS NumericType .)


state 293

    (448) PrimitiveType -> AnnotationS BOOLEAN .

    ATRATE          reduce using rule 448 (PrimitiveType -> AnnotationS BOOLEAN .)
    LBRACE          reduce using rule 448 (PrimitiveType -> AnnotationS BOOLEAN .)
    RPAREN          reduce using rule 448 (PrimitiveType -> AnnotationS BOOLEAN .)
    LBRACK          reduce using rule 448 (PrimitiveType -> AnnotationS BOOLEAN .)


state 294

    (289) NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .

    SEMICOLON       reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    PUBLIC          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    PROTECTED       reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    PRIVATE         reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ABSTRACT        reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    STATIC          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FINAL           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    STRICTFP        reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    EXTENDS         reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ATRATE          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CLASS           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ENUM            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    IMPLEMENTS      reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LBRACE          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    INTERFACE       reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    $end            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    TRANSIENT       reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    VOLATILE        reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SYNCHRONIZED    reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    NATIVE          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LSS             reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    IDENT           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BOOLEAN         reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BYTE            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SHORT           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    INT             reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LONG            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CHAR            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FLOAT           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DOUBLE          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    VOID            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    RBRACE          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    IF              reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    WHILE           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    ASSERT          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SWITCH          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DO              reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BREAK           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CONTINUE        reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    RETURN          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    THROW           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    TRY             reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FOR             reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    INC             reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DEC             reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    SUPER           reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    NEW             reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    THIS            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    LPAREN          reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BOOL_LIT        reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    NULL_LIT        reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DECIMAL_LIT     reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    HEX_LIT         reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    OCTAL_LIT       reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    BINARY_LIT      reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FLOAT_DEC_LIT   reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    FLOAT_HEX_LIT   reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    STRING_LIT      reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CHAR_LIT        reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    CASE            reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)
    DEFAULT         reduce using rule 289 (NormalClassDeclaration -> ClassModifierS CLASS IDENT ZooTypeParameters .)


state 295

    (15) ZooTypeParameters -> TypeParameters .

    SEMICOLON       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    PUBLIC          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    PROTECTED       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    PRIVATE         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ABSTRACT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    STATIC          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FINAL           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    STRICTFP        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    EXTENDS         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ATRATE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CLASS           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ENUM            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    IMPLEMENTS      reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LBRACE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    INTERFACE       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    $end            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    TRANSIENT       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    VOLATILE        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SYNCHRONIZED    reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    NATIVE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LSS             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    IDENT           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BOOLEAN         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BYTE            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SHORT           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    INT             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LONG            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CHAR            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FLOAT           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DOUBLE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    VOID            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    RBRACE          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    IF              reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    WHILE           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    ASSERT          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SWITCH          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DO              reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BREAK           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CONTINUE        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    RETURN          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    THROW           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    TRY             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FOR             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    INC             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DEC             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    SUPER           reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    NEW             reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    THIS            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    LPAREN          reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BOOL_LIT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    NULL_LIT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DECIMAL_LIT     reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    HEX_LIT         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    OCTAL_LIT       reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    BINARY_LIT      reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FLOAT_DEC_LIT   reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    FLOAT_HEX_LIT   reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    STRING_LIT      reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CHAR_LIT        reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    CASE            reduce using rule 15 (ZooTypeParameters -> TypeParameters .)
    DEFAULT         reduce using rule 15 (ZooTypeParameters -> TypeParameters .)


state 296

    (16) ZooTypeParameters -> empty .

    SEMICOLON       reduce using rule 16 (ZooTypeParameters -> empty .)
    PUBLIC          reduce using rule 16 (ZooTypeParameters -> empty .)
    PROTECTED       reduce using rule 16 (ZooTypeParameters -> empty .)
    PRIVATE         reduce using rule 16 (ZooTypeParameters -> empty .)
    ABSTRACT        reduce using rule 16 (ZooTypeParameters -> empty .)
    STATIC          reduce using rule 16 (ZooTypeParameters -> empty .)
    FINAL           reduce using rule 16 (ZooTypeParameters -> empty .)
    STRICTFP        reduce using rule 16 (ZooTypeParameters -> empty .)
    EXTENDS         reduce using rule 16 (ZooTypeParameters -> empty .)
    ATRATE          reduce using rule 16 (ZooTypeParameters -> empty .)
    CLASS           reduce using rule 16 (ZooTypeParameters -> empty .)
    ENUM            reduce using rule 16 (ZooTypeParameters -> empty .)
    IMPLEMENTS      reduce using rule 16 (ZooTypeParameters -> empty .)
    LBRACE          reduce using rule 16 (ZooTypeParameters -> empty .)
    INTERFACE       reduce using rule 16 (ZooTypeParameters -> empty .)
    $end            reduce using rule 16 (ZooTypeParameters -> empty .)
    TRANSIENT       reduce using rule 16 (ZooTypeParameters -> empty .)
    VOLATILE        reduce using rule 16 (ZooTypeParameters -> empty .)
    SYNCHRONIZED    reduce using rule 16 (ZooTypeParameters -> empty .)
    NATIVE          reduce using rule 16 (ZooTypeParameters -> empty .)
    LSS             reduce using rule 16 (ZooTypeParameters -> empty .)
    IDENT           reduce using rule 16 (ZooTypeParameters -> empty .)
    BOOLEAN         reduce using rule 16 (ZooTypeParameters -> empty .)
    BYTE            reduce using rule 16 (ZooTypeParameters -> empty .)
    SHORT           reduce using rule 16 (ZooTypeParameters -> empty .)
    INT             reduce using rule 16 (ZooTypeParameters -> empty .)
    LONG            reduce using rule 16 (ZooTypeParameters -> empty .)
    CHAR            reduce using rule 16 (ZooTypeParameters -> empty .)
    FLOAT           reduce using rule 16 (ZooTypeParameters -> empty .)
    DOUBLE          reduce using rule 16 (ZooTypeParameters -> empty .)
    VOID            reduce using rule 16 (ZooTypeParameters -> empty .)
    RBRACE          reduce using rule 16 (ZooTypeParameters -> empty .)
    IF              reduce using rule 16 (ZooTypeParameters -> empty .)
    WHILE           reduce using rule 16 (ZooTypeParameters -> empty .)
    ASSERT          reduce using rule 16 (ZooTypeParameters -> empty .)
    SWITCH          reduce using rule 16 (ZooTypeParameters -> empty .)
    DO              reduce using rule 16 (ZooTypeParameters -> empty .)
    BREAK           reduce using rule 16 (ZooTypeParameters -> empty .)
    CONTINUE        reduce using rule 16 (ZooTypeParameters -> empty .)
    RETURN          reduce using rule 16 (ZooTypeParameters -> empty .)
    THROW           reduce using rule 16 (ZooTypeParameters -> empty .)
    TRY             reduce using rule 16 (ZooTypeParameters -> empty .)
    FOR             reduce using rule 16 (ZooTypeParameters -> empty .)
    INC             reduce using rule 16 (ZooTypeParameters -> empty .)
    DEC             reduce using rule 16 (ZooTypeParameters -> empty .)
    SUPER           reduce using rule 16 (ZooTypeParameters -> empty .)
    NEW             reduce using rule 16 (ZooTypeParameters -> empty .)
    THIS            reduce using rule 16 (ZooTypeParameters -> empty .)
    LPAREN          reduce using rule 16 (ZooTypeParameters -> empty .)
    BOOL_LIT        reduce using rule 16 (ZooTypeParameters -> empty .)
    NULL_LIT        reduce using rule 16 (ZooTypeParameters -> empty .)
    DECIMAL_LIT     reduce using rule 16 (ZooTypeParameters -> empty .)
    HEX_LIT         reduce using rule 16 (ZooTypeParameters -> empty .)
    OCTAL_LIT       reduce using rule 16 (ZooTypeParameters -> empty .)
    BINARY_LIT      reduce using rule 16 (ZooTypeParameters -> empty .)
    FLOAT_DEC_LIT   reduce using rule 16 (ZooTypeParameters -> empty .)
    FLOAT_HEX_LIT   reduce using rule 16 (ZooTypeParameters -> empty .)
    STRING_LIT      reduce using rule 16 (ZooTypeParameters -> empty .)
    CHAR_LIT        reduce using rule 16 (ZooTypeParameters -> empty .)
    CASE            reduce using rule 16 (ZooTypeParameters -> empty .)
    DEFAULT         reduce using rule 16 (ZooTypeParameters -> empty .)


state 297

    (299) TypeParameters -> LSS . TypeParameterList GTR
    (302) TypeParameterList -> . TypeParameter COMMMATypeParameterS
    (473) TypeParameter -> . TypeParameterModifierS IDENT ZooTypeBound
    (474) TypeParameterModifierS -> . TypeParameterModifier TypeParameterModifierS
    (475) TypeParameterModifierS -> . empty
    (478) TypeParameterModifier -> . Annotation
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeParameterList              shift and go to state 456
    TypeParameter                  shift and go to state 457
    TypeParameterModifierS         shift and go to state 458
    TypeParameterModifier          shift and go to state 459
    empty                          shift and go to state 460
    Annotation                     shift and go to state 461
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 298

    (425) EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces . EnumBody
    (432) EnumBody -> . LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE

    LBRACE          shift and go to state 463

    EnumBody                       shift and go to state 462

state 299

    (493) Block -> LBRACE . ZooBlockStatements RBRACE
    (494) ZooBlockStatements -> . BlockStatements
    (495) ZooBlockStatements -> . empty
    (496) BlockStatements -> . BlockStatement BlockStatementS
    (1) empty -> .
    (499) BlockStatement -> . LocalVariableDeclarationStatement
    (500) BlockStatement -> . ClassDeclaration
    (501) BlockStatement -> . Statement
    (502) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (503) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    FINAL           shift and go to state 512
    PUBLIC          shift and go to state 72
    PROTECTED       shift and go to state 73
    PRIVATE         shift and go to state 74
    ABSTRACT        shift and go to state 75
    STATIC          shift and go to state 76
    STRICTFP        shift and go to state 77
    EXTENDS         shift and go to state 52
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    ATRATE          shift and go to state 13
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    ZooBlockStatements             shift and go to state 464
    BlockStatements                shift and go to state 465
    empty                          shift and go to state 466
    BlockStatement                 shift and go to state 467
    LocalVariableDeclarationStatement shift and go to state 468
    ClassDeclaration               shift and go to state 469
    Statement                      shift and go to state 470
    LocalVariableDeclaration       shift and go to state 471
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    VariableModifierS              shift and go to state 479
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    VariableModifier               shift and go to state 498
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Annotation                     shift and go to state 511
    ClassType                      shift and go to state 168
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 300

    (310) ClassBody -> LBRACE ClassBodyDeclarationS . RBRACE

    RBRACE          shift and go to state 526


state 301

    (308) ClassBodyDeclarationS -> ClassBodyDeclaration . ClassBodyDeclarationS
    (308) ClassBodyDeclarationS -> . ClassBodyDeclaration ClassBodyDeclarationS
    (309) ClassBodyDeclarationS -> . empty
    (311) ClassBodyDeclaration -> . ClassMemberDeclaration
    (312) ClassBodyDeclaration -> . InstanceInitializer
    (313) ClassBodyDeclaration -> . StaticInitializer
    (314) ClassBodyDeclaration -> . ConstructorDeclaration
    (1) empty -> .
    (315) ClassMemberDeclaration -> . FieldDeclaration
    (316) ClassMemberDeclaration -> . MethodDeclaration
    (317) ClassMemberDeclaration -> . ClassDeclaration
    (318) ClassMemberDeclaration -> . InterfaceDeclaration
    (319) ClassMemberDeclaration -> . SEMICOLON
    (403) InstanceInitializer -> . Block
    (404) StaticInitializer -> . STATIC Block
    (407) ConstructorDeclaration -> . ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
    (322) FieldDeclaration -> . FieldModifierS UnannType VariableDeclaratorList SEMICOLON
    (358) MethodDeclaration -> . MethodModifierS MethodHeader MethodBody
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (405) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (406) ConstructorModifierS -> . empty
    (320) FieldModifierS -> . FieldModifier FieldModifierS
    (321) FieldModifierS -> . empty
    (356) MethodModifierS -> . MethodModifier MethodModifierS
    (357) MethodModifierS -> . empty
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (408) ConstructorModifier -> . Annotation
    (409) ConstructorModifier -> . PUBLIC
    (410) ConstructorModifier -> . PROTECTED
    (411) ConstructorModifier -> . PRIVATE
    (323) FieldModifier -> . Annotation
    (324) FieldModifier -> . PUBLIC
    (325) FieldModifier -> . PROTECTED
    (326) FieldModifier -> . PRIVATE
    (327) FieldModifier -> . STATIC
    (328) FieldModifier -> . FINAL
    (329) FieldModifier -> . TRANSIENT
    (330) FieldModifier -> . VOLATILE
    (359) MethodModifier -> . Annotation
    (360) MethodModifier -> . PUBLIC
    (361) MethodModifier -> . PROTECTED
    (362) MethodModifier -> . PRIVATE
    (363) MethodModifier -> . ABSTRACT
    (364) MethodModifier -> . STATIC
    (365) MethodModifier -> . FINAL
    (366) MethodModifier -> . SYNCHRONIZED
    (367) MethodModifier -> . NATIVE
    (368) MethodModifier -> . STRICTFP
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    SEMICOLON       shift and go to state 311
    STATIC          shift and go to state 313
    LBRACE          shift and go to state 299
    PUBLIC          shift and go to state 321
    PROTECTED       shift and go to state 322
    PRIVATE         shift and go to state 323
    FINAL           shift and go to state 324
    TRANSIENT       shift and go to state 325
    VOLATILE        shift and go to state 326
    ABSTRACT        shift and go to state 327
    SYNCHRONIZED    shift and go to state 328
    NATIVE          shift and go to state 329
    STRICTFP        shift and go to state 330
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ClassBodyDeclaration           shift and go to state 301
    ClassBodyDeclarationS          shift and go to state 527
    empty                          shift and go to state 302
    ClassMemberDeclaration         shift and go to state 303
    InstanceInitializer            shift and go to state 304
    StaticInitializer              shift and go to state 305
    ConstructorDeclaration         shift and go to state 306
    FieldDeclaration               shift and go to state 307
    MethodDeclaration              shift and go to state 308
    ClassDeclaration               shift and go to state 309
    InterfaceDeclaration           shift and go to state 310
    Block                          shift and go to state 312
    ConstructorModifierS           shift and go to state 314
    FieldModifierS                 shift and go to state 315
    MethodModifierS                shift and go to state 316
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstructorModifier            shift and go to state 317
    FieldModifier                  shift and go to state 318
    MethodModifier                 shift and go to state 319
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 320
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 302

    (309) ClassBodyDeclarationS -> empty .
    (406) ConstructorModifierS -> empty .
    (321) FieldModifierS -> empty .
    (357) MethodModifierS -> empty .
    (424) ClassModifierS -> empty .
    (286) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for LSS resolved using rule 357 (MethodModifierS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 321 (FieldModifierS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 321 (FieldModifierS -> empty .)
    RBRACE          reduce using rule 309 (ClassBodyDeclarationS -> empty .)
    BOOLEAN         reduce using rule 321 (FieldModifierS -> empty .)
    IDENT           reduce using rule 321 (FieldModifierS -> empty .)
    BYTE            reduce using rule 321 (FieldModifierS -> empty .)
    SHORT           reduce using rule 321 (FieldModifierS -> empty .)
    INT             reduce using rule 321 (FieldModifierS -> empty .)
    LONG            reduce using rule 321 (FieldModifierS -> empty .)
    CHAR            reduce using rule 321 (FieldModifierS -> empty .)
    FLOAT           reduce using rule 321 (FieldModifierS -> empty .)
    DOUBLE          reduce using rule 321 (FieldModifierS -> empty .)
    VOID            reduce using rule 357 (MethodModifierS -> empty .)
    LSS             reduce using rule 357 (MethodModifierS -> empty .)
    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 286 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 286 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)

  ! LSS             [ reduce using rule 406 (ConstructorModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 406 (ConstructorModifierS -> empty .) ]
  ! BOOLEAN         [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! INT             [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! LONG            [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 357 (MethodModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 357 (MethodModifierS -> empty .) ]


state 303

    (311) ClassBodyDeclaration -> ClassMemberDeclaration .

    SEMICOLON       reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    STATIC          reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LBRACE          reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PUBLIC          reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PROTECTED       reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PRIVATE         reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FINAL           reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    TRANSIENT       reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    VOLATILE        reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    ABSTRACT        reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    SYNCHRONIZED    reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    NATIVE          reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    STRICTFP        reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    EXTENDS         reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    ATRATE          reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LSS             reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    IDENT           reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BOOLEAN         reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BYTE            reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    SHORT           reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    INT             reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LONG            reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    CHAR            reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FLOAT           reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    DOUBLE          reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    VOID            reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    CLASS           reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    ENUM            reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    IMPLEMENTS      reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    INTERFACE       reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    RBRACE          reduce using rule 311 (ClassBodyDeclaration -> ClassMemberDeclaration .)


state 304

    (312) ClassBodyDeclaration -> InstanceInitializer .

    SEMICOLON       reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    STATIC          reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    LBRACE          reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    PUBLIC          reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    PROTECTED       reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    PRIVATE         reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    FINAL           reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    TRANSIENT       reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    VOLATILE        reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    ABSTRACT        reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    SYNCHRONIZED    reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    NATIVE          reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    STRICTFP        reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    EXTENDS         reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    ATRATE          reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    LSS             reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    IDENT           reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    BOOLEAN         reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    BYTE            reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    SHORT           reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    INT             reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    LONG            reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    CHAR            reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    FLOAT           reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    DOUBLE          reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    VOID            reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    CLASS           reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    ENUM            reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    IMPLEMENTS      reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    INTERFACE       reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)
    RBRACE          reduce using rule 312 (ClassBodyDeclaration -> InstanceInitializer .)


state 305

    (313) ClassBodyDeclaration -> StaticInitializer .

    SEMICOLON       reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    STATIC          reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    LBRACE          reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    PUBLIC          reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    PROTECTED       reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    PRIVATE         reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    FINAL           reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    TRANSIENT       reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    VOLATILE        reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    ABSTRACT        reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    SYNCHRONIZED    reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    NATIVE          reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    STRICTFP        reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    EXTENDS         reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    ATRATE          reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    LSS             reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    IDENT           reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    BOOLEAN         reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    BYTE            reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    SHORT           reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    INT             reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    LONG            reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    CHAR            reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    FLOAT           reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    DOUBLE          reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    VOID            reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    CLASS           reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    ENUM            reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    IMPLEMENTS      reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    INTERFACE       reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)
    RBRACE          reduce using rule 313 (ClassBodyDeclaration -> StaticInitializer .)


state 306

    (314) ClassBodyDeclaration -> ConstructorDeclaration .

    SEMICOLON       reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    STATIC          reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LBRACE          reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PUBLIC          reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PROTECTED       reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PRIVATE         reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FINAL           reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    TRANSIENT       reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    VOLATILE        reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    ABSTRACT        reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    SYNCHRONIZED    reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    NATIVE          reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    STRICTFP        reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    EXTENDS         reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    ATRATE          reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LSS             reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    IDENT           reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BOOLEAN         reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BYTE            reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    SHORT           reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    INT             reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LONG            reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    CHAR            reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FLOAT           reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    DOUBLE          reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    VOID            reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    CLASS           reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    ENUM            reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    IMPLEMENTS      reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    INTERFACE       reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)
    RBRACE          reduce using rule 314 (ClassBodyDeclaration -> ConstructorDeclaration .)


state 307

    (315) ClassMemberDeclaration -> FieldDeclaration .

    SEMICOLON       reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    STATIC          reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    LBRACE          reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    PUBLIC          reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    PROTECTED       reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    PRIVATE         reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    FINAL           reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    TRANSIENT       reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    VOLATILE        reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    ABSTRACT        reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    SYNCHRONIZED    reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    NATIVE          reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    STRICTFP        reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    EXTENDS         reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    ATRATE          reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    LSS             reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    IDENT           reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    BOOLEAN         reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    BYTE            reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    SHORT           reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    INT             reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    LONG            reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    CHAR            reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    FLOAT           reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    DOUBLE          reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    VOID            reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    CLASS           reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    ENUM            reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    IMPLEMENTS      reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    INTERFACE       reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)
    RBRACE          reduce using rule 315 (ClassMemberDeclaration -> FieldDeclaration .)


state 308

    (316) ClassMemberDeclaration -> MethodDeclaration .

    SEMICOLON       reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    STATIC          reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    LBRACE          reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    PUBLIC          reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    PROTECTED       reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    PRIVATE         reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    FINAL           reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    TRANSIENT       reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    VOLATILE        reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    ABSTRACT        reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    SYNCHRONIZED    reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    NATIVE          reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    STRICTFP        reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    EXTENDS         reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    ATRATE          reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    LSS             reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    IDENT           reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    BOOLEAN         reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    BYTE            reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    SHORT           reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    INT             reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    LONG            reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    CHAR            reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    FLOAT           reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    DOUBLE          reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    VOID            reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    CLASS           reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    ENUM            reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    IMPLEMENTS      reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    INTERFACE       reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)
    RBRACE          reduce using rule 316 (ClassMemberDeclaration -> MethodDeclaration .)


state 309

    (317) ClassMemberDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    TRANSIENT       reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    VOLATILE        reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    SYNCHRONIZED    reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    NATIVE          reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    LSS             reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    IDENT           reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    BOOLEAN         reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    BYTE            reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    SHORT           reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    INT             reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    LONG            reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    CHAR            reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    FLOAT           reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    DOUBLE          reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    VOID            reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)
    RBRACE          reduce using rule 317 (ClassMemberDeclaration -> ClassDeclaration .)


state 310

    (318) ClassMemberDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    TRANSIENT       reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    VOLATILE        reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    SYNCHRONIZED    reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    NATIVE          reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    LSS             reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    IDENT           reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    BOOLEAN         reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    BYTE            reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    SHORT           reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    INT             reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    LONG            reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    CHAR            reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    FLOAT           reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    DOUBLE          reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    VOID            reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)
    RBRACE          reduce using rule 318 (ClassMemberDeclaration -> InterfaceDeclaration .)


state 311

    (319) ClassMemberDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    TRANSIENT       reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    VOLATILE        reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    SYNCHRONIZED    reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    NATIVE          reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    LSS             reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    IDENT           reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    BOOLEAN         reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    BYTE            reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    SHORT           reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    INT             reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    LONG            reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    CHAR            reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    FLOAT           reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    DOUBLE          reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    VOID            reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)
    RBRACE          reduce using rule 319 (ClassMemberDeclaration -> SEMICOLON .)


state 312

    (403) InstanceInitializer -> Block .

    SEMICOLON       reduce using rule 403 (InstanceInitializer -> Block .)
    STATIC          reduce using rule 403 (InstanceInitializer -> Block .)
    LBRACE          reduce using rule 403 (InstanceInitializer -> Block .)
    PUBLIC          reduce using rule 403 (InstanceInitializer -> Block .)
    PROTECTED       reduce using rule 403 (InstanceInitializer -> Block .)
    PRIVATE         reduce using rule 403 (InstanceInitializer -> Block .)
    FINAL           reduce using rule 403 (InstanceInitializer -> Block .)
    TRANSIENT       reduce using rule 403 (InstanceInitializer -> Block .)
    VOLATILE        reduce using rule 403 (InstanceInitializer -> Block .)
    ABSTRACT        reduce using rule 403 (InstanceInitializer -> Block .)
    SYNCHRONIZED    reduce using rule 403 (InstanceInitializer -> Block .)
    NATIVE          reduce using rule 403 (InstanceInitializer -> Block .)
    STRICTFP        reduce using rule 403 (InstanceInitializer -> Block .)
    EXTENDS         reduce using rule 403 (InstanceInitializer -> Block .)
    ATRATE          reduce using rule 403 (InstanceInitializer -> Block .)
    LSS             reduce using rule 403 (InstanceInitializer -> Block .)
    IDENT           reduce using rule 403 (InstanceInitializer -> Block .)
    BOOLEAN         reduce using rule 403 (InstanceInitializer -> Block .)
    BYTE            reduce using rule 403 (InstanceInitializer -> Block .)
    SHORT           reduce using rule 403 (InstanceInitializer -> Block .)
    INT             reduce using rule 403 (InstanceInitializer -> Block .)
    LONG            reduce using rule 403 (InstanceInitializer -> Block .)
    CHAR            reduce using rule 403 (InstanceInitializer -> Block .)
    FLOAT           reduce using rule 403 (InstanceInitializer -> Block .)
    DOUBLE          reduce using rule 403 (InstanceInitializer -> Block .)
    VOID            reduce using rule 403 (InstanceInitializer -> Block .)
    CLASS           reduce using rule 403 (InstanceInitializer -> Block .)
    ENUM            reduce using rule 403 (InstanceInitializer -> Block .)
    IMPLEMENTS      reduce using rule 403 (InstanceInitializer -> Block .)
    INTERFACE       reduce using rule 403 (InstanceInitializer -> Block .)
    RBRACE          reduce using rule 403 (InstanceInitializer -> Block .)


state 313

    (404) StaticInitializer -> STATIC . Block
    (327) FieldModifier -> STATIC .
    (364) MethodModifier -> STATIC .
    (296) ClassModifier -> STATIC .
    (26) InterfaceModifier -> STATIC .
    (493) Block -> . LBRACE ZooBlockStatements RBRACE

  ! reduce/reduce conflict for PUBLIC resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for INT resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for LONG resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 327 (FieldModifier -> STATIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 296 (ClassModifier -> STATIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 26 (InterfaceModifier -> STATIC .)
    TRANSIENT       reduce using rule 327 (FieldModifier -> STATIC .)
    VOLATILE        reduce using rule 327 (FieldModifier -> STATIC .)
    BOOLEAN         reduce using rule 327 (FieldModifier -> STATIC .)
    IDENT           reduce using rule 327 (FieldModifier -> STATIC .)
    BYTE            reduce using rule 327 (FieldModifier -> STATIC .)
    SHORT           reduce using rule 327 (FieldModifier -> STATIC .)
    INT             reduce using rule 327 (FieldModifier -> STATIC .)
    LONG            reduce using rule 327 (FieldModifier -> STATIC .)
    CHAR            reduce using rule 327 (FieldModifier -> STATIC .)
    FLOAT           reduce using rule 327 (FieldModifier -> STATIC .)
    DOUBLE          reduce using rule 327 (FieldModifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 364 (MethodModifier -> STATIC .)
    NATIVE          reduce using rule 364 (MethodModifier -> STATIC .)
    VOID            reduce using rule 364 (MethodModifier -> STATIC .)
    LSS             reduce using rule 364 (MethodModifier -> STATIC .)
    FINAL           reduce using rule 296 (ClassModifier -> STATIC .)
    CLASS           reduce using rule 296 (ClassModifier -> STATIC .)
    ENUM            reduce using rule 296 (ClassModifier -> STATIC .)
    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)
    LBRACE          shift and go to state 299

  ! PUBLIC          [ reduce using rule 327 (FieldModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 327 (FieldModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 327 (FieldModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 327 (FieldModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 327 (FieldModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 327 (FieldModifier -> STATIC .) ]
  ! PUBLIC          [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! BOOLEAN         [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! IDENT           [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! BYTE            [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! SHORT           [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! INT             [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! LONG            [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! CHAR            [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! FLOAT           [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! DOUBLE          [ reduce using rule 364 (MethodModifier -> STATIC .) ]
  ! PUBLIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 296 (ClassModifier -> STATIC .) ]

    Block                          shift and go to state 528

state 314

    (407) ConstructorDeclaration -> ConstructorModifierS . ConstructorDeclarator ZooThrows ConstructorBody
    (412) ConstructorDeclarator -> . ZooTypeParameters SimpleTypeName LPAREN ZooFormalParameterList RPAREN
    (15) ZooTypeParameters -> . TypeParameters
    (16) ZooTypeParameters -> . empty
    (299) TypeParameters -> . LSS TypeParameterList GTR
    (1) empty -> .

    LSS             shift and go to state 297
    IDENT           reduce using rule 1 (empty -> .)

    ConstructorDeclarator          shift and go to state 529
    ZooTypeParameters              shift and go to state 530
    TypeParameters                 shift and go to state 295
    empty                          shift and go to state 296

state 315

    (322) FieldDeclaration -> FieldModifierS . UnannType VariableDeclaratorList SEMICOLON
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 531
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 316

    (358) MethodDeclaration -> MethodModifierS . MethodHeader MethodBody
    (371) MethodHeader -> . Result MethodDeclarator ZooThrows
    (372) MethodHeader -> . TypeParameters AnnotationS Result MethodDeclarator ZooThrows
    (373) Result -> . UnannType
    (374) Result -> . VOID
    (299) TypeParameters -> . LSS TypeParameterList GTR
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    VOID            shift and go to state 546
    LSS             shift and go to state 297
    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    MethodHeader                   shift and go to state 542
    Result                         shift and go to state 543
    TypeParameters                 shift and go to state 544
    UnannType                      shift and go to state 545
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 317

    (405) ConstructorModifierS -> ConstructorModifier . ConstructorModifierS
    (405) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (406) ConstructorModifierS -> . empty
    (408) ConstructorModifier -> . Annotation
    (409) ConstructorModifier -> . PUBLIC
    (410) ConstructorModifier -> . PROTECTED
    (411) ConstructorModifier -> . PRIVATE
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 550
    PROTECTED       shift and go to state 551
    PRIVATE         shift and go to state 552
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ConstructorModifier            shift and go to state 317
    ConstructorModifierS           shift and go to state 547
    empty                          shift and go to state 548
    Annotation                     shift and go to state 549
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 318

    (320) FieldModifierS -> FieldModifier . FieldModifierS
    (320) FieldModifierS -> . FieldModifier FieldModifierS
    (321) FieldModifierS -> . empty
    (323) FieldModifier -> . Annotation
    (324) FieldModifier -> . PUBLIC
    (325) FieldModifier -> . PROTECTED
    (326) FieldModifier -> . PRIVATE
    (327) FieldModifier -> . STATIC
    (328) FieldModifier -> . FINAL
    (329) FieldModifier -> . TRANSIENT
    (330) FieldModifier -> . VOLATILE
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 556
    PROTECTED       shift and go to state 557
    PRIVATE         shift and go to state 558
    STATIC          shift and go to state 559
    FINAL           shift and go to state 560
    TRANSIENT       shift and go to state 325
    VOLATILE        shift and go to state 326
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    FieldModifier                  shift and go to state 318
    FieldModifierS                 shift and go to state 553
    empty                          shift and go to state 554
    Annotation                     shift and go to state 555
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 319

    (356) MethodModifierS -> MethodModifier . MethodModifierS
    (356) MethodModifierS -> . MethodModifier MethodModifierS
    (357) MethodModifierS -> . empty
    (359) MethodModifier -> . Annotation
    (360) MethodModifier -> . PUBLIC
    (361) MethodModifier -> . PROTECTED
    (362) MethodModifier -> . PRIVATE
    (363) MethodModifier -> . ABSTRACT
    (364) MethodModifier -> . STATIC
    (365) MethodModifier -> . FINAL
    (366) MethodModifier -> . SYNCHRONIZED
    (367) MethodModifier -> . NATIVE
    (368) MethodModifier -> . STRICTFP
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 564
    PROTECTED       shift and go to state 565
    PRIVATE         shift and go to state 566
    ABSTRACT        shift and go to state 567
    STATIC          shift and go to state 568
    FINAL           shift and go to state 569
    SYNCHRONIZED    shift and go to state 328
    NATIVE          shift and go to state 329
    STRICTFP        shift and go to state 570
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    MethodModifier                 shift and go to state 319
    MethodModifierS                shift and go to state 561
    empty                          shift and go to state 562
    Annotation                     shift and go to state 563
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 320

    (408) ConstructorModifier -> Annotation .
    (323) FieldModifier -> Annotation .
    (359) MethodModifier -> Annotation .
    (291) ClassModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for LSS resolved using rule 359 (MethodModifier -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 323 (FieldModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
    TRANSIENT       reduce using rule 323 (FieldModifier -> Annotation .)
    VOLATILE        reduce using rule 323 (FieldModifier -> Annotation .)
    BOOLEAN         reduce using rule 323 (FieldModifier -> Annotation .)
    IDENT           reduce using rule 323 (FieldModifier -> Annotation .)
    BYTE            reduce using rule 323 (FieldModifier -> Annotation .)
    SHORT           reduce using rule 323 (FieldModifier -> Annotation .)
    INT             reduce using rule 323 (FieldModifier -> Annotation .)
    LONG            reduce using rule 323 (FieldModifier -> Annotation .)
    CHAR            reduce using rule 323 (FieldModifier -> Annotation .)
    FLOAT           reduce using rule 323 (FieldModifier -> Annotation .)
    DOUBLE          reduce using rule 323 (FieldModifier -> Annotation .)
    SYNCHRONIZED    reduce using rule 359 (MethodModifier -> Annotation .)
    NATIVE          reduce using rule 359 (MethodModifier -> Annotation .)
    VOID            reduce using rule 359 (MethodModifier -> Annotation .)
    LSS             reduce using rule 359 (MethodModifier -> Annotation .)
    FINAL           reduce using rule 291 (ClassModifier -> Annotation .)
    CLASS           reduce using rule 291 (ClassModifier -> Annotation .)
    ENUM            reduce using rule 291 (ClassModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)

  ! PUBLIC          [ reduce using rule 408 (ConstructorModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 408 (ConstructorModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 408 (ConstructorModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 408 (ConstructorModifier -> Annotation .) ]
  ! LSS             [ reduce using rule 408 (ConstructorModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 408 (ConstructorModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 323 (FieldModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 323 (FieldModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 323 (FieldModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 323 (FieldModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 323 (FieldModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 323 (FieldModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! INT             [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 359 (MethodModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 291 (ClassModifier -> Annotation .) ]


state 321

    (409) ConstructorModifier -> PUBLIC .
    (324) FieldModifier -> PUBLIC .
    (360) MethodModifier -> PUBLIC .
    (292) ClassModifier -> PUBLIC .
    (22) InterfaceModifier -> PUBLIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for LSS resolved using rule 360 (MethodModifier -> PUBLIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for INT resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for LONG resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 324 (FieldModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 292 (ClassModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
    TRANSIENT       reduce using rule 324 (FieldModifier -> PUBLIC .)
    VOLATILE        reduce using rule 324 (FieldModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 324 (FieldModifier -> PUBLIC .)
    IDENT           reduce using rule 324 (FieldModifier -> PUBLIC .)
    BYTE            reduce using rule 324 (FieldModifier -> PUBLIC .)
    SHORT           reduce using rule 324 (FieldModifier -> PUBLIC .)
    INT             reduce using rule 324 (FieldModifier -> PUBLIC .)
    LONG            reduce using rule 324 (FieldModifier -> PUBLIC .)
    CHAR            reduce using rule 324 (FieldModifier -> PUBLIC .)
    FLOAT           reduce using rule 324 (FieldModifier -> PUBLIC .)
    DOUBLE          reduce using rule 324 (FieldModifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 360 (MethodModifier -> PUBLIC .)
    NATIVE          reduce using rule 360 (MethodModifier -> PUBLIC .)
    VOID            reduce using rule 360 (MethodModifier -> PUBLIC .)
    LSS             reduce using rule 360 (MethodModifier -> PUBLIC .)
    FINAL           reduce using rule 292 (ClassModifier -> PUBLIC .)
    CLASS           reduce using rule 292 (ClassModifier -> PUBLIC .)
    ENUM            reduce using rule 292 (ClassModifier -> PUBLIC .)
    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)

  ! PUBLIC          [ reduce using rule 409 (ConstructorModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 409 (ConstructorModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 409 (ConstructorModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 409 (ConstructorModifier -> PUBLIC .) ]
  ! LSS             [ reduce using rule 409 (ConstructorModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 409 (ConstructorModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 324 (FieldModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 324 (FieldModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 324 (FieldModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 324 (FieldModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 324 (FieldModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 324 (FieldModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! BOOLEAN         [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! BYTE            [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! SHORT           [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! INT             [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! LONG            [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! CHAR            [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! FLOAT           [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! DOUBLE          [ reduce using rule 360 (MethodModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]


state 322

    (410) ConstructorModifier -> PROTECTED .
    (325) FieldModifier -> PROTECTED .
    (361) MethodModifier -> PROTECTED .
    (293) ClassModifier -> PROTECTED .
    (23) InterfaceModifier -> PROTECTED .

  ! reduce/reduce conflict for PUBLIC resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for IDENT resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for STATIC resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for FINAL resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for LSS resolved using rule 361 (MethodModifier -> PROTECTED .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for IDENT resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for BYTE resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for SHORT resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for INT resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for LONG resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for CHAR resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for FLOAT resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 325 (FieldModifier -> PROTECTED .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for STATIC resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for FINAL resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 293 (ClassModifier -> PROTECTED .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for STATIC resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 23 (InterfaceModifier -> PROTECTED .)
  ! reduce/reduce conflict for ATRATE resolved using rule 23 (InterfaceModifier -> PROTECTED .)
    TRANSIENT       reduce using rule 325 (FieldModifier -> PROTECTED .)
    VOLATILE        reduce using rule 325 (FieldModifier -> PROTECTED .)
    BOOLEAN         reduce using rule 325 (FieldModifier -> PROTECTED .)
    IDENT           reduce using rule 325 (FieldModifier -> PROTECTED .)
    BYTE            reduce using rule 325 (FieldModifier -> PROTECTED .)
    SHORT           reduce using rule 325 (FieldModifier -> PROTECTED .)
    INT             reduce using rule 325 (FieldModifier -> PROTECTED .)
    LONG            reduce using rule 325 (FieldModifier -> PROTECTED .)
    CHAR            reduce using rule 325 (FieldModifier -> PROTECTED .)
    FLOAT           reduce using rule 325 (FieldModifier -> PROTECTED .)
    DOUBLE          reduce using rule 325 (FieldModifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 361 (MethodModifier -> PROTECTED .)
    NATIVE          reduce using rule 361 (MethodModifier -> PROTECTED .)
    VOID            reduce using rule 361 (MethodModifier -> PROTECTED .)
    LSS             reduce using rule 361 (MethodModifier -> PROTECTED .)
    FINAL           reduce using rule 293 (ClassModifier -> PROTECTED .)
    CLASS           reduce using rule 293 (ClassModifier -> PROTECTED .)
    ENUM            reduce using rule 293 (ClassModifier -> PROTECTED .)
    PUBLIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PROTECTED       reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    PRIVATE         reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STATIC          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    STRICTFP        reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    ATRATE          reduce using rule 23 (InterfaceModifier -> PROTECTED .)
    INTERFACE       reduce using rule 23 (InterfaceModifier -> PROTECTED .)

  ! PUBLIC          [ reduce using rule 410 (ConstructorModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 410 (ConstructorModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 410 (ConstructorModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 410 (ConstructorModifier -> PROTECTED .) ]
  ! LSS             [ reduce using rule 410 (ConstructorModifier -> PROTECTED .) ]
  ! IDENT           [ reduce using rule 410 (ConstructorModifier -> PROTECTED .) ]
  ! PUBLIC          [ reduce using rule 325 (FieldModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 325 (FieldModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 325 (FieldModifier -> PROTECTED .) ]
  ! STATIC          [ reduce using rule 325 (FieldModifier -> PROTECTED .) ]
  ! FINAL           [ reduce using rule 325 (FieldModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 325 (FieldModifier -> PROTECTED .) ]
  ! PUBLIC          [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! ABSTRACT        [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! STATIC          [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! FINAL           [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! STRICTFP        [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! BOOLEAN         [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! IDENT           [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! BYTE            [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! SHORT           [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! INT             [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! LONG            [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! CHAR            [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! FLOAT           [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! DOUBLE          [ reduce using rule 361 (MethodModifier -> PROTECTED .) ]
  ! PUBLIC          [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! PROTECTED       [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! PRIVATE         [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! ABSTRACT        [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! STATIC          [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! STRICTFP        [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]
  ! ATRATE          [ reduce using rule 293 (ClassModifier -> PROTECTED .) ]


state 323

    (411) ConstructorModifier -> PRIVATE .
    (326) FieldModifier -> PRIVATE .
    (362) MethodModifier -> PRIVATE .
    (294) ClassModifier -> PRIVATE .
    (24) InterfaceModifier -> PRIVATE .

  ! reduce/reduce conflict for PUBLIC resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for IDENT resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for STATIC resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for FINAL resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for LSS resolved using rule 362 (MethodModifier -> PRIVATE .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for IDENT resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for BYTE resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for SHORT resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for INT resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for LONG resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for CHAR resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for FLOAT resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 326 (FieldModifier -> PRIVATE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for STATIC resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for FINAL resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 294 (ClassModifier -> PRIVATE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for STATIC resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 24 (InterfaceModifier -> PRIVATE .)
  ! reduce/reduce conflict for ATRATE resolved using rule 24 (InterfaceModifier -> PRIVATE .)
    TRANSIENT       reduce using rule 326 (FieldModifier -> PRIVATE .)
    VOLATILE        reduce using rule 326 (FieldModifier -> PRIVATE .)
    BOOLEAN         reduce using rule 326 (FieldModifier -> PRIVATE .)
    IDENT           reduce using rule 326 (FieldModifier -> PRIVATE .)
    BYTE            reduce using rule 326 (FieldModifier -> PRIVATE .)
    SHORT           reduce using rule 326 (FieldModifier -> PRIVATE .)
    INT             reduce using rule 326 (FieldModifier -> PRIVATE .)
    LONG            reduce using rule 326 (FieldModifier -> PRIVATE .)
    CHAR            reduce using rule 326 (FieldModifier -> PRIVATE .)
    FLOAT           reduce using rule 326 (FieldModifier -> PRIVATE .)
    DOUBLE          reduce using rule 326 (FieldModifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 362 (MethodModifier -> PRIVATE .)
    NATIVE          reduce using rule 362 (MethodModifier -> PRIVATE .)
    VOID            reduce using rule 362 (MethodModifier -> PRIVATE .)
    LSS             reduce using rule 362 (MethodModifier -> PRIVATE .)
    FINAL           reduce using rule 294 (ClassModifier -> PRIVATE .)
    CLASS           reduce using rule 294 (ClassModifier -> PRIVATE .)
    ENUM            reduce using rule 294 (ClassModifier -> PRIVATE .)
    PUBLIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PROTECTED       reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    PRIVATE         reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STATIC          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    STRICTFP        reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    ATRATE          reduce using rule 24 (InterfaceModifier -> PRIVATE .)
    INTERFACE       reduce using rule 24 (InterfaceModifier -> PRIVATE .)

  ! PUBLIC          [ reduce using rule 411 (ConstructorModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 411 (ConstructorModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 411 (ConstructorModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 411 (ConstructorModifier -> PRIVATE .) ]
  ! LSS             [ reduce using rule 411 (ConstructorModifier -> PRIVATE .) ]
  ! IDENT           [ reduce using rule 411 (ConstructorModifier -> PRIVATE .) ]
  ! PUBLIC          [ reduce using rule 326 (FieldModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 326 (FieldModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 326 (FieldModifier -> PRIVATE .) ]
  ! STATIC          [ reduce using rule 326 (FieldModifier -> PRIVATE .) ]
  ! FINAL           [ reduce using rule 326 (FieldModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 326 (FieldModifier -> PRIVATE .) ]
  ! PUBLIC          [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! ABSTRACT        [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! STATIC          [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! FINAL           [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! STRICTFP        [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! BOOLEAN         [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! IDENT           [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! BYTE            [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! SHORT           [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! INT             [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! LONG            [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! CHAR            [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! FLOAT           [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! DOUBLE          [ reduce using rule 362 (MethodModifier -> PRIVATE .) ]
  ! PUBLIC          [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! PROTECTED       [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! PRIVATE         [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! ABSTRACT        [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! STATIC          [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! STRICTFP        [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]
  ! ATRATE          [ reduce using rule 294 (ClassModifier -> PRIVATE .) ]


state 324

    (328) FieldModifier -> FINAL .
    (365) MethodModifier -> FINAL .
    (297) ClassModifier -> FINAL .

  ! reduce/reduce conflict for PUBLIC resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for STATIC resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for FINAL resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for IDENT resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for BYTE resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for SHORT resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for INT resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for LONG resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for CHAR resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for FLOAT resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 328 (FieldModifier -> FINAL .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for STATIC resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for FINAL resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 297 (ClassModifier -> FINAL .)
    TRANSIENT       reduce using rule 328 (FieldModifier -> FINAL .)
    VOLATILE        reduce using rule 328 (FieldModifier -> FINAL .)
    BOOLEAN         reduce using rule 328 (FieldModifier -> FINAL .)
    IDENT           reduce using rule 328 (FieldModifier -> FINAL .)
    BYTE            reduce using rule 328 (FieldModifier -> FINAL .)
    SHORT           reduce using rule 328 (FieldModifier -> FINAL .)
    INT             reduce using rule 328 (FieldModifier -> FINAL .)
    LONG            reduce using rule 328 (FieldModifier -> FINAL .)
    CHAR            reduce using rule 328 (FieldModifier -> FINAL .)
    FLOAT           reduce using rule 328 (FieldModifier -> FINAL .)
    DOUBLE          reduce using rule 328 (FieldModifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 365 (MethodModifier -> FINAL .)
    NATIVE          reduce using rule 365 (MethodModifier -> FINAL .)
    VOID            reduce using rule 365 (MethodModifier -> FINAL .)
    LSS             reduce using rule 365 (MethodModifier -> FINAL .)
    PUBLIC          reduce using rule 297 (ClassModifier -> FINAL .)
    PROTECTED       reduce using rule 297 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 297 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 297 (ClassModifier -> FINAL .)
    STATIC          reduce using rule 297 (ClassModifier -> FINAL .)
    FINAL           reduce using rule 297 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 297 (ClassModifier -> FINAL .)
    ATRATE          reduce using rule 297 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 297 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 297 (ClassModifier -> FINAL .)

  ! PUBLIC          [ reduce using rule 328 (FieldModifier -> FINAL .) ]
  ! PROTECTED       [ reduce using rule 328 (FieldModifier -> FINAL .) ]
  ! PRIVATE         [ reduce using rule 328 (FieldModifier -> FINAL .) ]
  ! STATIC          [ reduce using rule 328 (FieldModifier -> FINAL .) ]
  ! FINAL           [ reduce using rule 328 (FieldModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 328 (FieldModifier -> FINAL .) ]
  ! PUBLIC          [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! PROTECTED       [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! PRIVATE         [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! ABSTRACT        [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! STATIC          [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! FINAL           [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! STRICTFP        [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! BOOLEAN         [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! IDENT           [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! BYTE            [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! SHORT           [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! INT             [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! LONG            [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! CHAR            [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! FLOAT           [ reduce using rule 365 (MethodModifier -> FINAL .) ]
  ! DOUBLE          [ reduce using rule 365 (MethodModifier -> FINAL .) ]


state 325

    (329) FieldModifier -> TRANSIENT .

    PUBLIC          reduce using rule 329 (FieldModifier -> TRANSIENT .)
    PROTECTED       reduce using rule 329 (FieldModifier -> TRANSIENT .)
    PRIVATE         reduce using rule 329 (FieldModifier -> TRANSIENT .)
    STATIC          reduce using rule 329 (FieldModifier -> TRANSIENT .)
    FINAL           reduce using rule 329 (FieldModifier -> TRANSIENT .)
    TRANSIENT       reduce using rule 329 (FieldModifier -> TRANSIENT .)
    VOLATILE        reduce using rule 329 (FieldModifier -> TRANSIENT .)
    ATRATE          reduce using rule 329 (FieldModifier -> TRANSIENT .)
    BOOLEAN         reduce using rule 329 (FieldModifier -> TRANSIENT .)
    IDENT           reduce using rule 329 (FieldModifier -> TRANSIENT .)
    BYTE            reduce using rule 329 (FieldModifier -> TRANSIENT .)
    SHORT           reduce using rule 329 (FieldModifier -> TRANSIENT .)
    INT             reduce using rule 329 (FieldModifier -> TRANSIENT .)
    LONG            reduce using rule 329 (FieldModifier -> TRANSIENT .)
    CHAR            reduce using rule 329 (FieldModifier -> TRANSIENT .)
    FLOAT           reduce using rule 329 (FieldModifier -> TRANSIENT .)
    DOUBLE          reduce using rule 329 (FieldModifier -> TRANSIENT .)


state 326

    (330) FieldModifier -> VOLATILE .

    PUBLIC          reduce using rule 330 (FieldModifier -> VOLATILE .)
    PROTECTED       reduce using rule 330 (FieldModifier -> VOLATILE .)
    PRIVATE         reduce using rule 330 (FieldModifier -> VOLATILE .)
    STATIC          reduce using rule 330 (FieldModifier -> VOLATILE .)
    FINAL           reduce using rule 330 (FieldModifier -> VOLATILE .)
    TRANSIENT       reduce using rule 330 (FieldModifier -> VOLATILE .)
    VOLATILE        reduce using rule 330 (FieldModifier -> VOLATILE .)
    ATRATE          reduce using rule 330 (FieldModifier -> VOLATILE .)
    BOOLEAN         reduce using rule 330 (FieldModifier -> VOLATILE .)
    IDENT           reduce using rule 330 (FieldModifier -> VOLATILE .)
    BYTE            reduce using rule 330 (FieldModifier -> VOLATILE .)
    SHORT           reduce using rule 330 (FieldModifier -> VOLATILE .)
    INT             reduce using rule 330 (FieldModifier -> VOLATILE .)
    LONG            reduce using rule 330 (FieldModifier -> VOLATILE .)
    CHAR            reduce using rule 330 (FieldModifier -> VOLATILE .)
    FLOAT           reduce using rule 330 (FieldModifier -> VOLATILE .)
    DOUBLE          reduce using rule 330 (FieldModifier -> VOLATILE .)


state 327

    (363) MethodModifier -> ABSTRACT .
    (295) ClassModifier -> ABSTRACT .
    (25) InterfaceModifier -> ABSTRACT .

  ! reduce/reduce conflict for PUBLIC resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for FINAL resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 295 (ClassModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 363 (MethodModifier -> ABSTRACT .)
    NATIVE          reduce using rule 363 (MethodModifier -> ABSTRACT .)
    VOID            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    LSS             reduce using rule 363 (MethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 363 (MethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 363 (MethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 363 (MethodModifier -> ABSTRACT .)
    INT             reduce using rule 363 (MethodModifier -> ABSTRACT .)
    LONG            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 363 (MethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 363 (MethodModifier -> ABSTRACT .)
    FINAL           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    CLASS           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    ENUM            reduce using rule 295 (ClassModifier -> ABSTRACT .)
    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)

  ! PUBLIC          [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! PROTECTED       [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! PRIVATE         [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! FINAL           [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 363 (MethodModifier -> ABSTRACT .) ]
  ! PUBLIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PROTECTED       [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PRIVATE         [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]


state 328

    (366) MethodModifier -> SYNCHRONIZED .

    PUBLIC          reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    PROTECTED       reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    PRIVATE         reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    ABSTRACT        reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    STATIC          reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    FINAL           reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    SYNCHRONIZED    reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    NATIVE          reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    STRICTFP        reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    ATRATE          reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    VOID            reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    LSS             reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    BOOLEAN         reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    IDENT           reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    BYTE            reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    SHORT           reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    INT             reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    LONG            reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    CHAR            reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    FLOAT           reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)
    DOUBLE          reduce using rule 366 (MethodModifier -> SYNCHRONIZED .)


state 329

    (367) MethodModifier -> NATIVE .

    PUBLIC          reduce using rule 367 (MethodModifier -> NATIVE .)
    PROTECTED       reduce using rule 367 (MethodModifier -> NATIVE .)
    PRIVATE         reduce using rule 367 (MethodModifier -> NATIVE .)
    ABSTRACT        reduce using rule 367 (MethodModifier -> NATIVE .)
    STATIC          reduce using rule 367 (MethodModifier -> NATIVE .)
    FINAL           reduce using rule 367 (MethodModifier -> NATIVE .)
    SYNCHRONIZED    reduce using rule 367 (MethodModifier -> NATIVE .)
    NATIVE          reduce using rule 367 (MethodModifier -> NATIVE .)
    STRICTFP        reduce using rule 367 (MethodModifier -> NATIVE .)
    ATRATE          reduce using rule 367 (MethodModifier -> NATIVE .)
    VOID            reduce using rule 367 (MethodModifier -> NATIVE .)
    LSS             reduce using rule 367 (MethodModifier -> NATIVE .)
    BOOLEAN         reduce using rule 367 (MethodModifier -> NATIVE .)
    IDENT           reduce using rule 367 (MethodModifier -> NATIVE .)
    BYTE            reduce using rule 367 (MethodModifier -> NATIVE .)
    SHORT           reduce using rule 367 (MethodModifier -> NATIVE .)
    INT             reduce using rule 367 (MethodModifier -> NATIVE .)
    LONG            reduce using rule 367 (MethodModifier -> NATIVE .)
    CHAR            reduce using rule 367 (MethodModifier -> NATIVE .)
    FLOAT           reduce using rule 367 (MethodModifier -> NATIVE .)
    DOUBLE          reduce using rule 367 (MethodModifier -> NATIVE .)


state 330

    (368) MethodModifier -> STRICTFP .
    (298) ClassModifier -> STRICTFP .
    (27) InterfaceModifier -> STRICTFP .

  ! reduce/reduce conflict for PUBLIC resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for STATIC resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for FINAL resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for ATRATE resolved using rule 298 (ClassModifier -> STRICTFP .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STATIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ATRATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
    SYNCHRONIZED    reduce using rule 368 (MethodModifier -> STRICTFP .)
    NATIVE          reduce using rule 368 (MethodModifier -> STRICTFP .)
    VOID            reduce using rule 368 (MethodModifier -> STRICTFP .)
    LSS             reduce using rule 368 (MethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 368 (MethodModifier -> STRICTFP .)
    IDENT           reduce using rule 368 (MethodModifier -> STRICTFP .)
    BYTE            reduce using rule 368 (MethodModifier -> STRICTFP .)
    SHORT           reduce using rule 368 (MethodModifier -> STRICTFP .)
    INT             reduce using rule 368 (MethodModifier -> STRICTFP .)
    LONG            reduce using rule 368 (MethodModifier -> STRICTFP .)
    CHAR            reduce using rule 368 (MethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 368 (MethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 368 (MethodModifier -> STRICTFP .)
    FINAL           reduce using rule 298 (ClassModifier -> STRICTFP .)
    CLASS           reduce using rule 298 (ClassModifier -> STRICTFP .)
    ENUM            reduce using rule 298 (ClassModifier -> STRICTFP .)
    PUBLIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ATRATE          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 27 (InterfaceModifier -> STRICTFP .)

  ! PUBLIC          [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! PROTECTED       [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! PRIVATE         [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! ABSTRACT        [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! STATIC          [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! FINAL           [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! STRICTFP        [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! ATRATE          [ reduce using rule 368 (MethodModifier -> STRICTFP .) ]
  ! PUBLIC          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! PROTECTED       [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! PRIVATE         [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! ABSTRACT        [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! STATIC          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! STRICTFP        [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! ATRATE          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]


state 331

    (307) InterfaceTypeList -> InterfaceType COMMAInterfaceTypeS .

    LBRACE          reduce using rule 307 (InterfaceTypeList -> InterfaceType COMMAInterfaceTypeS .)


state 332

    (305) COMMAInterfaceTypeS -> COMMA . InterfaceType COMMAInterfaceTypeS
    (465) InterfaceType -> . ClassType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    InterfaceType                  shift and go to state 571
    ClassType                      shift and go to state 188
    AnnotationS                    shift and go to state 88
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 333

    (306) COMMAInterfaceTypeS -> empty .

    LBRACE          reduce using rule 306 (COMMAInterfaceTypeS -> empty .)


state 334

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters . ZooExtendsInterfaces InterfaceBody
    (17) ZooExtendsInterfaces -> . ExtendsInterfaces
    (18) ZooExtendsInterfaces -> . empty
    (28) ExtendsInterfaces -> . EXTENDS InterfaceTypeList
    (1) empty -> .

    EXTENDS         shift and go to state 575
    LBRACE          reduce using rule 1 (empty -> .)

    ZooExtendsInterfaces           shift and go to state 572
    ExtendsInterfaces              shift and go to state 573
    empty                          shift and go to state 574

state 335

    (53) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT . AnnotationTypeBody
    (54) AnnotationTypeBody -> . LBRACE AnnotationTypeMemberDeclarationS RBRACE

    LBRACE          shift and go to state 577

    AnnotationTypeBody             shift and go to state 576

state 336

    (463) ClassType -> AnnotationS IDENT ZooTypeArguments .

    IMPLEMENTS      reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    PERIOD          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    COLON_SEP       reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    COMMA           reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    AND             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    RPAREN          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    LBRACK          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    LSS             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    GTR             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    LEQ             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    GEQ             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    INSTANCEOF      reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    EQL             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    NEQ             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    XOR             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    OR              reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    LAND            reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    QUES            reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    LOR             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    RBRACE          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    COLON           reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    MUL             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    QUO             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    REM             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    ADD             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    SUB             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    SHL             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    SHR             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    SHR_UN          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    RBRACK          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    SEMICOLON       reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    IDENT           reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)


state 337

    (123) ZooTypeArguments -> empty .

    IMPLEMENTS      reduce using rule 123 (ZooTypeArguments -> empty .)
    LBRACE          reduce using rule 123 (ZooTypeArguments -> empty .)
    PERIOD          reduce using rule 123 (ZooTypeArguments -> empty .)
    COMMA           reduce using rule 123 (ZooTypeArguments -> empty .)
    ATRATE          reduce using rule 123 (ZooTypeArguments -> empty .)
    LBRACK          reduce using rule 123 (ZooTypeArguments -> empty .)
    AND             reduce using rule 123 (ZooTypeArguments -> empty .)
    RPAREN          reduce using rule 123 (ZooTypeArguments -> empty .)
    GTR             reduce using rule 123 (ZooTypeArguments -> empty .)
    OR              reduce using rule 123 (ZooTypeArguments -> empty .)
    IDENT           reduce using rule 123 (ZooTypeArguments -> empty .)
    NEW             reduce using rule 123 (ZooTypeArguments -> empty .)
    COLON_SEP       reduce using rule 123 (ZooTypeArguments -> empty .)
    SEMICOLON       reduce using rule 123 (ZooTypeArguments -> empty .)
    LSS             reduce using rule 123 (ZooTypeArguments -> empty .)
    LEQ             reduce using rule 123 (ZooTypeArguments -> empty .)
    GEQ             reduce using rule 123 (ZooTypeArguments -> empty .)
    INSTANCEOF      reduce using rule 123 (ZooTypeArguments -> empty .)
    EQL             reduce using rule 123 (ZooTypeArguments -> empty .)
    NEQ             reduce using rule 123 (ZooTypeArguments -> empty .)
    XOR             reduce using rule 123 (ZooTypeArguments -> empty .)
    LAND            reduce using rule 123 (ZooTypeArguments -> empty .)
    QUES            reduce using rule 123 (ZooTypeArguments -> empty .)
    LOR             reduce using rule 123 (ZooTypeArguments -> empty .)
    RBRACE          reduce using rule 123 (ZooTypeArguments -> empty .)
    COLON           reduce using rule 123 (ZooTypeArguments -> empty .)
    MUL             reduce using rule 123 (ZooTypeArguments -> empty .)
    QUO             reduce using rule 123 (ZooTypeArguments -> empty .)
    REM             reduce using rule 123 (ZooTypeArguments -> empty .)
    ADD             reduce using rule 123 (ZooTypeArguments -> empty .)
    SUB             reduce using rule 123 (ZooTypeArguments -> empty .)
    SHL             reduce using rule 123 (ZooTypeArguments -> empty .)
    SHR             reduce using rule 123 (ZooTypeArguments -> empty .)
    SHR_UN          reduce using rule 123 (ZooTypeArguments -> empty .)
    RBRACK          reduce using rule 123 (ZooTypeArguments -> empty .)
    ELLIPSIS        reduce using rule 123 (ZooTypeArguments -> empty .)
    THIS            reduce using rule 123 (ZooTypeArguments -> empty .)
    SUPER           reduce using rule 123 (ZooTypeArguments -> empty .)


state 338

    (464) ClassType -> ClassOrInterfaceType PERIOD AnnotationS . IDENT ZooTypeArguments

    IDENT           shift and go to state 578


state 339

    (265) TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .

    IMPORT          reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    SEMICOLON       reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    PUBLIC          reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    PROTECTED       reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    PRIVATE         reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    ABSTRACT        reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    STATIC          reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    FINAL           reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    STRICTFP        reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    EXTENDS         reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    ATRATE          reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    CLASS           reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    ENUM            reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    IMPLEMENTS      reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    LBRACE          reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    INTERFACE       reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)
    $end            reduce using rule 265 (TypeImportOnDemandDeclaration -> IMPORT PackageOrTypeName PERIOD MUL SEMICOLON .)


state 340

    (266) SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT . SEMICOLON

    SEMICOLON       shift and go to state 579


state 341

    (267) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL . SEMICOLON

    SEMICOLON       shift and go to state 580


state 342

    (257) PERIODIDENTS -> PERIOD IDENT PERIODIDENTS .

    SEMICOLON       reduce using rule 257 (PERIODIDENTS -> PERIOD IDENT PERIODIDENTS .)


state 343

    (105) PrimaryNoNewArray -> TypeName PERIOD THIS .

    LBRACK          reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    PERIOD          reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    COLON_SEP       reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    INC             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    DEC             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    MUL             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    QUO             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    REM             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    ADD             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SUB             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SHL             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SHR             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SHR_UN          reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LSS             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    GTR             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LEQ             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    GEQ             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    INSTANCEOF      reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    EQL             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    NEQ             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    AND             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    XOR             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    OR              reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LAND            reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    QUES            reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    LOR             reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    RPAREN          reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    COMMA           reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    RBRACE          reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    COLON           reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    RBRACK          reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)
    SEMICOLON       reduce using rule 105 (PrimaryNoNewArray -> TypeName PERIOD THIS .)


state 344

    (135) FieldAccess -> TypeName PERIOD SUPER . PERIOD IDENT
    (143) MethodInvocation -> TypeName PERIOD SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (151) MethodReference -> TypeName PERIOD SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 581
    COLON_SEP       shift and go to state 582


state 345

    (139) MethodInvocation -> TypeName PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 583


state 346

    (112) ClassLiteral -> TypeName LBRACKRBRACKS PERIOD . CLASS

    CLASS           shift and go to state 584


state 347

    (116) LBRACKRBRACKS -> LBRACK RBRACK . LBRACKRBRACKS
    (116) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (117) LBRACKRBRACKS -> . empty
    (1) empty -> .

    LBRACK          shift and go to state 200
    PERIOD          reduce using rule 1 (empty -> .)

    LBRACKRBRACKS                  shift and go to state 585
    empty                          shift and go to state 201

state 348

    (166) LambdaParameters -> LPAREN ZooFormalParameterList . RPAREN

    RPAREN          shift and go to state 586


state 349

    (167) LambdaParameters -> LPAREN InferredFormalParameterList . RPAREN

    RPAREN          shift and go to state 587


state 350

    (375) ZooFormalParameterList -> FormalParameterList .

    RPAREN          reduce using rule 375 (ZooFormalParameterList -> FormalParameterList .)


state 351

    (376) ZooFormalParameterList -> empty .
    (126) AnnotationS -> empty .
    (505) VariableModifierS -> empty .
    (386) ZooVariableModifier -> empty .

  ! reduce/reduce conflict for BOOLEAN resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 126 (AnnotationS -> empty .)
    RPAREN          reduce using rule 376 (ZooFormalParameterList -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)

  ! BOOLEAN         [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! BOOLEAN         [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! IDENT           [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! BYTE            [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! SHORT           [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! INT             [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! LONG            [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! CHAR            [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! FLOAT           [ reduce using rule 386 (ZooVariableModifier -> empty .) ]
  ! DOUBLE          [ reduce using rule 386 (ZooVariableModifier -> empty .) ]


state 352

    (168) InferredFormalParameterList -> IDENT . COMMAIDENTS
    (165) LambdaParameters -> IDENT .
    (275) ExpressionName -> IDENT .
    (280) AmbiguousName -> IDENT .
    (271) TypeName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (277) MethodName -> IDENT .
    (169) COMMAIDENTS -> . COMMA IDENT COMMAIDENTS
    (170) COMMAIDENTS -> . empty
    (1) empty -> .

  ! reduce/reduce conflict for PERIOD resolved using rule 275 (ExpressionName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
    ARROW           reduce using rule 165 (LambdaParameters -> IDENT .)
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    ASSIGN          reduce using rule 275 (ExpressionName -> IDENT .)
    MUL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    QUO_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    REM_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    ADD_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SUB_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 275 (ExpressionName -> IDENT .)
    AND_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    XOR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    OR_ASSIGN       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)
    MUL             reduce using rule 275 (ExpressionName -> IDENT .)
    QUO             reduce using rule 275 (ExpressionName -> IDENT .)
    REM             reduce using rule 275 (ExpressionName -> IDENT .)
    ADD             reduce using rule 275 (ExpressionName -> IDENT .)
    SUB             reduce using rule 275 (ExpressionName -> IDENT .)
    SHL             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN          reduce using rule 275 (ExpressionName -> IDENT .)
    LSS             reduce using rule 275 (ExpressionName -> IDENT .)
    GTR             reduce using rule 275 (ExpressionName -> IDENT .)
    LEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    GEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    INSTANCEOF      reduce using rule 275 (ExpressionName -> IDENT .)
    EQL             reduce using rule 275 (ExpressionName -> IDENT .)
    NEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    AND             reduce using rule 275 (ExpressionName -> IDENT .)
    XOR             reduce using rule 275 (ExpressionName -> IDENT .)
    OR              reduce using rule 275 (ExpressionName -> IDENT .)
    LAND            reduce using rule 275 (ExpressionName -> IDENT .)
    QUES            reduce using rule 275 (ExpressionName -> IDENT .)
    LOR             reduce using rule 275 (ExpressionName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)
    COMMA           shift and go to state 589
    RPAREN          reduce using rule 1 (empty -> .)

  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! RPAREN          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]

    COMMAIDENTS                    shift and go to state 588
    empty                          shift and go to state 590

state 353

    (447) PrimitiveType -> AnnotationS . NumericType
    (448) PrimitiveType -> AnnotationS . BOOLEAN
    (466) TypeVariable -> AnnotationS . IDENT
    (394) ReceiverParameter -> AnnotationS . UnannType ZooIDENTPERIOD THIS
    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 592
    IDENT           shift and go to state 593
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    NumericType                    shift and go to state 591
    UnannType                      shift and go to state 594
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 354

    (378) FormalParameterList -> ReceiverParameter .
    (384) FormalParameters -> ReceiverParameter . COMMAFormalParameterS
    (381) COMMAFormalParameterS -> . COMMA FormalParameter COMMAFormalParameterS
    (382) COMMAFormalParameterS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 378 (FormalParameterList -> ReceiverParameter .)
    COMMA           shift and go to state 596

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAFormalParameterS          shift and go to state 595
    empty                          shift and go to state 597

state 355

    (379) FormalParameterList -> FormalParameters . COMMA LastFormalParameter

    COMMA           shift and go to state 598


state 356

    (380) FormalParameterList -> LastFormalParameter .

    RPAREN          reduce using rule 380 (FormalParameterList -> LastFormalParameter .)


state 357

    (125) AnnotationS -> Annotation . AnnotationS
    (388) VariableModifier -> Annotation .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for BOOLEAN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BYTE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHORT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LONG resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    FINAL           reduce using rule 388 (VariableModifier -> Annotation .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! INT             [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 388 (VariableModifier -> Annotation .) ]

    Annotation                     shift and go to state 90
    AnnotationS                    shift and go to state 193
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 358

    (383) FormalParameters -> FormalParameter . COMMAFormalParameterS
    (391) LastFormalParameter -> FormalParameter .
    (381) COMMAFormalParameterS -> . COMMA FormalParameter COMMAFormalParameterS
    (382) COMMAFormalParameterS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 391 (LastFormalParameter -> FormalParameter .)
    COMMA           shift and go to state 596

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAFormalParameterS          shift and go to state 599
    empty                          shift and go to state 597

state 359

    (390) LastFormalParameter -> VariableModifierS . UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 600
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 360

    (387) FormalParameter -> ZooVariableModifier . UnannType VariableDeclaratorId
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 601
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 361

    (504) VariableModifierS -> VariableModifier . VariableModifierS
    (385) ZooVariableModifier -> VariableModifier .
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for BOOLEAN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BYTE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHORT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LONG resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 1 (empty -> .)
    FINAL           shift and go to state 362
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! BOOLEAN         [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! IDENT           [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! BYTE            [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! SHORT           [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! INT             [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! LONG            [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! CHAR            [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! FLOAT           [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]
  ! DOUBLE          [ reduce using rule 385 (ZooVariableModifier -> VariableModifier .) ]

    VariableModifier               shift and go to state 498
    VariableModifierS              shift and go to state 602
    empty                          shift and go to state 603
    Annotation                     shift and go to state 604
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 362

    (389) VariableModifier -> FINAL .

    FINAL           reduce using rule 389 (VariableModifier -> FINAL .)
    ATRATE          reduce using rule 389 (VariableModifier -> FINAL .)
    BOOLEAN         reduce using rule 389 (VariableModifier -> FINAL .)
    IDENT           reduce using rule 389 (VariableModifier -> FINAL .)
    BYTE            reduce using rule 389 (VariableModifier -> FINAL .)
    SHORT           reduce using rule 389 (VariableModifier -> FINAL .)
    INT             reduce using rule 389 (VariableModifier -> FINAL .)
    LONG            reduce using rule 389 (VariableModifier -> FINAL .)
    CHAR            reduce using rule 389 (VariableModifier -> FINAL .)
    FLOAT           reduce using rule 389 (VariableModifier -> FINAL .)
    DOUBLE          reduce using rule 389 (VariableModifier -> FINAL .)


state 363

    (241) CastExpression -> LPAREN PrimitiveType RPAREN . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    PrimitiveType                  shift and go to state 138
    UnaryExpression                shift and go to state 605
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    ReferenceType                  shift and go to state 119
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 364

    (242) CastExpression -> LPAREN ReferenceType AdditionalBoundS . RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> LPAREN ReferenceType AdditionalBoundS . RPAREN LambdaExpression

    RPAREN          shift and go to state 606


state 365

    (244) AdditionalBoundS -> AdditionalBound . AdditionalBoundS
    (244) AdditionalBoundS -> . AdditionalBound AdditionalBoundS
    (245) AdditionalBoundS -> . empty
    (481) AdditionalBound -> . AND InterfaceType
    (1) empty -> .

    AND             shift and go to state 367
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    AdditionalBound                shift and go to state 365
    AdditionalBoundS               shift and go to state 607
    empty                          shift and go to state 366

state 366

    (245) AdditionalBoundS -> empty .

    RPAREN          reduce using rule 245 (AdditionalBoundS -> empty .)
    COMMA           reduce using rule 245 (AdditionalBoundS -> empty .)
    GTR             reduce using rule 245 (AdditionalBoundS -> empty .)


state 367

    (481) AdditionalBound -> AND . InterfaceType
    (465) InterfaceType -> . ClassType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    InterfaceType                  shift and go to state 608
    ClassType                      shift and go to state 188
    AnnotationS                    shift and go to state 88
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 368

    (106) PrimaryNoNewArray -> LPAREN Expression RPAREN .

    LBRACK          reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    PERIOD          reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON_SEP       reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUO             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    REM             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SHR_UN          reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LSS             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GTR             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INSTANCEOF      reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    EQL             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    NEQ             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    AND             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    OR              reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LAND            reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUES            reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LOR             reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 106 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)


state 369

    (466) TypeVariable -> AnnotationS IDENT .
    (463) ClassType -> AnnotationS IDENT . ZooTypeArguments
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for LSS resolved as shift
  ! reduce/reduce conflict for COLON_SEP resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for ATRATE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for LSS resolved as shift
  ! reduce/reduce conflict for GTR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for GEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INSTANCEOF resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for EQL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for NEQ resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for XOR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LAND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for QUES resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LOR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for COLON resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for MUL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for QUO resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for REM resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for ADD resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SUB resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHL resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHR_UN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RBRACK resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 1 (empty -> .)
    LSS             shift and go to state 280
    COLON_SEP       reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

  ! ATRATE          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LBRACE          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! COLON_SEP       [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! AND             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! RPAREN          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LSS             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! GTR             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LEQ             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! GEQ             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! INSTANCEOF      [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! EQL             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! NEQ             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! XOR             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! OR              [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LAND            [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! QUES            [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LOR             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! COMMA           [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! RBRACE          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! COLON           [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! MUL             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! QUO             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! REM             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! ADD             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! SUB             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! SHL             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! SHR             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! SHR_UN          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! RBRACK          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! SEMICOLON       [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 336
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 370

    (164) LambdaExpression -> LambdaParameters ARROW . LambdaBody
    (171) LambdaBody -> . Expression
    (172) LambdaBody -> . Block
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    LBRACE          shift and go to state 299
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    LambdaParameters               shift and go to state 213
    LambdaBody                     shift and go to state 609
    Expression                     shift and go to state 610
    Block                          shift and go to state 611
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 371

    (175) Assignment -> LeftHandSide AssignmentOperator . Expression
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    LeftHandSide                   shift and go to state 216
    Expression                     shift and go to state 612
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 372

    (179) AssignmentOperator -> ASSIGN .

    IDENT           reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    LPAREN          reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    SUPER           reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    THIS            reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    NEW             reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    BOOL_LIT        reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    NULL_LIT        reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    DECIMAL_LIT     reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    HEX_LIT         reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    OCTAL_LIT       reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    BINARY_LIT      reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    STRING_LIT      reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    CHAR_LIT        reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    BOOLEAN         reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    VOID            reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    BYTE            reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    SHORT           reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    INT             reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    LONG            reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    CHAR            reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    FLOAT           reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    DOUBLE          reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    ATRATE          reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    ADD             reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    SUB             reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    INC             reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    DEC             reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    LNOT            reduce using rule 179 (AssignmentOperator -> ASSIGN .)
    NOT             reduce using rule 179 (AssignmentOperator -> ASSIGN .)


state 373

    (180) AssignmentOperator -> MUL_ASSIGN .

    IDENT           reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    LPAREN          reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    SUPER           reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    THIS            reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    NEW             reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    BOOL_LIT        reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    NULL_LIT        reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    DECIMAL_LIT     reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    HEX_LIT         reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    OCTAL_LIT       reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    BINARY_LIT      reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    STRING_LIT      reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    CHAR_LIT        reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    BOOLEAN         reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    VOID            reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    BYTE            reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    SHORT           reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    INT             reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    LONG            reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    CHAR            reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT           reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    DOUBLE          reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    ATRATE          reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    ADD             reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    SUB             reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    INC             reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    DEC             reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    LNOT            reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)
    NOT             reduce using rule 180 (AssignmentOperator -> MUL_ASSIGN .)


state 374

    (181) AssignmentOperator -> QUO_ASSIGN .

    IDENT           reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    LPAREN          reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    SUPER           reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    THIS            reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    NEW             reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    BOOL_LIT        reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    NULL_LIT        reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    DECIMAL_LIT     reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    HEX_LIT         reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    OCTAL_LIT       reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    BINARY_LIT      reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    STRING_LIT      reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    CHAR_LIT        reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    BOOLEAN         reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    VOID            reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    BYTE            reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    SHORT           reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    INT             reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    LONG            reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    CHAR            reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    FLOAT           reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    DOUBLE          reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    ATRATE          reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    ADD             reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    SUB             reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    INC             reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    DEC             reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    LNOT            reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)
    NOT             reduce using rule 181 (AssignmentOperator -> QUO_ASSIGN .)


state 375

    (182) AssignmentOperator -> REM_ASSIGN .

    IDENT           reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    LPAREN          reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    SUPER           reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    THIS            reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    NEW             reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    BOOL_LIT        reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    NULL_LIT        reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    DECIMAL_LIT     reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    HEX_LIT         reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    OCTAL_LIT       reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    BINARY_LIT      reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    STRING_LIT      reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    CHAR_LIT        reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    BOOLEAN         reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    VOID            reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    BYTE            reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    SHORT           reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    INT             reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    LONG            reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    CHAR            reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    FLOAT           reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    DOUBLE          reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    ATRATE          reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    ADD             reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    SUB             reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    INC             reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    DEC             reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    LNOT            reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)
    NOT             reduce using rule 182 (AssignmentOperator -> REM_ASSIGN .)


state 376

    (183) AssignmentOperator -> ADD_ASSIGN .

    IDENT           reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    LPAREN          reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    SUPER           reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    THIS            reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    NEW             reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    BOOL_LIT        reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    NULL_LIT        reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    DECIMAL_LIT     reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    HEX_LIT         reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    OCTAL_LIT       reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    BINARY_LIT      reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    STRING_LIT      reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    CHAR_LIT        reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    BOOLEAN         reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    VOID            reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    BYTE            reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    SHORT           reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    INT             reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    LONG            reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    CHAR            reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT           reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    DOUBLE          reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    ATRATE          reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    ADD             reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    SUB             reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    INC             reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    DEC             reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    LNOT            reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)
    NOT             reduce using rule 183 (AssignmentOperator -> ADD_ASSIGN .)


state 377

    (184) AssignmentOperator -> SUB_ASSIGN .

    IDENT           reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    LPAREN          reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    SUPER           reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    THIS            reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    NEW             reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    BOOL_LIT        reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    NULL_LIT        reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    DECIMAL_LIT     reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    HEX_LIT         reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    OCTAL_LIT       reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    BINARY_LIT      reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    STRING_LIT      reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    CHAR_LIT        reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    BOOLEAN         reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    VOID            reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    BYTE            reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    SHORT           reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    INT             reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    LONG            reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    CHAR            reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT           reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    DOUBLE          reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    ATRATE          reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    ADD             reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    SUB             reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    INC             reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    DEC             reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    LNOT            reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)
    NOT             reduce using rule 184 (AssignmentOperator -> SUB_ASSIGN .)


state 378

    (185) AssignmentOperator -> SHL_ASSIGN .

    IDENT           reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    LPAREN          reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    SUPER           reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    THIS            reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    NEW             reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    BOOL_LIT        reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    NULL_LIT        reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    DECIMAL_LIT     reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    HEX_LIT         reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    OCTAL_LIT       reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    BINARY_LIT      reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    STRING_LIT      reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    CHAR_LIT        reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    BOOLEAN         reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    VOID            reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    BYTE            reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    SHORT           reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    INT             reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    LONG            reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    CHAR            reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    FLOAT           reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    DOUBLE          reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    ATRATE          reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    ADD             reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    SUB             reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    INC             reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    DEC             reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    LNOT            reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)
    NOT             reduce using rule 185 (AssignmentOperator -> SHL_ASSIGN .)


state 379

    (186) AssignmentOperator -> SHR_ASSIGN .

    IDENT           reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    LPAREN          reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    SUPER           reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    THIS            reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    NEW             reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    BOOL_LIT        reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    NULL_LIT        reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    DECIMAL_LIT     reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    HEX_LIT         reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    OCTAL_LIT       reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    BINARY_LIT      reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    STRING_LIT      reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    CHAR_LIT        reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    BOOLEAN         reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    VOID            reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    BYTE            reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    SHORT           reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    INT             reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    LONG            reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    CHAR            reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    FLOAT           reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    DOUBLE          reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    ATRATE          reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    ADD             reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    SUB             reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    INC             reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    DEC             reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    LNOT            reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)
    NOT             reduce using rule 186 (AssignmentOperator -> SHR_ASSIGN .)


state 380

    (187) AssignmentOperator -> SHR_UN_ASSIGN .

    IDENT           reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    LPAREN          reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    SUPER           reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    THIS            reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    NEW             reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BOOL_LIT        reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    NULL_LIT        reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    DECIMAL_LIT     reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    HEX_LIT         reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    OCTAL_LIT       reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BINARY_LIT      reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    STRING_LIT      reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    CHAR_LIT        reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BOOLEAN         reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    VOID            reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    BYTE            reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    SHORT           reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    INT             reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    LONG            reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    CHAR            reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    FLOAT           reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    DOUBLE          reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    ATRATE          reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    ADD             reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    SUB             reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    INC             reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    DEC             reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    LNOT            reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)
    NOT             reduce using rule 187 (AssignmentOperator -> SHR_UN_ASSIGN .)


state 381

    (188) AssignmentOperator -> AND_ASSIGN .

    IDENT           reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    LPAREN          reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    SUPER           reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    THIS            reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    NEW             reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    BOOL_LIT        reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    NULL_LIT        reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    DECIMAL_LIT     reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    HEX_LIT         reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    OCTAL_LIT       reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    BINARY_LIT      reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    STRING_LIT      reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    CHAR_LIT        reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    BOOLEAN         reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    VOID            reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    BYTE            reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    SHORT           reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    INT             reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    LONG            reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    CHAR            reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT           reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    DOUBLE          reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    ATRATE          reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    ADD             reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    SUB             reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    INC             reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    DEC             reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    LNOT            reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)
    NOT             reduce using rule 188 (AssignmentOperator -> AND_ASSIGN .)


state 382

    (189) AssignmentOperator -> XOR_ASSIGN .

    IDENT           reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    LPAREN          reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    SUPER           reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    THIS            reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    NEW             reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    BOOL_LIT        reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    NULL_LIT        reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    DECIMAL_LIT     reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    HEX_LIT         reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    OCTAL_LIT       reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    BINARY_LIT      reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    STRING_LIT      reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    CHAR_LIT        reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    BOOLEAN         reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    VOID            reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    BYTE            reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    SHORT           reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    INT             reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    LONG            reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    CHAR            reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT           reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    DOUBLE          reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    ATRATE          reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    ADD             reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    SUB             reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    INC             reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    DEC             reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    LNOT            reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)
    NOT             reduce using rule 189 (AssignmentOperator -> XOR_ASSIGN .)


state 383

    (190) AssignmentOperator -> OR_ASSIGN .

    IDENT           reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    LPAREN          reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    SUPER           reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    THIS            reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    NEW             reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    BOOL_LIT        reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    NULL_LIT        reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    DECIMAL_LIT     reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    HEX_LIT         reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    OCTAL_LIT       reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    BINARY_LIT      reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT_DEC_LIT   reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT_HEX_LIT   reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    STRING_LIT      reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    CHAR_LIT        reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    BOOLEAN         reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    VOID            reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    BYTE            reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    SHORT           reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    INT             reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    LONG            reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    CHAR            reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT           reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    DOUBLE          reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    ATRATE          reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    ADD             reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    SUB             reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    INC             reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    DEC             reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    LNOT            reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)
    NOT             reduce using rule 190 (AssignmentOperator -> OR_ASSIGN .)


state 384

    (135) FieldAccess -> TypeName PERIOD . SUPER PERIOD IDENT
    (105) PrimaryNoNewArray -> TypeName PERIOD . THIS
    (139) MethodInvocation -> TypeName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> TypeName PERIOD . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (151) MethodReference -> TypeName PERIOD . SUPER COLON_SEP ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    SUPER           shift and go to state 344
    THIS            shift and go to state 343
    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 345
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 385

    (133) FieldAccess -> Primary PERIOD . IDENT
    (120) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (141) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 420
    NEW             shift and go to state 422
    LSS             shift and go to state 280

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    UnqualifiedClassInstanceCreationExpression shift and go to state 419
    ZooTypeArguments               shift and go to state 421
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 386

    (80) COMMAElementValuePairS -> COMMA ElementValuePair . COMMAElementValuePairS
    (80) COMMAElementValuePairS -> . COMMA ElementValuePair COMMAElementValuePairS
    (81) COMMAElementValuePairS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 226
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAElementValuePairS         shift and go to state 613
    empty                          shift and go to state 227

state 387

    (82) ElementValuePair -> IDENT . ASSIGN ElementValue

    ASSIGN          shift and go to state 235


state 388

    (192) ConditionalExpression -> ConditionalOrExpression QUES Expression . COLON ConditionalExpression
    (193) ConditionalExpression -> ConditionalOrExpression QUES Expression . COLON LambdaExpression

    COLON           shift and go to state 614


state 389

    (195) ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .
    (197) ConditionalAndExpression -> ConditionalAndExpression . LAND InclusiveOrExpression

  ! shift/reduce conflict for LAND resolved as shift
    QUES            reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LOR             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    RPAREN          reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    COMMA           reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    RBRACE          reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    COLON           reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    RBRACK          reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    MUL             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    QUO             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    REM             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    ADD             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SUB             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SHL             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SHR             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SHR_UN          reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LSS             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    GTR             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LEQ             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    GEQ             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    INSTANCEOF      reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    EQL             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    NEQ             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    AND             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    XOR             reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    OR              reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    SEMICOLON       reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .)
    LAND            shift and go to state 236

  ! LAND            [ reduce using rule 195 (ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression .) ]


state 390

    (86) ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA . RBRACE

    RBRACE          shift and go to state 615


state 391

    (428) ZooCOMMA -> COMMA .

    RBRACE          reduce using rule 428 (ZooCOMMA -> COMMA .)
    SEMICOLON       reduce using rule 428 (ZooCOMMA -> COMMA .)


state 392

    (429) ZooCOMMA -> empty .

    RBRACE          reduce using rule 429 (ZooCOMMA -> empty .)
    SEMICOLON       reduce using rule 429 (ZooCOMMA -> empty .)


state 393

    (89) ElementValueList -> ElementValue COMMAElementValueS .

    COMMA           reduce using rule 89 (ElementValueList -> ElementValue COMMAElementValueS .)
    RBRACE          reduce using rule 89 (ElementValueList -> ElementValue COMMAElementValueS .)


state 394

    (90) COMMAElementValueS -> COMMA . ElementValue COMMAElementValueS
    (83) ElementValue -> . ConditionalExpression
    (84) ElementValue -> . ElementValueArrayInitializer
    (85) ElementValue -> . Annotation
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (86) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    LBRACE          shift and go to state 110
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ElementValue                   shift and go to state 616
    ConditionalExpression          shift and go to state 105
    ElementValueArrayInitializer   shift and go to state 106
    Annotation                     shift and go to state 107
    ConditionalOrExpression        shift and go to state 109
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 112
    TypeName                       shift and go to state 99
    InclusiveOrExpression          shift and go to state 113
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    empty                          shift and go to state 91

state 395

    (91) COMMAElementValueS -> empty .

    COMMA           reduce using rule 91 (COMMAElementValueS -> empty .)
    RBRACE          reduce using rule 91 (COMMAElementValueS -> empty .)


state 396

    (82) ElementValuePair -> IDENT ASSIGN ElementValue .

    COMMA           reduce using rule 82 (ElementValuePair -> IDENT ASSIGN ElementValue .)
    RPAREN          reduce using rule 82 (ElementValuePair -> IDENT ASSIGN ElementValue .)


state 397

    (197) ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .
    (199) InclusiveOrExpression -> InclusiveOrExpression . OR ExclusiveOrExpression

  ! shift/reduce conflict for OR resolved as shift
    LAND            reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    QUES            reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    LOR             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    RPAREN          reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    COMMA           reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    RBRACE          reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    COLON           reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    MUL             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    QUO             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    REM             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    ADD             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SUB             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SHL             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SHR             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SHR_UN          reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    LSS             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    GTR             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    LEQ             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    GEQ             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    INSTANCEOF      reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    EQL             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    NEQ             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    AND             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    XOR             reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    RBRACK          reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    SEMICOLON       reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .)
    OR              shift and go to state 237

  ! OR              [ reduce using rule 197 (ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression .) ]


state 398

    (199) InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .
    (201) ExclusiveOrExpression -> ExclusiveOrExpression . XOR AndExpression

  ! shift/reduce conflict for XOR resolved as shift
    OR              reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LAND            reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    QUES            reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LOR             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    RPAREN          reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    COMMA           reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    RBRACE          reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    COLON           reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    MUL             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    QUO             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    REM             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    ADD             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SUB             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SHL             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SHR             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SHR_UN          reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LSS             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    GTR             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    LEQ             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    GEQ             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    INSTANCEOF      reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    EQL             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    NEQ             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    AND             reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    RBRACK          reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    SEMICOLON       reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .)
    XOR             shift and go to state 238

  ! XOR             [ reduce using rule 199 (InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression .) ]


state 399

    (201) ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .
    (203) AndExpression -> AndExpression . AND EqualityExpression

  ! shift/reduce conflict for AND resolved as shift
    XOR             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    OR              reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LAND            reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    QUES            reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LOR             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    RPAREN          reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    COMMA           reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    RBRACE          reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    COLON           reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    MUL             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    QUO             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    REM             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    ADD             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SUB             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SHL             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SHR             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SHR_UN          reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LSS             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    GTR             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    LEQ             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    GEQ             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    INSTANCEOF      reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    EQL             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    NEQ             reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    RBRACK          reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    SEMICOLON       reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .)
    AND             shift and go to state 239

  ! AND             [ reduce using rule 201 (ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression .) ]


state 400

    (203) AndExpression -> AndExpression AND EqualityExpression .
    (205) EqualityExpression -> EqualityExpression . EQL RelationalExpression
    (206) EqualityExpression -> EqualityExpression . NEQ RelationalExpression

  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    AND             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    XOR             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    OR              reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    LAND            reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    QUES            reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    LOR             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    RPAREN          reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    COMMA           reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    RBRACE          reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    COLON           reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    MUL             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    QUO             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    REM             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    ADD             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    SUB             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    SHL             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    SHR             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    SHR_UN          reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    LSS             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    GTR             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    LEQ             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    GEQ             reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    INSTANCEOF      reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    RBRACK          reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    SEMICOLON       reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .)
    EQL             shift and go to state 240
    NEQ             shift and go to state 241

  ! EQL             [ reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .) ]
  ! NEQ             [ reduce using rule 203 (AndExpression -> AndExpression AND EqualityExpression .) ]


state 401

    (205) EqualityExpression -> EqualityExpression EQL RelationalExpression .
    (208) RelationalExpression -> RelationalExpression . LSS ShiftExpression
    (209) RelationalExpression -> RelationalExpression . GTR ShiftExpression
    (210) RelationalExpression -> RelationalExpression . LEQ ShiftExpression
    (211) RelationalExpression -> RelationalExpression . GEQ ShiftExpression
    (212) RelationalExpression -> RelationalExpression . INSTANCEOF ReferenceType

  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for INSTANCEOF resolved as shift
    EQL             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    NEQ             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    AND             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    XOR             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    OR              reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    LAND            reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    QUES            reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    LOR             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    RPAREN          reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    COMMA           reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    RBRACE          reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    COLON           reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    MUL             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    QUO             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    REM             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    ADD             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SUB             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SHL             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SHR             reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SHR_UN          reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    RBRACK          reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    SEMICOLON       reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .)
    LSS             shift and go to state 242
    GTR             shift and go to state 243
    LEQ             shift and go to state 244
    GEQ             shift and go to state 245
    INSTANCEOF      shift and go to state 246

  ! LSS             [ reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! GTR             [ reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! LEQ             [ reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! GEQ             [ reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]
  ! INSTANCEOF      [ reduce using rule 205 (EqualityExpression -> EqualityExpression EQL RelationalExpression .) ]


state 402

    (206) EqualityExpression -> EqualityExpression NEQ RelationalExpression .
    (208) RelationalExpression -> RelationalExpression . LSS ShiftExpression
    (209) RelationalExpression -> RelationalExpression . GTR ShiftExpression
    (210) RelationalExpression -> RelationalExpression . LEQ ShiftExpression
    (211) RelationalExpression -> RelationalExpression . GEQ ShiftExpression
    (212) RelationalExpression -> RelationalExpression . INSTANCEOF ReferenceType

  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for INSTANCEOF resolved as shift
    EQL             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    NEQ             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    AND             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    XOR             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    OR              reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    LAND            reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    QUES            reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    LOR             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    RPAREN          reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    COMMA           reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    RBRACE          reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    COLON           reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    MUL             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    QUO             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    REM             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    ADD             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SUB             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SHL             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SHR             reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SHR_UN          reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    RBRACK          reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    SEMICOLON       reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .)
    LSS             shift and go to state 242
    GTR             shift and go to state 243
    LEQ             shift and go to state 244
    GEQ             shift and go to state 245
    INSTANCEOF      shift and go to state 246

  ! LSS             [ reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! GTR             [ reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! LEQ             [ reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! GEQ             [ reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]
  ! INSTANCEOF      [ reduce using rule 206 (EqualityExpression -> EqualityExpression NEQ RelationalExpression .) ]


state 403

    (208) RelationalExpression -> RelationalExpression LSS ShiftExpression .
    (214) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (215) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (216) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    GTR             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    LEQ             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    GEQ             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    INSTANCEOF      reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    EQL             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    NEQ             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    AND             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    XOR             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    OR              reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    LAND            reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    QUES            reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    LOR             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    RPAREN          reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    COMMA           reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    RBRACE          reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    COLON           reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    MUL             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    QUO             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    REM             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    ADD             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    SUB             reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    RBRACK          reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    SEMICOLON       reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .)
    SHL             shift and go to state 247
    SHR             shift and go to state 248
    SHR_UN          shift and go to state 249

  ! SHL             [ reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .) ]
  ! SHR             [ reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 208 (RelationalExpression -> RelationalExpression LSS ShiftExpression .) ]


state 404

    (209) RelationalExpression -> RelationalExpression GTR ShiftExpression .
    (214) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (215) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (216) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    GTR             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    LEQ             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    GEQ             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    INSTANCEOF      reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    EQL             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    NEQ             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    AND             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    XOR             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    OR              reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    LAND            reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    QUES            reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    LOR             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    RPAREN          reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    COMMA           reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    RBRACE          reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    COLON           reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    MUL             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    QUO             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    REM             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    ADD             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    SUB             reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    RBRACK          reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    SEMICOLON       reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .)
    SHL             shift and go to state 247
    SHR             shift and go to state 248
    SHR_UN          shift and go to state 249

  ! SHL             [ reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .) ]
  ! SHR             [ reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 209 (RelationalExpression -> RelationalExpression GTR ShiftExpression .) ]


state 405

    (210) RelationalExpression -> RelationalExpression LEQ ShiftExpression .
    (214) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (215) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (216) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    GTR             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    LEQ             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    GEQ             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    INSTANCEOF      reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    EQL             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    NEQ             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    AND             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    XOR             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    OR              reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    LAND            reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    QUES            reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    LOR             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    RPAREN          reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    COMMA           reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    RBRACE          reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    COLON           reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    MUL             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    QUO             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    REM             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    ADD             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    SUB             reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    RBRACK          reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    SEMICOLON       reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .)
    SHL             shift and go to state 247
    SHR             shift and go to state 248
    SHR_UN          shift and go to state 249

  ! SHL             [ reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .) ]
  ! SHR             [ reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 210 (RelationalExpression -> RelationalExpression LEQ ShiftExpression .) ]


state 406

    (211) RelationalExpression -> RelationalExpression GEQ ShiftExpression .
    (214) ShiftExpression -> ShiftExpression . SHL AdditiveExpression
    (215) ShiftExpression -> ShiftExpression . SHR AdditiveExpression
    (216) ShiftExpression -> ShiftExpression . SHR_UN AdditiveExpression

  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for SHR_UN resolved as shift
    LSS             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    GTR             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    LEQ             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    GEQ             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    INSTANCEOF      reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    EQL             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    NEQ             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    AND             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    XOR             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    OR              reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    LAND            reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    QUES            reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    LOR             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    RPAREN          reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    COMMA           reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    RBRACE          reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    COLON           reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    MUL             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    QUO             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    REM             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    ADD             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    SUB             reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    RBRACK          reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    SEMICOLON       reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .)
    SHL             shift and go to state 247
    SHR             shift and go to state 248
    SHR_UN          shift and go to state 249

  ! SHL             [ reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .) ]
  ! SHR             [ reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .) ]
  ! SHR_UN          [ reduce using rule 211 (RelationalExpression -> RelationalExpression GEQ ShiftExpression .) ]


state 407

    (212) RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .

    LSS             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    GTR             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    LEQ             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    GEQ             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    INSTANCEOF      reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    EQL             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    NEQ             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    AND             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    XOR             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    OR              reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    LAND            reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    QUES            reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    LOR             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    RPAREN          reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    COMMA           reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    RBRACE          reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    COLON           reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    MUL             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    QUO             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    REM             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    ADD             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SUB             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SHL             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SHR             reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SHR_UN          reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    RBRACK          reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)
    SEMICOLON       reduce using rule 212 (RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType .)


state 408

    (460) ReferenceType -> ArrayType .

    LSS             reduce using rule 460 (ReferenceType -> ArrayType .)
    GTR             reduce using rule 460 (ReferenceType -> ArrayType .)
    LEQ             reduce using rule 460 (ReferenceType -> ArrayType .)
    GEQ             reduce using rule 460 (ReferenceType -> ArrayType .)
    INSTANCEOF      reduce using rule 460 (ReferenceType -> ArrayType .)
    EQL             reduce using rule 460 (ReferenceType -> ArrayType .)
    NEQ             reduce using rule 460 (ReferenceType -> ArrayType .)
    AND             reduce using rule 460 (ReferenceType -> ArrayType .)
    XOR             reduce using rule 460 (ReferenceType -> ArrayType .)
    OR              reduce using rule 460 (ReferenceType -> ArrayType .)
    LAND            reduce using rule 460 (ReferenceType -> ArrayType .)
    QUES            reduce using rule 460 (ReferenceType -> ArrayType .)
    LOR             reduce using rule 460 (ReferenceType -> ArrayType .)
    RPAREN          reduce using rule 460 (ReferenceType -> ArrayType .)
    COMMA           reduce using rule 460 (ReferenceType -> ArrayType .)
    RBRACE          reduce using rule 460 (ReferenceType -> ArrayType .)
    COLON           reduce using rule 460 (ReferenceType -> ArrayType .)
    MUL             reduce using rule 460 (ReferenceType -> ArrayType .)
    QUO             reduce using rule 460 (ReferenceType -> ArrayType .)
    REM             reduce using rule 460 (ReferenceType -> ArrayType .)
    ADD             reduce using rule 460 (ReferenceType -> ArrayType .)
    SUB             reduce using rule 460 (ReferenceType -> ArrayType .)
    SHL             reduce using rule 460 (ReferenceType -> ArrayType .)
    SHR             reduce using rule 460 (ReferenceType -> ArrayType .)
    SHR_UN          reduce using rule 460 (ReferenceType -> ArrayType .)
    RBRACK          reduce using rule 460 (ReferenceType -> ArrayType .)
    SEMICOLON       reduce using rule 460 (ReferenceType -> ArrayType .)


state 409

    (466) TypeVariable -> AnnotationS . IDENT
    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (447) PrimitiveType -> AnnotationS . NumericType
    (448) PrimitiveType -> AnnotationS . BOOLEAN
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE

    IDENT           shift and go to state 369
    BOOLEAN         shift and go to state 293
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171

state 410

    (214) ShiftExpression -> ShiftExpression SHL AdditiveExpression .
    (218) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (219) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    SHR             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    SHR_UN          reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LSS             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    GTR             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LEQ             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    GEQ             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    INSTANCEOF      reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    EQL             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    NEQ             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    AND             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    XOR             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    OR              reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LAND            reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    QUES            reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    LOR             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    RPAREN          reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    COMMA           reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    RBRACE          reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    COLON           reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    MUL             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    QUO             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    REM             reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    RBRACK          reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    SEMICOLON       reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .)
    ADD             shift and go to state 251
    SUB             shift and go to state 252

  ! ADD             [ reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .) ]
  ! SUB             [ reduce using rule 214 (ShiftExpression -> ShiftExpression SHL AdditiveExpression .) ]


state 411

    (215) ShiftExpression -> ShiftExpression SHR AdditiveExpression .
    (218) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (219) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    SHR             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    SHR_UN          reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LSS             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    GTR             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LEQ             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    GEQ             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    INSTANCEOF      reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    EQL             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    NEQ             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    AND             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    XOR             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    OR              reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LAND            reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    QUES            reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    LOR             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    RPAREN          reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    COMMA           reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    RBRACE          reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    COLON           reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    MUL             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    QUO             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    REM             reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    RBRACK          reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    SEMICOLON       reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .)
    ADD             shift and go to state 251
    SUB             shift and go to state 252

  ! ADD             [ reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .) ]
  ! SUB             [ reduce using rule 215 (ShiftExpression -> ShiftExpression SHR AdditiveExpression .) ]


state 412

    (216) ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .
    (218) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (219) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    SHL             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    SHR             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    SHR_UN          reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LSS             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    GTR             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LEQ             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    GEQ             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    INSTANCEOF      reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    EQL             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    NEQ             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    AND             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    XOR             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    OR              reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LAND            reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    QUES            reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    LOR             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    RPAREN          reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    COMMA           reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    RBRACE          reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    COLON           reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    MUL             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    QUO             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    REM             reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    RBRACK          reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    SEMICOLON       reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .)
    ADD             shift and go to state 251
    SUB             shift and go to state 252

  ! ADD             [ reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .) ]
  ! SUB             [ reduce using rule 216 (ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression .) ]


state 413

    (148) MethodReference -> ReferenceType COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 617


state 414

    (218) AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .
    (221) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (222) MultiplicativeExpression -> MultiplicativeExpression . QUO UnaryExpression
    (223) MultiplicativeExpression -> MultiplicativeExpression . REM UnaryExpression

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
    ADD             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SUB             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SHL             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SHR             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SHR_UN          reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LSS             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GTR             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LEQ             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GEQ             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    INSTANCEOF      reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    EQL             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    NEQ             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    AND             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    XOR             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    OR              reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LAND            reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    QUES            reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LOR             reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RPAREN          reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COMMA           reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACE          reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COLON           reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACK          reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SEMICOLON       reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    MUL             shift and go to state 253
    QUO             shift and go to state 254
    REM             shift and go to state 255

  ! MUL             [ reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .) ]
  ! QUO             [ reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .) ]
  ! REM             [ reduce using rule 218 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .) ]


state 415

    (219) AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .
    (221) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (222) MultiplicativeExpression -> MultiplicativeExpression . QUO UnaryExpression
    (223) MultiplicativeExpression -> MultiplicativeExpression . REM UnaryExpression

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
    ADD             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SUB             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SHL             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SHR             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SHR_UN          reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LSS             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GTR             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LEQ             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GEQ             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    INSTANCEOF      reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    EQL             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    NEQ             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    AND             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    XOR             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    OR              reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LAND            reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    QUES            reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LOR             reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RPAREN          reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COMMA           reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACE          reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COLON           reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACK          reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SEMICOLON       reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    MUL             shift and go to state 253
    QUO             shift and go to state 254
    REM             shift and go to state 255

  ! MUL             [ reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .) ]
  ! QUO             [ reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .) ]
  ! REM             [ reduce using rule 219 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .) ]


state 416

    (221) MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .

    MUL             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    QUO             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    REM             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    ADD             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SUB             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SHL             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SHR             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SHR_UN          reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LSS             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GTR             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LEQ             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GEQ             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    INSTANCEOF      reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    EQL             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    NEQ             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    AND             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    XOR             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    OR              reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LAND            reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    QUES            reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LOR             reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RPAREN          reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COMMA           reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACE          reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COLON           reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACK          reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SEMICOLON       reduce using rule 221 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)


state 417

    (222) MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .

    MUL             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    QUO             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    REM             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    ADD             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SUB             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SHL             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SHR             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SHR_UN          reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LSS             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    GTR             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LEQ             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    GEQ             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    INSTANCEOF      reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    EQL             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    NEQ             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    AND             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    XOR             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    OR              reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LAND            reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    QUES            reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    LOR             reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    RPAREN          reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    COMMA           reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    RBRACE          reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    COLON           reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    RBRACK          reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)
    SEMICOLON       reduce using rule 222 (MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression .)


state 418

    (223) MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .

    MUL             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    QUO             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    REM             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    ADD             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SUB             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SHL             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SHR             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SHR_UN          reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LSS             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    GTR             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LEQ             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    GEQ             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    INSTANCEOF      reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    EQL             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    NEQ             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    AND             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    XOR             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    OR              reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LAND            reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    QUES            reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    LOR             reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    RPAREN          reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    COMMA           reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    RBRACE          reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    COLON           reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    RBRACK          reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)
    SEMICOLON       reduce using rule 223 (MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression .)


state 419

    (120) ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .

    LBRACK          reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    PERIOD          reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    INC             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    DEC             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    MUL             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUO             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    REM             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    ADD             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SUB             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHL             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LSS             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    GTR             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LEQ             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    GEQ             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    EQL             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    NEQ             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    AND             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    XOR             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    OR              reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LAND            reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUES            reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    LOR             reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    RPAREN          reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    COMMA           reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACE          reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON           reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACK          reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 120 (ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression .)


state 420

    (133) FieldAccess -> Primary PERIOD IDENT .

    LBRACK          reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    PERIOD          reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    COLON_SEP       reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    INC             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    DEC             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    MUL             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    QUO             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    REM             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    ADD             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SUB             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SHL             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SHR             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SHR_UN          reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    LSS             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    GTR             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    LEQ             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    GEQ             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    INSTANCEOF      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    EQL             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    NEQ             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    AND             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    XOR             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    OR              reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    LAND            reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    QUES            reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    LOR             reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    RPAREN          reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    ASSIGN          reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    COMMA           reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    RBRACE          reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    COLON           reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    RBRACK          reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)
    SEMICOLON       reduce using rule 133 (FieldAccess -> Primary PERIOD IDENT .)


state 421

    (141) MethodInvocation -> Primary PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 618


state 422

    (121) UnqualifiedClassInstanceCreationExpression -> NEW . ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    ATRATE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 275
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 423

    (149) MethodReference -> Primary COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 619


state 424

    (119) ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .

    LBRACK          reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    PERIOD          reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    INC             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    DEC             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    MUL             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUO             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    REM             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    ADD             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SUB             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHL             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SHR_UN          reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LSS             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    GTR             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LEQ             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    GEQ             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    INSTANCEOF      reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    EQL             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    NEQ             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    AND             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    XOR             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    OR              reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LAND            reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    QUES            reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    LOR             reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    RPAREN          reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    COMMA           reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACE          reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    COLON           reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    RBRACK          reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)
    SEMICOLON       reduce using rule 119 (ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression .)


state 425

    (140) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 620


state 426

    (136) ArrayAccess -> ExpressionName LBRACK Expression . RBRACK

    RBRACK          shift and go to state 621


state 427

    (147) MethodReference -> ExpressionName COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 622


state 428

    (470) Dims -> AnnotationS LBRACE . RBRACE AnnotationSLBRACERBRACES

    RBRACE          shift and go to state 623


state 429

    (137) ArrayAccess -> PrimaryNoNewArray LBRACK Expression . RBRACK

    RBRACK          shift and go to state 624


state 430

    (276) ExpressionName -> AmbiguousName PERIOD IDENT .
    (281) AmbiguousName -> AmbiguousName PERIOD IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    PERIOD          reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    LBRACK          reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    COLON_SEP       reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    INC             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    DEC             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    MUL             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    QUO             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    REM             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    ADD             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SUB             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SHL             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SHR             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SHR_UN          reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    LSS             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    GTR             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    LEQ             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    GEQ             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    INSTANCEOF      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    EQL             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    NEQ             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    AND             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    XOR             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    OR              reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    LAND            reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    QUES            reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    LOR             reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    RPAREN          reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    ASSIGN          reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    COMMA           reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    RBRACE          reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    COLON           reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    RBRACK          reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)
    SEMICOLON       reduce using rule 276 (ExpressionName -> AmbiguousName PERIOD IDENT .)

  ! PERIOD          [ reduce using rule 281 (AmbiguousName -> AmbiguousName PERIOD IDENT .) ]


state 431

    (154) ArrayCreationExpression -> NEW PrimitiveType DimExprs . ZooDims
    (63) ZooDims -> . Dims
    (64) ZooDims -> . empty
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 625
    Dims                           shift and go to state 626
    empty                          shift and go to state 627
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 432

    (156) ArrayCreationExpression -> NEW PrimitiveType Dims . ArrayInitializer
    (94) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE

    LBRACE          shift and go to state 629

    ArrayInitializer               shift and go to state 628

state 433

    (158) DimExprs -> DimExpr . DimExprS
    (159) DimExprS -> . DimExpr DimExprS
    (160) DimExprS -> . empty
    (161) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    DimExpr                        shift and go to state 630
    DimExprS                       shift and go to state 631
    empty                          shift and go to state 632
    AnnotationS                    shift and go to state 633
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 434

    (470) Dims -> AnnotationS . LBRACE RBRACE AnnotationSLBRACERBRACES
    (161) DimExpr -> AnnotationS . LBRACK Expression RBRACK

    LBRACE          shift and go to state 428
    LBRACK          shift and go to state 634


state 435

    (155) ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs . ZooDims
    (63) ZooDims -> . Dims
    (64) ZooDims -> . empty
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 635
    Dims                           shift and go to state 626
    empty                          shift and go to state 627
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 436

    (157) ArrayCreationExpression -> NEW ClassOrInterfaceType Dims . ArrayInitializer
    (94) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE

    LBRACE          shift and go to state 629

    ArrayInitializer               shift and go to state 636

state 437

    (121) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate . LPAREN ZooArgumentList RPAREN ZooClassBody

    LPAREN          shift and go to state 637


state 438

    (124) ClassOrInterfaceTypeToInstantiate -> AnnotationS . IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond

    IDENT           shift and go to state 638


state 439

    (482) TypeArguments -> LSS TypeArgumentList . GTR

    GTR             shift and go to state 639


state 440

    (483) TypeArgumentList -> TypeArgument . COMMATypeArgumentS
    (484) COMMATypeArgumentS -> . COMMA TypeArgument COMMATypeArgumentS
    (485) COMMATypeArgumentS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 641
    GTR             reduce using rule 1 (empty -> .)

    COMMATypeArgumentS             shift and go to state 640
    empty                          shift and go to state 642

state 441

    (486) TypeArgument -> ReferenceType .

    COMMA           reduce using rule 486 (TypeArgument -> ReferenceType .)
    GTR             reduce using rule 486 (TypeArgument -> ReferenceType .)


state 442

    (487) TypeArgument -> Wildcard .

    COMMA           reduce using rule 487 (TypeArgument -> Wildcard .)
    GTR             reduce using rule 487 (TypeArgument -> Wildcard .)


state 443

    (488) Wildcard -> AnnotationS . QUES ZooWildcardBounds
    (466) TypeVariable -> AnnotationS . IDENT
    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (447) PrimitiveType -> AnnotationS . NumericType
    (448) PrimitiveType -> AnnotationS . BOOLEAN
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE

    QUES            shift and go to state 643
    IDENT           shift and go to state 369
    BOOLEAN         shift and go to state 293
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    NumericType                    shift and go to state 292
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171

state 444

    (113) ClassLiteral -> NumericType LBRACKRBRACKS PERIOD . CLASS

    CLASS           shift and go to state 644


state 445

    (114) ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD . CLASS

    CLASS           shift and go to state 645


state 446

    (115) ClassLiteral -> VOID PERIOD CLASS .

    LBRACK          reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    PERIOD          reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    COLON_SEP       reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    INC             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    DEC             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    MUL             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    QUO             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    REM             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    ADD             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    SUB             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    SHL             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    SHR             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    SHR_UN          reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    LSS             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    GTR             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    LEQ             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    GEQ             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    INSTANCEOF      reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    EQL             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    NEQ             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    AND             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    XOR             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    OR              reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    LAND            reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    QUES            reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    LOR             reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    RPAREN          reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    COMMA           reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    RBRACE          reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    COLON           reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    RBRACK          reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)
    SEMICOLON       reduce using rule 115 (ClassLiteral -> VOID PERIOD CLASS .)


state 447

    (134) FieldAccess -> SUPER PERIOD IDENT .

    LBRACK          reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    PERIOD          reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    COLON_SEP       reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    INC             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    DEC             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    MUL             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    QUO             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    REM             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    ADD             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SUB             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SHL             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR_UN          reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    LSS             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    GTR             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    LEQ             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    GEQ             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    INSTANCEOF      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    EQL             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    NEQ             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    AND             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    XOR             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    OR              reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    LAND            reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    QUES            reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    LOR             reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    RPAREN          reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    ASSIGN          reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    COMMA           reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    RBRACE          reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    COLON           reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    RBRACK          reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)
    SEMICOLON       reduce using rule 134 (FieldAccess -> SUPER PERIOD IDENT .)


state 448

    (142) MethodInvocation -> SUPER PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 646


state 449

    (150) MethodReference -> SUPER COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 647


state 450

    (138) MethodInvocation -> MethodName LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 648


state 451

    (417) ZooArgumentList -> ArgumentList .

    RPAREN          reduce using rule 417 (ZooArgumentList -> ArgumentList .)


state 452

    (418) ZooArgumentList -> empty .
    (126) AnnotationS -> empty .

    RPAREN          reduce using rule 418 (ZooArgumentList -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)


state 453

    (144) ArgumentList -> Expression . COMMAExpressionS
    (145) COMMAExpressionS -> . COMMA Expression COMMAExpressionS
    (146) COMMAExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 650
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAExpressionS               shift and go to state 649
    empty                          shift and go to state 651

state 454

    (152) MethodReference -> ClassType COLON_SEP ZooTypeArguments . NEW

    NEW             shift and go to state 652


state 455

    (153) MethodReference -> ArrayType COLON_SEP NEW .

    LBRACK          reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    PERIOD          reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    COLON_SEP       reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    INC             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    DEC             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    MUL             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    QUO             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    REM             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    ADD             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    SUB             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    SHL             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    SHR             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    SHR_UN          reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    LSS             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    GTR             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    LEQ             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    GEQ             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    INSTANCEOF      reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    EQL             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    NEQ             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    AND             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    XOR             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    OR              reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    LAND            reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    QUES            reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    LOR             reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    RPAREN          reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    COMMA           reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    RBRACE          reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    COLON           reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    RBRACK          reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)
    SEMICOLON       reduce using rule 153 (MethodReference -> ArrayType COLON_SEP NEW .)


state 456

    (299) TypeParameters -> LSS TypeParameterList . GTR

    GTR             shift and go to state 653


state 457

    (302) TypeParameterList -> TypeParameter . COMMMATypeParameterS
    (300) COMMMATypeParameterS -> . COMMA TypeParameter COMMMATypeParameterS
    (301) COMMMATypeParameterS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 655
    GTR             reduce using rule 1 (empty -> .)

    COMMMATypeParameterS           shift and go to state 654
    empty                          shift and go to state 656

state 458

    (473) TypeParameter -> TypeParameterModifierS . IDENT ZooTypeBound

    IDENT           shift and go to state 657


state 459

    (474) TypeParameterModifierS -> TypeParameterModifier . TypeParameterModifierS
    (474) TypeParameterModifierS -> . TypeParameterModifier TypeParameterModifierS
    (475) TypeParameterModifierS -> . empty
    (478) TypeParameterModifier -> . Annotation
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeParameterModifier          shift and go to state 459
    TypeParameterModifierS         shift and go to state 658
    empty                          shift and go to state 460
    Annotation                     shift and go to state 461
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 460

    (475) TypeParameterModifierS -> empty .

    IDENT           reduce using rule 475 (TypeParameterModifierS -> empty .)


state 461

    (478) TypeParameterModifier -> Annotation .

    ATRATE          reduce using rule 478 (TypeParameterModifier -> Annotation .)
    IDENT           reduce using rule 478 (TypeParameterModifier -> Annotation .)


state 462

    (425) EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .

    SEMICOLON       reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    PUBLIC          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    PROTECTED       reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    PRIVATE         reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ABSTRACT        reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    STATIC          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FINAL           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    STRICTFP        reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    EXTENDS         reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ATRATE          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CLASS           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ENUM            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    IMPLEMENTS      reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LBRACE          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    INTERFACE       reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    $end            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    TRANSIENT       reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    VOLATILE        reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SYNCHRONIZED    reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    NATIVE          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LSS             reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    IDENT           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BOOLEAN         reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BYTE            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SHORT           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    INT             reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LONG            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CHAR            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FLOAT           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DOUBLE          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    VOID            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    RBRACE          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    IF              reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    WHILE           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    ASSERT          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SWITCH          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DO              reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BREAK           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CONTINUE        reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    RETURN          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    THROW           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    TRY             reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FOR             reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    INC             reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DEC             reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    SUPER           reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    NEW             reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    THIS            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    LPAREN          reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BOOL_LIT        reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    NULL_LIT        reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DECIMAL_LIT     reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    HEX_LIT         reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    OCTAL_LIT       reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    BINARY_LIT      reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FLOAT_DEC_LIT   reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    FLOAT_HEX_LIT   reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    STRING_LIT      reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CHAR_LIT        reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    CASE            reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)
    DEFAULT         reduce using rule 425 (EnumDeclaration -> ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody .)


state 463

    (432) EnumBody -> LBRACE . ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE
    (426) ZooEnumConstantList -> . EnumConstantList
    (427) ZooEnumConstantList -> . empty
    (435) EnumConstantList -> . EnumConstant COMMAEnumConstantS
    (1) empty -> .
    (436) EnumConstant -> . EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody
    (437) EnumConstantModifierS -> . EnumConstantModifier EnumConstantModifierS
    (438) EnumConstantModifierS -> . empty
    (443) EnumConstantModifier -> . Annotation
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooEnumConstantList            shift and go to state 659
    EnumConstantList               shift and go to state 660
    empty                          shift and go to state 661
    EnumConstant                   shift and go to state 662
    EnumConstantModifierS          shift and go to state 663
    EnumConstantModifier           shift and go to state 664
    Annotation                     shift and go to state 665
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 464

    (493) Block -> LBRACE ZooBlockStatements . RBRACE

    RBRACE          shift and go to state 666


state 465

    (494) ZooBlockStatements -> BlockStatements .

    RBRACE          reduce using rule 494 (ZooBlockStatements -> BlockStatements .)


state 466

    (495) ZooBlockStatements -> empty .
    (505) VariableModifierS -> empty .
    (424) ClassModifierS -> empty .
    (286) ZooSuperClass -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 126 (AnnotationS -> empty .)
    RBRACE          reduce using rule 495 (ZooBlockStatements -> empty .)
    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 286 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 286 (ZooSuperClass -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)

  ! BOOLEAN         [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 505 (VariableModifierS -> empty .) ]


state 467

    (496) BlockStatements -> BlockStatement . BlockStatementS
    (497) BlockStatementS -> . BlockStatement BlockStatementS
    (498) BlockStatementS -> . empty
    (499) BlockStatement -> . LocalVariableDeclarationStatement
    (500) BlockStatement -> . ClassDeclaration
    (501) BlockStatement -> . Statement
    (1) empty -> .
    (502) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (503) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    FINAL           shift and go to state 512
    PUBLIC          shift and go to state 72
    PROTECTED       shift and go to state 73
    PRIVATE         shift and go to state 74
    ABSTRACT        shift and go to state 75
    STATIC          shift and go to state 76
    STRICTFP        shift and go to state 77
    EXTENDS         shift and go to state 52
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    ATRATE          shift and go to state 13
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    BlockStatement                 shift and go to state 667
    BlockStatementS                shift and go to state 668
    empty                          shift and go to state 669
    LocalVariableDeclarationStatement shift and go to state 468
    ClassDeclaration               shift and go to state 469
    Statement                      shift and go to state 470
    LocalVariableDeclaration       shift and go to state 471
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    VariableModifierS              shift and go to state 479
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    VariableModifier               shift and go to state 498
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Annotation                     shift and go to state 511
    ClassType                      shift and go to state 168
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 468

    (499) BlockStatement -> LocalVariableDeclarationStatement .

    IDENT           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    IF              reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    WHILE           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    LBRACE          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    SEMICOLON       reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    ASSERT          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    SWITCH          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    DO              reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    BREAK           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    CONTINUE        reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    RETURN          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    SYNCHRONIZED    reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    THROW           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    TRY             reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    FOR             reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    FINAL           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    PUBLIC          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    PROTECTED       reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    PRIVATE         reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    ABSTRACT        reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    STATIC          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    STRICTFP        reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    EXTENDS         reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    INC             reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEC             reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    SUPER           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    ATRATE          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    NEW             reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    THIS            reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    LPAREN          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOL_LIT        reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    NULL_LIT        reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    DECIMAL_LIT     reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    HEX_LIT         reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    OCTAL_LIT       reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    BINARY_LIT      reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT_DEC_LIT   reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT_HEX_LIT   reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    STRING_LIT      reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR_LIT        reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOLEAN         reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    VOID            reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    BYTE            reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    SHORT           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    INT             reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    LONG            reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR            reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    DOUBLE          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    CLASS           reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    ENUM            reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    IMPLEMENTS      reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    RBRACE          reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    CASE            reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEFAULT         reduce using rule 499 (BlockStatement -> LocalVariableDeclarationStatement .)


state 469

    (500) BlockStatement -> ClassDeclaration .

    IDENT           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    IF              reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    WHILE           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    LBRACE          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    SEMICOLON       reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    ASSERT          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    SWITCH          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    DO              reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    BREAK           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    CONTINUE        reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    RETURN          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    SYNCHRONIZED    reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    THROW           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    TRY             reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    FOR             reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    FINAL           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    PUBLIC          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    PROTECTED       reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    PRIVATE         reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    ABSTRACT        reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    STATIC          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    STRICTFP        reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    EXTENDS         reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    INC             reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    DEC             reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    SUPER           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    ATRATE          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    NEW             reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    THIS            reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    LPAREN          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    BOOL_LIT        reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    NULL_LIT        reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    DECIMAL_LIT     reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    HEX_LIT         reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    OCTAL_LIT       reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    BINARY_LIT      reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    FLOAT_DEC_LIT   reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    FLOAT_HEX_LIT   reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    STRING_LIT      reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    CHAR_LIT        reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    BOOLEAN         reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    VOID            reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    BYTE            reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    SHORT           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    INT             reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    LONG            reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    CHAR            reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    FLOAT           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    DOUBLE          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    CLASS           reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    ENUM            reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    RBRACE          reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    CASE            reduce using rule 500 (BlockStatement -> ClassDeclaration .)
    DEFAULT         reduce using rule 500 (BlockStatement -> ClassDeclaration .)


state 470

    (501) BlockStatement -> Statement .

    IDENT           reduce using rule 501 (BlockStatement -> Statement .)
    IF              reduce using rule 501 (BlockStatement -> Statement .)
    WHILE           reduce using rule 501 (BlockStatement -> Statement .)
    LBRACE          reduce using rule 501 (BlockStatement -> Statement .)
    SEMICOLON       reduce using rule 501 (BlockStatement -> Statement .)
    ASSERT          reduce using rule 501 (BlockStatement -> Statement .)
    SWITCH          reduce using rule 501 (BlockStatement -> Statement .)
    DO              reduce using rule 501 (BlockStatement -> Statement .)
    BREAK           reduce using rule 501 (BlockStatement -> Statement .)
    CONTINUE        reduce using rule 501 (BlockStatement -> Statement .)
    RETURN          reduce using rule 501 (BlockStatement -> Statement .)
    SYNCHRONIZED    reduce using rule 501 (BlockStatement -> Statement .)
    THROW           reduce using rule 501 (BlockStatement -> Statement .)
    TRY             reduce using rule 501 (BlockStatement -> Statement .)
    FOR             reduce using rule 501 (BlockStatement -> Statement .)
    FINAL           reduce using rule 501 (BlockStatement -> Statement .)
    PUBLIC          reduce using rule 501 (BlockStatement -> Statement .)
    PROTECTED       reduce using rule 501 (BlockStatement -> Statement .)
    PRIVATE         reduce using rule 501 (BlockStatement -> Statement .)
    ABSTRACT        reduce using rule 501 (BlockStatement -> Statement .)
    STATIC          reduce using rule 501 (BlockStatement -> Statement .)
    STRICTFP        reduce using rule 501 (BlockStatement -> Statement .)
    EXTENDS         reduce using rule 501 (BlockStatement -> Statement .)
    INC             reduce using rule 501 (BlockStatement -> Statement .)
    DEC             reduce using rule 501 (BlockStatement -> Statement .)
    SUPER           reduce using rule 501 (BlockStatement -> Statement .)
    ATRATE          reduce using rule 501 (BlockStatement -> Statement .)
    NEW             reduce using rule 501 (BlockStatement -> Statement .)
    THIS            reduce using rule 501 (BlockStatement -> Statement .)
    LPAREN          reduce using rule 501 (BlockStatement -> Statement .)
    BOOL_LIT        reduce using rule 501 (BlockStatement -> Statement .)
    NULL_LIT        reduce using rule 501 (BlockStatement -> Statement .)
    DECIMAL_LIT     reduce using rule 501 (BlockStatement -> Statement .)
    HEX_LIT         reduce using rule 501 (BlockStatement -> Statement .)
    OCTAL_LIT       reduce using rule 501 (BlockStatement -> Statement .)
    BINARY_LIT      reduce using rule 501 (BlockStatement -> Statement .)
    FLOAT_DEC_LIT   reduce using rule 501 (BlockStatement -> Statement .)
    FLOAT_HEX_LIT   reduce using rule 501 (BlockStatement -> Statement .)
    STRING_LIT      reduce using rule 501 (BlockStatement -> Statement .)
    CHAR_LIT        reduce using rule 501 (BlockStatement -> Statement .)
    BOOLEAN         reduce using rule 501 (BlockStatement -> Statement .)
    VOID            reduce using rule 501 (BlockStatement -> Statement .)
    BYTE            reduce using rule 501 (BlockStatement -> Statement .)
    SHORT           reduce using rule 501 (BlockStatement -> Statement .)
    INT             reduce using rule 501 (BlockStatement -> Statement .)
    LONG            reduce using rule 501 (BlockStatement -> Statement .)
    CHAR            reduce using rule 501 (BlockStatement -> Statement .)
    FLOAT           reduce using rule 501 (BlockStatement -> Statement .)
    DOUBLE          reduce using rule 501 (BlockStatement -> Statement .)
    CLASS           reduce using rule 501 (BlockStatement -> Statement .)
    ENUM            reduce using rule 501 (BlockStatement -> Statement .)
    IMPLEMENTS      reduce using rule 501 (BlockStatement -> Statement .)
    RBRACE          reduce using rule 501 (BlockStatement -> Statement .)
    CASE            reduce using rule 501 (BlockStatement -> Statement .)
    DEFAULT         reduce using rule 501 (BlockStatement -> Statement .)


state 471

    (502) LocalVariableDeclarationStatement -> LocalVariableDeclaration . SEMICOLON

    SEMICOLON       shift and go to state 670


state 472

    (529) EmptyStatement -> SEMICOLON .

    IDENT           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    IF              reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    WHILE           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    LBRACE          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    SEMICOLON       reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    ASSERT          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    SWITCH          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    DO              reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    BREAK           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    CONTINUE        reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    RETURN          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    SYNCHRONIZED    reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    THROW           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    TRY             reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    FOR             reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    FINAL           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    PUBLIC          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    PROTECTED       reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    PRIVATE         reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    ABSTRACT        reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    STATIC          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    STRICTFP        reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    EXTENDS         reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    INC             reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    DEC             reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    SUPER           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    ATRATE          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    NEW             reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    THIS            reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    LPAREN          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    BOOL_LIT        reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    NULL_LIT        reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    DECIMAL_LIT     reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    HEX_LIT         reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    OCTAL_LIT       reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    BINARY_LIT      reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    STRING_LIT      reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    CHAR_LIT        reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    BOOLEAN         reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    VOID            reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    BYTE            reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    SHORT           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    INT             reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    LONG            reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    CHAR            reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    FLOAT           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    DOUBLE          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    CLASS           reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    ENUM            reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    RBRACE          reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    CASE            reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    DEFAULT         reduce using rule 529 (EmptyStatement -> SEMICOLON .)
    ELSE            reduce using rule 529 (EmptyStatement -> SEMICOLON .)


state 473

    (506) Statement -> StatementWithoutTrailingSubstatement .

    IDENT           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMICOLON       reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ASSERT          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SYNCHRONIZED    reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    THROW           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    TRY             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FINAL           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    PUBLIC          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    PROTECTED       reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    PRIVATE         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ABSTRACT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    STATIC          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    STRICTFP        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    EXTENDS         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ATRATE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LIT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    NULL_LIT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LIT     reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LIT         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    OCTAL_LIT       reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LIT      reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_DEC_LIT   reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_HEX_LIT   reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LIT      reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LIT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    VOID            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CLASS           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ENUM            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    IMPLEMENTS      reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    RBRACE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)


state 474

    (507) Statement -> LabeledStatement .

    IDENT           reduce using rule 507 (Statement -> LabeledStatement .)
    IF              reduce using rule 507 (Statement -> LabeledStatement .)
    WHILE           reduce using rule 507 (Statement -> LabeledStatement .)
    LBRACE          reduce using rule 507 (Statement -> LabeledStatement .)
    SEMICOLON       reduce using rule 507 (Statement -> LabeledStatement .)
    ASSERT          reduce using rule 507 (Statement -> LabeledStatement .)
    SWITCH          reduce using rule 507 (Statement -> LabeledStatement .)
    DO              reduce using rule 507 (Statement -> LabeledStatement .)
    BREAK           reduce using rule 507 (Statement -> LabeledStatement .)
    CONTINUE        reduce using rule 507 (Statement -> LabeledStatement .)
    RETURN          reduce using rule 507 (Statement -> LabeledStatement .)
    SYNCHRONIZED    reduce using rule 507 (Statement -> LabeledStatement .)
    THROW           reduce using rule 507 (Statement -> LabeledStatement .)
    TRY             reduce using rule 507 (Statement -> LabeledStatement .)
    FOR             reduce using rule 507 (Statement -> LabeledStatement .)
    FINAL           reduce using rule 507 (Statement -> LabeledStatement .)
    PUBLIC          reduce using rule 507 (Statement -> LabeledStatement .)
    PROTECTED       reduce using rule 507 (Statement -> LabeledStatement .)
    PRIVATE         reduce using rule 507 (Statement -> LabeledStatement .)
    ABSTRACT        reduce using rule 507 (Statement -> LabeledStatement .)
    STATIC          reduce using rule 507 (Statement -> LabeledStatement .)
    STRICTFP        reduce using rule 507 (Statement -> LabeledStatement .)
    EXTENDS         reduce using rule 507 (Statement -> LabeledStatement .)
    INC             reduce using rule 507 (Statement -> LabeledStatement .)
    DEC             reduce using rule 507 (Statement -> LabeledStatement .)
    SUPER           reduce using rule 507 (Statement -> LabeledStatement .)
    ATRATE          reduce using rule 507 (Statement -> LabeledStatement .)
    NEW             reduce using rule 507 (Statement -> LabeledStatement .)
    THIS            reduce using rule 507 (Statement -> LabeledStatement .)
    LPAREN          reduce using rule 507 (Statement -> LabeledStatement .)
    BOOL_LIT        reduce using rule 507 (Statement -> LabeledStatement .)
    NULL_LIT        reduce using rule 507 (Statement -> LabeledStatement .)
    DECIMAL_LIT     reduce using rule 507 (Statement -> LabeledStatement .)
    HEX_LIT         reduce using rule 507 (Statement -> LabeledStatement .)
    OCTAL_LIT       reduce using rule 507 (Statement -> LabeledStatement .)
    BINARY_LIT      reduce using rule 507 (Statement -> LabeledStatement .)
    FLOAT_DEC_LIT   reduce using rule 507 (Statement -> LabeledStatement .)
    FLOAT_HEX_LIT   reduce using rule 507 (Statement -> LabeledStatement .)
    STRING_LIT      reduce using rule 507 (Statement -> LabeledStatement .)
    CHAR_LIT        reduce using rule 507 (Statement -> LabeledStatement .)
    BOOLEAN         reduce using rule 507 (Statement -> LabeledStatement .)
    VOID            reduce using rule 507 (Statement -> LabeledStatement .)
    BYTE            reduce using rule 507 (Statement -> LabeledStatement .)
    SHORT           reduce using rule 507 (Statement -> LabeledStatement .)
    INT             reduce using rule 507 (Statement -> LabeledStatement .)
    LONG            reduce using rule 507 (Statement -> LabeledStatement .)
    CHAR            reduce using rule 507 (Statement -> LabeledStatement .)
    FLOAT           reduce using rule 507 (Statement -> LabeledStatement .)
    DOUBLE          reduce using rule 507 (Statement -> LabeledStatement .)
    CLASS           reduce using rule 507 (Statement -> LabeledStatement .)
    ENUM            reduce using rule 507 (Statement -> LabeledStatement .)
    IMPLEMENTS      reduce using rule 507 (Statement -> LabeledStatement .)
    RBRACE          reduce using rule 507 (Statement -> LabeledStatement .)
    CASE            reduce using rule 507 (Statement -> LabeledStatement .)
    DEFAULT         reduce using rule 507 (Statement -> LabeledStatement .)


state 475

    (508) Statement -> IfThenStatement .

    IDENT           reduce using rule 508 (Statement -> IfThenStatement .)
    IF              reduce using rule 508 (Statement -> IfThenStatement .)
    WHILE           reduce using rule 508 (Statement -> IfThenStatement .)
    LBRACE          reduce using rule 508 (Statement -> IfThenStatement .)
    SEMICOLON       reduce using rule 508 (Statement -> IfThenStatement .)
    ASSERT          reduce using rule 508 (Statement -> IfThenStatement .)
    SWITCH          reduce using rule 508 (Statement -> IfThenStatement .)
    DO              reduce using rule 508 (Statement -> IfThenStatement .)
    BREAK           reduce using rule 508 (Statement -> IfThenStatement .)
    CONTINUE        reduce using rule 508 (Statement -> IfThenStatement .)
    RETURN          reduce using rule 508 (Statement -> IfThenStatement .)
    SYNCHRONIZED    reduce using rule 508 (Statement -> IfThenStatement .)
    THROW           reduce using rule 508 (Statement -> IfThenStatement .)
    TRY             reduce using rule 508 (Statement -> IfThenStatement .)
    FOR             reduce using rule 508 (Statement -> IfThenStatement .)
    FINAL           reduce using rule 508 (Statement -> IfThenStatement .)
    PUBLIC          reduce using rule 508 (Statement -> IfThenStatement .)
    PROTECTED       reduce using rule 508 (Statement -> IfThenStatement .)
    PRIVATE         reduce using rule 508 (Statement -> IfThenStatement .)
    ABSTRACT        reduce using rule 508 (Statement -> IfThenStatement .)
    STATIC          reduce using rule 508 (Statement -> IfThenStatement .)
    STRICTFP        reduce using rule 508 (Statement -> IfThenStatement .)
    EXTENDS         reduce using rule 508 (Statement -> IfThenStatement .)
    INC             reduce using rule 508 (Statement -> IfThenStatement .)
    DEC             reduce using rule 508 (Statement -> IfThenStatement .)
    SUPER           reduce using rule 508 (Statement -> IfThenStatement .)
    ATRATE          reduce using rule 508 (Statement -> IfThenStatement .)
    NEW             reduce using rule 508 (Statement -> IfThenStatement .)
    THIS            reduce using rule 508 (Statement -> IfThenStatement .)
    LPAREN          reduce using rule 508 (Statement -> IfThenStatement .)
    BOOL_LIT        reduce using rule 508 (Statement -> IfThenStatement .)
    NULL_LIT        reduce using rule 508 (Statement -> IfThenStatement .)
    DECIMAL_LIT     reduce using rule 508 (Statement -> IfThenStatement .)
    HEX_LIT         reduce using rule 508 (Statement -> IfThenStatement .)
    OCTAL_LIT       reduce using rule 508 (Statement -> IfThenStatement .)
    BINARY_LIT      reduce using rule 508 (Statement -> IfThenStatement .)
    FLOAT_DEC_LIT   reduce using rule 508 (Statement -> IfThenStatement .)
    FLOAT_HEX_LIT   reduce using rule 508 (Statement -> IfThenStatement .)
    STRING_LIT      reduce using rule 508 (Statement -> IfThenStatement .)
    CHAR_LIT        reduce using rule 508 (Statement -> IfThenStatement .)
    BOOLEAN         reduce using rule 508 (Statement -> IfThenStatement .)
    VOID            reduce using rule 508 (Statement -> IfThenStatement .)
    BYTE            reduce using rule 508 (Statement -> IfThenStatement .)
    SHORT           reduce using rule 508 (Statement -> IfThenStatement .)
    INT             reduce using rule 508 (Statement -> IfThenStatement .)
    LONG            reduce using rule 508 (Statement -> IfThenStatement .)
    CHAR            reduce using rule 508 (Statement -> IfThenStatement .)
    FLOAT           reduce using rule 508 (Statement -> IfThenStatement .)
    DOUBLE          reduce using rule 508 (Statement -> IfThenStatement .)
    CLASS           reduce using rule 508 (Statement -> IfThenStatement .)
    ENUM            reduce using rule 508 (Statement -> IfThenStatement .)
    IMPLEMENTS      reduce using rule 508 (Statement -> IfThenStatement .)
    RBRACE          reduce using rule 508 (Statement -> IfThenStatement .)
    CASE            reduce using rule 508 (Statement -> IfThenStatement .)
    DEFAULT         reduce using rule 508 (Statement -> IfThenStatement .)


state 476

    (509) Statement -> IfThenElseStatement .

    IDENT           reduce using rule 509 (Statement -> IfThenElseStatement .)
    IF              reduce using rule 509 (Statement -> IfThenElseStatement .)
    WHILE           reduce using rule 509 (Statement -> IfThenElseStatement .)
    LBRACE          reduce using rule 509 (Statement -> IfThenElseStatement .)
    SEMICOLON       reduce using rule 509 (Statement -> IfThenElseStatement .)
    ASSERT          reduce using rule 509 (Statement -> IfThenElseStatement .)
    SWITCH          reduce using rule 509 (Statement -> IfThenElseStatement .)
    DO              reduce using rule 509 (Statement -> IfThenElseStatement .)
    BREAK           reduce using rule 509 (Statement -> IfThenElseStatement .)
    CONTINUE        reduce using rule 509 (Statement -> IfThenElseStatement .)
    RETURN          reduce using rule 509 (Statement -> IfThenElseStatement .)
    SYNCHRONIZED    reduce using rule 509 (Statement -> IfThenElseStatement .)
    THROW           reduce using rule 509 (Statement -> IfThenElseStatement .)
    TRY             reduce using rule 509 (Statement -> IfThenElseStatement .)
    FOR             reduce using rule 509 (Statement -> IfThenElseStatement .)
    FINAL           reduce using rule 509 (Statement -> IfThenElseStatement .)
    PUBLIC          reduce using rule 509 (Statement -> IfThenElseStatement .)
    PROTECTED       reduce using rule 509 (Statement -> IfThenElseStatement .)
    PRIVATE         reduce using rule 509 (Statement -> IfThenElseStatement .)
    ABSTRACT        reduce using rule 509 (Statement -> IfThenElseStatement .)
    STATIC          reduce using rule 509 (Statement -> IfThenElseStatement .)
    STRICTFP        reduce using rule 509 (Statement -> IfThenElseStatement .)
    EXTENDS         reduce using rule 509 (Statement -> IfThenElseStatement .)
    INC             reduce using rule 509 (Statement -> IfThenElseStatement .)
    DEC             reduce using rule 509 (Statement -> IfThenElseStatement .)
    SUPER           reduce using rule 509 (Statement -> IfThenElseStatement .)
    ATRATE          reduce using rule 509 (Statement -> IfThenElseStatement .)
    NEW             reduce using rule 509 (Statement -> IfThenElseStatement .)
    THIS            reduce using rule 509 (Statement -> IfThenElseStatement .)
    LPAREN          reduce using rule 509 (Statement -> IfThenElseStatement .)
    BOOL_LIT        reduce using rule 509 (Statement -> IfThenElseStatement .)
    NULL_LIT        reduce using rule 509 (Statement -> IfThenElseStatement .)
    DECIMAL_LIT     reduce using rule 509 (Statement -> IfThenElseStatement .)
    HEX_LIT         reduce using rule 509 (Statement -> IfThenElseStatement .)
    OCTAL_LIT       reduce using rule 509 (Statement -> IfThenElseStatement .)
    BINARY_LIT      reduce using rule 509 (Statement -> IfThenElseStatement .)
    FLOAT_DEC_LIT   reduce using rule 509 (Statement -> IfThenElseStatement .)
    FLOAT_HEX_LIT   reduce using rule 509 (Statement -> IfThenElseStatement .)
    STRING_LIT      reduce using rule 509 (Statement -> IfThenElseStatement .)
    CHAR_LIT        reduce using rule 509 (Statement -> IfThenElseStatement .)
    BOOLEAN         reduce using rule 509 (Statement -> IfThenElseStatement .)
    VOID            reduce using rule 509 (Statement -> IfThenElseStatement .)
    BYTE            reduce using rule 509 (Statement -> IfThenElseStatement .)
    SHORT           reduce using rule 509 (Statement -> IfThenElseStatement .)
    INT             reduce using rule 509 (Statement -> IfThenElseStatement .)
    LONG            reduce using rule 509 (Statement -> IfThenElseStatement .)
    CHAR            reduce using rule 509 (Statement -> IfThenElseStatement .)
    FLOAT           reduce using rule 509 (Statement -> IfThenElseStatement .)
    DOUBLE          reduce using rule 509 (Statement -> IfThenElseStatement .)
    CLASS           reduce using rule 509 (Statement -> IfThenElseStatement .)
    ENUM            reduce using rule 509 (Statement -> IfThenElseStatement .)
    IMPLEMENTS      reduce using rule 509 (Statement -> IfThenElseStatement .)
    RBRACE          reduce using rule 509 (Statement -> IfThenElseStatement .)
    CASE            reduce using rule 509 (Statement -> IfThenElseStatement .)
    DEFAULT         reduce using rule 509 (Statement -> IfThenElseStatement .)


state 477

    (510) Statement -> WhileStatement .

    IDENT           reduce using rule 510 (Statement -> WhileStatement .)
    IF              reduce using rule 510 (Statement -> WhileStatement .)
    WHILE           reduce using rule 510 (Statement -> WhileStatement .)
    LBRACE          reduce using rule 510 (Statement -> WhileStatement .)
    SEMICOLON       reduce using rule 510 (Statement -> WhileStatement .)
    ASSERT          reduce using rule 510 (Statement -> WhileStatement .)
    SWITCH          reduce using rule 510 (Statement -> WhileStatement .)
    DO              reduce using rule 510 (Statement -> WhileStatement .)
    BREAK           reduce using rule 510 (Statement -> WhileStatement .)
    CONTINUE        reduce using rule 510 (Statement -> WhileStatement .)
    RETURN          reduce using rule 510 (Statement -> WhileStatement .)
    SYNCHRONIZED    reduce using rule 510 (Statement -> WhileStatement .)
    THROW           reduce using rule 510 (Statement -> WhileStatement .)
    TRY             reduce using rule 510 (Statement -> WhileStatement .)
    FOR             reduce using rule 510 (Statement -> WhileStatement .)
    FINAL           reduce using rule 510 (Statement -> WhileStatement .)
    PUBLIC          reduce using rule 510 (Statement -> WhileStatement .)
    PROTECTED       reduce using rule 510 (Statement -> WhileStatement .)
    PRIVATE         reduce using rule 510 (Statement -> WhileStatement .)
    ABSTRACT        reduce using rule 510 (Statement -> WhileStatement .)
    STATIC          reduce using rule 510 (Statement -> WhileStatement .)
    STRICTFP        reduce using rule 510 (Statement -> WhileStatement .)
    EXTENDS         reduce using rule 510 (Statement -> WhileStatement .)
    INC             reduce using rule 510 (Statement -> WhileStatement .)
    DEC             reduce using rule 510 (Statement -> WhileStatement .)
    SUPER           reduce using rule 510 (Statement -> WhileStatement .)
    ATRATE          reduce using rule 510 (Statement -> WhileStatement .)
    NEW             reduce using rule 510 (Statement -> WhileStatement .)
    THIS            reduce using rule 510 (Statement -> WhileStatement .)
    LPAREN          reduce using rule 510 (Statement -> WhileStatement .)
    BOOL_LIT        reduce using rule 510 (Statement -> WhileStatement .)
    NULL_LIT        reduce using rule 510 (Statement -> WhileStatement .)
    DECIMAL_LIT     reduce using rule 510 (Statement -> WhileStatement .)
    HEX_LIT         reduce using rule 510 (Statement -> WhileStatement .)
    OCTAL_LIT       reduce using rule 510 (Statement -> WhileStatement .)
    BINARY_LIT      reduce using rule 510 (Statement -> WhileStatement .)
    FLOAT_DEC_LIT   reduce using rule 510 (Statement -> WhileStatement .)
    FLOAT_HEX_LIT   reduce using rule 510 (Statement -> WhileStatement .)
    STRING_LIT      reduce using rule 510 (Statement -> WhileStatement .)
    CHAR_LIT        reduce using rule 510 (Statement -> WhileStatement .)
    BOOLEAN         reduce using rule 510 (Statement -> WhileStatement .)
    VOID            reduce using rule 510 (Statement -> WhileStatement .)
    BYTE            reduce using rule 510 (Statement -> WhileStatement .)
    SHORT           reduce using rule 510 (Statement -> WhileStatement .)
    INT             reduce using rule 510 (Statement -> WhileStatement .)
    LONG            reduce using rule 510 (Statement -> WhileStatement .)
    CHAR            reduce using rule 510 (Statement -> WhileStatement .)
    FLOAT           reduce using rule 510 (Statement -> WhileStatement .)
    DOUBLE          reduce using rule 510 (Statement -> WhileStatement .)
    CLASS           reduce using rule 510 (Statement -> WhileStatement .)
    ENUM            reduce using rule 510 (Statement -> WhileStatement .)
    IMPLEMENTS      reduce using rule 510 (Statement -> WhileStatement .)
    RBRACE          reduce using rule 510 (Statement -> WhileStatement .)
    CASE            reduce using rule 510 (Statement -> WhileStatement .)
    DEFAULT         reduce using rule 510 (Statement -> WhileStatement .)


state 478

    (511) Statement -> ForStatement .

    IDENT           reduce using rule 511 (Statement -> ForStatement .)
    IF              reduce using rule 511 (Statement -> ForStatement .)
    WHILE           reduce using rule 511 (Statement -> ForStatement .)
    LBRACE          reduce using rule 511 (Statement -> ForStatement .)
    SEMICOLON       reduce using rule 511 (Statement -> ForStatement .)
    ASSERT          reduce using rule 511 (Statement -> ForStatement .)
    SWITCH          reduce using rule 511 (Statement -> ForStatement .)
    DO              reduce using rule 511 (Statement -> ForStatement .)
    BREAK           reduce using rule 511 (Statement -> ForStatement .)
    CONTINUE        reduce using rule 511 (Statement -> ForStatement .)
    RETURN          reduce using rule 511 (Statement -> ForStatement .)
    SYNCHRONIZED    reduce using rule 511 (Statement -> ForStatement .)
    THROW           reduce using rule 511 (Statement -> ForStatement .)
    TRY             reduce using rule 511 (Statement -> ForStatement .)
    FOR             reduce using rule 511 (Statement -> ForStatement .)
    FINAL           reduce using rule 511 (Statement -> ForStatement .)
    PUBLIC          reduce using rule 511 (Statement -> ForStatement .)
    PROTECTED       reduce using rule 511 (Statement -> ForStatement .)
    PRIVATE         reduce using rule 511 (Statement -> ForStatement .)
    ABSTRACT        reduce using rule 511 (Statement -> ForStatement .)
    STATIC          reduce using rule 511 (Statement -> ForStatement .)
    STRICTFP        reduce using rule 511 (Statement -> ForStatement .)
    EXTENDS         reduce using rule 511 (Statement -> ForStatement .)
    INC             reduce using rule 511 (Statement -> ForStatement .)
    DEC             reduce using rule 511 (Statement -> ForStatement .)
    SUPER           reduce using rule 511 (Statement -> ForStatement .)
    ATRATE          reduce using rule 511 (Statement -> ForStatement .)
    NEW             reduce using rule 511 (Statement -> ForStatement .)
    THIS            reduce using rule 511 (Statement -> ForStatement .)
    LPAREN          reduce using rule 511 (Statement -> ForStatement .)
    BOOL_LIT        reduce using rule 511 (Statement -> ForStatement .)
    NULL_LIT        reduce using rule 511 (Statement -> ForStatement .)
    DECIMAL_LIT     reduce using rule 511 (Statement -> ForStatement .)
    HEX_LIT         reduce using rule 511 (Statement -> ForStatement .)
    OCTAL_LIT       reduce using rule 511 (Statement -> ForStatement .)
    BINARY_LIT      reduce using rule 511 (Statement -> ForStatement .)
    FLOAT_DEC_LIT   reduce using rule 511 (Statement -> ForStatement .)
    FLOAT_HEX_LIT   reduce using rule 511 (Statement -> ForStatement .)
    STRING_LIT      reduce using rule 511 (Statement -> ForStatement .)
    CHAR_LIT        reduce using rule 511 (Statement -> ForStatement .)
    BOOLEAN         reduce using rule 511 (Statement -> ForStatement .)
    VOID            reduce using rule 511 (Statement -> ForStatement .)
    BYTE            reduce using rule 511 (Statement -> ForStatement .)
    SHORT           reduce using rule 511 (Statement -> ForStatement .)
    INT             reduce using rule 511 (Statement -> ForStatement .)
    LONG            reduce using rule 511 (Statement -> ForStatement .)
    CHAR            reduce using rule 511 (Statement -> ForStatement .)
    FLOAT           reduce using rule 511 (Statement -> ForStatement .)
    DOUBLE          reduce using rule 511 (Statement -> ForStatement .)
    CLASS           reduce using rule 511 (Statement -> ForStatement .)
    ENUM            reduce using rule 511 (Statement -> ForStatement .)
    IMPLEMENTS      reduce using rule 511 (Statement -> ForStatement .)
    RBRACE          reduce using rule 511 (Statement -> ForStatement .)
    CASE            reduce using rule 511 (Statement -> ForStatement .)
    DEFAULT         reduce using rule 511 (Statement -> ForStatement .)


state 479

    (503) LocalVariableDeclaration -> VariableModifierS . UnannType VariableDeclaratorList
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 671
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 480

    (530) LabeledStatement -> IDENT . COLON Statement
    (277) MethodName -> IDENT .
    (271) TypeName -> IDENT .
    (275) ExpressionName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (280) AmbiguousName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    COLON           shift and go to state 672
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    ASSIGN          reduce using rule 275 (ExpressionName -> IDENT .)
    MUL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    QUO_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    REM_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    ADD_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SUB_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 275 (ExpressionName -> IDENT .)
    AND_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    XOR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    OR_ASSIGN       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)

  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]


state 481

    (517) StatementWithoutTrailingSubstatement -> Block .

    IDENT           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    IF              reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    WHILE           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    LBRACE          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    SEMICOLON       reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    ASSERT          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    SWITCH          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    DO              reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    BREAK           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    CONTINUE        reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    RETURN          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    SYNCHRONIZED    reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    THROW           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    TRY             reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    FOR             reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    FINAL           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    PUBLIC          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    PROTECTED       reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    PRIVATE         reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    ABSTRACT        reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    STATIC          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    STRICTFP        reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    EXTENDS         reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    INC             reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    DEC             reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    SUPER           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    ATRATE          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    NEW             reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    THIS            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    LPAREN          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    BOOL_LIT        reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    NULL_LIT        reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    DECIMAL_LIT     reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    HEX_LIT         reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    OCTAL_LIT       reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    BINARY_LIT      reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT_DEC_LIT   reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT_HEX_LIT   reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    STRING_LIT      reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR_LIT        reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    BOOLEAN         reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    VOID            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    BYTE            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    SHORT           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    INT             reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    LONG            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    DOUBLE          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    CLASS           reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    ENUM            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    IMPLEMENTS      reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    RBRACE          reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    CASE            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    DEFAULT         reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)
    ELSE            reduce using rule 517 (StatementWithoutTrailingSubstatement -> Block .)


state 482

    (518) StatementWithoutTrailingSubstatement -> EmptyStatement .

    IDENT           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IF              reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    WHILE           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LBRACE          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SEMICOLON       reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ASSERT          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SWITCH          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DO              reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BREAK           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CONTINUE        reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    RETURN          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SYNCHRONIZED    reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    THROW           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    TRY             reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FOR             reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FINAL           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    PUBLIC          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    PROTECTED       reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    PRIVATE         reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ABSTRACT        reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STATIC          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STRICTFP        reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    EXTENDS         reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INC             reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEC             reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SUPER           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ATRATE          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    NEW             reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    THIS            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LPAREN          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOL_LIT        reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    NULL_LIT        reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DECIMAL_LIT     reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    HEX_LIT         reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    OCTAL_LIT       reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BINARY_LIT      reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT_DEC_LIT   reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT_HEX_LIT   reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STRING_LIT      reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR_LIT        reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOLEAN         reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    VOID            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BYTE            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SHORT           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INT             reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LONG            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DOUBLE          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CLASS           reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ENUM            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IMPLEMENTS      reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    RBRACE          reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CASE            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEFAULT         reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ELSE            reduce using rule 518 (StatementWithoutTrailingSubstatement -> EmptyStatement .)


state 483

    (519) StatementWithoutTrailingSubstatement -> ExpressionStatement .

    IDENT           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IF              reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    WHILE           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LBRACE          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SEMICOLON       reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ASSERT          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SWITCH          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DO              reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BREAK           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CONTINUE        reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    RETURN          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SYNCHRONIZED    reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    THROW           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    TRY             reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FOR             reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FINAL           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    PUBLIC          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    PROTECTED       reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    PRIVATE         reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ABSTRACT        reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STATIC          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STRICTFP        reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    EXTENDS         reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INC             reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEC             reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SUPER           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ATRATE          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    NEW             reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    THIS            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LPAREN          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOL_LIT        reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    NULL_LIT        reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DECIMAL_LIT     reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    HEX_LIT         reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    OCTAL_LIT       reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BINARY_LIT      reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT_DEC_LIT   reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT_HEX_LIT   reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STRING_LIT      reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR_LIT        reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOLEAN         reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    VOID            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BYTE            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SHORT           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INT             reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LONG            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DOUBLE          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CLASS           reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ENUM            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IMPLEMENTS      reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    RBRACE          reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CASE            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEFAULT         reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ELSE            reduce using rule 519 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)


state 484

    (520) StatementWithoutTrailingSubstatement -> AssertStatement .

    IDENT           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    IF              reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    WHILE           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    LBRACE          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SEMICOLON       reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ASSERT          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SWITCH          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DO              reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BREAK           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CONTINUE        reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    RETURN          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SYNCHRONIZED    reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    THROW           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    TRY             reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FOR             reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FINAL           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    PUBLIC          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    PROTECTED       reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    PRIVATE         reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ABSTRACT        reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    STATIC          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    STRICTFP        reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    EXTENDS         reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    INC             reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DEC             reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SUPER           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ATRATE          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    NEW             reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    THIS            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    LPAREN          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BOOL_LIT        reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    NULL_LIT        reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DECIMAL_LIT     reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    HEX_LIT         reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    OCTAL_LIT       reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BINARY_LIT      reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FLOAT_DEC_LIT   reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FLOAT_HEX_LIT   reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    STRING_LIT      reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CHAR_LIT        reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BOOLEAN         reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    VOID            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    BYTE            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    SHORT           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    INT             reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    LONG            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CHAR            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    FLOAT           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DOUBLE          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CLASS           reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ENUM            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    IMPLEMENTS      reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    RBRACE          reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    CASE            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    DEFAULT         reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)
    ELSE            reduce using rule 520 (StatementWithoutTrailingSubstatement -> AssertStatement .)


state 485

    (521) StatementWithoutTrailingSubstatement -> SwitchStatement .

    IDENT           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IF              reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    WHILE           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LBRACE          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SEMICOLON       reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ASSERT          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SWITCH          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DO              reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BREAK           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CONTINUE        reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    RETURN          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SYNCHRONIZED    reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    THROW           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    TRY             reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FOR             reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FINAL           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    PUBLIC          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    PROTECTED       reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    PRIVATE         reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ABSTRACT        reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STATIC          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STRICTFP        reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    EXTENDS         reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INC             reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEC             reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SUPER           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ATRATE          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    NEW             reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    THIS            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LPAREN          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOL_LIT        reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    NULL_LIT        reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DECIMAL_LIT     reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    HEX_LIT         reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    OCTAL_LIT       reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BINARY_LIT      reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT_DEC_LIT   reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT_HEX_LIT   reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STRING_LIT      reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR_LIT        reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOLEAN         reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    VOID            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BYTE            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SHORT           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INT             reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LONG            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DOUBLE          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CLASS           reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ENUM            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IMPLEMENTS      reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    RBRACE          reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CASE            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEFAULT         reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ELSE            reduce using rule 521 (StatementWithoutTrailingSubstatement -> SwitchStatement .)


state 486

    (522) StatementWithoutTrailingSubstatement -> DoStatement .

    IDENT           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IF              reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    WHILE           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LBRACE          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SEMICOLON       reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ASSERT          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SWITCH          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DO              reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BREAK           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CONTINUE        reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    RETURN          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SYNCHRONIZED    reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    THROW           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    TRY             reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FOR             reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FINAL           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    PUBLIC          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    PROTECTED       reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    PRIVATE         reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ABSTRACT        reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STATIC          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STRICTFP        reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    EXTENDS         reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INC             reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEC             reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SUPER           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ATRATE          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    NEW             reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    THIS            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LPAREN          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOL_LIT        reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    NULL_LIT        reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DECIMAL_LIT     reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    HEX_LIT         reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    OCTAL_LIT       reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BINARY_LIT      reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT_DEC_LIT   reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT_HEX_LIT   reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STRING_LIT      reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR_LIT        reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOLEAN         reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    VOID            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BYTE            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SHORT           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INT             reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LONG            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DOUBLE          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CLASS           reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ENUM            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IMPLEMENTS      reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    RBRACE          reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CASE            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEFAULT         reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ELSE            reduce using rule 522 (StatementWithoutTrailingSubstatement -> DoStatement .)


state 487

    (523) StatementWithoutTrailingSubstatement -> BreakStatement .

    IDENT           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IF              reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    WHILE           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LBRACE          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SEMICOLON       reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ASSERT          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SWITCH          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DO              reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BREAK           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CONTINUE        reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    RETURN          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SYNCHRONIZED    reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    THROW           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    TRY             reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FOR             reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FINAL           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    PUBLIC          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    PROTECTED       reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    PRIVATE         reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ABSTRACT        reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STATIC          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STRICTFP        reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    EXTENDS         reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INC             reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEC             reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SUPER           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ATRATE          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    NEW             reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    THIS            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LPAREN          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOL_LIT        reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    NULL_LIT        reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DECIMAL_LIT     reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    HEX_LIT         reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    OCTAL_LIT       reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BINARY_LIT      reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT_DEC_LIT   reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT_HEX_LIT   reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STRING_LIT      reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR_LIT        reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOLEAN         reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    VOID            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BYTE            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SHORT           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INT             reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LONG            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DOUBLE          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CLASS           reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ENUM            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IMPLEMENTS      reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    RBRACE          reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CASE            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEFAULT         reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ELSE            reduce using rule 523 (StatementWithoutTrailingSubstatement -> BreakStatement .)


state 488

    (524) StatementWithoutTrailingSubstatement -> ContinueStatement .

    IDENT           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IF              reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    WHILE           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LBRACE          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SEMICOLON       reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ASSERT          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SWITCH          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DO              reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BREAK           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CONTINUE        reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    RETURN          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SYNCHRONIZED    reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    THROW           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    TRY             reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FOR             reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FINAL           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    PUBLIC          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    PROTECTED       reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    PRIVATE         reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ABSTRACT        reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STATIC          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STRICTFP        reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    EXTENDS         reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INC             reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEC             reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SUPER           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ATRATE          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    NEW             reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    THIS            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LPAREN          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOL_LIT        reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    NULL_LIT        reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DECIMAL_LIT     reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    HEX_LIT         reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    OCTAL_LIT       reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BINARY_LIT      reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT_DEC_LIT   reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT_HEX_LIT   reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STRING_LIT      reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR_LIT        reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOLEAN         reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    VOID            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BYTE            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SHORT           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INT             reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LONG            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DOUBLE          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CLASS           reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ENUM            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IMPLEMENTS      reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    RBRACE          reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CASE            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEFAULT         reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ELSE            reduce using rule 524 (StatementWithoutTrailingSubstatement -> ContinueStatement .)


state 489

    (525) StatementWithoutTrailingSubstatement -> ReturnStatement .

    IDENT           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IF              reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    WHILE           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LBRACE          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SEMICOLON       reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ASSERT          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SWITCH          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DO              reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BREAK           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CONTINUE        reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    RETURN          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SYNCHRONIZED    reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    THROW           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    TRY             reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FOR             reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FINAL           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    PUBLIC          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    PROTECTED       reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    PRIVATE         reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ABSTRACT        reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STATIC          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STRICTFP        reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    EXTENDS         reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INC             reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEC             reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SUPER           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ATRATE          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    NEW             reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    THIS            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LPAREN          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOL_LIT        reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    NULL_LIT        reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DECIMAL_LIT     reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    HEX_LIT         reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    OCTAL_LIT       reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BINARY_LIT      reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT_DEC_LIT   reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT_HEX_LIT   reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STRING_LIT      reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR_LIT        reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOLEAN         reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    VOID            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BYTE            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SHORT           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INT             reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LONG            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DOUBLE          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CLASS           reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ENUM            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IMPLEMENTS      reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    RBRACE          reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CASE            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEFAULT         reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ELSE            reduce using rule 525 (StatementWithoutTrailingSubstatement -> ReturnStatement .)


state 490

    (526) StatementWithoutTrailingSubstatement -> SynchronizedStatement .

    IDENT           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    IF              reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    WHILE           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    LBRACE          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SEMICOLON       reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ASSERT          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SWITCH          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DO              reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BREAK           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CONTINUE        reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    RETURN          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SYNCHRONIZED    reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    THROW           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    TRY             reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FOR             reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FINAL           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    PUBLIC          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    PROTECTED       reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    PRIVATE         reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ABSTRACT        reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    STATIC          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    STRICTFP        reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    EXTENDS         reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    INC             reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DEC             reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SUPER           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ATRATE          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    NEW             reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    THIS            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    LPAREN          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BOOL_LIT        reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    NULL_LIT        reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DECIMAL_LIT     reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    HEX_LIT         reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    OCTAL_LIT       reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BINARY_LIT      reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FLOAT_DEC_LIT   reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FLOAT_HEX_LIT   reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    STRING_LIT      reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CHAR_LIT        reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BOOLEAN         reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    VOID            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    BYTE            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    SHORT           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    INT             reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    LONG            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CHAR            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    FLOAT           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DOUBLE          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CLASS           reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ENUM            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    IMPLEMENTS      reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    RBRACE          reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    CASE            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    DEFAULT         reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)
    ELSE            reduce using rule 526 (StatementWithoutTrailingSubstatement -> SynchronizedStatement .)


state 491

    (527) StatementWithoutTrailingSubstatement -> ThrowStatement .

    IDENT           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    IF              reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    WHILE           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    LBRACE          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SEMICOLON       reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ASSERT          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SWITCH          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DO              reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BREAK           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CONTINUE        reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    RETURN          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SYNCHRONIZED    reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    THROW           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    TRY             reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FOR             reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FINAL           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    PUBLIC          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    PROTECTED       reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    PRIVATE         reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ABSTRACT        reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    STATIC          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    STRICTFP        reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    EXTENDS         reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    INC             reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DEC             reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SUPER           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ATRATE          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    NEW             reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    THIS            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    LPAREN          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BOOL_LIT        reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    NULL_LIT        reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DECIMAL_LIT     reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    HEX_LIT         reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    OCTAL_LIT       reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BINARY_LIT      reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FLOAT_DEC_LIT   reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FLOAT_HEX_LIT   reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    STRING_LIT      reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CHAR_LIT        reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BOOLEAN         reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    VOID            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    BYTE            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    SHORT           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    INT             reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    LONG            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CHAR            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    FLOAT           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DOUBLE          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CLASS           reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ENUM            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    IMPLEMENTS      reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    RBRACE          reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    CASE            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    DEFAULT         reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)
    ELSE            reduce using rule 527 (StatementWithoutTrailingSubstatement -> ThrowStatement .)


state 492

    (528) StatementWithoutTrailingSubstatement -> TryStatement .

    IDENT           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    IF              reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    WHILE           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    LBRACE          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SEMICOLON       reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ASSERT          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SWITCH          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DO              reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BREAK           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CONTINUE        reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    RETURN          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SYNCHRONIZED    reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    THROW           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    TRY             reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FOR             reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FINAL           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    PUBLIC          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    PROTECTED       reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    PRIVATE         reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ABSTRACT        reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    STATIC          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    STRICTFP        reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    EXTENDS         reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    INC             reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DEC             reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SUPER           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ATRATE          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    NEW             reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    THIS            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    LPAREN          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BOOL_LIT        reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    NULL_LIT        reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DECIMAL_LIT     reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    HEX_LIT         reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    OCTAL_LIT       reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BINARY_LIT      reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FLOAT_DEC_LIT   reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FLOAT_HEX_LIT   reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    STRING_LIT      reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CHAR_LIT        reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BOOLEAN         reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    VOID            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    BYTE            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    SHORT           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    INT             reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    LONG            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CHAR            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    FLOAT           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DOUBLE          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CLASS           reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ENUM            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    IMPLEMENTS      reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    RBRACE          reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    CASE            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    DEFAULT         reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)
    ELSE            reduce using rule 528 (StatementWithoutTrailingSubstatement -> TryStatement .)


state 493

    (540) IfThenStatement -> IF . LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> IF . LPAREN Expression RPAREN StatementNoShortIf ELSE Statement

    LPAREN          shift and go to state 673


state 494

    (106) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 206
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 495

    (557) WhileStatement -> WHILE . LPAREN Expression RPAREN Statement

    LPAREN          shift and go to state 674


state 496

    (560) ForStatement -> BasicForStatement .

    IDENT           reduce using rule 560 (ForStatement -> BasicForStatement .)
    IF              reduce using rule 560 (ForStatement -> BasicForStatement .)
    WHILE           reduce using rule 560 (ForStatement -> BasicForStatement .)
    LBRACE          reduce using rule 560 (ForStatement -> BasicForStatement .)
    SEMICOLON       reduce using rule 560 (ForStatement -> BasicForStatement .)
    ASSERT          reduce using rule 560 (ForStatement -> BasicForStatement .)
    SWITCH          reduce using rule 560 (ForStatement -> BasicForStatement .)
    DO              reduce using rule 560 (ForStatement -> BasicForStatement .)
    BREAK           reduce using rule 560 (ForStatement -> BasicForStatement .)
    CONTINUE        reduce using rule 560 (ForStatement -> BasicForStatement .)
    RETURN          reduce using rule 560 (ForStatement -> BasicForStatement .)
    SYNCHRONIZED    reduce using rule 560 (ForStatement -> BasicForStatement .)
    THROW           reduce using rule 560 (ForStatement -> BasicForStatement .)
    TRY             reduce using rule 560 (ForStatement -> BasicForStatement .)
    FOR             reduce using rule 560 (ForStatement -> BasicForStatement .)
    FINAL           reduce using rule 560 (ForStatement -> BasicForStatement .)
    PUBLIC          reduce using rule 560 (ForStatement -> BasicForStatement .)
    PROTECTED       reduce using rule 560 (ForStatement -> BasicForStatement .)
    PRIVATE         reduce using rule 560 (ForStatement -> BasicForStatement .)
    ABSTRACT        reduce using rule 560 (ForStatement -> BasicForStatement .)
    STATIC          reduce using rule 560 (ForStatement -> BasicForStatement .)
    STRICTFP        reduce using rule 560 (ForStatement -> BasicForStatement .)
    EXTENDS         reduce using rule 560 (ForStatement -> BasicForStatement .)
    INC             reduce using rule 560 (ForStatement -> BasicForStatement .)
    DEC             reduce using rule 560 (ForStatement -> BasicForStatement .)
    SUPER           reduce using rule 560 (ForStatement -> BasicForStatement .)
    ATRATE          reduce using rule 560 (ForStatement -> BasicForStatement .)
    NEW             reduce using rule 560 (ForStatement -> BasicForStatement .)
    THIS            reduce using rule 560 (ForStatement -> BasicForStatement .)
    LPAREN          reduce using rule 560 (ForStatement -> BasicForStatement .)
    BOOL_LIT        reduce using rule 560 (ForStatement -> BasicForStatement .)
    NULL_LIT        reduce using rule 560 (ForStatement -> BasicForStatement .)
    DECIMAL_LIT     reduce using rule 560 (ForStatement -> BasicForStatement .)
    HEX_LIT         reduce using rule 560 (ForStatement -> BasicForStatement .)
    OCTAL_LIT       reduce using rule 560 (ForStatement -> BasicForStatement .)
    BINARY_LIT      reduce using rule 560 (ForStatement -> BasicForStatement .)
    FLOAT_DEC_LIT   reduce using rule 560 (ForStatement -> BasicForStatement .)
    FLOAT_HEX_LIT   reduce using rule 560 (ForStatement -> BasicForStatement .)
    STRING_LIT      reduce using rule 560 (ForStatement -> BasicForStatement .)
    CHAR_LIT        reduce using rule 560 (ForStatement -> BasicForStatement .)
    BOOLEAN         reduce using rule 560 (ForStatement -> BasicForStatement .)
    VOID            reduce using rule 560 (ForStatement -> BasicForStatement .)
    BYTE            reduce using rule 560 (ForStatement -> BasicForStatement .)
    SHORT           reduce using rule 560 (ForStatement -> BasicForStatement .)
    INT             reduce using rule 560 (ForStatement -> BasicForStatement .)
    LONG            reduce using rule 560 (ForStatement -> BasicForStatement .)
    CHAR            reduce using rule 560 (ForStatement -> BasicForStatement .)
    FLOAT           reduce using rule 560 (ForStatement -> BasicForStatement .)
    DOUBLE          reduce using rule 560 (ForStatement -> BasicForStatement .)
    CLASS           reduce using rule 560 (ForStatement -> BasicForStatement .)
    ENUM            reduce using rule 560 (ForStatement -> BasicForStatement .)
    IMPLEMENTS      reduce using rule 560 (ForStatement -> BasicForStatement .)
    RBRACE          reduce using rule 560 (ForStatement -> BasicForStatement .)
    CASE            reduce using rule 560 (ForStatement -> BasicForStatement .)
    DEFAULT         reduce using rule 560 (ForStatement -> BasicForStatement .)


state 497

    (561) ForStatement -> EnhancedForStatement .

    IDENT           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    IF              reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    WHILE           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    LBRACE          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    SEMICOLON       reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    ASSERT          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    SWITCH          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    DO              reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    BREAK           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    CONTINUE        reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    RETURN          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    SYNCHRONIZED    reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    THROW           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    TRY             reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    FOR             reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    FINAL           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    PUBLIC          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    PROTECTED       reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    PRIVATE         reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    ABSTRACT        reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    STATIC          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    STRICTFP        reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    EXTENDS         reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    INC             reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    DEC             reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    SUPER           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    ATRATE          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    NEW             reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    THIS            reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    LPAREN          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    BOOL_LIT        reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    NULL_LIT        reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    DECIMAL_LIT     reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    HEX_LIT         reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    OCTAL_LIT       reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    BINARY_LIT      reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    FLOAT_DEC_LIT   reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    FLOAT_HEX_LIT   reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    STRING_LIT      reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    CHAR_LIT        reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    BOOLEAN         reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    VOID            reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    BYTE            reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    SHORT           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    INT             reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    LONG            reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    CHAR            reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    FLOAT           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    DOUBLE          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    CLASS           reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    ENUM            reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    IMPLEMENTS      reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    RBRACE          reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    CASE            reduce using rule 561 (ForStatement -> EnhancedForStatement .)
    DEFAULT         reduce using rule 561 (ForStatement -> EnhancedForStatement .)


state 498

    (504) VariableModifierS -> VariableModifier . VariableModifierS
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 362
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    VariableModifier               shift and go to state 498
    VariableModifierS              shift and go to state 602
    empty                          shift and go to state 603
    Annotation                     shift and go to state 604
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 499

    (532) ExpressionStatement -> StatementExpression . SEMICOLON

    SEMICOLON       shift and go to state 675


state 500

    (543) AssertStatement -> ASSERT . Expression SEMICOLON
    (544) AssertStatement -> ASSERT . Expression COLON Expression SEMICOLON
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 676
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 501

    (545) SwitchStatement -> SWITCH . LPAREN Expression RPAREN SwitchBlock

    LPAREN          shift and go to state 677


state 502

    (559) DoStatement -> DO . Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 678
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 503

    (580) BreakStatement -> BREAK . ZooIDENT SEMICOLON
    (581) ZooIDENT -> . IDENT
    (582) ZooIDENT -> . empty
    (1) empty -> .

    IDENT           shift and go to state 680
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooIDENT                       shift and go to state 679
    empty                          shift and go to state 681

state 504

    (583) ContinueStatement -> CONTINUE . ZooIDENT SEMICOLON
    (581) ZooIDENT -> . IDENT
    (582) ZooIDENT -> . empty
    (1) empty -> .

    IDENT           shift and go to state 680
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooIDENT                       shift and go to state 682
    empty                          shift and go to state 681

state 505

    (584) ReturnStatement -> RETURN . ZooExpression SEMICOLON
    (567) ZooExpression -> . Expression
    (568) ZooExpression -> . empty
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (1) empty -> .
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooExpression                  shift and go to state 683
    Expression                     shift and go to state 684
    empty                          shift and go to state 685
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 506

    (586) SynchronizedStatement -> SYNCHRONIZED . LPAREN Expression RPAREN Block

    LPAREN          shift and go to state 686


state 507

    (585) ThrowStatement -> THROW . Expression SEMICOLON
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 687
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 508

    (587) TryStatement -> TRY . Block Catches
    (588) TryStatement -> TRY . Block ZooCatches Finally
    (601) TryWithResourcesStatement -> TRY . ResourceSpecification Block ZooCatches ZooFinally
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (606) ResourceSpecification -> . LPAREN ResourceList ZooSEMICOLON RPAREN

    LBRACE          shift and go to state 299
    LPAREN          shift and go to state 690

    Block                          shift and go to state 688
    ResourceSpecification          shift and go to state 689

state 509

    (589) TryStatement -> TryWithResourcesStatement .

    IDENT           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    IF              reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    WHILE           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    LBRACE          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    SEMICOLON       reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    ASSERT          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    SWITCH          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    DO              reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    BREAK           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    CONTINUE        reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    RETURN          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    SYNCHRONIZED    reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    THROW           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    TRY             reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    FOR             reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    FINAL           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    PUBLIC          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    PROTECTED       reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    PRIVATE         reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    ABSTRACT        reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    STATIC          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    STRICTFP        reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    EXTENDS         reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    INC             reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    DEC             reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    SUPER           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    ATRATE          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    NEW             reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    THIS            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    LPAREN          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    BOOL_LIT        reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    NULL_LIT        reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    DECIMAL_LIT     reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    HEX_LIT         reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    OCTAL_LIT       reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    BINARY_LIT      reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    FLOAT_DEC_LIT   reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    FLOAT_HEX_LIT   reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    STRING_LIT      reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    CHAR_LIT        reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    BOOLEAN         reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    VOID            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    BYTE            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    SHORT           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    INT             reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    LONG            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    CHAR            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    FLOAT           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    DOUBLE          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    CLASS           reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    ENUM            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    IMPLEMENTS      reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    RBRACE          reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    CASE            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    DEFAULT         reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)
    ELSE            reduce using rule 589 (TryStatement -> TryWithResourcesStatement .)


state 510

    (564) BasicForStatement -> FOR . LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> FOR . LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement

    LPAREN          shift and go to state 691


state 511

    (388) VariableModifier -> Annotation .
    (291) ClassModifier -> Annotation .
    (125) AnnotationS -> Annotation . AnnotationS
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for FINAL resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 291 (ClassModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BYTE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHORT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LONG resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    PUBLIC          reduce using rule 291 (ClassModifier -> Annotation .)
    PROTECTED       reduce using rule 291 (ClassModifier -> Annotation .)
    PRIVATE         reduce using rule 291 (ClassModifier -> Annotation .)
    ABSTRACT        reduce using rule 291 (ClassModifier -> Annotation .)
    STATIC          reduce using rule 291 (ClassModifier -> Annotation .)
    FINAL           reduce using rule 291 (ClassModifier -> Annotation .)
    STRICTFP        reduce using rule 291 (ClassModifier -> Annotation .)
    CLASS           reduce using rule 291 (ClassModifier -> Annotation .)
    ENUM            reduce using rule 291 (ClassModifier -> Annotation .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! FINAL           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! INT             [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 291 (ClassModifier -> Annotation .) ]

    Annotation                     shift and go to state 90
    AnnotationS                    shift and go to state 193
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 512

    (389) VariableModifier -> FINAL .
    (297) ClassModifier -> FINAL .

  ! reduce/reduce conflict for FINAL resolved using rule 297 (ClassModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 297 (ClassModifier -> FINAL .)
    BOOLEAN         reduce using rule 389 (VariableModifier -> FINAL .)
    IDENT           reduce using rule 389 (VariableModifier -> FINAL .)
    BYTE            reduce using rule 389 (VariableModifier -> FINAL .)
    SHORT           reduce using rule 389 (VariableModifier -> FINAL .)
    INT             reduce using rule 389 (VariableModifier -> FINAL .)
    LONG            reduce using rule 389 (VariableModifier -> FINAL .)
    CHAR            reduce using rule 389 (VariableModifier -> FINAL .)
    FLOAT           reduce using rule 389 (VariableModifier -> FINAL .)
    DOUBLE          reduce using rule 389 (VariableModifier -> FINAL .)
    PUBLIC          reduce using rule 297 (ClassModifier -> FINAL .)
    PROTECTED       reduce using rule 297 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 297 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 297 (ClassModifier -> FINAL .)
    STATIC          reduce using rule 297 (ClassModifier -> FINAL .)
    FINAL           reduce using rule 297 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 297 (ClassModifier -> FINAL .)
    ATRATE          reduce using rule 297 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 297 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 297 (ClassModifier -> FINAL .)

  ! FINAL           [ reduce using rule 389 (VariableModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 389 (VariableModifier -> FINAL .) ]


state 513

    (533) StatementExpression -> Assignment .

    SEMICOLON       reduce using rule 533 (StatementExpression -> Assignment .)
    COMMA           reduce using rule 533 (StatementExpression -> Assignment .)
    RPAREN          reduce using rule 533 (StatementExpression -> Assignment .)


state 514

    (534) StatementExpression -> PreIncrementExpression .

    SEMICOLON       reduce using rule 534 (StatementExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 534 (StatementExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 534 (StatementExpression -> PreIncrementExpression .)


state 515

    (535) StatementExpression -> PreDecrementExpression .

    SEMICOLON       reduce using rule 535 (StatementExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 535 (StatementExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 535 (StatementExpression -> PreDecrementExpression .)


state 516

    (536) StatementExpression -> PostIncrementExpression .
    (237) PostfixExpression -> PostIncrementExpression .

    SEMICOLON       reduce using rule 536 (StatementExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 536 (StatementExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 536 (StatementExpression -> PostIncrementExpression .)
    INC             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 237 (PostfixExpression -> PostIncrementExpression .)


state 517

    (537) StatementExpression -> PostDecrementExpression .
    (238) PostfixExpression -> PostDecrementExpression .

    SEMICOLON       reduce using rule 537 (StatementExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 537 (StatementExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 537 (StatementExpression -> PostDecrementExpression .)
    INC             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 238 (PostfixExpression -> PostDecrementExpression .)


state 518

    (538) StatementExpression -> MethodInvocation .
    (110) PrimaryNoNewArray -> MethodInvocation .

    SEMICOLON       reduce using rule 538 (StatementExpression -> MethodInvocation .)
    COMMA           reduce using rule 538 (StatementExpression -> MethodInvocation .)
    RPAREN          reduce using rule 538 (StatementExpression -> MethodInvocation .)
    LBRACK          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    PERIOD          reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    COLON_SEP       reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 110 (PrimaryNoNewArray -> MethodInvocation .)


state 519

    (539) StatementExpression -> ClassInstanceCreationExpression .
    (107) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    SEMICOLON       reduce using rule 539 (StatementExpression -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 539 (StatementExpression -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 539 (StatementExpression -> ClassInstanceCreationExpression .)
    LBRACK          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    PERIOD          reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON_SEP       reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 107 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 520

    (239) PostIncrementExpression -> PostfixExpression . INC
    (240) PostDecrementExpression -> PostfixExpression . DEC

    INC             shift and go to state 260
    DEC             shift and go to state 261


state 521

    (139) MethodInvocation -> TypeName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> TypeName . PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (135) FieldAccess -> TypeName . PERIOD SUPER PERIOD IDENT
    (105) PrimaryNoNewArray -> TypeName . PERIOD THIS
    (112) ClassLiteral -> TypeName . LBRACKRBRACKS PERIOD CLASS
    (151) MethodReference -> TypeName . PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (116) LBRACKRBRACKS -> . LBRACK RBRACK LBRACKRBRACKS
    (117) LBRACKRBRACKS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for PERIOD resolved as shift
    PERIOD          shift and go to state 692
    LBRACK          shift and go to state 200

  ! PERIOD          [ reduce using rule 1 (empty -> .) ]

    LBRACKRBRACKS                  shift and go to state 199
    empty                          shift and go to state 201

state 522

    (140) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (119) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> ExpressionName .
    (236) PostfixExpression -> ExpressionName .
    (136) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (147) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 693
    ASSIGN          reduce using rule 176 (LeftHandSide -> ExpressionName .)
    MUL_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    QUO_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    REM_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    ADD_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SUB_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SHL_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SHR_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    SHR_UN_ASSIGN   reduce using rule 176 (LeftHandSide -> ExpressionName .)
    AND_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    XOR_ASSIGN      reduce using rule 176 (LeftHandSide -> ExpressionName .)
    OR_ASSIGN       reduce using rule 176 (LeftHandSide -> ExpressionName .)
    INC             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    DEC             reduce using rule 236 (PostfixExpression -> ExpressionName .)
    LBRACK          shift and go to state 267
    COLON_SEP       shift and go to state 268


state 523

    (141) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (235) PostfixExpression -> Primary .
    (133) FieldAccess -> Primary . PERIOD IDENT
    (149) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 694
    INC             reduce using rule 235 (PostfixExpression -> Primary .)
    DEC             reduce using rule 235 (PostfixExpression -> Primary .)
    COLON_SEP       shift and go to state 265


state 524

    (142) MethodInvocation -> SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (134) FieldAccess -> SUPER . PERIOD IDENT
    (150) MethodReference -> SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 695
    COLON_SEP       shift and go to state 286


state 525

    (121) UnqualifiedClassInstanceCreationExpression -> NEW . ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (154) ArrayCreationExpression -> NEW . PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> NEW . ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> NEW . PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> NEW . ClassOrInterfaceType Dims ArrayInitializer
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 275
    PrimitiveType                  shift and go to state 273
    ClassOrInterfaceType           shift and go to state 274
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 279
    AnnotationS                    shift and go to state 276
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 526

    (310) ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .

    SEMICOLON       reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PUBLIC          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PROTECTED       reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PRIVATE         reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ABSTRACT        reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    STATIC          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FINAL           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    STRICTFP        reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    EXTENDS         reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ATRATE          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CLASS           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ENUM            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    IMPLEMENTS      reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LBRACE          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INTERFACE       reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    $end            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    TRANSIENT       reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    VOLATILE        reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SYNCHRONIZED    reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NATIVE          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LSS             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    IDENT           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BOOLEAN         reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BYTE            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHORT           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INT             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LONG            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CHAR            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FLOAT           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DOUBLE          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    VOID            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RBRACE          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    IF              reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    WHILE           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ASSERT          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SWITCH          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DO              reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BREAK           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CONTINUE        reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RETURN          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    THROW           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    TRY             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FOR             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INC             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DEC             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SUPER           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NEW             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    THIS            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LPAREN          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BOOL_LIT        reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NULL_LIT        reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DECIMAL_LIT     reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    HEX_LIT         reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    OCTAL_LIT       reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    BINARY_LIT      reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    STRING_LIT      reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CHAR_LIT        reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    CASE            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    DEFAULT         reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LBRACK          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    PERIOD          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    COLON_SEP       reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    MUL             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    QUO             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    REM             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    ADD             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SUB             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHL             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHR             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    SHR_UN          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    GTR             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LEQ             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    GEQ             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    INSTANCEOF      reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    EQL             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    NEQ             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    AND             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    XOR             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    OR              reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LAND            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    QUES            reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    LOR             reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RPAREN          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    COMMA           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    COLON           reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)
    RBRACK          reduce using rule 310 (ClassBody -> LBRACE ClassBodyDeclarationS RBRACE .)


state 527

    (308) ClassBodyDeclarationS -> ClassBodyDeclaration ClassBodyDeclarationS .

    RBRACE          reduce using rule 308 (ClassBodyDeclarationS -> ClassBodyDeclaration ClassBodyDeclarationS .)


state 528

    (404) StaticInitializer -> STATIC Block .

    SEMICOLON       reduce using rule 404 (StaticInitializer -> STATIC Block .)
    STATIC          reduce using rule 404 (StaticInitializer -> STATIC Block .)
    LBRACE          reduce using rule 404 (StaticInitializer -> STATIC Block .)
    PUBLIC          reduce using rule 404 (StaticInitializer -> STATIC Block .)
    PROTECTED       reduce using rule 404 (StaticInitializer -> STATIC Block .)
    PRIVATE         reduce using rule 404 (StaticInitializer -> STATIC Block .)
    FINAL           reduce using rule 404 (StaticInitializer -> STATIC Block .)
    TRANSIENT       reduce using rule 404 (StaticInitializer -> STATIC Block .)
    VOLATILE        reduce using rule 404 (StaticInitializer -> STATIC Block .)
    ABSTRACT        reduce using rule 404 (StaticInitializer -> STATIC Block .)
    SYNCHRONIZED    reduce using rule 404 (StaticInitializer -> STATIC Block .)
    NATIVE          reduce using rule 404 (StaticInitializer -> STATIC Block .)
    STRICTFP        reduce using rule 404 (StaticInitializer -> STATIC Block .)
    EXTENDS         reduce using rule 404 (StaticInitializer -> STATIC Block .)
    ATRATE          reduce using rule 404 (StaticInitializer -> STATIC Block .)
    LSS             reduce using rule 404 (StaticInitializer -> STATIC Block .)
    IDENT           reduce using rule 404 (StaticInitializer -> STATIC Block .)
    BOOLEAN         reduce using rule 404 (StaticInitializer -> STATIC Block .)
    BYTE            reduce using rule 404 (StaticInitializer -> STATIC Block .)
    SHORT           reduce using rule 404 (StaticInitializer -> STATIC Block .)
    INT             reduce using rule 404 (StaticInitializer -> STATIC Block .)
    LONG            reduce using rule 404 (StaticInitializer -> STATIC Block .)
    CHAR            reduce using rule 404 (StaticInitializer -> STATIC Block .)
    FLOAT           reduce using rule 404 (StaticInitializer -> STATIC Block .)
    DOUBLE          reduce using rule 404 (StaticInitializer -> STATIC Block .)
    VOID            reduce using rule 404 (StaticInitializer -> STATIC Block .)
    CLASS           reduce using rule 404 (StaticInitializer -> STATIC Block .)
    ENUM            reduce using rule 404 (StaticInitializer -> STATIC Block .)
    IMPLEMENTS      reduce using rule 404 (StaticInitializer -> STATIC Block .)
    INTERFACE       reduce using rule 404 (StaticInitializer -> STATIC Block .)
    RBRACE          reduce using rule 404 (StaticInitializer -> STATIC Block .)


state 529

    (407) ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator . ZooThrows ConstructorBody
    (369) ZooThrows -> . Throws
    (370) ZooThrows -> . empty
    (395) Throws -> . THROWS ExceptionTypeList
    (1) empty -> .

    THROWS          shift and go to state 699
    LBRACE          reduce using rule 1 (empty -> .)

    ZooThrows                      shift and go to state 696
    Throws                         shift and go to state 697
    empty                          shift and go to state 698

state 530

    (412) ConstructorDeclarator -> ZooTypeParameters . SimpleTypeName LPAREN ZooFormalParameterList RPAREN
    (413) SimpleTypeName -> . IDENT

    IDENT           shift and go to state 701

    SimpleTypeName                 shift and go to state 700

state 531

    (322) FieldDeclaration -> FieldModifierS UnannType . VariableDeclaratorList SEMICOLON
    (333) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (336) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclaratorList         shift and go to state 702
    VariableDeclarator             shift and go to state 703
    VariableDeclaratorId           shift and go to state 704

state 532

    (340) UnannType -> UnannPrimitiveType .
    (353) UnannArrayType -> UnannPrimitiveType . Dims
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           reduce using rule 340 (UnannType -> UnannPrimitiveType .)
    THIS            reduce using rule 340 (UnannType -> UnannPrimitiveType .)
    ELLIPSIS        reduce using rule 340 (UnannType -> UnannPrimitiveType .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 340 (UnannType -> UnannPrimitiveType .) ]

    Dims                           shift and go to state 706
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 533

    (341) UnannType -> UnannReferenceType .

    IDENT           reduce using rule 341 (UnannType -> UnannReferenceType .)
    THIS            reduce using rule 341 (UnannType -> UnannReferenceType .)
    ATRATE          reduce using rule 341 (UnannType -> UnannReferenceType .)
    ELLIPSIS        reduce using rule 341 (UnannType -> UnannReferenceType .)


state 534

    (342) UnannPrimitiveType -> NumericType .

    ATRATE          reduce using rule 342 (UnannPrimitiveType -> NumericType .)
    LBRACE          reduce using rule 342 (UnannPrimitiveType -> NumericType .)
    IDENT           reduce using rule 342 (UnannPrimitiveType -> NumericType .)
    ELLIPSIS        reduce using rule 342 (UnannPrimitiveType -> NumericType .)
    THIS            reduce using rule 342 (UnannPrimitiveType -> NumericType .)


state 535

    (343) UnannPrimitiveType -> BOOLEAN .

    ATRATE          reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    LBRACE          reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    IDENT           reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    ELLIPSIS        reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    THIS            reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)


state 536

    (344) UnannReferenceType -> UnannClassOrInterfaceType .
    (354) UnannArrayType -> UnannClassOrInterfaceType . Dims
    (350) UnannClassType -> UnannClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           reduce using rule 344 (UnannReferenceType -> UnannClassOrInterfaceType .)
    THIS            reduce using rule 344 (UnannReferenceType -> UnannClassOrInterfaceType .)
    ELLIPSIS        reduce using rule 344 (UnannReferenceType -> UnannClassOrInterfaceType .)
    PERIOD          shift and go to state 708
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 344 (UnannReferenceType -> UnannClassOrInterfaceType .) ]

    Dims                           shift and go to state 707
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 537

    (345) UnannReferenceType -> UnannTypeVariable .
    (355) UnannArrayType -> UnannTypeVariable . Dims
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    IDENT           reduce using rule 345 (UnannReferenceType -> UnannTypeVariable .)
    THIS            reduce using rule 345 (UnannReferenceType -> UnannTypeVariable .)
    ELLIPSIS        reduce using rule 345 (UnannReferenceType -> UnannTypeVariable .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 345 (UnannReferenceType -> UnannTypeVariable .) ]

    Dims                           shift and go to state 709
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 538

    (346) UnannReferenceType -> UnannArrayType .

    IDENT           reduce using rule 346 (UnannReferenceType -> UnannArrayType .)
    THIS            reduce using rule 346 (UnannReferenceType -> UnannArrayType .)
    ATRATE          reduce using rule 346 (UnannReferenceType -> UnannArrayType .)
    ELLIPSIS        reduce using rule 346 (UnannReferenceType -> UnannArrayType .)


state 539

    (347) UnannClassOrInterfaceType -> UnannClassType .
    (351) UnannInterfaceType -> UnannClassType .

  ! reduce/reduce conflict for PERIOD resolved using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for ATRATE resolved using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for LBRACE resolved using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for IDENT resolved using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for THIS resolved using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
  ! reduce/reduce conflict for ELLIPSIS resolved using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    PERIOD          reduce using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    ATRATE          reduce using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    LBRACE          reduce using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    IDENT           reduce using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    THIS            reduce using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    ELLIPSIS        reduce using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)

  ! PERIOD          [ reduce using rule 351 (UnannInterfaceType -> UnannClassType .) ]
  ! ATRATE          [ reduce using rule 351 (UnannInterfaceType -> UnannClassType .) ]
  ! LBRACE          [ reduce using rule 351 (UnannInterfaceType -> UnannClassType .) ]
  ! IDENT           [ reduce using rule 351 (UnannInterfaceType -> UnannClassType .) ]
  ! THIS            [ reduce using rule 351 (UnannInterfaceType -> UnannClassType .) ]
  ! ELLIPSIS        [ reduce using rule 351 (UnannInterfaceType -> UnannClassType .) ]


state 540

    (348) UnannClassOrInterfaceType -> UnannInterfaceType .

    PERIOD          reduce using rule 348 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    ATRATE          reduce using rule 348 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    LBRACE          reduce using rule 348 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    IDENT           reduce using rule 348 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    THIS            reduce using rule 348 (UnannClassOrInterfaceType -> UnannInterfaceType .)
    ELLIPSIS        reduce using rule 348 (UnannClassOrInterfaceType -> UnannInterfaceType .)


state 541

    (352) UnannTypeVariable -> IDENT .
    (349) UnannClassType -> IDENT . ZooTypeArguments
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! reduce/reduce conflict for ATRATE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for ELLIPSIS resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for THIS resolved using rule 1 (empty -> .)
    LSS             shift and go to state 280
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)

  ! ATRATE          [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]
  ! LBRACE          [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]
  ! IDENT           [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]
  ! ELLIPSIS        [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]
  ! THIS            [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]

    ZooTypeArguments               shift and go to state 710
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 542

    (358) MethodDeclaration -> MethodModifierS MethodHeader . MethodBody
    (401) MethodBody -> . Block
    (402) MethodBody -> . SEMICOLON
    (493) Block -> . LBRACE ZooBlockStatements RBRACE

    SEMICOLON       shift and go to state 713
    LBRACE          shift and go to state 299

    MethodBody                     shift and go to state 711
    Block                          shift and go to state 712

state 543

    (371) MethodHeader -> Result . MethodDeclarator ZooThrows
    (377) MethodDeclarator -> . IDENT LPAREN ZooFormalParameterList RPAREN ZooDims

    IDENT           shift and go to state 715

    MethodDeclarator               shift and go to state 714

state 544

    (372) MethodHeader -> TypeParameters . AnnotationS Result MethodDeclarator ZooThrows
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    VOID            reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 716
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 545

    (373) Result -> UnannType .

    IDENT           reduce using rule 373 (Result -> UnannType .)


state 546

    (374) Result -> VOID .

    IDENT           reduce using rule 374 (Result -> VOID .)


state 547

    (405) ConstructorModifierS -> ConstructorModifier ConstructorModifierS .

    LSS             reduce using rule 405 (ConstructorModifierS -> ConstructorModifier ConstructorModifierS .)
    IDENT           reduce using rule 405 (ConstructorModifierS -> ConstructorModifier ConstructorModifierS .)


state 548

    (406) ConstructorModifierS -> empty .

    LSS             reduce using rule 406 (ConstructorModifierS -> empty .)
    IDENT           reduce using rule 406 (ConstructorModifierS -> empty .)


state 549

    (408) ConstructorModifier -> Annotation .

    PUBLIC          reduce using rule 408 (ConstructorModifier -> Annotation .)
    PROTECTED       reduce using rule 408 (ConstructorModifier -> Annotation .)
    PRIVATE         reduce using rule 408 (ConstructorModifier -> Annotation .)
    ATRATE          reduce using rule 408 (ConstructorModifier -> Annotation .)
    LSS             reduce using rule 408 (ConstructorModifier -> Annotation .)
    IDENT           reduce using rule 408 (ConstructorModifier -> Annotation .)


state 550

    (409) ConstructorModifier -> PUBLIC .

    PUBLIC          reduce using rule 409 (ConstructorModifier -> PUBLIC .)
    PROTECTED       reduce using rule 409 (ConstructorModifier -> PUBLIC .)
    PRIVATE         reduce using rule 409 (ConstructorModifier -> PUBLIC .)
    ATRATE          reduce using rule 409 (ConstructorModifier -> PUBLIC .)
    LSS             reduce using rule 409 (ConstructorModifier -> PUBLIC .)
    IDENT           reduce using rule 409 (ConstructorModifier -> PUBLIC .)


state 551

    (410) ConstructorModifier -> PROTECTED .

    PUBLIC          reduce using rule 410 (ConstructorModifier -> PROTECTED .)
    PROTECTED       reduce using rule 410 (ConstructorModifier -> PROTECTED .)
    PRIVATE         reduce using rule 410 (ConstructorModifier -> PROTECTED .)
    ATRATE          reduce using rule 410 (ConstructorModifier -> PROTECTED .)
    LSS             reduce using rule 410 (ConstructorModifier -> PROTECTED .)
    IDENT           reduce using rule 410 (ConstructorModifier -> PROTECTED .)


state 552

    (411) ConstructorModifier -> PRIVATE .

    PUBLIC          reduce using rule 411 (ConstructorModifier -> PRIVATE .)
    PROTECTED       reduce using rule 411 (ConstructorModifier -> PRIVATE .)
    PRIVATE         reduce using rule 411 (ConstructorModifier -> PRIVATE .)
    ATRATE          reduce using rule 411 (ConstructorModifier -> PRIVATE .)
    LSS             reduce using rule 411 (ConstructorModifier -> PRIVATE .)
    IDENT           reduce using rule 411 (ConstructorModifier -> PRIVATE .)


state 553

    (320) FieldModifierS -> FieldModifier FieldModifierS .

    BOOLEAN         reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    IDENT           reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    BYTE            reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    SHORT           reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    INT             reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    LONG            reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    CHAR            reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    FLOAT           reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)
    DOUBLE          reduce using rule 320 (FieldModifierS -> FieldModifier FieldModifierS .)


state 554

    (321) FieldModifierS -> empty .

    BOOLEAN         reduce using rule 321 (FieldModifierS -> empty .)
    IDENT           reduce using rule 321 (FieldModifierS -> empty .)
    BYTE            reduce using rule 321 (FieldModifierS -> empty .)
    SHORT           reduce using rule 321 (FieldModifierS -> empty .)
    INT             reduce using rule 321 (FieldModifierS -> empty .)
    LONG            reduce using rule 321 (FieldModifierS -> empty .)
    CHAR            reduce using rule 321 (FieldModifierS -> empty .)
    FLOAT           reduce using rule 321 (FieldModifierS -> empty .)
    DOUBLE          reduce using rule 321 (FieldModifierS -> empty .)


state 555

    (323) FieldModifier -> Annotation .

    PUBLIC          reduce using rule 323 (FieldModifier -> Annotation .)
    PROTECTED       reduce using rule 323 (FieldModifier -> Annotation .)
    PRIVATE         reduce using rule 323 (FieldModifier -> Annotation .)
    STATIC          reduce using rule 323 (FieldModifier -> Annotation .)
    FINAL           reduce using rule 323 (FieldModifier -> Annotation .)
    TRANSIENT       reduce using rule 323 (FieldModifier -> Annotation .)
    VOLATILE        reduce using rule 323 (FieldModifier -> Annotation .)
    ATRATE          reduce using rule 323 (FieldModifier -> Annotation .)
    BOOLEAN         reduce using rule 323 (FieldModifier -> Annotation .)
    IDENT           reduce using rule 323 (FieldModifier -> Annotation .)
    BYTE            reduce using rule 323 (FieldModifier -> Annotation .)
    SHORT           reduce using rule 323 (FieldModifier -> Annotation .)
    INT             reduce using rule 323 (FieldModifier -> Annotation .)
    LONG            reduce using rule 323 (FieldModifier -> Annotation .)
    CHAR            reduce using rule 323 (FieldModifier -> Annotation .)
    FLOAT           reduce using rule 323 (FieldModifier -> Annotation .)
    DOUBLE          reduce using rule 323 (FieldModifier -> Annotation .)


state 556

    (324) FieldModifier -> PUBLIC .

    PUBLIC          reduce using rule 324 (FieldModifier -> PUBLIC .)
    PROTECTED       reduce using rule 324 (FieldModifier -> PUBLIC .)
    PRIVATE         reduce using rule 324 (FieldModifier -> PUBLIC .)
    STATIC          reduce using rule 324 (FieldModifier -> PUBLIC .)
    FINAL           reduce using rule 324 (FieldModifier -> PUBLIC .)
    TRANSIENT       reduce using rule 324 (FieldModifier -> PUBLIC .)
    VOLATILE        reduce using rule 324 (FieldModifier -> PUBLIC .)
    ATRATE          reduce using rule 324 (FieldModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 324 (FieldModifier -> PUBLIC .)
    IDENT           reduce using rule 324 (FieldModifier -> PUBLIC .)
    BYTE            reduce using rule 324 (FieldModifier -> PUBLIC .)
    SHORT           reduce using rule 324 (FieldModifier -> PUBLIC .)
    INT             reduce using rule 324 (FieldModifier -> PUBLIC .)
    LONG            reduce using rule 324 (FieldModifier -> PUBLIC .)
    CHAR            reduce using rule 324 (FieldModifier -> PUBLIC .)
    FLOAT           reduce using rule 324 (FieldModifier -> PUBLIC .)
    DOUBLE          reduce using rule 324 (FieldModifier -> PUBLIC .)


state 557

    (325) FieldModifier -> PROTECTED .

    PUBLIC          reduce using rule 325 (FieldModifier -> PROTECTED .)
    PROTECTED       reduce using rule 325 (FieldModifier -> PROTECTED .)
    PRIVATE         reduce using rule 325 (FieldModifier -> PROTECTED .)
    STATIC          reduce using rule 325 (FieldModifier -> PROTECTED .)
    FINAL           reduce using rule 325 (FieldModifier -> PROTECTED .)
    TRANSIENT       reduce using rule 325 (FieldModifier -> PROTECTED .)
    VOLATILE        reduce using rule 325 (FieldModifier -> PROTECTED .)
    ATRATE          reduce using rule 325 (FieldModifier -> PROTECTED .)
    BOOLEAN         reduce using rule 325 (FieldModifier -> PROTECTED .)
    IDENT           reduce using rule 325 (FieldModifier -> PROTECTED .)
    BYTE            reduce using rule 325 (FieldModifier -> PROTECTED .)
    SHORT           reduce using rule 325 (FieldModifier -> PROTECTED .)
    INT             reduce using rule 325 (FieldModifier -> PROTECTED .)
    LONG            reduce using rule 325 (FieldModifier -> PROTECTED .)
    CHAR            reduce using rule 325 (FieldModifier -> PROTECTED .)
    FLOAT           reduce using rule 325 (FieldModifier -> PROTECTED .)
    DOUBLE          reduce using rule 325 (FieldModifier -> PROTECTED .)


state 558

    (326) FieldModifier -> PRIVATE .

    PUBLIC          reduce using rule 326 (FieldModifier -> PRIVATE .)
    PROTECTED       reduce using rule 326 (FieldModifier -> PRIVATE .)
    PRIVATE         reduce using rule 326 (FieldModifier -> PRIVATE .)
    STATIC          reduce using rule 326 (FieldModifier -> PRIVATE .)
    FINAL           reduce using rule 326 (FieldModifier -> PRIVATE .)
    TRANSIENT       reduce using rule 326 (FieldModifier -> PRIVATE .)
    VOLATILE        reduce using rule 326 (FieldModifier -> PRIVATE .)
    ATRATE          reduce using rule 326 (FieldModifier -> PRIVATE .)
    BOOLEAN         reduce using rule 326 (FieldModifier -> PRIVATE .)
    IDENT           reduce using rule 326 (FieldModifier -> PRIVATE .)
    BYTE            reduce using rule 326 (FieldModifier -> PRIVATE .)
    SHORT           reduce using rule 326 (FieldModifier -> PRIVATE .)
    INT             reduce using rule 326 (FieldModifier -> PRIVATE .)
    LONG            reduce using rule 326 (FieldModifier -> PRIVATE .)
    CHAR            reduce using rule 326 (FieldModifier -> PRIVATE .)
    FLOAT           reduce using rule 326 (FieldModifier -> PRIVATE .)
    DOUBLE          reduce using rule 326 (FieldModifier -> PRIVATE .)


state 559

    (327) FieldModifier -> STATIC .

    PUBLIC          reduce using rule 327 (FieldModifier -> STATIC .)
    PROTECTED       reduce using rule 327 (FieldModifier -> STATIC .)
    PRIVATE         reduce using rule 327 (FieldModifier -> STATIC .)
    STATIC          reduce using rule 327 (FieldModifier -> STATIC .)
    FINAL           reduce using rule 327 (FieldModifier -> STATIC .)
    TRANSIENT       reduce using rule 327 (FieldModifier -> STATIC .)
    VOLATILE        reduce using rule 327 (FieldModifier -> STATIC .)
    ATRATE          reduce using rule 327 (FieldModifier -> STATIC .)
    BOOLEAN         reduce using rule 327 (FieldModifier -> STATIC .)
    IDENT           reduce using rule 327 (FieldModifier -> STATIC .)
    BYTE            reduce using rule 327 (FieldModifier -> STATIC .)
    SHORT           reduce using rule 327 (FieldModifier -> STATIC .)
    INT             reduce using rule 327 (FieldModifier -> STATIC .)
    LONG            reduce using rule 327 (FieldModifier -> STATIC .)
    CHAR            reduce using rule 327 (FieldModifier -> STATIC .)
    FLOAT           reduce using rule 327 (FieldModifier -> STATIC .)
    DOUBLE          reduce using rule 327 (FieldModifier -> STATIC .)


state 560

    (328) FieldModifier -> FINAL .

    PUBLIC          reduce using rule 328 (FieldModifier -> FINAL .)
    PROTECTED       reduce using rule 328 (FieldModifier -> FINAL .)
    PRIVATE         reduce using rule 328 (FieldModifier -> FINAL .)
    STATIC          reduce using rule 328 (FieldModifier -> FINAL .)
    FINAL           reduce using rule 328 (FieldModifier -> FINAL .)
    TRANSIENT       reduce using rule 328 (FieldModifier -> FINAL .)
    VOLATILE        reduce using rule 328 (FieldModifier -> FINAL .)
    ATRATE          reduce using rule 328 (FieldModifier -> FINAL .)
    BOOLEAN         reduce using rule 328 (FieldModifier -> FINAL .)
    IDENT           reduce using rule 328 (FieldModifier -> FINAL .)
    BYTE            reduce using rule 328 (FieldModifier -> FINAL .)
    SHORT           reduce using rule 328 (FieldModifier -> FINAL .)
    INT             reduce using rule 328 (FieldModifier -> FINAL .)
    LONG            reduce using rule 328 (FieldModifier -> FINAL .)
    CHAR            reduce using rule 328 (FieldModifier -> FINAL .)
    FLOAT           reduce using rule 328 (FieldModifier -> FINAL .)
    DOUBLE          reduce using rule 328 (FieldModifier -> FINAL .)


state 561

    (356) MethodModifierS -> MethodModifier MethodModifierS .

    VOID            reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    LSS             reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    BOOLEAN         reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    IDENT           reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    BYTE            reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    SHORT           reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    INT             reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    LONG            reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    CHAR            reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    FLOAT           reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)
    DOUBLE          reduce using rule 356 (MethodModifierS -> MethodModifier MethodModifierS .)


state 562

    (357) MethodModifierS -> empty .

    VOID            reduce using rule 357 (MethodModifierS -> empty .)
    LSS             reduce using rule 357 (MethodModifierS -> empty .)
    BOOLEAN         reduce using rule 357 (MethodModifierS -> empty .)
    IDENT           reduce using rule 357 (MethodModifierS -> empty .)
    BYTE            reduce using rule 357 (MethodModifierS -> empty .)
    SHORT           reduce using rule 357 (MethodModifierS -> empty .)
    INT             reduce using rule 357 (MethodModifierS -> empty .)
    LONG            reduce using rule 357 (MethodModifierS -> empty .)
    CHAR            reduce using rule 357 (MethodModifierS -> empty .)
    FLOAT           reduce using rule 357 (MethodModifierS -> empty .)
    DOUBLE          reduce using rule 357 (MethodModifierS -> empty .)


state 563

    (359) MethodModifier -> Annotation .

    PUBLIC          reduce using rule 359 (MethodModifier -> Annotation .)
    PROTECTED       reduce using rule 359 (MethodModifier -> Annotation .)
    PRIVATE         reduce using rule 359 (MethodModifier -> Annotation .)
    ABSTRACT        reduce using rule 359 (MethodModifier -> Annotation .)
    STATIC          reduce using rule 359 (MethodModifier -> Annotation .)
    FINAL           reduce using rule 359 (MethodModifier -> Annotation .)
    SYNCHRONIZED    reduce using rule 359 (MethodModifier -> Annotation .)
    NATIVE          reduce using rule 359 (MethodModifier -> Annotation .)
    STRICTFP        reduce using rule 359 (MethodModifier -> Annotation .)
    ATRATE          reduce using rule 359 (MethodModifier -> Annotation .)
    VOID            reduce using rule 359 (MethodModifier -> Annotation .)
    LSS             reduce using rule 359 (MethodModifier -> Annotation .)
    BOOLEAN         reduce using rule 359 (MethodModifier -> Annotation .)
    IDENT           reduce using rule 359 (MethodModifier -> Annotation .)
    BYTE            reduce using rule 359 (MethodModifier -> Annotation .)
    SHORT           reduce using rule 359 (MethodModifier -> Annotation .)
    INT             reduce using rule 359 (MethodModifier -> Annotation .)
    LONG            reduce using rule 359 (MethodModifier -> Annotation .)
    CHAR            reduce using rule 359 (MethodModifier -> Annotation .)
    FLOAT           reduce using rule 359 (MethodModifier -> Annotation .)
    DOUBLE          reduce using rule 359 (MethodModifier -> Annotation .)


state 564

    (360) MethodModifier -> PUBLIC .

    PUBLIC          reduce using rule 360 (MethodModifier -> PUBLIC .)
    PROTECTED       reduce using rule 360 (MethodModifier -> PUBLIC .)
    PRIVATE         reduce using rule 360 (MethodModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 360 (MethodModifier -> PUBLIC .)
    STATIC          reduce using rule 360 (MethodModifier -> PUBLIC .)
    FINAL           reduce using rule 360 (MethodModifier -> PUBLIC .)
    SYNCHRONIZED    reduce using rule 360 (MethodModifier -> PUBLIC .)
    NATIVE          reduce using rule 360 (MethodModifier -> PUBLIC .)
    STRICTFP        reduce using rule 360 (MethodModifier -> PUBLIC .)
    ATRATE          reduce using rule 360 (MethodModifier -> PUBLIC .)
    VOID            reduce using rule 360 (MethodModifier -> PUBLIC .)
    LSS             reduce using rule 360 (MethodModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 360 (MethodModifier -> PUBLIC .)
    IDENT           reduce using rule 360 (MethodModifier -> PUBLIC .)
    BYTE            reduce using rule 360 (MethodModifier -> PUBLIC .)
    SHORT           reduce using rule 360 (MethodModifier -> PUBLIC .)
    INT             reduce using rule 360 (MethodModifier -> PUBLIC .)
    LONG            reduce using rule 360 (MethodModifier -> PUBLIC .)
    CHAR            reduce using rule 360 (MethodModifier -> PUBLIC .)
    FLOAT           reduce using rule 360 (MethodModifier -> PUBLIC .)
    DOUBLE          reduce using rule 360 (MethodModifier -> PUBLIC .)


state 565

    (361) MethodModifier -> PROTECTED .

    PUBLIC          reduce using rule 361 (MethodModifier -> PROTECTED .)
    PROTECTED       reduce using rule 361 (MethodModifier -> PROTECTED .)
    PRIVATE         reduce using rule 361 (MethodModifier -> PROTECTED .)
    ABSTRACT        reduce using rule 361 (MethodModifier -> PROTECTED .)
    STATIC          reduce using rule 361 (MethodModifier -> PROTECTED .)
    FINAL           reduce using rule 361 (MethodModifier -> PROTECTED .)
    SYNCHRONIZED    reduce using rule 361 (MethodModifier -> PROTECTED .)
    NATIVE          reduce using rule 361 (MethodModifier -> PROTECTED .)
    STRICTFP        reduce using rule 361 (MethodModifier -> PROTECTED .)
    ATRATE          reduce using rule 361 (MethodModifier -> PROTECTED .)
    VOID            reduce using rule 361 (MethodModifier -> PROTECTED .)
    LSS             reduce using rule 361 (MethodModifier -> PROTECTED .)
    BOOLEAN         reduce using rule 361 (MethodModifier -> PROTECTED .)
    IDENT           reduce using rule 361 (MethodModifier -> PROTECTED .)
    BYTE            reduce using rule 361 (MethodModifier -> PROTECTED .)
    SHORT           reduce using rule 361 (MethodModifier -> PROTECTED .)
    INT             reduce using rule 361 (MethodModifier -> PROTECTED .)
    LONG            reduce using rule 361 (MethodModifier -> PROTECTED .)
    CHAR            reduce using rule 361 (MethodModifier -> PROTECTED .)
    FLOAT           reduce using rule 361 (MethodModifier -> PROTECTED .)
    DOUBLE          reduce using rule 361 (MethodModifier -> PROTECTED .)


state 566

    (362) MethodModifier -> PRIVATE .

    PUBLIC          reduce using rule 362 (MethodModifier -> PRIVATE .)
    PROTECTED       reduce using rule 362 (MethodModifier -> PRIVATE .)
    PRIVATE         reduce using rule 362 (MethodModifier -> PRIVATE .)
    ABSTRACT        reduce using rule 362 (MethodModifier -> PRIVATE .)
    STATIC          reduce using rule 362 (MethodModifier -> PRIVATE .)
    FINAL           reduce using rule 362 (MethodModifier -> PRIVATE .)
    SYNCHRONIZED    reduce using rule 362 (MethodModifier -> PRIVATE .)
    NATIVE          reduce using rule 362 (MethodModifier -> PRIVATE .)
    STRICTFP        reduce using rule 362 (MethodModifier -> PRIVATE .)
    ATRATE          reduce using rule 362 (MethodModifier -> PRIVATE .)
    VOID            reduce using rule 362 (MethodModifier -> PRIVATE .)
    LSS             reduce using rule 362 (MethodModifier -> PRIVATE .)
    BOOLEAN         reduce using rule 362 (MethodModifier -> PRIVATE .)
    IDENT           reduce using rule 362 (MethodModifier -> PRIVATE .)
    BYTE            reduce using rule 362 (MethodModifier -> PRIVATE .)
    SHORT           reduce using rule 362 (MethodModifier -> PRIVATE .)
    INT             reduce using rule 362 (MethodModifier -> PRIVATE .)
    LONG            reduce using rule 362 (MethodModifier -> PRIVATE .)
    CHAR            reduce using rule 362 (MethodModifier -> PRIVATE .)
    FLOAT           reduce using rule 362 (MethodModifier -> PRIVATE .)
    DOUBLE          reduce using rule 362 (MethodModifier -> PRIVATE .)


state 567

    (363) MethodModifier -> ABSTRACT .

    PUBLIC          reduce using rule 363 (MethodModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 363 (MethodModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 363 (MethodModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 363 (MethodModifier -> ABSTRACT .)
    STATIC          reduce using rule 363 (MethodModifier -> ABSTRACT .)
    FINAL           reduce using rule 363 (MethodModifier -> ABSTRACT .)
    SYNCHRONIZED    reduce using rule 363 (MethodModifier -> ABSTRACT .)
    NATIVE          reduce using rule 363 (MethodModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 363 (MethodModifier -> ABSTRACT .)
    ATRATE          reduce using rule 363 (MethodModifier -> ABSTRACT .)
    VOID            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    LSS             reduce using rule 363 (MethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 363 (MethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 363 (MethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 363 (MethodModifier -> ABSTRACT .)
    INT             reduce using rule 363 (MethodModifier -> ABSTRACT .)
    LONG            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 363 (MethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 363 (MethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 363 (MethodModifier -> ABSTRACT .)


state 568

    (364) MethodModifier -> STATIC .

    PUBLIC          reduce using rule 364 (MethodModifier -> STATIC .)
    PROTECTED       reduce using rule 364 (MethodModifier -> STATIC .)
    PRIVATE         reduce using rule 364 (MethodModifier -> STATIC .)
    ABSTRACT        reduce using rule 364 (MethodModifier -> STATIC .)
    STATIC          reduce using rule 364 (MethodModifier -> STATIC .)
    FINAL           reduce using rule 364 (MethodModifier -> STATIC .)
    SYNCHRONIZED    reduce using rule 364 (MethodModifier -> STATIC .)
    NATIVE          reduce using rule 364 (MethodModifier -> STATIC .)
    STRICTFP        reduce using rule 364 (MethodModifier -> STATIC .)
    ATRATE          reduce using rule 364 (MethodModifier -> STATIC .)
    VOID            reduce using rule 364 (MethodModifier -> STATIC .)
    LSS             reduce using rule 364 (MethodModifier -> STATIC .)
    BOOLEAN         reduce using rule 364 (MethodModifier -> STATIC .)
    IDENT           reduce using rule 364 (MethodModifier -> STATIC .)
    BYTE            reduce using rule 364 (MethodModifier -> STATIC .)
    SHORT           reduce using rule 364 (MethodModifier -> STATIC .)
    INT             reduce using rule 364 (MethodModifier -> STATIC .)
    LONG            reduce using rule 364 (MethodModifier -> STATIC .)
    CHAR            reduce using rule 364 (MethodModifier -> STATIC .)
    FLOAT           reduce using rule 364 (MethodModifier -> STATIC .)
    DOUBLE          reduce using rule 364 (MethodModifier -> STATIC .)


state 569

    (365) MethodModifier -> FINAL .

    PUBLIC          reduce using rule 365 (MethodModifier -> FINAL .)
    PROTECTED       reduce using rule 365 (MethodModifier -> FINAL .)
    PRIVATE         reduce using rule 365 (MethodModifier -> FINAL .)
    ABSTRACT        reduce using rule 365 (MethodModifier -> FINAL .)
    STATIC          reduce using rule 365 (MethodModifier -> FINAL .)
    FINAL           reduce using rule 365 (MethodModifier -> FINAL .)
    SYNCHRONIZED    reduce using rule 365 (MethodModifier -> FINAL .)
    NATIVE          reduce using rule 365 (MethodModifier -> FINAL .)
    STRICTFP        reduce using rule 365 (MethodModifier -> FINAL .)
    ATRATE          reduce using rule 365 (MethodModifier -> FINAL .)
    VOID            reduce using rule 365 (MethodModifier -> FINAL .)
    LSS             reduce using rule 365 (MethodModifier -> FINAL .)
    BOOLEAN         reduce using rule 365 (MethodModifier -> FINAL .)
    IDENT           reduce using rule 365 (MethodModifier -> FINAL .)
    BYTE            reduce using rule 365 (MethodModifier -> FINAL .)
    SHORT           reduce using rule 365 (MethodModifier -> FINAL .)
    INT             reduce using rule 365 (MethodModifier -> FINAL .)
    LONG            reduce using rule 365 (MethodModifier -> FINAL .)
    CHAR            reduce using rule 365 (MethodModifier -> FINAL .)
    FLOAT           reduce using rule 365 (MethodModifier -> FINAL .)
    DOUBLE          reduce using rule 365 (MethodModifier -> FINAL .)


state 570

    (368) MethodModifier -> STRICTFP .

    PUBLIC          reduce using rule 368 (MethodModifier -> STRICTFP .)
    PROTECTED       reduce using rule 368 (MethodModifier -> STRICTFP .)
    PRIVATE         reduce using rule 368 (MethodModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 368 (MethodModifier -> STRICTFP .)
    STATIC          reduce using rule 368 (MethodModifier -> STRICTFP .)
    FINAL           reduce using rule 368 (MethodModifier -> STRICTFP .)
    SYNCHRONIZED    reduce using rule 368 (MethodModifier -> STRICTFP .)
    NATIVE          reduce using rule 368 (MethodModifier -> STRICTFP .)
    STRICTFP        reduce using rule 368 (MethodModifier -> STRICTFP .)
    ATRATE          reduce using rule 368 (MethodModifier -> STRICTFP .)
    VOID            reduce using rule 368 (MethodModifier -> STRICTFP .)
    LSS             reduce using rule 368 (MethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 368 (MethodModifier -> STRICTFP .)
    IDENT           reduce using rule 368 (MethodModifier -> STRICTFP .)
    BYTE            reduce using rule 368 (MethodModifier -> STRICTFP .)
    SHORT           reduce using rule 368 (MethodModifier -> STRICTFP .)
    INT             reduce using rule 368 (MethodModifier -> STRICTFP .)
    LONG            reduce using rule 368 (MethodModifier -> STRICTFP .)
    CHAR            reduce using rule 368 (MethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 368 (MethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 368 (MethodModifier -> STRICTFP .)


state 571

    (305) COMMAInterfaceTypeS -> COMMA InterfaceType . COMMAInterfaceTypeS
    (462) ClassOrInterfaceType -> InterfaceType .
    (305) COMMAInterfaceTypeS -> . COMMA InterfaceType COMMAInterfaceTypeS
    (306) COMMAInterfaceTypeS -> . empty
    (1) empty -> .

    PERIOD          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)
    COMMA           shift and go to state 332
    LBRACE          reduce using rule 1 (empty -> .)

    COMMAInterfaceTypeS            shift and go to state 717
    empty                          shift and go to state 333

state 572

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces . InterfaceBody
    (29) InterfaceBody -> . LBRACE InterfaceMemberDeclarationS RBRACE

    LBRACE          shift and go to state 719

    InterfaceBody                  shift and go to state 718

state 573

    (17) ZooExtendsInterfaces -> ExtendsInterfaces .

    LBRACE          reduce using rule 17 (ZooExtendsInterfaces -> ExtendsInterfaces .)


state 574

    (18) ZooExtendsInterfaces -> empty .

    LBRACE          reduce using rule 18 (ZooExtendsInterfaces -> empty .)


state 575

    (28) ExtendsInterfaces -> EXTENDS . InterfaceTypeList
    (307) InterfaceTypeList -> . InterfaceType COMMAInterfaceTypeS
    (465) InterfaceType -> . ClassType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    InterfaceTypeList              shift and go to state 720
    InterfaceType                  shift and go to state 187
    ClassType                      shift and go to state 188
    AnnotationS                    shift and go to state 88
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 576

    (53) AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .

    SEMICOLON       reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    PUBLIC          reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    PROTECTED       reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    PRIVATE         reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    ABSTRACT        reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    STATIC          reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    FINAL           reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    STRICTFP        reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    EXTENDS         reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    ATRATE          reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    CLASS           reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    ENUM            reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    IMPLEMENTS      reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    LBRACE          reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    INTERFACE       reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    $end            reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    TRANSIENT       reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    VOLATILE        reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    SYNCHRONIZED    reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    NATIVE          reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    LSS             reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    IDENT           reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    BOOLEAN         reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    BYTE            reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    SHORT           reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    INT             reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    LONG            reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    CHAR            reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    FLOAT           reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    DOUBLE          reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    VOID            reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    RBRACE          reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)
    DEFAULT         reduce using rule 53 (AnnotationTypeDeclaration -> InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody .)


state 577

    (54) AnnotationTypeBody -> LBRACE . AnnotationTypeMemberDeclarationS RBRACE
    (55) AnnotationTypeMemberDeclarationS -> . AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS
    (56) AnnotationTypeMemberDeclarationS -> . empty
    (57) AnnotationTypeMemberDeclaration -> . AnnotationTypeElementDeclaration
    (58) AnnotationTypeMemberDeclaration -> . ConstantDeclaration
    (59) AnnotationTypeMemberDeclaration -> . ClassDeclaration
    (60) AnnotationTypeMemberDeclaration -> . InterfaceDeclaration
    (61) AnnotationTypeMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (62) AnnotationTypeElementDeclaration -> . AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (67) AnnotationTypeElementModifierS -> . AnnotationTypeElementModifier AnnotationTypeElementModifierS
    (68) AnnotationTypeElementModifierS -> . empty
    (38) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (39) ConstantModifierS -> . empty
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (69) AnnotationTypeElementModifier -> . Annotation
    (70) AnnotationTypeElementModifier -> . PUBLIC
    (71) AnnotationTypeElementModifier -> . ABSTRACT
    (40) ConstantModifier -> . Annotation
    (41) ConstantModifier -> . PUBLIC
    (42) ConstantModifier -> . STATIC
    (43) ConstantModifier -> . FINAL
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 728
    RBRACE          reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 734
    ABSTRACT        shift and go to state 735
    STATIC          shift and go to state 736
    FINAL           shift and go to state 737
    PROTECTED       shift and go to state 46
    PRIVATE         shift and go to state 47
    STRICTFP        shift and go to state 51
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationTypeMemberDeclarationS shift and go to state 721
    AnnotationTypeMemberDeclaration shift and go to state 722
    empty                          shift and go to state 723
    AnnotationTypeElementDeclaration shift and go to state 724
    ConstantDeclaration            shift and go to state 725
    ClassDeclaration               shift and go to state 726
    InterfaceDeclaration           shift and go to state 727
    AnnotationTypeElementModifierS shift and go to state 729
    ConstantModifierS              shift and go to state 730
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    AnnotationTypeElementModifier  shift and go to state 731
    ConstantModifier               shift and go to state 732
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 733
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 578

    (464) ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT . ZooTypeArguments
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for LSS resolved as shift
    LSS             shift and go to state 280
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

  ! LSS             [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 738
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 579

    (266) SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .

    IMPORT          reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    SEMICOLON       reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    PUBLIC          reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    PROTECTED       reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    PRIVATE         reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    ABSTRACT        reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    STATIC          reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    FINAL           reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    STRICTFP        reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    EXTENDS         reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    ATRATE          reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    CLASS           reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    ENUM            reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    IMPLEMENTS      reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    LBRACE          reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    INTERFACE       reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)
    $end            reduce using rule 266 (SingleStaticImportDeclaration -> IMPORT STATIC TypeName PERIOD IDENT SEMICOLON .)


state 580

    (267) StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .

    IMPORT          reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    SEMICOLON       reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    PUBLIC          reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    PROTECTED       reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    PRIVATE         reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    ABSTRACT        reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    STATIC          reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    FINAL           reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    STRICTFP        reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    EXTENDS         reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    ATRATE          reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    CLASS           reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    ENUM            reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    IMPLEMENTS      reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    LBRACE          reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    INTERFACE       reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)
    $end            reduce using rule 267 (StaticImportOnDemandDeclaration -> IMPORT STATIC TypeName PERIOD MUL SEMICOLON .)


state 581

    (135) FieldAccess -> TypeName PERIOD SUPER PERIOD . IDENT
    (143) MethodInvocation -> TypeName PERIOD SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 739
    LSS             shift and go to state 280

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 740
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 582

    (151) MethodReference -> TypeName PERIOD SUPER COLON_SEP . ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 741
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 583

    (139) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 742


state 584

    (112) ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .

    LBRACK          reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    PERIOD          reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    COLON_SEP       reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    INC             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    DEC             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    MUL             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    QUO             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    REM             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    ADD             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SUB             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SHL             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SHR             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SHR_UN          reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LSS             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    GTR             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LEQ             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    GEQ             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    INSTANCEOF      reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    EQL             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    NEQ             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    AND             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    XOR             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    OR              reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LAND            reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    QUES            reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    LOR             reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    RPAREN          reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    COMMA           reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    RBRACE          reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    COLON           reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    RBRACK          reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)
    SEMICOLON       reduce using rule 112 (ClassLiteral -> TypeName LBRACKRBRACKS PERIOD CLASS .)


state 585

    (116) LBRACKRBRACKS -> LBRACK RBRACK LBRACKRBRACKS .

    PERIOD          reduce using rule 116 (LBRACKRBRACKS -> LBRACK RBRACK LBRACKRBRACKS .)


state 586

    (166) LambdaParameters -> LPAREN ZooFormalParameterList RPAREN .

    ARROW           reduce using rule 166 (LambdaParameters -> LPAREN ZooFormalParameterList RPAREN .)


state 587

    (167) LambdaParameters -> LPAREN InferredFormalParameterList RPAREN .

    ARROW           reduce using rule 167 (LambdaParameters -> LPAREN InferredFormalParameterList RPAREN .)


state 588

    (168) InferredFormalParameterList -> IDENT COMMAIDENTS .

    RPAREN          reduce using rule 168 (InferredFormalParameterList -> IDENT COMMAIDENTS .)


state 589

    (169) COMMAIDENTS -> COMMA . IDENT COMMAIDENTS

    IDENT           shift and go to state 743


state 590

    (170) COMMAIDENTS -> empty .

    RPAREN          reduce using rule 170 (COMMAIDENTS -> empty .)


state 591

    (447) PrimitiveType -> AnnotationS NumericType .
    (342) UnannPrimitiveType -> NumericType .

  ! reduce/reduce conflict for ATRATE resolved using rule 342 (UnannPrimitiveType -> NumericType .)
  ! reduce/reduce conflict for LBRACE resolved using rule 342 (UnannPrimitiveType -> NumericType .)
    RPAREN          reduce using rule 447 (PrimitiveType -> AnnotationS NumericType .)
    ATRATE          reduce using rule 342 (UnannPrimitiveType -> NumericType .)
    LBRACE          reduce using rule 342 (UnannPrimitiveType -> NumericType .)
    IDENT           reduce using rule 342 (UnannPrimitiveType -> NumericType .)
    THIS            reduce using rule 342 (UnannPrimitiveType -> NumericType .)

  ! ATRATE          [ reduce using rule 447 (PrimitiveType -> AnnotationS NumericType .) ]
  ! LBRACE          [ reduce using rule 447 (PrimitiveType -> AnnotationS NumericType .) ]


state 592

    (448) PrimitiveType -> AnnotationS BOOLEAN .
    (343) UnannPrimitiveType -> BOOLEAN .

  ! reduce/reduce conflict for ATRATE resolved using rule 343 (UnannPrimitiveType -> BOOLEAN .)
  ! reduce/reduce conflict for LBRACE resolved using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 448 (PrimitiveType -> AnnotationS BOOLEAN .)
    ATRATE          reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    LBRACE          reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    IDENT           reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)
    THIS            reduce using rule 343 (UnannPrimitiveType -> BOOLEAN .)

  ! ATRATE          [ reduce using rule 448 (PrimitiveType -> AnnotationS BOOLEAN .) ]
  ! LBRACE          [ reduce using rule 448 (PrimitiveType -> AnnotationS BOOLEAN .) ]


state 593

    (466) TypeVariable -> AnnotationS IDENT .
    (463) ClassType -> AnnotationS IDENT . ZooTypeArguments
    (352) UnannTypeVariable -> IDENT .
    (349) UnannClassType -> IDENT . ZooTypeArguments
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! reduce/reduce conflict for ATRATE resolved using rule 352 (UnannTypeVariable -> IDENT .)
  ! reduce/reduce conflict for LBRACE resolved using rule 352 (UnannTypeVariable -> IDENT .)
  ! reduce/reduce conflict for COLON_SEP resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for ATRATE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LBRACE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for THIS resolved using rule 1 (empty -> .)
    LSS             shift and go to state 280
    COLON_SEP       reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)

  ! ATRATE          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! LBRACE          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! COLON_SEP       [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! AND             [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! RPAREN          [ reduce using rule 466 (TypeVariable -> AnnotationS IDENT .) ]
  ! ATRATE          [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]
  ! LBRACE          [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]
  ! IDENT           [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]
  ! THIS            [ reduce using rule 352 (UnannTypeVariable -> IDENT .) ]

    ZooTypeArguments               shift and go to state 744
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 594

    (394) ReceiverParameter -> AnnotationS UnannType . ZooIDENTPERIOD THIS
    (392) ZooIDENTPERIOD -> . IDENT PERIOD
    (393) ZooIDENTPERIOD -> . empty
    (1) empty -> .

    IDENT           shift and go to state 746
    THIS            reduce using rule 1 (empty -> .)

    ZooIDENTPERIOD                 shift and go to state 745
    empty                          shift and go to state 747

state 595

    (384) FormalParameters -> ReceiverParameter COMMAFormalParameterS .

    COMMA           reduce using rule 384 (FormalParameters -> ReceiverParameter COMMAFormalParameterS .)


state 596

    (381) COMMAFormalParameterS -> COMMA . FormalParameter COMMAFormalParameterS
    (387) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (385) ZooVariableModifier -> . VariableModifier
    (386) ZooVariableModifier -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 362
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    FormalParameter                shift and go to state 748
    ZooVariableModifier            shift and go to state 360
    VariableModifier               shift and go to state 749
    empty                          shift and go to state 750
    Annotation                     shift and go to state 604
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 597

    (382) COMMAFormalParameterS -> empty .

    COMMA           reduce using rule 382 (COMMAFormalParameterS -> empty .)


state 598

    (379) FormalParameterList -> FormalParameters COMMA . LastFormalParameter
    (390) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (391) LastFormalParameter -> . FormalParameter
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (387) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (385) ZooVariableModifier -> . VariableModifier
    (386) ZooVariableModifier -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 362
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    LastFormalParameter            shift and go to state 751
    VariableModifierS              shift and go to state 359
    FormalParameter                shift and go to state 752
    VariableModifier               shift and go to state 361
    empty                          shift and go to state 753
    ZooVariableModifier            shift and go to state 360
    Annotation                     shift and go to state 604
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 599

    (383) FormalParameters -> FormalParameter COMMAFormalParameterS .

    COMMA           reduce using rule 383 (FormalParameters -> FormalParameter COMMAFormalParameterS .)


state 600

    (390) LastFormalParameter -> VariableModifierS UnannType . AnnotationS ELLIPSIS VariableDeclaratorId
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    ELLIPSIS        reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 754
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 601

    (387) FormalParameter -> ZooVariableModifier UnannType . VariableDeclaratorId
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclaratorId           shift and go to state 755

state 602

    (504) VariableModifierS -> VariableModifier VariableModifierS .

    BOOLEAN         reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    IDENT           reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    BYTE            reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    SHORT           reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    INT             reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    LONG            reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    CHAR            reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    FLOAT           reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)
    DOUBLE          reduce using rule 504 (VariableModifierS -> VariableModifier VariableModifierS .)


state 603

    (505) VariableModifierS -> empty .

    BOOLEAN         reduce using rule 505 (VariableModifierS -> empty .)
    IDENT           reduce using rule 505 (VariableModifierS -> empty .)
    BYTE            reduce using rule 505 (VariableModifierS -> empty .)
    SHORT           reduce using rule 505 (VariableModifierS -> empty .)
    INT             reduce using rule 505 (VariableModifierS -> empty .)
    LONG            reduce using rule 505 (VariableModifierS -> empty .)
    CHAR            reduce using rule 505 (VariableModifierS -> empty .)
    FLOAT           reduce using rule 505 (VariableModifierS -> empty .)
    DOUBLE          reduce using rule 505 (VariableModifierS -> empty .)


state 604

    (388) VariableModifier -> Annotation .

    FINAL           reduce using rule 388 (VariableModifier -> Annotation .)
    ATRATE          reduce using rule 388 (VariableModifier -> Annotation .)
    BOOLEAN         reduce using rule 388 (VariableModifier -> Annotation .)
    IDENT           reduce using rule 388 (VariableModifier -> Annotation .)
    BYTE            reduce using rule 388 (VariableModifier -> Annotation .)
    SHORT           reduce using rule 388 (VariableModifier -> Annotation .)
    INT             reduce using rule 388 (VariableModifier -> Annotation .)
    LONG            reduce using rule 388 (VariableModifier -> Annotation .)
    CHAR            reduce using rule 388 (VariableModifier -> Annotation .)
    FLOAT           reduce using rule 388 (VariableModifier -> Annotation .)
    DOUBLE          reduce using rule 388 (VariableModifier -> Annotation .)


state 605

    (241) CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .

    MUL             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    QUO             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    REM             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    ADD             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SUB             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SHL             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SHR             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SHR_UN          reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LSS             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GTR             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LEQ             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GEQ             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    INSTANCEOF      reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    EQL             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    NEQ             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    AND             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    XOR             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    OR              reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LAND            reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    QUES            reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LOR             reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RPAREN          reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COMMA           reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACE          reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COLON           reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACK          reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SEMICOLON       reduce using rule 241 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)


state 606

    (242) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN . UnaryExpressionNotPlusMinus
    (243) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN . LambdaExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 756
    IDENT           shift and go to state 212
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ReferenceType                  shift and go to state 119
    UnaryExpressionNotPlusMinus    shift and go to state 757
    LambdaExpression               shift and go to state 758
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    LambdaParameters               shift and go to state 213
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 607

    (244) AdditionalBoundS -> AdditionalBound AdditionalBoundS .

    RPAREN          reduce using rule 244 (AdditionalBoundS -> AdditionalBound AdditionalBoundS .)
    COMMA           reduce using rule 244 (AdditionalBoundS -> AdditionalBound AdditionalBoundS .)
    GTR             reduce using rule 244 (AdditionalBoundS -> AdditionalBound AdditionalBoundS .)


state 608

    (481) AdditionalBound -> AND InterfaceType .
    (462) ClassOrInterfaceType -> InterfaceType .

    AND             reduce using rule 481 (AdditionalBound -> AND InterfaceType .)
    RPAREN          reduce using rule 481 (AdditionalBound -> AND InterfaceType .)
    COMMA           reduce using rule 481 (AdditionalBound -> AND InterfaceType .)
    GTR             reduce using rule 481 (AdditionalBound -> AND InterfaceType .)
    PERIOD          reduce using rule 462 (ClassOrInterfaceType -> InterfaceType .)


state 609

    (164) LambdaExpression -> LambdaParameters ARROW LambdaBody .

    RPAREN          reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    COLON           reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    RBRACK          reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    COMMA           reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    MUL             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    QUO             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    REM             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    ADD             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SUB             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SHL             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SHR             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SHR_UN          reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LSS             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    GTR             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LEQ             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    GEQ             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    INSTANCEOF      reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    EQL             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    NEQ             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    AND             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    XOR             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    OR              reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LAND            reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    QUES            reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    LOR             reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    RBRACE          reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)
    SEMICOLON       reduce using rule 164 (LambdaExpression -> LambdaParameters ARROW LambdaBody .)


state 610

    (171) LambdaBody -> Expression .

    MUL             reduce using rule 171 (LambdaBody -> Expression .)
    QUO             reduce using rule 171 (LambdaBody -> Expression .)
    REM             reduce using rule 171 (LambdaBody -> Expression .)
    ADD             reduce using rule 171 (LambdaBody -> Expression .)
    SUB             reduce using rule 171 (LambdaBody -> Expression .)
    SHL             reduce using rule 171 (LambdaBody -> Expression .)
    SHR             reduce using rule 171 (LambdaBody -> Expression .)
    SHR_UN          reduce using rule 171 (LambdaBody -> Expression .)
    LSS             reduce using rule 171 (LambdaBody -> Expression .)
    GTR             reduce using rule 171 (LambdaBody -> Expression .)
    LEQ             reduce using rule 171 (LambdaBody -> Expression .)
    GEQ             reduce using rule 171 (LambdaBody -> Expression .)
    INSTANCEOF      reduce using rule 171 (LambdaBody -> Expression .)
    EQL             reduce using rule 171 (LambdaBody -> Expression .)
    NEQ             reduce using rule 171 (LambdaBody -> Expression .)
    AND             reduce using rule 171 (LambdaBody -> Expression .)
    XOR             reduce using rule 171 (LambdaBody -> Expression .)
    OR              reduce using rule 171 (LambdaBody -> Expression .)
    LAND            reduce using rule 171 (LambdaBody -> Expression .)
    QUES            reduce using rule 171 (LambdaBody -> Expression .)
    LOR             reduce using rule 171 (LambdaBody -> Expression .)
    RPAREN          reduce using rule 171 (LambdaBody -> Expression .)
    COMMA           reduce using rule 171 (LambdaBody -> Expression .)
    RBRACE          reduce using rule 171 (LambdaBody -> Expression .)
    COLON           reduce using rule 171 (LambdaBody -> Expression .)
    RBRACK          reduce using rule 171 (LambdaBody -> Expression .)
    SEMICOLON       reduce using rule 171 (LambdaBody -> Expression .)


state 611

    (172) LambdaBody -> Block .

    MUL             reduce using rule 172 (LambdaBody -> Block .)
    QUO             reduce using rule 172 (LambdaBody -> Block .)
    REM             reduce using rule 172 (LambdaBody -> Block .)
    ADD             reduce using rule 172 (LambdaBody -> Block .)
    SUB             reduce using rule 172 (LambdaBody -> Block .)
    SHL             reduce using rule 172 (LambdaBody -> Block .)
    SHR             reduce using rule 172 (LambdaBody -> Block .)
    SHR_UN          reduce using rule 172 (LambdaBody -> Block .)
    LSS             reduce using rule 172 (LambdaBody -> Block .)
    GTR             reduce using rule 172 (LambdaBody -> Block .)
    LEQ             reduce using rule 172 (LambdaBody -> Block .)
    GEQ             reduce using rule 172 (LambdaBody -> Block .)
    INSTANCEOF      reduce using rule 172 (LambdaBody -> Block .)
    EQL             reduce using rule 172 (LambdaBody -> Block .)
    NEQ             reduce using rule 172 (LambdaBody -> Block .)
    AND             reduce using rule 172 (LambdaBody -> Block .)
    XOR             reduce using rule 172 (LambdaBody -> Block .)
    OR              reduce using rule 172 (LambdaBody -> Block .)
    LAND            reduce using rule 172 (LambdaBody -> Block .)
    QUES            reduce using rule 172 (LambdaBody -> Block .)
    LOR             reduce using rule 172 (LambdaBody -> Block .)
    RPAREN          reduce using rule 172 (LambdaBody -> Block .)
    COMMA           reduce using rule 172 (LambdaBody -> Block .)
    RBRACE          reduce using rule 172 (LambdaBody -> Block .)
    COLON           reduce using rule 172 (LambdaBody -> Block .)
    RBRACK          reduce using rule 172 (LambdaBody -> Block .)
    SEMICOLON       reduce using rule 172 (LambdaBody -> Block .)


state 612

    (175) Assignment -> LeftHandSide AssignmentOperator Expression .

    RPAREN          reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    COLON           reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    RBRACK          reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    COMMA           reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SEMICOLON       reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    MUL             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    QUO             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    REM             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    ADD             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SUB             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SHL             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SHR             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    SHR_UN          reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LSS             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    GTR             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LEQ             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    GEQ             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    INSTANCEOF      reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    EQL             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    NEQ             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    AND             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    XOR             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    OR              reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LAND            reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    QUES            reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    LOR             reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)
    RBRACE          reduce using rule 175 (Assignment -> LeftHandSide AssignmentOperator Expression .)


state 613

    (80) COMMAElementValuePairS -> COMMA ElementValuePair COMMAElementValuePairS .

    RPAREN          reduce using rule 80 (COMMAElementValuePairS -> COMMA ElementValuePair COMMAElementValuePairS .)


state 614

    (192) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON . ConditionalExpression
    (193) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON . LambdaExpression
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 761
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ConditionalOrExpression        shift and go to state 109
    ConditionalExpression          shift and go to state 759
    LambdaExpression               shift and go to state 760
    LambdaParameters               shift and go to state 213
    ConditionalAndExpression       shift and go to state 112
    InclusiveOrExpression          shift and go to state 113
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 615

    (86) ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .

    RPAREN          reduce using rule 86 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)
    COMMA           reduce using rule 86 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)
    RBRACE          reduce using rule 86 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)
    SEMICOLON       reduce using rule 86 (ElementValueArrayInitializer -> LBRACE ZooElementValueList ZooCOMMA RBRACE .)


state 616

    (90) COMMAElementValueS -> COMMA ElementValue . COMMAElementValueS
    (90) COMMAElementValueS -> . COMMA ElementValue COMMAElementValueS
    (91) COMMAElementValueS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 394
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAElementValueS             shift and go to state 762
    empty                          shift and go to state 395

state 617

    (148) MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 148 (MethodReference -> ReferenceType COLON_SEP ZooTypeArguments IDENT .)


state 618

    (141) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 763


state 619

    (149) MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 149 (MethodReference -> Primary COLON_SEP ZooTypeArguments IDENT .)


state 620

    (140) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 764


state 621

    (136) ArrayAccess -> ExpressionName LBRACK Expression RBRACK .

    LBRACK          reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    INC             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    DEC             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    MUL             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    QUO             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    REM             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    ADD             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SUB             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHL             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LSS             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    GTR             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LEQ             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    GEQ             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    EQL             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    NEQ             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    AND             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    XOR             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    OR              reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LAND            reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    QUES            reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    LOR             reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    REM_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SHR_UN_ASSIGN   reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    COMMA           reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    COLON           reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 136 (ArrayAccess -> ExpressionName LBRACK Expression RBRACK .)


state 622

    (147) MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 147 (MethodReference -> ExpressionName COLON_SEP ZooTypeArguments IDENT .)


state 623

    (470) Dims -> AnnotationS LBRACE RBRACE . AnnotationSLBRACERBRACES
    (471) AnnotationSLBRACERBRACES -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (472) AnnotationSLBRACERBRACES -> . empty
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    COLON_SEP       reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    ASSIGN          reduce using rule 1 (empty -> .)
    THROWS          reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 765
    AnnotationSLBRACERBRACES       shift and go to state 766
    empty                          shift and go to state 767
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 624

    (137) ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .

    LBRACK          reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    INC             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DEC             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUO             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    REM             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHL             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LSS             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GTR             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LEQ             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GEQ             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    EQL             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    NEQ             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    XOR             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR              reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LAND            reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUES            reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LOR             reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ASSIGN          reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUO_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    REM_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHL_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SHR_UN_ASSIGN   reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COMMA           reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COLON           reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 137 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)


state 625

    (154) ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .

    PERIOD          reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    COLON_SEP       reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    INC             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    DEC             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    MUL             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    QUO             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    REM             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    ADD             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SUB             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SHL             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SHR             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SHR_UN          reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LSS             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    GTR             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LEQ             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    GEQ             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    INSTANCEOF      reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    EQL             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    NEQ             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    AND             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    XOR             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    OR              reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LAND            reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    QUES            reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    LOR             reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    RPAREN          reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    COMMA           reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    RBRACE          reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    COLON           reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    RBRACK          reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)
    SEMICOLON       reduce using rule 154 (ArrayCreationExpression -> NEW PrimitiveType DimExprs ZooDims .)


state 626

    (63) ZooDims -> Dims .

    PERIOD          reduce using rule 63 (ZooDims -> Dims .)
    COLON_SEP       reduce using rule 63 (ZooDims -> Dims .)
    INC             reduce using rule 63 (ZooDims -> Dims .)
    DEC             reduce using rule 63 (ZooDims -> Dims .)
    MUL             reduce using rule 63 (ZooDims -> Dims .)
    QUO             reduce using rule 63 (ZooDims -> Dims .)
    REM             reduce using rule 63 (ZooDims -> Dims .)
    ADD             reduce using rule 63 (ZooDims -> Dims .)
    SUB             reduce using rule 63 (ZooDims -> Dims .)
    SHL             reduce using rule 63 (ZooDims -> Dims .)
    SHR             reduce using rule 63 (ZooDims -> Dims .)
    SHR_UN          reduce using rule 63 (ZooDims -> Dims .)
    LSS             reduce using rule 63 (ZooDims -> Dims .)
    GTR             reduce using rule 63 (ZooDims -> Dims .)
    LEQ             reduce using rule 63 (ZooDims -> Dims .)
    GEQ             reduce using rule 63 (ZooDims -> Dims .)
    INSTANCEOF      reduce using rule 63 (ZooDims -> Dims .)
    EQL             reduce using rule 63 (ZooDims -> Dims .)
    NEQ             reduce using rule 63 (ZooDims -> Dims .)
    AND             reduce using rule 63 (ZooDims -> Dims .)
    XOR             reduce using rule 63 (ZooDims -> Dims .)
    OR              reduce using rule 63 (ZooDims -> Dims .)
    LAND            reduce using rule 63 (ZooDims -> Dims .)
    QUES            reduce using rule 63 (ZooDims -> Dims .)
    LOR             reduce using rule 63 (ZooDims -> Dims .)
    RPAREN          reduce using rule 63 (ZooDims -> Dims .)
    COMMA           reduce using rule 63 (ZooDims -> Dims .)
    RBRACE          reduce using rule 63 (ZooDims -> Dims .)
    COLON           reduce using rule 63 (ZooDims -> Dims .)
    RBRACK          reduce using rule 63 (ZooDims -> Dims .)
    SEMICOLON       reduce using rule 63 (ZooDims -> Dims .)
    ASSIGN          reduce using rule 63 (ZooDims -> Dims .)
    THROWS          reduce using rule 63 (ZooDims -> Dims .)
    LBRACE          reduce using rule 63 (ZooDims -> Dims .)
    DEFAULT         reduce using rule 63 (ZooDims -> Dims .)


state 627

    (64) ZooDims -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for LBRACE resolved using rule 64 (ZooDims -> empty .)
    PERIOD          reduce using rule 64 (ZooDims -> empty .)
    COLON_SEP       reduce using rule 64 (ZooDims -> empty .)
    INC             reduce using rule 64 (ZooDims -> empty .)
    DEC             reduce using rule 64 (ZooDims -> empty .)
    MUL             reduce using rule 64 (ZooDims -> empty .)
    QUO             reduce using rule 64 (ZooDims -> empty .)
    REM             reduce using rule 64 (ZooDims -> empty .)
    ADD             reduce using rule 64 (ZooDims -> empty .)
    SUB             reduce using rule 64 (ZooDims -> empty .)
    SHL             reduce using rule 64 (ZooDims -> empty .)
    SHR             reduce using rule 64 (ZooDims -> empty .)
    SHR_UN          reduce using rule 64 (ZooDims -> empty .)
    LSS             reduce using rule 64 (ZooDims -> empty .)
    GTR             reduce using rule 64 (ZooDims -> empty .)
    LEQ             reduce using rule 64 (ZooDims -> empty .)
    GEQ             reduce using rule 64 (ZooDims -> empty .)
    INSTANCEOF      reduce using rule 64 (ZooDims -> empty .)
    EQL             reduce using rule 64 (ZooDims -> empty .)
    NEQ             reduce using rule 64 (ZooDims -> empty .)
    AND             reduce using rule 64 (ZooDims -> empty .)
    XOR             reduce using rule 64 (ZooDims -> empty .)
    OR              reduce using rule 64 (ZooDims -> empty .)
    LAND            reduce using rule 64 (ZooDims -> empty .)
    QUES            reduce using rule 64 (ZooDims -> empty .)
    LOR             reduce using rule 64 (ZooDims -> empty .)
    RPAREN          reduce using rule 64 (ZooDims -> empty .)
    COMMA           reduce using rule 64 (ZooDims -> empty .)
    RBRACE          reduce using rule 64 (ZooDims -> empty .)
    COLON           reduce using rule 64 (ZooDims -> empty .)
    RBRACK          reduce using rule 64 (ZooDims -> empty .)
    SEMICOLON       reduce using rule 64 (ZooDims -> empty .)
    ASSIGN          reduce using rule 64 (ZooDims -> empty .)
    THROWS          reduce using rule 64 (ZooDims -> empty .)
    LBRACE          reduce using rule 64 (ZooDims -> empty .)
    DEFAULT         reduce using rule 64 (ZooDims -> empty .)

  ! LBRACE          [ reduce using rule 126 (AnnotationS -> empty .) ]


state 628

    (156) ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .

    PERIOD          reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    COLON_SEP       reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    INC             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    DEC             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    MUL             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    QUO             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    REM             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    ADD             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SUB             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SHL             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SHR             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SHR_UN          reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LSS             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    GTR             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LEQ             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    GEQ             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    INSTANCEOF      reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    EQL             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    NEQ             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    AND             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    XOR             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    OR              reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LAND            reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    QUES            reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    LOR             reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    RPAREN          reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    COMMA           reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    RBRACE          reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    COLON           reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    RBRACK          reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)
    SEMICOLON       reduce using rule 156 (ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer .)


state 629

    (94) ArrayInitializer -> LBRACE . ZooVariableInitializerList ZooCOMMA RBRACE
    (95) ZooVariableInitializerList -> . VariableInitializerList
    (96) ZooVariableInitializerList -> . empty
    (97) VariableInitializerList -> . VariableInitializer COMMAVariableInitializerS
    (1) empty -> .
    (338) VariableInitializer -> . Expression
    (339) VariableInitializer -> . ArrayInitializer
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (94) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    LBRACE          shift and go to state 629
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooVariableInitializerList     shift and go to state 768
    VariableInitializerList        shift and go to state 769
    empty                          shift and go to state 770
    VariableInitializer            shift and go to state 771
    Expression                     shift and go to state 772
    ArrayInitializer               shift and go to state 773
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 630

    (159) DimExprS -> DimExpr . DimExprS
    (159) DimExprS -> . DimExpr DimExprS
    (160) DimExprS -> . empty
    (161) DimExpr -> . AnnotationS LBRACK Expression RBRACK
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACK          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    DimExpr                        shift and go to state 630
    DimExprS                       shift and go to state 774
    empty                          shift and go to state 632
    AnnotationS                    shift and go to state 633
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 631

    (158) DimExprs -> DimExpr DimExprS .

    ATRATE          reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    LBRACE          reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    PERIOD          reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    COLON_SEP       reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    INC             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    DEC             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    MUL             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    QUO             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    REM             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    ADD             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    SUB             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    SHL             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    SHR             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    SHR_UN          reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    LSS             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    GTR             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    LEQ             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    GEQ             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    INSTANCEOF      reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    EQL             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    NEQ             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    AND             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    XOR             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    OR              reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    LAND            reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    QUES            reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    LOR             reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    RPAREN          reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    COMMA           reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    RBRACE          reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    COLON           reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    RBRACK          reduce using rule 158 (DimExprs -> DimExpr DimExprS .)
    SEMICOLON       reduce using rule 158 (DimExprs -> DimExpr DimExprS .)


state 632

    (160) DimExprS -> empty .
    (126) AnnotationS -> empty .

    ATRATE          reduce using rule 160 (DimExprS -> empty .)
    LBRACE          reduce using rule 160 (DimExprS -> empty .)
    PERIOD          reduce using rule 160 (DimExprS -> empty .)
    COLON_SEP       reduce using rule 160 (DimExprS -> empty .)
    INC             reduce using rule 160 (DimExprS -> empty .)
    DEC             reduce using rule 160 (DimExprS -> empty .)
    MUL             reduce using rule 160 (DimExprS -> empty .)
    QUO             reduce using rule 160 (DimExprS -> empty .)
    REM             reduce using rule 160 (DimExprS -> empty .)
    ADD             reduce using rule 160 (DimExprS -> empty .)
    SUB             reduce using rule 160 (DimExprS -> empty .)
    SHL             reduce using rule 160 (DimExprS -> empty .)
    SHR             reduce using rule 160 (DimExprS -> empty .)
    SHR_UN          reduce using rule 160 (DimExprS -> empty .)
    LSS             reduce using rule 160 (DimExprS -> empty .)
    GTR             reduce using rule 160 (DimExprS -> empty .)
    LEQ             reduce using rule 160 (DimExprS -> empty .)
    GEQ             reduce using rule 160 (DimExprS -> empty .)
    INSTANCEOF      reduce using rule 160 (DimExprS -> empty .)
    EQL             reduce using rule 160 (DimExprS -> empty .)
    NEQ             reduce using rule 160 (DimExprS -> empty .)
    AND             reduce using rule 160 (DimExprS -> empty .)
    XOR             reduce using rule 160 (DimExprS -> empty .)
    OR              reduce using rule 160 (DimExprS -> empty .)
    LAND            reduce using rule 160 (DimExprS -> empty .)
    QUES            reduce using rule 160 (DimExprS -> empty .)
    LOR             reduce using rule 160 (DimExprS -> empty .)
    RPAREN          reduce using rule 160 (DimExprS -> empty .)
    COMMA           reduce using rule 160 (DimExprS -> empty .)
    RBRACE          reduce using rule 160 (DimExprS -> empty .)
    COLON           reduce using rule 160 (DimExprS -> empty .)
    RBRACK          reduce using rule 160 (DimExprS -> empty .)
    SEMICOLON       reduce using rule 160 (DimExprS -> empty .)
    LBRACK          reduce using rule 126 (AnnotationS -> empty .)


state 633

    (161) DimExpr -> AnnotationS . LBRACK Expression RBRACK

    LBRACK          shift and go to state 634


state 634

    (161) DimExpr -> AnnotationS LBRACK . Expression RBRACK
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 173
    Expression                     shift and go to state 775
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 635

    (155) ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .

    PERIOD          reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    COLON_SEP       reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    INC             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    DEC             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    MUL             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    QUO             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    REM             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    ADD             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    SUB             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    SHL             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    SHR             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    SHR_UN          reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    LSS             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    GTR             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    LEQ             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    GEQ             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    INSTANCEOF      reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    EQL             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    NEQ             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    AND             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    XOR             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    OR              reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    LAND            reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    QUES            reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    LOR             reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    RPAREN          reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    COMMA           reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    RBRACE          reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    COLON           reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    RBRACK          reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)
    SEMICOLON       reduce using rule 155 (ArrayCreationExpression -> NEW ClassOrInterfaceType DimExprs ZooDims .)


state 636

    (157) ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .

    PERIOD          reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    COLON_SEP       reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    INC             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    DEC             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    MUL             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    QUO             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    REM             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    ADD             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    SUB             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    SHL             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    SHR             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    SHR_UN          reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    LSS             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    GTR             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    LEQ             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    GEQ             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    INSTANCEOF      reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    EQL             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    NEQ             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    AND             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    XOR             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    OR              reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    LAND            reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    QUES            reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    LOR             reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    RPAREN          reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    COMMA           reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    RBRACE          reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    COLON           reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    RBRACK          reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)
    SEMICOLON       reduce using rule 157 (ArrayCreationExpression -> NEW ClassOrInterfaceType Dims ArrayInitializer .)


state 637

    (121) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN . ZooArgumentList RPAREN ZooClassBody
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooArgumentList                shift and go to state 776
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 638

    (124) ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT . PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond
    (129) PERIODAnnotationSIDENTS -> . PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
    (130) PERIODAnnotationSIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 778
    LSS             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)

    PERIODAnnotationSIDENTS        shift and go to state 777
    empty                          shift and go to state 779

state 639

    (482) TypeArguments -> LSS TypeArgumentList GTR .

    ATRATE          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    IDENT           reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    IMPLEMENTS      reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    LBRACE          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    PERIOD          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    COMMA           reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    LBRACK          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    AND             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    RPAREN          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    GTR             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    OR              reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    NEW             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    COLON_SEP       reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    SEMICOLON       reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    LSS             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    LEQ             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    GEQ             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    INSTANCEOF      reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    EQL             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    NEQ             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    XOR             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    LAND            reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    QUES            reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    LOR             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    RBRACE          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    COLON           reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    MUL             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    QUO             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    REM             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    ADD             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    SUB             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    SHL             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    SHR             reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    SHR_UN          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    RBRACK          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    ELLIPSIS        reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    THIS            reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    LPAREN          reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)
    SUPER           reduce using rule 482 (TypeArguments -> LSS TypeArgumentList GTR .)


state 640

    (483) TypeArgumentList -> TypeArgument COMMATypeArgumentS .

    GTR             reduce using rule 483 (TypeArgumentList -> TypeArgument COMMATypeArgumentS .)


state 641

    (484) COMMATypeArgumentS -> COMMA . TypeArgument COMMATypeArgumentS
    (486) TypeArgument -> . ReferenceType
    (487) TypeArgument -> . Wildcard
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (488) Wildcard -> . AnnotationS QUES ZooWildcardBounds
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    QUES            reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeArgument                   shift and go to state 780
    ReferenceType                  shift and go to state 441
    Wildcard                       shift and go to state 442
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 408
    AnnotationS                    shift and go to state 443
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    PrimitiveType                  shift and go to state 138
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 642

    (485) COMMATypeArgumentS -> empty .

    GTR             reduce using rule 485 (COMMATypeArgumentS -> empty .)


state 643

    (488) Wildcard -> AnnotationS QUES . ZooWildcardBounds
    (489) ZooWildcardBounds -> . WildcardBounds
    (490) ZooWildcardBounds -> . empty
    (491) WildcardBounds -> . EXTENDS ReferenceType
    (492) WildcardBounds -> . SUPER ReferenceType
    (1) empty -> .

    EXTENDS         shift and go to state 784
    SUPER           shift and go to state 785
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    ZooWildcardBounds              shift and go to state 781
    WildcardBounds                 shift and go to state 782
    empty                          shift and go to state 783

state 644

    (113) ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .

    LBRACK          reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    PERIOD          reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    COLON_SEP       reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    INC             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    DEC             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    MUL             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    QUO             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    REM             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    ADD             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SUB             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SHL             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SHR             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SHR_UN          reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LSS             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    GTR             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LEQ             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    GEQ             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    INSTANCEOF      reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    EQL             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    NEQ             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    AND             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    XOR             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    OR              reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LAND            reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    QUES            reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    LOR             reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    RPAREN          reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    COMMA           reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    RBRACE          reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    COLON           reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    RBRACK          reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)
    SEMICOLON       reduce using rule 113 (ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS .)


state 645

    (114) ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .

    LBRACK          reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    PERIOD          reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    COLON_SEP       reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    INC             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    DEC             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    MUL             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    QUO             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    REM             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    ADD             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SUB             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SHL             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SHR             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SHR_UN          reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LSS             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    GTR             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LEQ             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    GEQ             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    INSTANCEOF      reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    EQL             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    NEQ             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    AND             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    XOR             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    OR              reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LAND            reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    QUES            reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    LOR             reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    RPAREN          reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    COMMA           reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    RBRACE          reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    COLON           reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    RBRACK          reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)
    SEMICOLON       reduce using rule 114 (ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS .)


state 646

    (142) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 786


state 647

    (150) MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 150 (MethodReference -> SUPER COLON_SEP ZooTypeArguments IDENT .)


state 648

    (138) MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 138 (MethodInvocation -> MethodName LPAREN ZooArgumentList RPAREN .)


state 649

    (144) ArgumentList -> Expression COMMAExpressionS .

    RPAREN          reduce using rule 144 (ArgumentList -> Expression COMMAExpressionS .)


state 650

    (145) COMMAExpressionS -> COMMA . Expression COMMAExpressionS
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 787
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 651

    (146) COMMAExpressionS -> empty .

    RPAREN          reduce using rule 146 (COMMAExpressionS -> empty .)


state 652

    (152) MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .

    LBRACK          reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    PERIOD          reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    COLON_SEP       reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    INC             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    DEC             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    MUL             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    QUO             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    REM             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    ADD             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SUB             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SHL             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SHR             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SHR_UN          reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LSS             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    GTR             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LEQ             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    GEQ             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    INSTANCEOF      reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    EQL             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    NEQ             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    AND             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    XOR             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    OR              reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LAND            reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    QUES            reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    LOR             reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    RPAREN          reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    COMMA           reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    RBRACE          reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    COLON           reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    RBRACK          reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)
    SEMICOLON       reduce using rule 152 (MethodReference -> ClassType COLON_SEP ZooTypeArguments NEW .)


state 653

    (299) TypeParameters -> LSS TypeParameterList GTR .

    SEMICOLON       reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    PUBLIC          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    PROTECTED       reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    PRIVATE         reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    ABSTRACT        reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    STATIC          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    FINAL           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    STRICTFP        reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    EXTENDS         reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    ATRATE          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    CLASS           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    ENUM            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    IMPLEMENTS      reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    LBRACE          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    INTERFACE       reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    $end            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    TRANSIENT       reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    VOLATILE        reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    SYNCHRONIZED    reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    NATIVE          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    LSS             reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    IDENT           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    BOOLEAN         reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    BYTE            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    SHORT           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    INT             reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    LONG            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    CHAR            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    FLOAT           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    DOUBLE          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    VOID            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    RBRACE          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    IF              reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    WHILE           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    ASSERT          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    SWITCH          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    DO              reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    BREAK           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    CONTINUE        reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    RETURN          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    THROW           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    TRY             reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    FOR             reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    INC             reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    DEC             reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    SUPER           reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    NEW             reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    THIS            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    LPAREN          reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    BOOL_LIT        reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    NULL_LIT        reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    DECIMAL_LIT     reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    HEX_LIT         reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    OCTAL_LIT       reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    BINARY_LIT      reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    FLOAT_DEC_LIT   reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    FLOAT_HEX_LIT   reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    STRING_LIT      reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    CHAR_LIT        reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    CASE            reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)
    DEFAULT         reduce using rule 299 (TypeParameters -> LSS TypeParameterList GTR .)


state 654

    (302) TypeParameterList -> TypeParameter COMMMATypeParameterS .

    GTR             reduce using rule 302 (TypeParameterList -> TypeParameter COMMMATypeParameterS .)


state 655

    (300) COMMMATypeParameterS -> COMMA . TypeParameter COMMMATypeParameterS
    (473) TypeParameter -> . TypeParameterModifierS IDENT ZooTypeBound
    (474) TypeParameterModifierS -> . TypeParameterModifier TypeParameterModifierS
    (475) TypeParameterModifierS -> . empty
    (478) TypeParameterModifier -> . Annotation
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeParameter                  shift and go to state 788
    TypeParameterModifierS         shift and go to state 458
    TypeParameterModifier          shift and go to state 459
    empty                          shift and go to state 460
    Annotation                     shift and go to state 461
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 656

    (301) COMMMATypeParameterS -> empty .

    GTR             reduce using rule 301 (COMMMATypeParameterS -> empty .)


state 657

    (473) TypeParameter -> TypeParameterModifierS IDENT . ZooTypeBound
    (476) ZooTypeBound -> . TypeBound
    (477) ZooTypeBound -> . empty
    (479) TypeBound -> . EXTENDS TypeVariable
    (480) TypeBound -> . EXTENDS ClassOrInterfaceType AdditionalBoundS
    (1) empty -> .

    EXTENDS         shift and go to state 792
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    ZooTypeBound                   shift and go to state 789
    TypeBound                      shift and go to state 790
    empty                          shift and go to state 791

state 658

    (474) TypeParameterModifierS -> TypeParameterModifier TypeParameterModifierS .

    IDENT           reduce using rule 474 (TypeParameterModifierS -> TypeParameterModifier TypeParameterModifierS .)


state 659

    (432) EnumBody -> LBRACE ZooEnumConstantList . ZooCOMMA ZooEnumBodyDeclarations RBRACE
    (428) ZooCOMMA -> . COMMA
    (429) ZooCOMMA -> . empty
    (1) empty -> .

    COMMA           shift and go to state 391
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

    ZooCOMMA                       shift and go to state 793
    empty                          shift and go to state 392

state 660

    (426) ZooEnumConstantList -> EnumConstantList .

    COMMA           reduce using rule 426 (ZooEnumConstantList -> EnumConstantList .)
    SEMICOLON       reduce using rule 426 (ZooEnumConstantList -> EnumConstantList .)
    RBRACE          reduce using rule 426 (ZooEnumConstantList -> EnumConstantList .)


state 661

    (427) ZooEnumConstantList -> empty .
    (438) EnumConstantModifierS -> empty .

    COMMA           reduce using rule 427 (ZooEnumConstantList -> empty .)
    SEMICOLON       reduce using rule 427 (ZooEnumConstantList -> empty .)
    RBRACE          reduce using rule 427 (ZooEnumConstantList -> empty .)
    IDENT           reduce using rule 438 (EnumConstantModifierS -> empty .)


state 662

    (435) EnumConstantList -> EnumConstant . COMMAEnumConstantS
    (433) COMMAEnumConstantS -> . COMMA EnumConstant COMMAEnumConstantS
    (434) COMMAEnumConstantS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 795
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAEnumConstantS             shift and go to state 794
    empty                          shift and go to state 796

state 663

    (436) EnumConstant -> EnumConstantModifierS . IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody

    IDENT           shift and go to state 797


state 664

    (437) EnumConstantModifierS -> EnumConstantModifier . EnumConstantModifierS
    (437) EnumConstantModifierS -> . EnumConstantModifier EnumConstantModifierS
    (438) EnumConstantModifierS -> . empty
    (443) EnumConstantModifier -> . Annotation
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    EnumConstantModifier           shift and go to state 664
    EnumConstantModifierS          shift and go to state 798
    empty                          shift and go to state 799
    Annotation                     shift and go to state 665
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 665

    (443) EnumConstantModifier -> Annotation .

    ATRATE          reduce using rule 443 (EnumConstantModifier -> Annotation .)
    IDENT           reduce using rule 443 (EnumConstantModifier -> Annotation .)


state 666

    (493) Block -> LBRACE ZooBlockStatements RBRACE .

    SEMICOLON       reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    STATIC          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LBRACE          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    PUBLIC          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    PROTECTED       reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    PRIVATE         reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FINAL           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    TRANSIENT       reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    VOLATILE        reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ABSTRACT        reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SYNCHRONIZED    reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NATIVE          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    STRICTFP        reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    EXTENDS         reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ATRATE          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LSS             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    IDENT           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BOOLEAN         reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BYTE            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHORT           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INT             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LONG            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CHAR            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FLOAT           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DOUBLE          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    VOID            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CLASS           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ENUM            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    IMPLEMENTS      reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INTERFACE       reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RBRACE          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    IF              reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    WHILE           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ASSERT          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SWITCH          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DO              reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BREAK           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CONTINUE        reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RETURN          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    THROW           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    TRY             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FOR             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INC             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DEC             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SUPER           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NEW             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    THIS            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LPAREN          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BOOL_LIT        reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NULL_LIT        reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DECIMAL_LIT     reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    HEX_LIT         reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    OCTAL_LIT       reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    BINARY_LIT      reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    STRING_LIT      reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CHAR_LIT        reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    MUL             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    QUO             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    REM             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ADD             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SUB             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHL             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHR             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    SHR_UN          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    GTR             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LEQ             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    GEQ             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    INSTANCEOF      reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    EQL             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    NEQ             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    AND             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    XOR             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    OR              reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LAND            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    QUES            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    LOR             reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RPAREN          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    COMMA           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    COLON           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    RBRACK          reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CASE            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    DEFAULT         reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    CATCH           reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    FINALLY         reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)
    ELSE            reduce using rule 493 (Block -> LBRACE ZooBlockStatements RBRACE .)


state 667

    (497) BlockStatementS -> BlockStatement . BlockStatementS
    (497) BlockStatementS -> . BlockStatement BlockStatementS
    (498) BlockStatementS -> . empty
    (499) BlockStatement -> . LocalVariableDeclarationStatement
    (500) BlockStatement -> . ClassDeclaration
    (501) BlockStatement -> . Statement
    (1) empty -> .
    (502) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (503) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    FINAL           shift and go to state 512
    PUBLIC          shift and go to state 72
    PROTECTED       shift and go to state 73
    PRIVATE         shift and go to state 74
    ABSTRACT        shift and go to state 75
    STATIC          shift and go to state 76
    STRICTFP        shift and go to state 77
    EXTENDS         shift and go to state 52
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    ATRATE          shift and go to state 13
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    BlockStatement                 shift and go to state 667
    BlockStatementS                shift and go to state 800
    empty                          shift and go to state 669
    LocalVariableDeclarationStatement shift and go to state 468
    ClassDeclaration               shift and go to state 469
    Statement                      shift and go to state 470
    LocalVariableDeclaration       shift and go to state 471
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    VariableModifierS              shift and go to state 479
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    VariableModifier               shift and go to state 498
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Annotation                     shift and go to state 511
    ClassType                      shift and go to state 168
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 668

    (496) BlockStatements -> BlockStatement BlockStatementS .

    RBRACE          reduce using rule 496 (BlockStatements -> BlockStatement BlockStatementS .)
    CASE            reduce using rule 496 (BlockStatements -> BlockStatement BlockStatementS .)
    DEFAULT         reduce using rule 496 (BlockStatements -> BlockStatement BlockStatementS .)


state 669

    (498) BlockStatementS -> empty .
    (505) VariableModifierS -> empty .
    (424) ClassModifierS -> empty .
    (286) ZooSuperClass -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 126 (AnnotationS -> empty .)
    RBRACE          reduce using rule 498 (BlockStatementS -> empty .)
    CASE            reduce using rule 498 (BlockStatementS -> empty .)
    DEFAULT         reduce using rule 498 (BlockStatementS -> empty .)
    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 286 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 286 (ZooSuperClass -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)

  ! BOOLEAN         [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 505 (VariableModifierS -> empty .) ]


state 670

    (502) LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .

    IDENT           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    IF              reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    WHILE           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    LBRACE          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SEMICOLON       reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ASSERT          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SWITCH          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DO              reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BREAK           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CONTINUE        reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    RETURN          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SYNCHRONIZED    reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    THROW           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    TRY             reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FOR             reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FINAL           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    PUBLIC          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    PROTECTED       reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    PRIVATE         reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ABSTRACT        reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    STATIC          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    STRICTFP        reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    EXTENDS         reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    INC             reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DEC             reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SUPER           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ATRATE          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    NEW             reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    THIS            reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    LPAREN          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BOOL_LIT        reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    NULL_LIT        reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DECIMAL_LIT     reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    HEX_LIT         reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    OCTAL_LIT       reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BINARY_LIT      reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    STRING_LIT      reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CHAR_LIT        reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BOOLEAN         reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    VOID            reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    BYTE            reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    SHORT           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    INT             reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    LONG            reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CHAR            reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    FLOAT           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DOUBLE          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CLASS           reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    ENUM            reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    IMPLEMENTS      reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    RBRACE          reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    CASE            reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)
    DEFAULT         reduce using rule 502 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON .)


state 671

    (503) LocalVariableDeclaration -> VariableModifierS UnannType . VariableDeclaratorList
    (333) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (336) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclaratorList         shift and go to state 801
    VariableDeclarator             shift and go to state 703
    VariableDeclaratorId           shift and go to state 704

state 672

    (530) LabeledStatement -> IDENT COLON . Statement
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 802
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 673

    (540) IfThenStatement -> IF LPAREN . Expression RPAREN Statement
    (541) IfThenElseStatement -> IF LPAREN . Expression RPAREN StatementNoShortIf ELSE Statement
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 803
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 674

    (557) WhileStatement -> WHILE LPAREN . Expression RPAREN Statement
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 804
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 675

    (532) ExpressionStatement -> StatementExpression SEMICOLON .

    IDENT           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    IF              reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    WHILE           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    LBRACE          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SEMICOLON       reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ASSERT          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SWITCH          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DO              reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BREAK           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CONTINUE        reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    RETURN          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    THROW           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    TRY             reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FOR             reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FINAL           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    PUBLIC          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    PROTECTED       reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    PRIVATE         reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ABSTRACT        reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    STATIC          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    STRICTFP        reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    EXTENDS         reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    INC             reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DEC             reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SUPER           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ATRATE          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    NEW             reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    THIS            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    LPAREN          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BOOL_LIT        reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    NULL_LIT        reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    HEX_LIT         reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    OCTAL_LIT       reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BINARY_LIT      reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    STRING_LIT      reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CHAR_LIT        reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BOOLEAN         reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    VOID            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    BYTE            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    SHORT           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    INT             reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    LONG            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CHAR            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    FLOAT           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DOUBLE          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CLASS           reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ENUM            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    IMPLEMENTS      reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    RBRACE          reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    CASE            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    DEFAULT         reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)
    ELSE            reduce using rule 532 (ExpressionStatement -> StatementExpression SEMICOLON .)


state 676

    (543) AssertStatement -> ASSERT Expression . SEMICOLON
    (544) AssertStatement -> ASSERT Expression . COLON Expression SEMICOLON

    SEMICOLON       shift and go to state 805
    COLON           shift and go to state 806


state 677

    (545) SwitchStatement -> SWITCH LPAREN . Expression RPAREN SwitchBlock
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 807
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 678

    (559) DoStatement -> DO Statement . WHILE LPAREN Expression RPAREN SEMICOLON

    WHILE           shift and go to state 808


state 679

    (580) BreakStatement -> BREAK ZooIDENT . SEMICOLON

    SEMICOLON       shift and go to state 809


state 680

    (581) ZooIDENT -> IDENT .

    SEMICOLON       reduce using rule 581 (ZooIDENT -> IDENT .)


state 681

    (582) ZooIDENT -> empty .

    SEMICOLON       reduce using rule 582 (ZooIDENT -> empty .)


state 682

    (583) ContinueStatement -> CONTINUE ZooIDENT . SEMICOLON

    SEMICOLON       shift and go to state 810


state 683

    (584) ReturnStatement -> RETURN ZooExpression . SEMICOLON

    SEMICOLON       shift and go to state 811


state 684

    (567) ZooExpression -> Expression .

    SEMICOLON       reduce using rule 567 (ZooExpression -> Expression .)


state 685

    (568) ZooExpression -> empty .
    (126) AnnotationS -> empty .

    SEMICOLON       reduce using rule 568 (ZooExpression -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)


state 686

    (586) SynchronizedStatement -> SYNCHRONIZED LPAREN . Expression RPAREN Block
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 812
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 687

    (585) ThrowStatement -> THROW Expression . SEMICOLON

    SEMICOLON       shift and go to state 813


state 688

    (587) TryStatement -> TRY Block . Catches
    (588) TryStatement -> TRY Block . ZooCatches Finally
    (592) Catches -> . CatchClause CatchClauseS
    (590) ZooCatches -> . Catches
    (591) ZooCatches -> . empty
    (595) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block
    (1) empty -> .

    CATCH           shift and go to state 818
    FINALLY         reduce using rule 1 (empty -> .)

    Catches                        shift and go to state 814
    ZooCatches                     shift and go to state 815
    CatchClause                    shift and go to state 816
    empty                          shift and go to state 817

state 689

    (601) TryWithResourcesStatement -> TRY ResourceSpecification . Block ZooCatches ZooFinally
    (493) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 819

state 690

    (606) ResourceSpecification -> LPAREN . ResourceList ZooSEMICOLON RPAREN
    (607) ResourceList -> . Resource SEMICOLONResourceS
    (610) Resource -> . VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 362
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ResourceList                   shift and go to state 820
    Resource                       shift and go to state 821
    VariableModifierS              shift and go to state 822
    VariableModifier               shift and go to state 498
    empty                          shift and go to state 603
    Annotation                     shift and go to state 604
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 691

    (564) BasicForStatement -> FOR LPAREN . ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> FOR LPAREN . VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (569) ZooForInit -> . ForInit
    (570) ZooForInit -> . empty
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (572) ForInit -> . StatementExpressionList
    (573) ForInit -> . LocalVariableDeclaration
    (1) empty -> .
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (575) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (503) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 362
    ATRATE          shift and go to state 13
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    IDENT           shift and go to state 831
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooForInit                     shift and go to state 823
    VariableModifierS              shift and go to state 824
    ForInit                        shift and go to state 825
    empty                          shift and go to state 826
    VariableModifier               shift and go to state 498
    StatementExpressionList        shift and go to state 827
    LocalVariableDeclaration       shift and go to state 828
    Annotation                     shift and go to state 829
    StatementExpression            shift and go to state 830
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    TypeName                       shift and go to state 521
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 692

    (139) MethodInvocation -> TypeName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> TypeName PERIOD . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (135) FieldAccess -> TypeName PERIOD . SUPER PERIOD IDENT
    (105) PrimaryNoNewArray -> TypeName PERIOD . THIS
    (151) MethodReference -> TypeName PERIOD . SUPER COLON_SEP ZooTypeArguments IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    SUPER           shift and go to state 832
    THIS            shift and go to state 343
    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 345
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 693

    (140) MethodInvocation -> ExpressionName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (119) ClassInstanceCreationExpression -> ExpressionName PERIOD . UnqualifiedClassInstanceCreationExpression
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    NEW             shift and go to state 422
    LSS             shift and go to state 280
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 425
    UnqualifiedClassInstanceCreationExpression shift and go to state 424
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 694

    (141) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (120) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> Primary PERIOD . IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 420
    NEW             shift and go to state 422
    LSS             shift and go to state 280

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 421
    UnqualifiedClassInstanceCreationExpression shift and go to state 419
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 695

    (142) MethodInvocation -> SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (134) FieldAccess -> SUPER PERIOD . IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 447
    LSS             shift and go to state 280

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 448
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 696

    (407) ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows . ConstructorBody
    (414) ConstructorBody -> . LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE

    LBRACE          shift and go to state 834

    ConstructorBody                shift and go to state 833

state 697

    (369) ZooThrows -> Throws .

    LBRACE          reduce using rule 369 (ZooThrows -> Throws .)
    SEMICOLON       reduce using rule 369 (ZooThrows -> Throws .)


state 698

    (370) ZooThrows -> empty .

    LBRACE          reduce using rule 370 (ZooThrows -> empty .)
    SEMICOLON       reduce using rule 370 (ZooThrows -> empty .)


state 699

    (395) Throws -> THROWS . ExceptionTypeList
    (398) ExceptionTypeList -> . ExceptionType COMMAExceptionTypeS
    (399) ExceptionType -> . ClassType
    (400) ExceptionType -> . TypeVariable
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (465) InterfaceType -> . ClassType
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ExceptionTypeList              shift and go to state 835
    ExceptionType                  shift and go to state 836
    ClassType                      shift and go to state 837
    TypeVariable                   shift and go to state 838
    AnnotationS                    shift and go to state 839
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    InterfaceType                  shift and go to state 92
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 700

    (412) ConstructorDeclarator -> ZooTypeParameters SimpleTypeName . LPAREN ZooFormalParameterList RPAREN

    LPAREN          shift and go to state 840


state 701

    (413) SimpleTypeName -> IDENT .

    LPAREN          reduce using rule 413 (SimpleTypeName -> IDENT .)


state 702

    (322) FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList . SEMICOLON

    SEMICOLON       shift and go to state 841


state 703

    (333) VariableDeclaratorList -> VariableDeclarator . COMMAVariableDeclaratorS
    (331) COMMAVariableDeclaratorS -> . COMMA VariableDeclarator COMMAVariableDeclaratorS
    (332) COMMAVariableDeclaratorS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 843
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAVariableDeclaratorS       shift and go to state 842
    empty                          shift and go to state 844

state 704

    (336) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (334) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (335) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    ASSIGN          shift and go to state 846
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 845
    empty                          shift and go to state 847

state 705

    (337) VariableDeclaratorId -> IDENT . ZooDims
    (63) ZooDims -> . Dims
    (64) ZooDims -> . empty
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    ASSIGN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 848
    Dims                           shift and go to state 626
    empty                          shift and go to state 627
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 706

    (353) UnannArrayType -> UnannPrimitiveType Dims .

    IDENT           reduce using rule 353 (UnannArrayType -> UnannPrimitiveType Dims .)
    THIS            reduce using rule 353 (UnannArrayType -> UnannPrimitiveType Dims .)
    ATRATE          reduce using rule 353 (UnannArrayType -> UnannPrimitiveType Dims .)
    ELLIPSIS        reduce using rule 353 (UnannArrayType -> UnannPrimitiveType Dims .)


state 707

    (354) UnannArrayType -> UnannClassOrInterfaceType Dims .

    IDENT           reduce using rule 354 (UnannArrayType -> UnannClassOrInterfaceType Dims .)
    THIS            reduce using rule 354 (UnannArrayType -> UnannClassOrInterfaceType Dims .)
    ATRATE          reduce using rule 354 (UnannArrayType -> UnannClassOrInterfaceType Dims .)
    ELLIPSIS        reduce using rule 354 (UnannArrayType -> UnannClassOrInterfaceType Dims .)


state 708

    (350) UnannClassType -> UnannClassOrInterfaceType PERIOD . AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 849
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 709

    (355) UnannArrayType -> UnannTypeVariable Dims .

    IDENT           reduce using rule 355 (UnannArrayType -> UnannTypeVariable Dims .)
    THIS            reduce using rule 355 (UnannArrayType -> UnannTypeVariable Dims .)
    ATRATE          reduce using rule 355 (UnannArrayType -> UnannTypeVariable Dims .)
    ELLIPSIS        reduce using rule 355 (UnannArrayType -> UnannTypeVariable Dims .)


state 710

    (349) UnannClassType -> IDENT ZooTypeArguments .

    PERIOD          reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    IDENT           reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    ELLIPSIS        reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    THIS            reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    OR              reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)


state 711

    (358) MethodDeclaration -> MethodModifierS MethodHeader MethodBody .

    SEMICOLON       reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    STATIC          reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    LBRACE          reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    PUBLIC          reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    PROTECTED       reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    PRIVATE         reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    FINAL           reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    TRANSIENT       reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    VOLATILE        reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    ABSTRACT        reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    SYNCHRONIZED    reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    NATIVE          reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    STRICTFP        reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    EXTENDS         reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    ATRATE          reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    LSS             reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    IDENT           reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    BOOLEAN         reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    BYTE            reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    SHORT           reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    INT             reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    LONG            reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    CHAR            reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    FLOAT           reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    DOUBLE          reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    VOID            reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    CLASS           reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    ENUM            reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    IMPLEMENTS      reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    INTERFACE       reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)
    RBRACE          reduce using rule 358 (MethodDeclaration -> MethodModifierS MethodHeader MethodBody .)


state 712

    (401) MethodBody -> Block .

    SEMICOLON       reduce using rule 401 (MethodBody -> Block .)
    STATIC          reduce using rule 401 (MethodBody -> Block .)
    LBRACE          reduce using rule 401 (MethodBody -> Block .)
    PUBLIC          reduce using rule 401 (MethodBody -> Block .)
    PROTECTED       reduce using rule 401 (MethodBody -> Block .)
    PRIVATE         reduce using rule 401 (MethodBody -> Block .)
    FINAL           reduce using rule 401 (MethodBody -> Block .)
    TRANSIENT       reduce using rule 401 (MethodBody -> Block .)
    VOLATILE        reduce using rule 401 (MethodBody -> Block .)
    ABSTRACT        reduce using rule 401 (MethodBody -> Block .)
    SYNCHRONIZED    reduce using rule 401 (MethodBody -> Block .)
    NATIVE          reduce using rule 401 (MethodBody -> Block .)
    STRICTFP        reduce using rule 401 (MethodBody -> Block .)
    EXTENDS         reduce using rule 401 (MethodBody -> Block .)
    ATRATE          reduce using rule 401 (MethodBody -> Block .)
    LSS             reduce using rule 401 (MethodBody -> Block .)
    IDENT           reduce using rule 401 (MethodBody -> Block .)
    BOOLEAN         reduce using rule 401 (MethodBody -> Block .)
    BYTE            reduce using rule 401 (MethodBody -> Block .)
    SHORT           reduce using rule 401 (MethodBody -> Block .)
    INT             reduce using rule 401 (MethodBody -> Block .)
    LONG            reduce using rule 401 (MethodBody -> Block .)
    CHAR            reduce using rule 401 (MethodBody -> Block .)
    FLOAT           reduce using rule 401 (MethodBody -> Block .)
    DOUBLE          reduce using rule 401 (MethodBody -> Block .)
    VOID            reduce using rule 401 (MethodBody -> Block .)
    CLASS           reduce using rule 401 (MethodBody -> Block .)
    ENUM            reduce using rule 401 (MethodBody -> Block .)
    IMPLEMENTS      reduce using rule 401 (MethodBody -> Block .)
    INTERFACE       reduce using rule 401 (MethodBody -> Block .)
    RBRACE          reduce using rule 401 (MethodBody -> Block .)
    DEFAULT         reduce using rule 401 (MethodBody -> Block .)


state 713

    (402) MethodBody -> SEMICOLON .

    SEMICOLON       reduce using rule 402 (MethodBody -> SEMICOLON .)
    STATIC          reduce using rule 402 (MethodBody -> SEMICOLON .)
    LBRACE          reduce using rule 402 (MethodBody -> SEMICOLON .)
    PUBLIC          reduce using rule 402 (MethodBody -> SEMICOLON .)
    PROTECTED       reduce using rule 402 (MethodBody -> SEMICOLON .)
    PRIVATE         reduce using rule 402 (MethodBody -> SEMICOLON .)
    FINAL           reduce using rule 402 (MethodBody -> SEMICOLON .)
    TRANSIENT       reduce using rule 402 (MethodBody -> SEMICOLON .)
    VOLATILE        reduce using rule 402 (MethodBody -> SEMICOLON .)
    ABSTRACT        reduce using rule 402 (MethodBody -> SEMICOLON .)
    SYNCHRONIZED    reduce using rule 402 (MethodBody -> SEMICOLON .)
    NATIVE          reduce using rule 402 (MethodBody -> SEMICOLON .)
    STRICTFP        reduce using rule 402 (MethodBody -> SEMICOLON .)
    EXTENDS         reduce using rule 402 (MethodBody -> SEMICOLON .)
    ATRATE          reduce using rule 402 (MethodBody -> SEMICOLON .)
    LSS             reduce using rule 402 (MethodBody -> SEMICOLON .)
    IDENT           reduce using rule 402 (MethodBody -> SEMICOLON .)
    BOOLEAN         reduce using rule 402 (MethodBody -> SEMICOLON .)
    BYTE            reduce using rule 402 (MethodBody -> SEMICOLON .)
    SHORT           reduce using rule 402 (MethodBody -> SEMICOLON .)
    INT             reduce using rule 402 (MethodBody -> SEMICOLON .)
    LONG            reduce using rule 402 (MethodBody -> SEMICOLON .)
    CHAR            reduce using rule 402 (MethodBody -> SEMICOLON .)
    FLOAT           reduce using rule 402 (MethodBody -> SEMICOLON .)
    DOUBLE          reduce using rule 402 (MethodBody -> SEMICOLON .)
    VOID            reduce using rule 402 (MethodBody -> SEMICOLON .)
    CLASS           reduce using rule 402 (MethodBody -> SEMICOLON .)
    ENUM            reduce using rule 402 (MethodBody -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 402 (MethodBody -> SEMICOLON .)
    INTERFACE       reduce using rule 402 (MethodBody -> SEMICOLON .)
    RBRACE          reduce using rule 402 (MethodBody -> SEMICOLON .)
    DEFAULT         reduce using rule 402 (MethodBody -> SEMICOLON .)


state 714

    (371) MethodHeader -> Result MethodDeclarator . ZooThrows
    (369) ZooThrows -> . Throws
    (370) ZooThrows -> . empty
    (395) Throws -> . THROWS ExceptionTypeList
    (1) empty -> .

    THROWS          shift and go to state 699
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    ZooThrows                      shift and go to state 850
    Throws                         shift and go to state 697
    empty                          shift and go to state 698

state 715

    (377) MethodDeclarator -> IDENT . LPAREN ZooFormalParameterList RPAREN ZooDims

    LPAREN          shift and go to state 851


state 716

    (372) MethodHeader -> TypeParameters AnnotationS . Result MethodDeclarator ZooThrows
    (373) Result -> . UnannType
    (374) Result -> . VOID
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    VOID            shift and go to state 546
    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    Result                         shift and go to state 852
    UnannType                      shift and go to state 545
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 717

    (305) COMMAInterfaceTypeS -> COMMA InterfaceType COMMAInterfaceTypeS .

    LBRACE          reduce using rule 305 (COMMAInterfaceTypeS -> COMMA InterfaceType COMMAInterfaceTypeS .)


state 718

    (14) NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .

    SEMICOLON       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    PUBLIC          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    PROTECTED       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    PRIVATE         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    ABSTRACT        reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    STATIC          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    FINAL           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    STRICTFP        reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    EXTENDS         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    ATRATE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    CLASS           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    ENUM            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    IMPLEMENTS      reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    LBRACE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    INTERFACE       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    $end            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    TRANSIENT       reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    VOLATILE        reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    SYNCHRONIZED    reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    NATIVE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    LSS             reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    IDENT           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    BOOLEAN         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    BYTE            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    SHORT           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    INT             reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    LONG            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    CHAR            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    FLOAT           reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    DOUBLE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    VOID            reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    RBRACE          reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)
    DEFAULT         reduce using rule 14 (NormalInterfaceDeclaration -> InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody .)


state 719

    (29) InterfaceBody -> LBRACE . InterfaceMemberDeclarationS RBRACE
    (30) InterfaceMemberDeclarationS -> . InterfaceMemberDeclaration InterfaceMemberDeclarationS
    (31) InterfaceMemberDeclarationS -> . empty
    (32) InterfaceMemberDeclaration -> . ConstantDeclaration
    (33) InterfaceMemberDeclaration -> . InterfaceMethodDeclaration
    (34) InterfaceMemberDeclaration -> . ClassDeclaration
    (35) InterfaceMemberDeclaration -> . InterfaceDeclaration
    (36) InterfaceMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (44) InterfaceMethodDeclaration -> . InterfaceMethodModifierS MethodHeader MethodBody
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (38) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (39) ConstantModifierS -> . empty
    (45) InterfaceMethodModifierS -> . InterfaceMethodModifier InterfaceMethodModifierS
    (46) InterfaceMethodModifierS -> . empty
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (40) ConstantModifier -> . Annotation
    (41) ConstantModifier -> . PUBLIC
    (42) ConstantModifier -> . STATIC
    (43) ConstantModifier -> . FINAL
    (47) InterfaceMethodModifier -> . Annotation
    (48) InterfaceMethodModifier -> . PUBLIC
    (49) InterfaceMethodModifier -> . ABSTRACT
    (50) InterfaceMethodModifier -> . DEFAULT
    (51) InterfaceMethodModifier -> . STATIC
    (52) InterfaceMethodModifier -> . STRICTFP
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 860
    RBRACE          reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 864
    STATIC          shift and go to state 865
    FINAL           shift and go to state 737
    ABSTRACT        shift and go to state 866
    DEFAULT         shift and go to state 867
    STRICTFP        shift and go to state 868
    PROTECTED       shift and go to state 46
    PRIVATE         shift and go to state 47
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    InterfaceMemberDeclarationS    shift and go to state 853
    InterfaceMemberDeclaration     shift and go to state 854
    empty                          shift and go to state 855
    ConstantDeclaration            shift and go to state 856
    InterfaceMethodDeclaration     shift and go to state 857
    ClassDeclaration               shift and go to state 858
    InterfaceDeclaration           shift and go to state 859
    ConstantModifierS              shift and go to state 730
    InterfaceMethodModifierS       shift and go to state 861
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstantModifier               shift and go to state 732
    InterfaceMethodModifier        shift and go to state 862
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 863
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 720

    (28) ExtendsInterfaces -> EXTENDS InterfaceTypeList .

    LBRACE          reduce using rule 28 (ExtendsInterfaces -> EXTENDS InterfaceTypeList .)


state 721

    (54) AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS . RBRACE

    RBRACE          shift and go to state 869


state 722

    (55) AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration . AnnotationTypeMemberDeclarationS
    (55) AnnotationTypeMemberDeclarationS -> . AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS
    (56) AnnotationTypeMemberDeclarationS -> . empty
    (57) AnnotationTypeMemberDeclaration -> . AnnotationTypeElementDeclaration
    (58) AnnotationTypeMemberDeclaration -> . ConstantDeclaration
    (59) AnnotationTypeMemberDeclaration -> . ClassDeclaration
    (60) AnnotationTypeMemberDeclaration -> . InterfaceDeclaration
    (61) AnnotationTypeMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (62) AnnotationTypeElementDeclaration -> . AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (67) AnnotationTypeElementModifierS -> . AnnotationTypeElementModifier AnnotationTypeElementModifierS
    (68) AnnotationTypeElementModifierS -> . empty
    (38) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (39) ConstantModifierS -> . empty
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (69) AnnotationTypeElementModifier -> . Annotation
    (70) AnnotationTypeElementModifier -> . PUBLIC
    (71) AnnotationTypeElementModifier -> . ABSTRACT
    (40) ConstantModifier -> . Annotation
    (41) ConstantModifier -> . PUBLIC
    (42) ConstantModifier -> . STATIC
    (43) ConstantModifier -> . FINAL
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 728
    RBRACE          reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 734
    ABSTRACT        shift and go to state 735
    STATIC          shift and go to state 736
    FINAL           shift and go to state 737
    PROTECTED       shift and go to state 46
    PRIVATE         shift and go to state 47
    STRICTFP        shift and go to state 51
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationTypeMemberDeclaration shift and go to state 722
    AnnotationTypeMemberDeclarationS shift and go to state 870
    empty                          shift and go to state 723
    AnnotationTypeElementDeclaration shift and go to state 724
    ConstantDeclaration            shift and go to state 725
    ClassDeclaration               shift and go to state 726
    InterfaceDeclaration           shift and go to state 727
    AnnotationTypeElementModifierS shift and go to state 729
    ConstantModifierS              shift and go to state 730
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    AnnotationTypeElementModifier  shift and go to state 731
    ConstantModifier               shift and go to state 732
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 733
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 723

    (56) AnnotationTypeMemberDeclarationS -> empty .
    (68) AnnotationTypeElementModifierS -> empty .
    (39) ConstantModifierS -> empty .
    (424) ClassModifierS -> empty .
    (286) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

  ! reduce/reduce conflict for BOOLEAN resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 39 (ConstantModifierS -> empty .)
    RBRACE          reduce using rule 56 (AnnotationTypeMemberDeclarationS -> empty .)
    BOOLEAN         reduce using rule 39 (ConstantModifierS -> empty .)
    IDENT           reduce using rule 39 (ConstantModifierS -> empty .)
    BYTE            reduce using rule 39 (ConstantModifierS -> empty .)
    SHORT           reduce using rule 39 (ConstantModifierS -> empty .)
    INT             reduce using rule 39 (ConstantModifierS -> empty .)
    LONG            reduce using rule 39 (ConstantModifierS -> empty .)
    CHAR            reduce using rule 39 (ConstantModifierS -> empty .)
    FLOAT           reduce using rule 39 (ConstantModifierS -> empty .)
    DOUBLE          reduce using rule 39 (ConstantModifierS -> empty .)
    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 286 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 286 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)

  ! BOOLEAN         [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! INT             [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! LONG            [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 68 (AnnotationTypeElementModifierS -> empty .) ]


state 724

    (57) AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .

    SEMICOLON       reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    PUBLIC          reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    ABSTRACT        reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    STATIC          reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    FINAL           reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    PROTECTED       reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    PRIVATE         reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    STRICTFP        reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    EXTENDS         reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    ATRATE          reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    BOOLEAN         reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    IDENT           reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    BYTE            reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    SHORT           reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    INT             reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    LONG            reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    CHAR            reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    FLOAT           reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    DOUBLE          reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    CLASS           reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    ENUM            reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    IMPLEMENTS      reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    LBRACE          reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    INTERFACE       reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)
    RBRACE          reduce using rule 57 (AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration .)


state 725

    (58) AnnotationTypeMemberDeclaration -> ConstantDeclaration .

    SEMICOLON       reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    PUBLIC          reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    ABSTRACT        reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    STATIC          reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    FINAL           reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    PROTECTED       reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    PRIVATE         reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    STRICTFP        reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    EXTENDS         reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    ATRATE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    BOOLEAN         reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    IDENT           reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    BYTE            reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    SHORT           reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    INT             reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    LONG            reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    CHAR            reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    FLOAT           reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    DOUBLE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    CLASS           reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    ENUM            reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    IMPLEMENTS      reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    LBRACE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    INTERFACE       reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)
    RBRACE          reduce using rule 58 (AnnotationTypeMemberDeclaration -> ConstantDeclaration .)


state 726

    (59) AnnotationTypeMemberDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    BOOLEAN         reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    IDENT           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    BYTE            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    SHORT           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    INT             reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    LONG            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    CHAR            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    FLOAT           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    DOUBLE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)
    RBRACE          reduce using rule 59 (AnnotationTypeMemberDeclaration -> ClassDeclaration .)


state 727

    (60) AnnotationTypeMemberDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    BOOLEAN         reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    IDENT           reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    BYTE            reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    SHORT           reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    INT             reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    LONG            reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    CHAR            reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    FLOAT           reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    DOUBLE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)
    RBRACE          reduce using rule 60 (AnnotationTypeMemberDeclaration -> InterfaceDeclaration .)


state 728

    (61) AnnotationTypeMemberDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    BOOLEAN         reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    IDENT           reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    BYTE            reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    SHORT           reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    INT             reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    LONG            reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    CHAR            reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    FLOAT           reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    DOUBLE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)
    RBRACE          reduce using rule 61 (AnnotationTypeMemberDeclaration -> SEMICOLON .)


state 729

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS . UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 871
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 730

    (37) ConstantDeclaration -> ConstantModifierS . UnannType VariableDeclaratorList SEMICOLON
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 872
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 731

    (67) AnnotationTypeElementModifierS -> AnnotationTypeElementModifier . AnnotationTypeElementModifierS
    (67) AnnotationTypeElementModifierS -> . AnnotationTypeElementModifier AnnotationTypeElementModifierS
    (68) AnnotationTypeElementModifierS -> . empty
    (69) AnnotationTypeElementModifier -> . Annotation
    (70) AnnotationTypeElementModifier -> . PUBLIC
    (71) AnnotationTypeElementModifier -> . ABSTRACT
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 876
    ABSTRACT        shift and go to state 877
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationTypeElementModifier  shift and go to state 731
    AnnotationTypeElementModifierS shift and go to state 873
    empty                          shift and go to state 874
    Annotation                     shift and go to state 875
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 732

    (38) ConstantModifierS -> ConstantModifier . ConstantModifierS
    (38) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (39) ConstantModifierS -> . empty
    (40) ConstantModifier -> . Annotation
    (41) ConstantModifier -> . PUBLIC
    (42) ConstantModifier -> . STATIC
    (43) ConstantModifier -> . FINAL
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 881
    STATIC          shift and go to state 882
    FINAL           shift and go to state 883
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ConstantModifier               shift and go to state 732
    ConstantModifierS              shift and go to state 878
    empty                          shift and go to state 879
    Annotation                     shift and go to state 880
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 733

    (69) AnnotationTypeElementModifier -> Annotation .
    (40) ConstantModifier -> Annotation .
    (291) ClassModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 69 (AnnotationTypeElementModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
    FINAL           reduce using rule 40 (ConstantModifier -> Annotation .)
    BOOLEAN         reduce using rule 40 (ConstantModifier -> Annotation .)
    IDENT           reduce using rule 40 (ConstantModifier -> Annotation .)
    BYTE            reduce using rule 40 (ConstantModifier -> Annotation .)
    SHORT           reduce using rule 40 (ConstantModifier -> Annotation .)
    INT             reduce using rule 40 (ConstantModifier -> Annotation .)
    LONG            reduce using rule 40 (ConstantModifier -> Annotation .)
    CHAR            reduce using rule 40 (ConstantModifier -> Annotation .)
    FLOAT           reduce using rule 40 (ConstantModifier -> Annotation .)
    DOUBLE          reduce using rule 40 (ConstantModifier -> Annotation .)
    CLASS           reduce using rule 291 (ClassModifier -> Annotation .)
    ENUM            reduce using rule 291 (ClassModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)

  ! PUBLIC          [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! INT             [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 40 (ConstantModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 40 (ConstantModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 40 (ConstantModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 291 (ClassModifier -> Annotation .) ]


state 734

    (70) AnnotationTypeElementModifier -> PUBLIC .
    (41) ConstantModifier -> PUBLIC .
    (292) ClassModifier -> PUBLIC .
    (22) InterfaceModifier -> PUBLIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for INT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for LONG resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 41 (ConstantModifier -> PUBLIC .)
    IDENT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    BYTE            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    SHORT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    INT             reduce using rule 41 (ConstantModifier -> PUBLIC .)
    LONG            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    CHAR            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    FLOAT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    DOUBLE          reduce using rule 41 (ConstantModifier -> PUBLIC .)
    CLASS           reduce using rule 292 (ClassModifier -> PUBLIC .)
    ENUM            reduce using rule 292 (ClassModifier -> PUBLIC .)
    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)

  ! PUBLIC          [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! BOOLEAN         [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! BYTE            [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! SHORT           [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! INT             [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! LONG            [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! CHAR            [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! FLOAT           [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! DOUBLE          [ reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 41 (ConstantModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 41 (ConstantModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 41 (ConstantModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]


state 735

    (71) AnnotationTypeElementModifier -> ABSTRACT .
    (295) ClassModifier -> ABSTRACT .
    (25) InterfaceModifier -> ABSTRACT .

  ! reduce/reduce conflict for PUBLIC resolved using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    IDENT           reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    BYTE            reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    SHORT           reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    INT             reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    LONG            reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    CHAR            reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    FLOAT           reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    FINAL           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    CLASS           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    ENUM            reduce using rule 295 (ClassModifier -> ABSTRACT .)
    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)

  ! PUBLIC          [ reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .) ]
  ! PUBLIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PROTECTED       [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PRIVATE         [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]


state 736

    (42) ConstantModifier -> STATIC .
    (296) ClassModifier -> STATIC .
    (26) InterfaceModifier -> STATIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 26 (InterfaceModifier -> STATIC .)
    FINAL           reduce using rule 42 (ConstantModifier -> STATIC .)
    BOOLEAN         reduce using rule 42 (ConstantModifier -> STATIC .)
    IDENT           reduce using rule 42 (ConstantModifier -> STATIC .)
    BYTE            reduce using rule 42 (ConstantModifier -> STATIC .)
    SHORT           reduce using rule 42 (ConstantModifier -> STATIC .)
    INT             reduce using rule 42 (ConstantModifier -> STATIC .)
    LONG            reduce using rule 42 (ConstantModifier -> STATIC .)
    CHAR            reduce using rule 42 (ConstantModifier -> STATIC .)
    FLOAT           reduce using rule 42 (ConstantModifier -> STATIC .)
    DOUBLE          reduce using rule 42 (ConstantModifier -> STATIC .)
    CLASS           reduce using rule 296 (ClassModifier -> STATIC .)
    ENUM            reduce using rule 296 (ClassModifier -> STATIC .)
    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)

  ! PUBLIC          [ reduce using rule 42 (ConstantModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 42 (ConstantModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 42 (ConstantModifier -> STATIC .) ]
  ! PUBLIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 296 (ClassModifier -> STATIC .) ]


state 737

    (43) ConstantModifier -> FINAL .
    (297) ClassModifier -> FINAL .

  ! reduce/reduce conflict for PUBLIC resolved using rule 43 (ConstantModifier -> FINAL .)
  ! reduce/reduce conflict for STATIC resolved using rule 43 (ConstantModifier -> FINAL .)
  ! reduce/reduce conflict for FINAL resolved using rule 43 (ConstantModifier -> FINAL .)
  ! reduce/reduce conflict for ATRATE resolved using rule 43 (ConstantModifier -> FINAL .)
    PUBLIC          reduce using rule 43 (ConstantModifier -> FINAL .)
    STATIC          reduce using rule 43 (ConstantModifier -> FINAL .)
    FINAL           reduce using rule 43 (ConstantModifier -> FINAL .)
    ATRATE          reduce using rule 43 (ConstantModifier -> FINAL .)
    BOOLEAN         reduce using rule 43 (ConstantModifier -> FINAL .)
    IDENT           reduce using rule 43 (ConstantModifier -> FINAL .)
    BYTE            reduce using rule 43 (ConstantModifier -> FINAL .)
    SHORT           reduce using rule 43 (ConstantModifier -> FINAL .)
    INT             reduce using rule 43 (ConstantModifier -> FINAL .)
    LONG            reduce using rule 43 (ConstantModifier -> FINAL .)
    CHAR            reduce using rule 43 (ConstantModifier -> FINAL .)
    FLOAT           reduce using rule 43 (ConstantModifier -> FINAL .)
    DOUBLE          reduce using rule 43 (ConstantModifier -> FINAL .)
    PROTECTED       reduce using rule 297 (ClassModifier -> FINAL .)
    PRIVATE         reduce using rule 297 (ClassModifier -> FINAL .)
    ABSTRACT        reduce using rule 297 (ClassModifier -> FINAL .)
    STRICTFP        reduce using rule 297 (ClassModifier -> FINAL .)
    CLASS           reduce using rule 297 (ClassModifier -> FINAL .)
    ENUM            reduce using rule 297 (ClassModifier -> FINAL .)

  ! PUBLIC          [ reduce using rule 297 (ClassModifier -> FINAL .) ]
  ! STATIC          [ reduce using rule 297 (ClassModifier -> FINAL .) ]
  ! FINAL           [ reduce using rule 297 (ClassModifier -> FINAL .) ]
  ! ATRATE          [ reduce using rule 297 (ClassModifier -> FINAL .) ]


state 738

    (464) ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .

    IMPLEMENTS      reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    PERIOD          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    COLON_SEP       reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    COMMA           reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    AND             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    RPAREN          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LBRACK          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LSS             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    GTR             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LEQ             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    GEQ             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    INSTANCEOF      reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    EQL             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    NEQ             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    XOR             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    OR              reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LAND            reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    QUES            reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LOR             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    RBRACE          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    COLON           reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    MUL             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    QUO             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    REM             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    ADD             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    SUB             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    SHL             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    SHR             reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    SHR_UN          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    RBRACK          reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    SEMICOLON       reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    IDENT           reduce using rule 464 (ClassType -> ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)


state 739

    (135) FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .

    LBRACK          reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    PERIOD          reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    COLON_SEP       reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    INC             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    DEC             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    MUL             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    QUO             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    REM             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    ADD             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SUB             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHL             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR_UN          reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LSS             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    GTR             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LEQ             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    GEQ             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    INSTANCEOF      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    EQL             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    NEQ             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    AND             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    XOR             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    OR              reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LAND            reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    QUES            reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    LOR             reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    RPAREN          reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    ASSIGN          reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SHR_UN_ASSIGN   reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    COMMA           reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    RBRACE          reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    COLON           reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    RBRACK          reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)
    SEMICOLON       reduce using rule 135 (FieldAccess -> TypeName PERIOD SUPER PERIOD IDENT .)


state 740

    (143) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    IDENT           shift and go to state 884


state 741

    (151) MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments . IDENT

    IDENT           shift and go to state 885


state 742

    (139) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    TypeName                       shift and go to state 217
    ZooArgumentList                shift and go to state 886
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 743

    (169) COMMAIDENTS -> COMMA IDENT . COMMAIDENTS
    (169) COMMAIDENTS -> . COMMA IDENT COMMAIDENTS
    (170) COMMAIDENTS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 589
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAIDENTS                    shift and go to state 887
    empty                          shift and go to state 590

state 744

    (463) ClassType -> AnnotationS IDENT ZooTypeArguments .
    (349) UnannClassType -> IDENT ZooTypeArguments .

  ! reduce/reduce conflict for PERIOD resolved using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
  ! reduce/reduce conflict for ATRATE resolved using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
  ! reduce/reduce conflict for LBRACE resolved using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    COLON_SEP       reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    AND             reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    RPAREN          reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .)
    PERIOD          reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    IDENT           reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)
    THIS            reduce using rule 349 (UnannClassType -> IDENT ZooTypeArguments .)

  ! PERIOD          [ reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .) ]
  ! ATRATE          [ reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .) ]
  ! LBRACE          [ reduce using rule 463 (ClassType -> AnnotationS IDENT ZooTypeArguments .) ]


state 745

    (394) ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD . THIS

    THIS            shift and go to state 888


state 746

    (392) ZooIDENTPERIOD -> IDENT . PERIOD

    PERIOD          shift and go to state 889


state 747

    (393) ZooIDENTPERIOD -> empty .

    THIS            reduce using rule 393 (ZooIDENTPERIOD -> empty .)


state 748

    (381) COMMAFormalParameterS -> COMMA FormalParameter . COMMAFormalParameterS
    (381) COMMAFormalParameterS -> . COMMA FormalParameter COMMAFormalParameterS
    (382) COMMAFormalParameterS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 596

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAFormalParameterS          shift and go to state 890
    empty                          shift and go to state 597

state 749

    (385) ZooVariableModifier -> VariableModifier .

    BOOLEAN         reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    IDENT           reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    BYTE            reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    SHORT           reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    INT             reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    LONG            reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    CHAR            reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    FLOAT           reduce using rule 385 (ZooVariableModifier -> VariableModifier .)
    DOUBLE          reduce using rule 385 (ZooVariableModifier -> VariableModifier .)


state 750

    (386) ZooVariableModifier -> empty .

    BOOLEAN         reduce using rule 386 (ZooVariableModifier -> empty .)
    IDENT           reduce using rule 386 (ZooVariableModifier -> empty .)
    BYTE            reduce using rule 386 (ZooVariableModifier -> empty .)
    SHORT           reduce using rule 386 (ZooVariableModifier -> empty .)
    INT             reduce using rule 386 (ZooVariableModifier -> empty .)
    LONG            reduce using rule 386 (ZooVariableModifier -> empty .)
    CHAR            reduce using rule 386 (ZooVariableModifier -> empty .)
    FLOAT           reduce using rule 386 (ZooVariableModifier -> empty .)
    DOUBLE          reduce using rule 386 (ZooVariableModifier -> empty .)


state 751

    (379) FormalParameterList -> FormalParameters COMMA LastFormalParameter .

    RPAREN          reduce using rule 379 (FormalParameterList -> FormalParameters COMMA LastFormalParameter .)


state 752

    (391) LastFormalParameter -> FormalParameter .

    RPAREN          reduce using rule 391 (LastFormalParameter -> FormalParameter .)


state 753

    (505) VariableModifierS -> empty .
    (386) ZooVariableModifier -> empty .

  ! reduce/reduce conflict for BOOLEAN resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 386 (ZooVariableModifier -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 386 (ZooVariableModifier -> empty .)
    BOOLEAN         reduce using rule 386 (ZooVariableModifier -> empty .)
    IDENT           reduce using rule 386 (ZooVariableModifier -> empty .)
    BYTE            reduce using rule 386 (ZooVariableModifier -> empty .)
    SHORT           reduce using rule 386 (ZooVariableModifier -> empty .)
    INT             reduce using rule 386 (ZooVariableModifier -> empty .)
    LONG            reduce using rule 386 (ZooVariableModifier -> empty .)
    CHAR            reduce using rule 386 (ZooVariableModifier -> empty .)
    FLOAT           reduce using rule 386 (ZooVariableModifier -> empty .)
    DOUBLE          reduce using rule 386 (ZooVariableModifier -> empty .)

  ! BOOLEAN         [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 505 (VariableModifierS -> empty .) ]


state 754

    (390) LastFormalParameter -> VariableModifierS UnannType AnnotationS . ELLIPSIS VariableDeclaratorId

    ELLIPSIS        shift and go to state 891


state 755

    (387) FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId .

    COMMA           reduce using rule 387 (FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId .)
    RPAREN          reduce using rule 387 (FormalParameter -> ZooVariableModifier UnannType VariableDeclaratorId .)


state 756

    (241) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (166) LambdaParameters -> LPAREN . ZooFormalParameterList RPAREN
    (167) LambdaParameters -> LPAREN . InferredFormalParameterList RPAREN
    (106) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (375) ZooFormalParameterList -> . FormalParameterList
    (376) ZooFormalParameterList -> . empty
    (168) InferredFormalParameterList -> . IDENT COMMAIDENTS
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (378) FormalParameterList -> . ReceiverParameter
    (379) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (380) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (394) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (383) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (384) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (390) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (391) LastFormalParameter -> . FormalParameter
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (387) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (385) ZooVariableModifier -> . VariableModifier
    (386) ZooVariableModifier -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 352
    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 202
    ATRATE          shift and go to state 13
    FINAL           shift and go to state 362
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    PrimitiveType                  shift and go to state 203
    UnaryExpression                shift and go to state 124
    ReferenceType                  shift and go to state 204
    UnaryExpressionNotPlusMinus    shift and go to state 127
    LambdaExpression               shift and go to state 205
    ZooFormalParameterList         shift and go to state 348
    InferredFormalParameterList    shift and go to state 349
    Expression                     shift and go to state 206
    AnnotationS                    shift and go to state 892
    NumericType                    shift and go to state 162
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 209
    FormalParameterList            shift and go to state 350
    empty                          shift and go to state 351
    AssignmentExpression           shift and go to state 210
    Annotation                     shift and go to state 357
    ClassType                      shift and go to state 211
    InterfaceType                  shift and go to state 92
    ReceiverParameter              shift and go to state 354
    FormalParameters               shift and go to state 355
    LastFormalParameter            shift and go to state 356
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    FormalParameter                shift and go to state 358
    VariableModifierS              shift and go to state 359
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    TypeName                       shift and go to state 217
    ZooVariableModifier            shift and go to state 360
    VariableModifier               shift and go to state 361
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 757

    (242) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .

    MUL             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    QUO             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    REM             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    ADD             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SUB             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SHL             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SHR             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SHR_UN          reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LSS             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    GTR             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LEQ             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    GEQ             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    INSTANCEOF      reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    EQL             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    NEQ             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    AND             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    XOR             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    OR              reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LAND            reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    QUES            reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    LOR             reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    RPAREN          reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    COMMA           reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    RBRACE          reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    COLON           reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    RBRACK          reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)
    SEMICOLON       reduce using rule 242 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus .)


state 758

    (243) CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .

    MUL             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    QUO             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    REM             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    ADD             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SUB             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SHL             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SHR             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SHR_UN          reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LSS             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    GTR             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LEQ             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    GEQ             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    INSTANCEOF      reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    EQL             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    NEQ             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    AND             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    XOR             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    OR              reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LAND            reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    QUES            reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    LOR             reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    RPAREN          reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    COMMA           reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    RBRACE          reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    COLON           reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    RBRACK          reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)
    SEMICOLON       reduce using rule 243 (CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression .)


state 759

    (192) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .

    RPAREN          reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    COMMA           reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    RBRACE          reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    COLON           reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    RBRACK          reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    MUL             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    QUO             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    REM             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    ADD             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SUB             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SHL             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SHR             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SHR_UN          reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LSS             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    GTR             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LEQ             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    GEQ             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    INSTANCEOF      reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    EQL             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    NEQ             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    AND             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    XOR             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    OR              reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LAND            reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    QUES            reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    LOR             reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)
    SEMICOLON       reduce using rule 192 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression .)


state 760

    (193) ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .

    RPAREN          reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    COMMA           reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    RBRACE          reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    COLON           reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    RBRACK          reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    MUL             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    QUO             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    REM             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    ADD             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SUB             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SHL             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SHR             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SHR_UN          reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LSS             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    GTR             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LEQ             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    GEQ             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    INSTANCEOF      reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    EQL             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    NEQ             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    AND             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    XOR             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    OR              reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LAND            reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    QUES            reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    LOR             reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)
    SEMICOLON       reduce using rule 193 (ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression .)


state 761

    (166) LambdaParameters -> LPAREN . ZooFormalParameterList RPAREN
    (167) LambdaParameters -> LPAREN . InferredFormalParameterList RPAREN
    (241) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> LPAREN . ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (106) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (375) ZooFormalParameterList -> . FormalParameterList
    (376) ZooFormalParameterList -> . empty
    (168) InferredFormalParameterList -> . IDENT COMMAIDENTS
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (378) FormalParameterList -> . ReceiverParameter
    (379) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (380) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (394) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (383) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (384) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (390) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (391) LastFormalParameter -> . FormalParameter
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (387) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (385) ZooVariableModifier -> . VariableModifier
    (386) ZooVariableModifier -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 352
    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 202
    ATRATE          shift and go to state 13
    FINAL           shift and go to state 362
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooFormalParameterList         shift and go to state 348
    InferredFormalParameterList    shift and go to state 349
    PrimitiveType                  shift and go to state 203
    UnaryExpression                shift and go to state 124
    ReferenceType                  shift and go to state 204
    UnaryExpressionNotPlusMinus    shift and go to state 127
    LambdaExpression               shift and go to state 205
    Expression                     shift and go to state 206
    FormalParameterList            shift and go to state 350
    empty                          shift and go to state 351
    AnnotationS                    shift and go to state 353
    NumericType                    shift and go to state 162
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 209
    AssignmentExpression           shift and go to state 210
    ReceiverParameter              shift and go to state 354
    FormalParameters               shift and go to state 355
    LastFormalParameter            shift and go to state 356
    Annotation                     shift and go to state 357
    ClassType                      shift and go to state 211
    InterfaceType                  shift and go to state 92
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    FormalParameter                shift and go to state 358
    VariableModifierS              shift and go to state 359
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ZooVariableModifier            shift and go to state 360
    VariableModifier               shift and go to state 361
    TypeName                       shift and go to state 217
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 762

    (90) COMMAElementValueS -> COMMA ElementValue COMMAElementValueS .

    COMMA           reduce using rule 90 (COMMAElementValueS -> COMMA ElementValue COMMAElementValueS .)
    RBRACE          reduce using rule 90 (COMMAElementValueS -> COMMA ElementValue COMMAElementValueS .)


state 763

    (141) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Primary                        shift and go to state 221
    ZooArgumentList                shift and go to state 893
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 764

    (140) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ExpressionName                 shift and go to state 218
    ZooArgumentList                shift and go to state 894
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 765

    (471) AnnotationSLBRACERBRACES -> AnnotationS . LBRACE RBRACE AnnotationSLBRACERBRACES

    LBRACE          shift and go to state 895


state 766

    (470) Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .

    COLON_SEP       reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LSS             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GTR             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LEQ             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GEQ             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INSTANCEOF      reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    EQL             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    NEQ             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    AND             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    XOR             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    OR              reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LAND            reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUES            reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LOR             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RPAREN          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COMMA           reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACE          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COLON           reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    MUL             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUO             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    REM             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ADD             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SUB             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHL             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR_UN          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACK          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SEMICOLON       reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LBRACE          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    PERIOD          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INC             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEC             reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    IDENT           reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THIS            reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ATRATE          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ELLIPSIS        reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ASSIGN          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THROWS          reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEFAULT         reduce using rule 470 (Dims -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)


state 767

    (472) AnnotationSLBRACERBRACES -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for LBRACE resolved using rule 126 (AnnotationS -> empty .)
    COLON_SEP       reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    LSS             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    GTR             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    LEQ             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    GEQ             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    INSTANCEOF      reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    EQL             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    NEQ             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    AND             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    XOR             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    OR              reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    LAND            reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    QUES            reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    LOR             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    RPAREN          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    COMMA           reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    RBRACE          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    COLON           reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    MUL             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    QUO             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    REM             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    ADD             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    SUB             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    SHL             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    SHR             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    SHR_UN          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    RBRACK          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    SEMICOLON       reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    PERIOD          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    INC             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    DEC             reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    IDENT           reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    THIS            reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    ATRATE          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    ELLIPSIS        reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    ASSIGN          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    THROWS          reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    DEFAULT         reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .)
    LBRACE          reduce using rule 126 (AnnotationS -> empty .)

  ! LBRACE          [ reduce using rule 472 (AnnotationSLBRACERBRACES -> empty .) ]


state 768

    (94) ArrayInitializer -> LBRACE ZooVariableInitializerList . ZooCOMMA RBRACE
    (428) ZooCOMMA -> . COMMA
    (429) ZooCOMMA -> . empty
    (1) empty -> .

    COMMA           shift and go to state 391
    RBRACE          reduce using rule 1 (empty -> .)

    ZooCOMMA                       shift and go to state 896
    empty                          shift and go to state 392

state 769

    (95) ZooVariableInitializerList -> VariableInitializerList .

    COMMA           reduce using rule 95 (ZooVariableInitializerList -> VariableInitializerList .)
    RBRACE          reduce using rule 95 (ZooVariableInitializerList -> VariableInitializerList .)


state 770

    (96) ZooVariableInitializerList -> empty .
    (126) AnnotationS -> empty .

    COMMA           reduce using rule 96 (ZooVariableInitializerList -> empty .)
    RBRACE          reduce using rule 96 (ZooVariableInitializerList -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)


state 771

    (97) VariableInitializerList -> VariableInitializer . COMMAVariableInitializerS
    (98) COMMAVariableInitializerS -> . COMMA VariableInitializer COMMAVariableInitializerS
    (99) COMMAVariableInitializerS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 898
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAVariableInitializerS      shift and go to state 897
    empty                          shift and go to state 899

state 772

    (338) VariableInitializer -> Expression .

    COMMA           reduce using rule 338 (VariableInitializer -> Expression .)
    RBRACE          reduce using rule 338 (VariableInitializer -> Expression .)
    SEMICOLON       reduce using rule 338 (VariableInitializer -> Expression .)


state 773

    (339) VariableInitializer -> ArrayInitializer .

    COMMA           reduce using rule 339 (VariableInitializer -> ArrayInitializer .)
    RBRACE          reduce using rule 339 (VariableInitializer -> ArrayInitializer .)
    SEMICOLON       reduce using rule 339 (VariableInitializer -> ArrayInitializer .)


state 774

    (159) DimExprS -> DimExpr DimExprS .

    ATRATE          reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    LBRACE          reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    PERIOD          reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    COLON_SEP       reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    INC             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    DEC             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    MUL             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    QUO             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    REM             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    ADD             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    SUB             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    SHL             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    SHR             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    SHR_UN          reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    LSS             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    GTR             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    LEQ             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    GEQ             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    INSTANCEOF      reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    EQL             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    NEQ             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    AND             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    XOR             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    OR              reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    LAND            reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    QUES            reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    LOR             reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    RPAREN          reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    COMMA           reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    RBRACE          reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    COLON           reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    RBRACK          reduce using rule 159 (DimExprS -> DimExpr DimExprS .)
    SEMICOLON       reduce using rule 159 (DimExprS -> DimExpr DimExprS .)


state 775

    (161) DimExpr -> AnnotationS LBRACK Expression . RBRACK

    RBRACK          shift and go to state 900


state 776

    (121) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList . RPAREN ZooClassBody

    RPAREN          shift and go to state 901


state 777

    (124) ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS . ZooTypeArgumentsOrDiamond
    (127) ZooTypeArgumentsOrDiamond -> . TypeArgumentsOrDiamond
    (128) ZooTypeArgumentsOrDiamond -> . empty
    (131) TypeArgumentsOrDiamond -> . TypeArguments
    (132) TypeArgumentsOrDiamond -> . LSS GTR
    (1) empty -> .
    (482) TypeArguments -> . LSS TypeArgumentList GTR

    LSS             shift and go to state 906
    LPAREN          reduce using rule 1 (empty -> .)

    ZooTypeArgumentsOrDiamond      shift and go to state 902
    TypeArgumentsOrDiamond         shift and go to state 903
    empty                          shift and go to state 904
    TypeArguments                  shift and go to state 905

state 778

    (129) PERIODAnnotationSIDENTS -> PERIOD . AnnotationS IDENT PERIODAnnotationSIDENTS
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    AnnotationS                    shift and go to state 907
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 779

    (130) PERIODAnnotationSIDENTS -> empty .

    LSS             reduce using rule 130 (PERIODAnnotationSIDENTS -> empty .)
    LPAREN          reduce using rule 130 (PERIODAnnotationSIDENTS -> empty .)


state 780

    (484) COMMATypeArgumentS -> COMMA TypeArgument . COMMATypeArgumentS
    (484) COMMATypeArgumentS -> . COMMA TypeArgument COMMATypeArgumentS
    (485) COMMATypeArgumentS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 641
    GTR             reduce using rule 1 (empty -> .)

    COMMATypeArgumentS             shift and go to state 908
    empty                          shift and go to state 642

state 781

    (488) Wildcard -> AnnotationS QUES ZooWildcardBounds .

    COMMA           reduce using rule 488 (Wildcard -> AnnotationS QUES ZooWildcardBounds .)
    GTR             reduce using rule 488 (Wildcard -> AnnotationS QUES ZooWildcardBounds .)


state 782

    (489) ZooWildcardBounds -> WildcardBounds .

    COMMA           reduce using rule 489 (ZooWildcardBounds -> WildcardBounds .)
    GTR             reduce using rule 489 (ZooWildcardBounds -> WildcardBounds .)


state 783

    (490) ZooWildcardBounds -> empty .

    COMMA           reduce using rule 490 (ZooWildcardBounds -> empty .)
    GTR             reduce using rule 490 (ZooWildcardBounds -> empty .)


state 784

    (491) WildcardBounds -> EXTENDS . ReferenceType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ReferenceType                  shift and go to state 909
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 408
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    AnnotationS                    shift and go to state 409
    PrimitiveType                  shift and go to state 138
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 785

    (492) WildcardBounds -> SUPER . ReferenceType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ReferenceType                  shift and go to state 910
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 408
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    AnnotationS                    shift and go to state 409
    PrimitiveType                  shift and go to state 138
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 786

    (142) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooArgumentList                shift and go to state 911
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 787

    (145) COMMAExpressionS -> COMMA Expression . COMMAExpressionS
    (145) COMMAExpressionS -> . COMMA Expression COMMAExpressionS
    (146) COMMAExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 650
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAExpressionS               shift and go to state 912
    empty                          shift and go to state 651

state 788

    (300) COMMMATypeParameterS -> COMMA TypeParameter . COMMMATypeParameterS
    (300) COMMMATypeParameterS -> . COMMA TypeParameter COMMMATypeParameterS
    (301) COMMMATypeParameterS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 655
    GTR             reduce using rule 1 (empty -> .)

    COMMMATypeParameterS           shift and go to state 913
    empty                          shift and go to state 656

state 789

    (473) TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound .

    COMMA           reduce using rule 473 (TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound .)
    GTR             reduce using rule 473 (TypeParameter -> TypeParameterModifierS IDENT ZooTypeBound .)


state 790

    (476) ZooTypeBound -> TypeBound .

    COMMA           reduce using rule 476 (ZooTypeBound -> TypeBound .)
    GTR             reduce using rule 476 (ZooTypeBound -> TypeBound .)


state 791

    (477) ZooTypeBound -> empty .

    COMMA           reduce using rule 477 (ZooTypeBound -> empty .)
    GTR             reduce using rule 477 (ZooTypeBound -> empty .)


state 792

    (479) TypeBound -> EXTENDS . TypeVariable
    (480) TypeBound -> EXTENDS . ClassOrInterfaceType AdditionalBoundS
    (466) TypeVariable -> . AnnotationS IDENT
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeVariable                   shift and go to state 914
    ClassOrInterfaceType           shift and go to state 915
    AnnotationS                    shift and go to state 916
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 793

    (432) EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA . ZooEnumBodyDeclarations RBRACE
    (430) ZooEnumBodyDeclarations -> . EnumBodyDeclarations
    (431) ZooEnumBodyDeclarations -> . empty
    (444) EnumBodyDeclarations -> . SEMICOLON ClassBodyDeclarationS
    (1) empty -> .

    SEMICOLON       shift and go to state 920
    RBRACE          reduce using rule 1 (empty -> .)

    ZooEnumBodyDeclarations        shift and go to state 917
    EnumBodyDeclarations           shift and go to state 918
    empty                          shift and go to state 919

state 794

    (435) EnumConstantList -> EnumConstant COMMAEnumConstantS .

    COMMA           reduce using rule 435 (EnumConstantList -> EnumConstant COMMAEnumConstantS .)
    SEMICOLON       reduce using rule 435 (EnumConstantList -> EnumConstant COMMAEnumConstantS .)
    RBRACE          reduce using rule 435 (EnumConstantList -> EnumConstant COMMAEnumConstantS .)


state 795

    (433) COMMAEnumConstantS -> COMMA . EnumConstant COMMAEnumConstantS
    (436) EnumConstant -> . EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody
    (437) EnumConstantModifierS -> . EnumConstantModifier EnumConstantModifierS
    (438) EnumConstantModifierS -> . empty
    (443) EnumConstantModifier -> . Annotation
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    EnumConstant                   shift and go to state 921
    EnumConstantModifierS          shift and go to state 663
    EnumConstantModifier           shift and go to state 664
    empty                          shift and go to state 799
    Annotation                     shift and go to state 665
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 796

    (434) COMMAEnumConstantS -> empty .

    COMMA           reduce using rule 434 (COMMAEnumConstantS -> empty .)
    SEMICOLON       reduce using rule 434 (COMMAEnumConstantS -> empty .)
    RBRACE          reduce using rule 434 (COMMAEnumConstantS -> empty .)


state 797

    (436) EnumConstant -> EnumConstantModifierS IDENT . ZooLPARENZooArgumentListRPAREN ZooClassBody
    (441) ZooLPARENZooArgumentListRPAREN -> . LPAREN ZooArgumentList RPAREN
    (442) ZooLPARENZooArgumentListRPAREN -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 923
    LBRACE          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

    ZooLPARENZooArgumentListRPAREN shift and go to state 922
    empty                          shift and go to state 924

state 798

    (437) EnumConstantModifierS -> EnumConstantModifier EnumConstantModifierS .

    IDENT           reduce using rule 437 (EnumConstantModifierS -> EnumConstantModifier EnumConstantModifierS .)


state 799

    (438) EnumConstantModifierS -> empty .

    IDENT           reduce using rule 438 (EnumConstantModifierS -> empty .)


state 800

    (497) BlockStatementS -> BlockStatement BlockStatementS .

    RBRACE          reduce using rule 497 (BlockStatementS -> BlockStatement BlockStatementS .)
    CASE            reduce using rule 497 (BlockStatementS -> BlockStatement BlockStatementS .)
    DEFAULT         reduce using rule 497 (BlockStatementS -> BlockStatement BlockStatementS .)


state 801

    (503) LocalVariableDeclaration -> VariableModifierS UnannType VariableDeclaratorList .

    SEMICOLON       reduce using rule 503 (LocalVariableDeclaration -> VariableModifierS UnannType VariableDeclaratorList .)


state 802

    (530) LabeledStatement -> IDENT COLON Statement .

    IDENT           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    IF              reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    WHILE           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    LBRACE          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    SEMICOLON       reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    ASSERT          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    SWITCH          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    DO              reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    BREAK           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    CONTINUE        reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    RETURN          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    SYNCHRONIZED    reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    THROW           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    TRY             reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    FOR             reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    FINAL           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    PUBLIC          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    PROTECTED       reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    PRIVATE         reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    ABSTRACT        reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    STATIC          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    STRICTFP        reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    EXTENDS         reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    INC             reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    DEC             reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    SUPER           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    ATRATE          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    NEW             reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    THIS            reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    LPAREN          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    BOOL_LIT        reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    NULL_LIT        reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    DECIMAL_LIT     reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    HEX_LIT         reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    OCTAL_LIT       reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    BINARY_LIT      reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    FLOAT_DEC_LIT   reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    FLOAT_HEX_LIT   reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    STRING_LIT      reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    CHAR_LIT        reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    BOOLEAN         reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    VOID            reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    BYTE            reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    SHORT           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    INT             reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    LONG            reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    CHAR            reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    FLOAT           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    DOUBLE          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    CLASS           reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    ENUM            reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    IMPLEMENTS      reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    RBRACE          reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    CASE            reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)
    DEFAULT         reduce using rule 530 (LabeledStatement -> IDENT COLON Statement .)


state 803

    (540) IfThenStatement -> IF LPAREN Expression . RPAREN Statement
    (541) IfThenElseStatement -> IF LPAREN Expression . RPAREN StatementNoShortIf ELSE Statement

    RPAREN          shift and go to state 925


state 804

    (557) WhileStatement -> WHILE LPAREN Expression . RPAREN Statement

    RPAREN          shift and go to state 926


state 805

    (543) AssertStatement -> ASSERT Expression SEMICOLON .

    IDENT           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    IF              reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    WHILE           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    LBRACE          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SEMICOLON       reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ASSERT          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SWITCH          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DO              reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BREAK           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CONTINUE        reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    RETURN          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    THROW           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    TRY             reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FOR             reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FINAL           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    PUBLIC          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    PROTECTED       reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    PRIVATE         reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ABSTRACT        reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    STATIC          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    STRICTFP        reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    EXTENDS         reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    INC             reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DEC             reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SUPER           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ATRATE          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    NEW             reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    THIS            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    LPAREN          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BOOL_LIT        reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    NULL_LIT        reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    HEX_LIT         reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    OCTAL_LIT       reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BINARY_LIT      reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    STRING_LIT      reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CHAR_LIT        reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BOOLEAN         reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    VOID            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    BYTE            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    SHORT           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    INT             reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    LONG            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CHAR            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    FLOAT           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DOUBLE          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CLASS           reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ENUM            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    IMPLEMENTS      reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    RBRACE          reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    CASE            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    DEFAULT         reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)
    ELSE            reduce using rule 543 (AssertStatement -> ASSERT Expression SEMICOLON .)


state 806

    (544) AssertStatement -> ASSERT Expression COLON . Expression SEMICOLON
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 927
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 807

    (545) SwitchStatement -> SWITCH LPAREN Expression . RPAREN SwitchBlock

    RPAREN          shift and go to state 928


state 808

    (559) DoStatement -> DO Statement WHILE . LPAREN Expression RPAREN SEMICOLON

    LPAREN          shift and go to state 929


state 809

    (580) BreakStatement -> BREAK ZooIDENT SEMICOLON .

    IDENT           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    IF              reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    WHILE           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    LBRACE          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SEMICOLON       reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ASSERT          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SWITCH          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DO              reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BREAK           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CONTINUE        reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    RETURN          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SYNCHRONIZED    reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    THROW           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    TRY             reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FOR             reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FINAL           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    PUBLIC          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    PROTECTED       reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    PRIVATE         reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ABSTRACT        reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    STATIC          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    STRICTFP        reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    EXTENDS         reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    INC             reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DEC             reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SUPER           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ATRATE          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    NEW             reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    THIS            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    LPAREN          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BOOL_LIT        reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    NULL_LIT        reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DECIMAL_LIT     reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    HEX_LIT         reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    OCTAL_LIT       reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BINARY_LIT      reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    STRING_LIT      reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CHAR_LIT        reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BOOLEAN         reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    VOID            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    BYTE            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    SHORT           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    INT             reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    LONG            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CHAR            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    FLOAT           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DOUBLE          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CLASS           reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ENUM            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    IMPLEMENTS      reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    RBRACE          reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    CASE            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    DEFAULT         reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)
    ELSE            reduce using rule 580 (BreakStatement -> BREAK ZooIDENT SEMICOLON .)


state 810

    (583) ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .

    IDENT           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    IF              reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    WHILE           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    LBRACE          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SEMICOLON       reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ASSERT          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SWITCH          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DO              reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BREAK           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CONTINUE        reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    RETURN          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SYNCHRONIZED    reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    THROW           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    TRY             reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FOR             reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FINAL           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    PUBLIC          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    PROTECTED       reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    PRIVATE         reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ABSTRACT        reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    STATIC          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    STRICTFP        reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    EXTENDS         reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    INC             reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DEC             reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SUPER           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ATRATE          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    NEW             reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    THIS            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    LPAREN          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BOOL_LIT        reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    NULL_LIT        reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DECIMAL_LIT     reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    HEX_LIT         reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    OCTAL_LIT       reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BINARY_LIT      reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    STRING_LIT      reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CHAR_LIT        reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BOOLEAN         reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    VOID            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    BYTE            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    SHORT           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    INT             reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    LONG            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CHAR            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    FLOAT           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DOUBLE          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CLASS           reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ENUM            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    IMPLEMENTS      reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    RBRACE          reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    CASE            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    DEFAULT         reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)
    ELSE            reduce using rule 583 (ContinueStatement -> CONTINUE ZooIDENT SEMICOLON .)


state 811

    (584) ReturnStatement -> RETURN ZooExpression SEMICOLON .

    IDENT           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    IF              reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    WHILE           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    LBRACE          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SEMICOLON       reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ASSERT          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SWITCH          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DO              reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BREAK           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CONTINUE        reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    RETURN          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    THROW           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    TRY             reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FOR             reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FINAL           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    PUBLIC          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    PROTECTED       reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    PRIVATE         reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ABSTRACT        reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    STATIC          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    STRICTFP        reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    EXTENDS         reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    INC             reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DEC             reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SUPER           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ATRATE          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    NEW             reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    THIS            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    LPAREN          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BOOL_LIT        reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    NULL_LIT        reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    HEX_LIT         reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    OCTAL_LIT       reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BINARY_LIT      reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    STRING_LIT      reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CHAR_LIT        reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BOOLEAN         reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    VOID            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    BYTE            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    SHORT           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    INT             reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    LONG            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CHAR            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    FLOAT           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DOUBLE          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CLASS           reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ENUM            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    IMPLEMENTS      reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    RBRACE          reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    CASE            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    DEFAULT         reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)
    ELSE            reduce using rule 584 (ReturnStatement -> RETURN ZooExpression SEMICOLON .)


state 812

    (586) SynchronizedStatement -> SYNCHRONIZED LPAREN Expression . RPAREN Block

    RPAREN          shift and go to state 930


state 813

    (585) ThrowStatement -> THROW Expression SEMICOLON .

    IDENT           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    IF              reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    WHILE           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    LBRACE          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    SEMICOLON       reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    ASSERT          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    SWITCH          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    DO              reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    BREAK           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    CONTINUE        reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    RETURN          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    THROW           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    TRY             reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    FOR             reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    FINAL           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    PUBLIC          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    PROTECTED       reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    PRIVATE         reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    ABSTRACT        reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    STATIC          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    STRICTFP        reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    EXTENDS         reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    INC             reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    DEC             reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    SUPER           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    ATRATE          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    NEW             reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    THIS            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    LPAREN          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    BOOL_LIT        reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    NULL_LIT        reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    HEX_LIT         reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    OCTAL_LIT       reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    BINARY_LIT      reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    STRING_LIT      reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    CHAR_LIT        reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    BOOLEAN         reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    VOID            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    BYTE            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    SHORT           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    INT             reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    LONG            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    CHAR            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    FLOAT           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    DOUBLE          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    CLASS           reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    ENUM            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    IMPLEMENTS      reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    RBRACE          reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    CASE            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    DEFAULT         reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)
    ELSE            reduce using rule 585 (ThrowStatement -> THROW Expression SEMICOLON .)


state 814

    (587) TryStatement -> TRY Block Catches .
    (590) ZooCatches -> Catches .

    IDENT           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    IF              reduce using rule 587 (TryStatement -> TRY Block Catches .)
    WHILE           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    LBRACE          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    SEMICOLON       reduce using rule 587 (TryStatement -> TRY Block Catches .)
    ASSERT          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    SWITCH          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    DO              reduce using rule 587 (TryStatement -> TRY Block Catches .)
    BREAK           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    CONTINUE        reduce using rule 587 (TryStatement -> TRY Block Catches .)
    RETURN          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    SYNCHRONIZED    reduce using rule 587 (TryStatement -> TRY Block Catches .)
    THROW           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    TRY             reduce using rule 587 (TryStatement -> TRY Block Catches .)
    FOR             reduce using rule 587 (TryStatement -> TRY Block Catches .)
    FINAL           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    PUBLIC          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    PROTECTED       reduce using rule 587 (TryStatement -> TRY Block Catches .)
    PRIVATE         reduce using rule 587 (TryStatement -> TRY Block Catches .)
    ABSTRACT        reduce using rule 587 (TryStatement -> TRY Block Catches .)
    STATIC          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    STRICTFP        reduce using rule 587 (TryStatement -> TRY Block Catches .)
    EXTENDS         reduce using rule 587 (TryStatement -> TRY Block Catches .)
    INC             reduce using rule 587 (TryStatement -> TRY Block Catches .)
    DEC             reduce using rule 587 (TryStatement -> TRY Block Catches .)
    SUPER           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    ATRATE          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    NEW             reduce using rule 587 (TryStatement -> TRY Block Catches .)
    THIS            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    LPAREN          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    BOOL_LIT        reduce using rule 587 (TryStatement -> TRY Block Catches .)
    NULL_LIT        reduce using rule 587 (TryStatement -> TRY Block Catches .)
    DECIMAL_LIT     reduce using rule 587 (TryStatement -> TRY Block Catches .)
    HEX_LIT         reduce using rule 587 (TryStatement -> TRY Block Catches .)
    OCTAL_LIT       reduce using rule 587 (TryStatement -> TRY Block Catches .)
    BINARY_LIT      reduce using rule 587 (TryStatement -> TRY Block Catches .)
    FLOAT_DEC_LIT   reduce using rule 587 (TryStatement -> TRY Block Catches .)
    FLOAT_HEX_LIT   reduce using rule 587 (TryStatement -> TRY Block Catches .)
    STRING_LIT      reduce using rule 587 (TryStatement -> TRY Block Catches .)
    CHAR_LIT        reduce using rule 587 (TryStatement -> TRY Block Catches .)
    BOOLEAN         reduce using rule 587 (TryStatement -> TRY Block Catches .)
    VOID            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    BYTE            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    SHORT           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    INT             reduce using rule 587 (TryStatement -> TRY Block Catches .)
    LONG            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    CHAR            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    FLOAT           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    DOUBLE          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    CLASS           reduce using rule 587 (TryStatement -> TRY Block Catches .)
    ENUM            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    IMPLEMENTS      reduce using rule 587 (TryStatement -> TRY Block Catches .)
    RBRACE          reduce using rule 587 (TryStatement -> TRY Block Catches .)
    CASE            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    DEFAULT         reduce using rule 587 (TryStatement -> TRY Block Catches .)
    ELSE            reduce using rule 587 (TryStatement -> TRY Block Catches .)
    FINALLY         reduce using rule 590 (ZooCatches -> Catches .)


state 815

    (588) TryStatement -> TRY Block ZooCatches . Finally
    (600) Finally -> . FINALLY Block

    FINALLY         shift and go to state 932

    Finally                        shift and go to state 931

state 816

    (592) Catches -> CatchClause . CatchClauseS
    (593) CatchClauseS -> . CatchClause CatchClauseS
    (594) CatchClauseS -> . empty
    (595) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block
    (1) empty -> .

    CATCH           shift and go to state 818
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    FINALLY         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)

    CatchClause                    shift and go to state 933
    CatchClauseS                   shift and go to state 934
    empty                          shift and go to state 935

state 817

    (591) ZooCatches -> empty .

    FINALLY         reduce using rule 591 (ZooCatches -> empty .)
    IDENT           reduce using rule 591 (ZooCatches -> empty .)
    IF              reduce using rule 591 (ZooCatches -> empty .)
    WHILE           reduce using rule 591 (ZooCatches -> empty .)
    LBRACE          reduce using rule 591 (ZooCatches -> empty .)
    SEMICOLON       reduce using rule 591 (ZooCatches -> empty .)
    ASSERT          reduce using rule 591 (ZooCatches -> empty .)
    SWITCH          reduce using rule 591 (ZooCatches -> empty .)
    DO              reduce using rule 591 (ZooCatches -> empty .)
    BREAK           reduce using rule 591 (ZooCatches -> empty .)
    CONTINUE        reduce using rule 591 (ZooCatches -> empty .)
    RETURN          reduce using rule 591 (ZooCatches -> empty .)
    SYNCHRONIZED    reduce using rule 591 (ZooCatches -> empty .)
    THROW           reduce using rule 591 (ZooCatches -> empty .)
    TRY             reduce using rule 591 (ZooCatches -> empty .)
    FOR             reduce using rule 591 (ZooCatches -> empty .)
    FINAL           reduce using rule 591 (ZooCatches -> empty .)
    PUBLIC          reduce using rule 591 (ZooCatches -> empty .)
    PROTECTED       reduce using rule 591 (ZooCatches -> empty .)
    PRIVATE         reduce using rule 591 (ZooCatches -> empty .)
    ABSTRACT        reduce using rule 591 (ZooCatches -> empty .)
    STATIC          reduce using rule 591 (ZooCatches -> empty .)
    STRICTFP        reduce using rule 591 (ZooCatches -> empty .)
    EXTENDS         reduce using rule 591 (ZooCatches -> empty .)
    INC             reduce using rule 591 (ZooCatches -> empty .)
    DEC             reduce using rule 591 (ZooCatches -> empty .)
    SUPER           reduce using rule 591 (ZooCatches -> empty .)
    ATRATE          reduce using rule 591 (ZooCatches -> empty .)
    NEW             reduce using rule 591 (ZooCatches -> empty .)
    THIS            reduce using rule 591 (ZooCatches -> empty .)
    LPAREN          reduce using rule 591 (ZooCatches -> empty .)
    BOOL_LIT        reduce using rule 591 (ZooCatches -> empty .)
    NULL_LIT        reduce using rule 591 (ZooCatches -> empty .)
    DECIMAL_LIT     reduce using rule 591 (ZooCatches -> empty .)
    HEX_LIT         reduce using rule 591 (ZooCatches -> empty .)
    OCTAL_LIT       reduce using rule 591 (ZooCatches -> empty .)
    BINARY_LIT      reduce using rule 591 (ZooCatches -> empty .)
    FLOAT_DEC_LIT   reduce using rule 591 (ZooCatches -> empty .)
    FLOAT_HEX_LIT   reduce using rule 591 (ZooCatches -> empty .)
    STRING_LIT      reduce using rule 591 (ZooCatches -> empty .)
    CHAR_LIT        reduce using rule 591 (ZooCatches -> empty .)
    BOOLEAN         reduce using rule 591 (ZooCatches -> empty .)
    VOID            reduce using rule 591 (ZooCatches -> empty .)
    BYTE            reduce using rule 591 (ZooCatches -> empty .)
    SHORT           reduce using rule 591 (ZooCatches -> empty .)
    INT             reduce using rule 591 (ZooCatches -> empty .)
    LONG            reduce using rule 591 (ZooCatches -> empty .)
    CHAR            reduce using rule 591 (ZooCatches -> empty .)
    FLOAT           reduce using rule 591 (ZooCatches -> empty .)
    DOUBLE          reduce using rule 591 (ZooCatches -> empty .)
    CLASS           reduce using rule 591 (ZooCatches -> empty .)
    ENUM            reduce using rule 591 (ZooCatches -> empty .)
    IMPLEMENTS      reduce using rule 591 (ZooCatches -> empty .)
    RBRACE          reduce using rule 591 (ZooCatches -> empty .)
    CASE            reduce using rule 591 (ZooCatches -> empty .)
    DEFAULT         reduce using rule 591 (ZooCatches -> empty .)
    ELSE            reduce using rule 591 (ZooCatches -> empty .)


state 818

    (595) CatchClause -> CATCH . LPAREN CatchFormalParameter RPAREN Block

    LPAREN          shift and go to state 936


state 819

    (601) TryWithResourcesStatement -> TRY ResourceSpecification Block . ZooCatches ZooFinally
    (590) ZooCatches -> . Catches
    (591) ZooCatches -> . empty
    (592) Catches -> . CatchClause CatchClauseS
    (1) empty -> .
    (595) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block

    FINALLY         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)
    CATCH           shift and go to state 818

    ZooCatches                     shift and go to state 937
    Catches                        shift and go to state 938
    empty                          shift and go to state 817
    CatchClause                    shift and go to state 816

state 820

    (606) ResourceSpecification -> LPAREN ResourceList . ZooSEMICOLON RPAREN
    (604) ZooSEMICOLON -> . SEMICOLON
    (605) ZooSEMICOLON -> . empty
    (1) empty -> .

    SEMICOLON       shift and go to state 940
    RPAREN          reduce using rule 1 (empty -> .)

    ZooSEMICOLON                   shift and go to state 939
    empty                          shift and go to state 941

state 821

    (607) ResourceList -> Resource . SEMICOLONResourceS
    (608) SEMICOLONResourceS -> . SEMICOLON Resource SEMICOLONResourceS
    (609) SEMICOLONResourceS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 943
    RPAREN          reduce using rule 1 (empty -> .)

  ! SEMICOLON       [ reduce using rule 1 (empty -> .) ]

    SEMICOLONResourceS             shift and go to state 942
    empty                          shift and go to state 944

state 822

    (610) Resource -> VariableModifierS . UnannType VariableDeclaratorId ASSIGN Expression
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 945
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 823

    (564) BasicForStatement -> FOR LPAREN ZooForInit . SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement

    SEMICOLON       shift and go to state 946


state 824

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS . UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (503) LocalVariableDeclaration -> VariableModifierS . UnannType VariableDeclaratorList
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 947
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 825

    (569) ZooForInit -> ForInit .

    SEMICOLON       reduce using rule 569 (ZooForInit -> ForInit .)


state 826

    (570) ZooForInit -> empty .
    (505) VariableModifierS -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 126 (AnnotationS -> empty .)
    SEMICOLON       reduce using rule 570 (ZooForInit -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)

  ! BOOLEAN         [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 505 (VariableModifierS -> empty .) ]


state 827

    (572) ForInit -> StatementExpressionList .

    SEMICOLON       reduce using rule 572 (ForInit -> StatementExpressionList .)


state 828

    (573) ForInit -> LocalVariableDeclaration .

    SEMICOLON       reduce using rule 573 (ForInit -> LocalVariableDeclaration .)


state 829

    (388) VariableModifier -> Annotation .
    (125) AnnotationS -> Annotation . AnnotationS
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! reduce/reduce conflict for IDENT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for BYTE resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for SHORT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for INT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for LONG resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 1 (empty -> .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 1 (empty -> .)
  ! shift/reduce conflict for ATRATE resolved as shift
    FINAL           reduce using rule 388 (VariableModifier -> Annotation .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! INT             [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 388 (VariableModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 388 (VariableModifier -> Annotation .) ]

    Annotation                     shift and go to state 90
    AnnotationS                    shift and go to state 193
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 830

    (575) StatementExpressionList -> StatementExpression . COMMAStatementExpressionS
    (576) COMMAStatementExpressionS -> . COMMA StatementExpression COMMAStatementExpressionS
    (577) COMMAStatementExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 949
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAStatementExpressionS      shift and go to state 948
    empty                          shift and go to state 950

state 831

    (277) MethodName -> IDENT .
    (271) TypeName -> IDENT .
    (275) ExpressionName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (280) AmbiguousName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    ASSIGN          reduce using rule 275 (ExpressionName -> IDENT .)
    MUL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    QUO_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    REM_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    ADD_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SUB_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 275 (ExpressionName -> IDENT .)
    AND_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    XOR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    OR_ASSIGN       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)

  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]


state 832

    (143) MethodInvocation -> TypeName PERIOD SUPER . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (135) FieldAccess -> TypeName PERIOD SUPER . PERIOD IDENT
    (151) MethodReference -> TypeName PERIOD SUPER . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 951
    COLON_SEP       shift and go to state 582


state 833

    (407) ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .

    SEMICOLON       reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    STATIC          reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    LBRACE          reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    PUBLIC          reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    PROTECTED       reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    PRIVATE         reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    FINAL           reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    TRANSIENT       reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    VOLATILE        reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    ABSTRACT        reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    SYNCHRONIZED    reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    NATIVE          reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    STRICTFP        reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    EXTENDS         reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    ATRATE          reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    LSS             reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    IDENT           reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    BOOLEAN         reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    BYTE            reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    SHORT           reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    INT             reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    LONG            reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    CHAR            reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    FLOAT           reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    DOUBLE          reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    VOID            reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    CLASS           reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    ENUM            reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    IMPLEMENTS      reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    INTERFACE       reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)
    RBRACE          reduce using rule 407 (ConstructorDeclaration -> ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody .)


state 834

    (414) ConstructorBody -> LBRACE . ZooExplicitConstructorInvocation ZooBlockStatements RBRACE
    (415) ZooExplicitConstructorInvocation -> . ExplicitConstructorInvocation
    (416) ZooExplicitConstructorInvocation -> . empty
    (419) ExplicitConstructorInvocation -> . ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON
    (420) ExplicitConstructorInvocation -> . ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (421) ExplicitConstructorInvocation -> . ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (422) ExplicitConstructorInvocation -> . Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (1) empty -> .
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for BOOL_LIT resolved as shift
  ! shift/reduce conflict for NULL_LIT resolved as shift
  ! shift/reduce conflict for DECIMAL_LIT resolved as shift
  ! shift/reduce conflict for HEX_LIT resolved as shift
  ! shift/reduce conflict for OCTAL_LIT resolved as shift
  ! shift/reduce conflict for BINARY_LIT resolved as shift
  ! shift/reduce conflict for FLOAT_DEC_LIT resolved as shift
  ! shift/reduce conflict for FLOAT_HEX_LIT resolved as shift
  ! shift/reduce conflict for STRING_LIT resolved as shift
  ! shift/reduce conflict for CHAR_LIT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for SUPER resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 234
    LSS             shift and go to state 280
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! SUPER           [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]
  ! NEW             [ reduce using rule 1 (empty -> .) ]
  ! THIS            [ reduce using rule 1 (empty -> .) ]
  ! LPAREN          [ reduce using rule 1 (empty -> .) ]
  ! BOOL_LIT        [ reduce using rule 1 (empty -> .) ]
  ! NULL_LIT        [ reduce using rule 1 (empty -> .) ]
  ! DECIMAL_LIT     [ reduce using rule 1 (empty -> .) ]
  ! HEX_LIT         [ reduce using rule 1 (empty -> .) ]
  ! OCTAL_LIT       [ reduce using rule 1 (empty -> .) ]
  ! BINARY_LIT      [ reduce using rule 1 (empty -> .) ]
  ! FLOAT_DEC_LIT   [ reduce using rule 1 (empty -> .) ]
  ! FLOAT_HEX_LIT   [ reduce using rule 1 (empty -> .) ]
  ! STRING_LIT      [ reduce using rule 1 (empty -> .) ]
  ! CHAR_LIT        [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! VOID            [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooExplicitConstructorInvocation shift and go to state 952
    ExplicitConstructorInvocation  shift and go to state 953
    empty                          shift and go to state 954
    ZooTypeArguments               shift and go to state 955
    ExpressionName                 shift and go to state 956
    Primary                        shift and go to state 957
    TypeArguments                  shift and go to state 278
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    TypeName                       shift and go to state 99
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 835

    (395) Throws -> THROWS ExceptionTypeList .

    LBRACE          reduce using rule 395 (Throws -> THROWS ExceptionTypeList .)
    SEMICOLON       reduce using rule 395 (Throws -> THROWS ExceptionTypeList .)


state 836

    (398) ExceptionTypeList -> ExceptionType . COMMAExceptionTypeS
    (396) COMMAExceptionTypeS -> . COMMA ExceptionType COMMAExceptionTypeS
    (397) COMMAExceptionTypeS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 959
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAExceptionTypeS            shift and go to state 958
    empty                          shift and go to state 960

state 837

    (399) ExceptionType -> ClassType .
    (461) ClassOrInterfaceType -> ClassType .
    (465) InterfaceType -> ClassType .

  ! reduce/reduce conflict for PERIOD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
    COMMA           reduce using rule 399 (ExceptionType -> ClassType .)
    LBRACE          reduce using rule 399 (ExceptionType -> ClassType .)
    SEMICOLON       reduce using rule 399 (ExceptionType -> ClassType .)
    PERIOD          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)

  ! PERIOD          [ reduce using rule 465 (InterfaceType -> ClassType .) ]


state 838

    (400) ExceptionType -> TypeVariable .

    COMMA           reduce using rule 400 (ExceptionType -> TypeVariable .)
    LBRACE          reduce using rule 400 (ExceptionType -> TypeVariable .)
    SEMICOLON       reduce using rule 400 (ExceptionType -> TypeVariable .)


state 839

    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (466) TypeVariable -> AnnotationS . IDENT

    IDENT           shift and go to state 291


state 840

    (412) ConstructorDeclarator -> ZooTypeParameters SimpleTypeName LPAREN . ZooFormalParameterList RPAREN
    (375) ZooFormalParameterList -> . FormalParameterList
    (376) ZooFormalParameterList -> . empty
    (378) FormalParameterList -> . ReceiverParameter
    (379) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (380) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (394) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (383) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (384) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (390) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (391) LastFormalParameter -> . FormalParameter
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (387) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (385) ZooVariableModifier -> . VariableModifier
    (386) ZooVariableModifier -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 362
    ATRATE          shift and go to state 13

    ZooFormalParameterList         shift and go to state 961
    FormalParameterList            shift and go to state 350
    empty                          shift and go to state 351
    ReceiverParameter              shift and go to state 354
    FormalParameters               shift and go to state 355
    LastFormalParameter            shift and go to state 356
    AnnotationS                    shift and go to state 962
    FormalParameter                shift and go to state 358
    VariableModifierS              shift and go to state 359
    Annotation                     shift and go to state 357
    ZooVariableModifier            shift and go to state 360
    VariableModifier               shift and go to state 361
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 841

    (322) FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .

    SEMICOLON       reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STATIC          reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LBRACE          reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PUBLIC          reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PROTECTED       reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PRIVATE         reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FINAL           reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    TRANSIENT       reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    VOLATILE        reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ABSTRACT        reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    SYNCHRONIZED    reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    NATIVE          reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STRICTFP        reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    EXTENDS         reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ATRATE          reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LSS             reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IDENT           reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BOOLEAN         reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BYTE            reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    SHORT           reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INT             reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LONG            reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CHAR            reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FLOAT           reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    DOUBLE          reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    VOID            reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CLASS           reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ENUM            reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IMPLEMENTS      reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INTERFACE       reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)
    RBRACE          reduce using rule 322 (FieldDeclaration -> FieldModifierS UnannType VariableDeclaratorList SEMICOLON .)


state 842

    (333) VariableDeclaratorList -> VariableDeclarator COMMAVariableDeclaratorS .

    SEMICOLON       reduce using rule 333 (VariableDeclaratorList -> VariableDeclarator COMMAVariableDeclaratorS .)


state 843

    (331) COMMAVariableDeclaratorS -> COMMA . VariableDeclarator COMMAVariableDeclaratorS
    (336) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclarator             shift and go to state 963
    VariableDeclaratorId           shift and go to state 704

state 844

    (332) COMMAVariableDeclaratorS -> empty .

    SEMICOLON       reduce using rule 332 (COMMAVariableDeclaratorS -> empty .)


state 845

    (336) VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer .

    COMMA           reduce using rule 336 (VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer .)
    SEMICOLON       reduce using rule 336 (VariableDeclarator -> VariableDeclaratorId ZooASSIGNVariableInitializer .)


state 846

    (334) ZooASSIGNVariableInitializer -> ASSIGN . VariableInitializer
    (338) VariableInitializer -> . Expression
    (339) VariableInitializer -> . ArrayInitializer
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (94) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    LBRACE          shift and go to state 629
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    VariableInitializer            shift and go to state 964
    Expression                     shift and go to state 772
    ArrayInitializer               shift and go to state 773
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 847

    (335) ZooASSIGNVariableInitializer -> empty .

    COMMA           reduce using rule 335 (ZooASSIGNVariableInitializer -> empty .)
    SEMICOLON       reduce using rule 335 (ZooASSIGNVariableInitializer -> empty .)


state 848

    (337) VariableDeclaratorId -> IDENT ZooDims .

    ASSIGN          reduce using rule 337 (VariableDeclaratorId -> IDENT ZooDims .)
    COMMA           reduce using rule 337 (VariableDeclaratorId -> IDENT ZooDims .)
    SEMICOLON       reduce using rule 337 (VariableDeclaratorId -> IDENT ZooDims .)
    RPAREN          reduce using rule 337 (VariableDeclaratorId -> IDENT ZooDims .)
    COLON           reduce using rule 337 (VariableDeclaratorId -> IDENT ZooDims .)


state 849

    (350) UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS . IDENT ZooTypeArguments

    IDENT           shift and go to state 965


state 850

    (371) MethodHeader -> Result MethodDeclarator ZooThrows .

    SEMICOLON       reduce using rule 371 (MethodHeader -> Result MethodDeclarator ZooThrows .)
    LBRACE          reduce using rule 371 (MethodHeader -> Result MethodDeclarator ZooThrows .)


state 851

    (377) MethodDeclarator -> IDENT LPAREN . ZooFormalParameterList RPAREN ZooDims
    (375) ZooFormalParameterList -> . FormalParameterList
    (376) ZooFormalParameterList -> . empty
    (378) FormalParameterList -> . ReceiverParameter
    (379) FormalParameterList -> . FormalParameters COMMA LastFormalParameter
    (380) FormalParameterList -> . LastFormalParameter
    (1) empty -> .
    (394) ReceiverParameter -> . AnnotationS UnannType ZooIDENTPERIOD THIS
    (383) FormalParameters -> . FormalParameter COMMAFormalParameterS
    (384) FormalParameters -> . ReceiverParameter COMMAFormalParameterS
    (390) LastFormalParameter -> . VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId
    (391) LastFormalParameter -> . FormalParameter
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (387) FormalParameter -> . ZooVariableModifier UnannType VariableDeclaratorId
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (385) ZooVariableModifier -> . VariableModifier
    (386) ZooVariableModifier -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 362
    ATRATE          shift and go to state 13

    ZooFormalParameterList         shift and go to state 966
    FormalParameterList            shift and go to state 350
    empty                          shift and go to state 351
    ReceiverParameter              shift and go to state 354
    FormalParameters               shift and go to state 355
    LastFormalParameter            shift and go to state 356
    AnnotationS                    shift and go to state 962
    FormalParameter                shift and go to state 358
    VariableModifierS              shift and go to state 359
    Annotation                     shift and go to state 357
    ZooVariableModifier            shift and go to state 360
    VariableModifier               shift and go to state 361
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 852

    (372) MethodHeader -> TypeParameters AnnotationS Result . MethodDeclarator ZooThrows
    (377) MethodDeclarator -> . IDENT LPAREN ZooFormalParameterList RPAREN ZooDims

    IDENT           shift and go to state 715

    MethodDeclarator               shift and go to state 967

state 853

    (29) InterfaceBody -> LBRACE InterfaceMemberDeclarationS . RBRACE

    RBRACE          shift and go to state 968


state 854

    (30) InterfaceMemberDeclarationS -> InterfaceMemberDeclaration . InterfaceMemberDeclarationS
    (30) InterfaceMemberDeclarationS -> . InterfaceMemberDeclaration InterfaceMemberDeclarationS
    (31) InterfaceMemberDeclarationS -> . empty
    (32) InterfaceMemberDeclaration -> . ConstantDeclaration
    (33) InterfaceMemberDeclaration -> . InterfaceMethodDeclaration
    (34) InterfaceMemberDeclaration -> . ClassDeclaration
    (35) InterfaceMemberDeclaration -> . InterfaceDeclaration
    (36) InterfaceMemberDeclaration -> . SEMICOLON
    (1) empty -> .
    (37) ConstantDeclaration -> . ConstantModifierS UnannType VariableDeclaratorList SEMICOLON
    (44) InterfaceMethodDeclaration -> . InterfaceMethodModifierS MethodHeader MethodBody
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (38) ConstantModifierS -> . ConstantModifier ConstantModifierS
    (39) ConstantModifierS -> . empty
    (45) InterfaceMethodModifierS -> . InterfaceMethodModifier InterfaceMethodModifierS
    (46) InterfaceMethodModifierS -> . empty
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (40) ConstantModifier -> . Annotation
    (41) ConstantModifier -> . PUBLIC
    (42) ConstantModifier -> . STATIC
    (43) ConstantModifier -> . FINAL
    (47) InterfaceMethodModifier -> . Annotation
    (48) InterfaceMethodModifier -> . PUBLIC
    (49) InterfaceMethodModifier -> . ABSTRACT
    (50) InterfaceMethodModifier -> . DEFAULT
    (51) InterfaceMethodModifier -> . STATIC
    (52) InterfaceMethodModifier -> . STRICTFP
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    SEMICOLON       shift and go to state 860
    RBRACE          reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 864
    STATIC          shift and go to state 865
    FINAL           shift and go to state 737
    ABSTRACT        shift and go to state 866
    DEFAULT         shift and go to state 867
    STRICTFP        shift and go to state 868
    PROTECTED       shift and go to state 46
    PRIVATE         shift and go to state 47
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    InterfaceMemberDeclaration     shift and go to state 854
    InterfaceMemberDeclarationS    shift and go to state 969
    empty                          shift and go to state 855
    ConstantDeclaration            shift and go to state 856
    InterfaceMethodDeclaration     shift and go to state 857
    ClassDeclaration               shift and go to state 858
    InterfaceDeclaration           shift and go to state 859
    ConstantModifierS              shift and go to state 730
    InterfaceMethodModifierS       shift and go to state 861
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstantModifier               shift and go to state 732
    InterfaceMethodModifier        shift and go to state 862
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 863
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 855

    (31) InterfaceMemberDeclarationS -> empty .
    (39) ConstantModifierS -> empty .
    (46) InterfaceMethodModifierS -> empty .
    (424) ClassModifierS -> empty .
    (286) ZooSuperClass -> empty .
    (20) InterfaceModifierS -> empty .

  ! reduce/reduce conflict for BOOLEAN resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 39 (ConstantModifierS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 39 (ConstantModifierS -> empty .)
    RBRACE          reduce using rule 31 (InterfaceMemberDeclarationS -> empty .)
    BOOLEAN         reduce using rule 39 (ConstantModifierS -> empty .)
    IDENT           reduce using rule 39 (ConstantModifierS -> empty .)
    BYTE            reduce using rule 39 (ConstantModifierS -> empty .)
    SHORT           reduce using rule 39 (ConstantModifierS -> empty .)
    INT             reduce using rule 39 (ConstantModifierS -> empty .)
    LONG            reduce using rule 39 (ConstantModifierS -> empty .)
    CHAR            reduce using rule 39 (ConstantModifierS -> empty .)
    FLOAT           reduce using rule 39 (ConstantModifierS -> empty .)
    DOUBLE          reduce using rule 39 (ConstantModifierS -> empty .)
    VOID            reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    LSS             reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 286 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 286 (ZooSuperClass -> empty .)
    INTERFACE       reduce using rule 20 (InterfaceModifierS -> empty .)
    ATRATE          reduce using rule 20 (InterfaceModifierS -> empty .)

  ! BOOLEAN         [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! INT             [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! LONG            [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 46 (InterfaceMethodModifierS -> empty .) ]


state 856

    (32) InterfaceMemberDeclaration -> ConstantDeclaration .

    SEMICOLON       reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    PUBLIC          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    STATIC          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    FINAL           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    ABSTRACT        reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    DEFAULT         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    STRICTFP        reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    PROTECTED       reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    PRIVATE         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    EXTENDS         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    ATRATE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    BOOLEAN         reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    IDENT           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    BYTE            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    SHORT           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    INT             reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    LONG            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    CHAR            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    FLOAT           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    DOUBLE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    VOID            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    LSS             reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    CLASS           reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    ENUM            reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    IMPLEMENTS      reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    LBRACE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    INTERFACE       reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)
    RBRACE          reduce using rule 32 (InterfaceMemberDeclaration -> ConstantDeclaration .)


state 857

    (33) InterfaceMemberDeclaration -> InterfaceMethodDeclaration .

    SEMICOLON       reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    PUBLIC          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    STATIC          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    FINAL           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    ABSTRACT        reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    DEFAULT         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    STRICTFP        reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    PROTECTED       reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    PRIVATE         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    EXTENDS         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    ATRATE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    BOOLEAN         reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    IDENT           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    BYTE            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    SHORT           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    INT             reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    LONG            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    CHAR            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    FLOAT           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    DOUBLE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    VOID            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    LSS             reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    CLASS           reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    ENUM            reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    IMPLEMENTS      reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    LBRACE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    INTERFACE       reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)
    RBRACE          reduce using rule 33 (InterfaceMemberDeclaration -> InterfaceMethodDeclaration .)


state 858

    (34) InterfaceMemberDeclaration -> ClassDeclaration .

    SEMICOLON       reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    ABSTRACT        reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    DEFAULT         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    STRICTFP        reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    EXTENDS         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    ATRATE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    BOOLEAN         reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    IDENT           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    BYTE            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    SHORT           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    INT             reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    LONG            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    CHAR            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    FLOAT           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    DOUBLE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    VOID            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    LSS             reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    ENUM            reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    IMPLEMENTS      reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    LBRACE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    INTERFACE       reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)
    RBRACE          reduce using rule 34 (InterfaceMemberDeclaration -> ClassDeclaration .)


state 859

    (35) InterfaceMemberDeclaration -> InterfaceDeclaration .

    SEMICOLON       reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    PUBLIC          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    STATIC          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    FINAL           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    ABSTRACT        reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    DEFAULT         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    STRICTFP        reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    PROTECTED       reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    PRIVATE         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    EXTENDS         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    ATRATE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    BOOLEAN         reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    IDENT           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    BYTE            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    SHORT           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    INT             reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    LONG            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    CHAR            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    FLOAT           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    DOUBLE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    VOID            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    LSS             reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    CLASS           reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    ENUM            reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    IMPLEMENTS      reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    LBRACE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    INTERFACE       reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)
    RBRACE          reduce using rule 35 (InterfaceMemberDeclaration -> InterfaceDeclaration .)


state 860

    (36) InterfaceMemberDeclaration -> SEMICOLON .

    SEMICOLON       reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    PUBLIC          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    STATIC          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    FINAL           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    ABSTRACT        reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    DEFAULT         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    STRICTFP        reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    PROTECTED       reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    PRIVATE         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    EXTENDS         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    ATRATE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    BOOLEAN         reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    IDENT           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    BYTE            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    SHORT           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    INT             reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    LONG            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    CHAR            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    FLOAT           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    DOUBLE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    VOID            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    LSS             reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    CLASS           reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    ENUM            reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    IMPLEMENTS      reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    LBRACE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    INTERFACE       reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)
    RBRACE          reduce using rule 36 (InterfaceMemberDeclaration -> SEMICOLON .)


state 861

    (44) InterfaceMethodDeclaration -> InterfaceMethodModifierS . MethodHeader MethodBody
    (371) MethodHeader -> . Result MethodDeclarator ZooThrows
    (372) MethodHeader -> . TypeParameters AnnotationS Result MethodDeclarator ZooThrows
    (373) Result -> . UnannType
    (374) Result -> . VOID
    (299) TypeParameters -> . LSS TypeParameterList GTR
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    VOID            shift and go to state 546
    LSS             shift and go to state 297
    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    MethodHeader                   shift and go to state 970
    Result                         shift and go to state 543
    TypeParameters                 shift and go to state 544
    UnannType                      shift and go to state 545
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 862

    (45) InterfaceMethodModifierS -> InterfaceMethodModifier . InterfaceMethodModifierS
    (45) InterfaceMethodModifierS -> . InterfaceMethodModifier InterfaceMethodModifierS
    (46) InterfaceMethodModifierS -> . empty
    (47) InterfaceMethodModifier -> . Annotation
    (48) InterfaceMethodModifier -> . PUBLIC
    (49) InterfaceMethodModifier -> . ABSTRACT
    (50) InterfaceMethodModifier -> . DEFAULT
    (51) InterfaceMethodModifier -> . STATIC
    (52) InterfaceMethodModifier -> . STRICTFP
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    PUBLIC          shift and go to state 974
    ABSTRACT        shift and go to state 975
    DEFAULT         shift and go to state 867
    STATIC          shift and go to state 976
    STRICTFP        shift and go to state 977
    VOID            reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    InterfaceMethodModifier        shift and go to state 862
    InterfaceMethodModifierS       shift and go to state 971
    empty                          shift and go to state 972
    Annotation                     shift and go to state 973
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 863

    (40) ConstantModifier -> Annotation .
    (47) InterfaceMethodModifier -> Annotation .
    (291) ClassModifier -> Annotation .
    (21) InterfaceModifier -> Annotation .

  ! reduce/reduce conflict for PUBLIC resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for IDENT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for BYTE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for SHORT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for INT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for LONG resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for FLOAT resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 47 (InterfaceMethodModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for FINAL resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 47 (InterfaceMethodModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 40 (ConstantModifier -> Annotation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STATIC resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 21 (InterfaceModifier -> Annotation .)
  ! reduce/reduce conflict for ATRATE resolved using rule 21 (InterfaceModifier -> Annotation .)
    FINAL           reduce using rule 40 (ConstantModifier -> Annotation .)
    BOOLEAN         reduce using rule 40 (ConstantModifier -> Annotation .)
    IDENT           reduce using rule 40 (ConstantModifier -> Annotation .)
    BYTE            reduce using rule 40 (ConstantModifier -> Annotation .)
    SHORT           reduce using rule 40 (ConstantModifier -> Annotation .)
    INT             reduce using rule 40 (ConstantModifier -> Annotation .)
    LONG            reduce using rule 40 (ConstantModifier -> Annotation .)
    CHAR            reduce using rule 40 (ConstantModifier -> Annotation .)
    FLOAT           reduce using rule 40 (ConstantModifier -> Annotation .)
    DOUBLE          reduce using rule 40 (ConstantModifier -> Annotation .)
    DEFAULT         reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    VOID            reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    LSS             reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    CLASS           reduce using rule 291 (ClassModifier -> Annotation .)
    ENUM            reduce using rule 291 (ClassModifier -> Annotation .)
    PUBLIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    PROTECTED       reduce using rule 21 (InterfaceModifier -> Annotation .)
    PRIVATE         reduce using rule 21 (InterfaceModifier -> Annotation .)
    ABSTRACT        reduce using rule 21 (InterfaceModifier -> Annotation .)
    STATIC          reduce using rule 21 (InterfaceModifier -> Annotation .)
    STRICTFP        reduce using rule 21 (InterfaceModifier -> Annotation .)
    ATRATE          reduce using rule 21 (InterfaceModifier -> Annotation .)
    INTERFACE       reduce using rule 21 (InterfaceModifier -> Annotation .)

  ! PUBLIC          [ reduce using rule 40 (ConstantModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 40 (ConstantModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 40 (ConstantModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! BOOLEAN         [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! IDENT           [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! BYTE            [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! SHORT           [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! INT             [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! LONG            [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! CHAR            [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! FLOAT           [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! DOUBLE          [ reduce using rule 47 (InterfaceMethodModifier -> Annotation .) ]
  ! PUBLIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PROTECTED       [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! PRIVATE         [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ABSTRACT        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STATIC          [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! FINAL           [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! STRICTFP        [ reduce using rule 291 (ClassModifier -> Annotation .) ]
  ! ATRATE          [ reduce using rule 291 (ClassModifier -> Annotation .) ]


state 864

    (41) ConstantModifier -> PUBLIC .
    (48) InterfaceMethodModifier -> PUBLIC .
    (292) ClassModifier -> PUBLIC .
    (22) InterfaceModifier -> PUBLIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for INT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for LONG resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 48 (InterfaceMethodModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 48 (InterfaceMethodModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 41 (ConstantModifier -> PUBLIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 22 (InterfaceModifier -> PUBLIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 22 (InterfaceModifier -> PUBLIC .)
    FINAL           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 41 (ConstantModifier -> PUBLIC .)
    IDENT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    BYTE            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    SHORT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    INT             reduce using rule 41 (ConstantModifier -> PUBLIC .)
    LONG            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    CHAR            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    FLOAT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    DOUBLE          reduce using rule 41 (ConstantModifier -> PUBLIC .)
    DEFAULT         reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    VOID            reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    LSS             reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    CLASS           reduce using rule 292 (ClassModifier -> PUBLIC .)
    ENUM            reduce using rule 292 (ClassModifier -> PUBLIC .)
    PUBLIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PROTECTED       reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    PRIVATE         reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STATIC          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    STRICTFP        reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    ATRATE          reduce using rule 22 (InterfaceModifier -> PUBLIC .)
    INTERFACE       reduce using rule 22 (InterfaceModifier -> PUBLIC .)

  ! PUBLIC          [ reduce using rule 41 (ConstantModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 41 (ConstantModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 41 (ConstantModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! BOOLEAN         [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! IDENT           [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! BYTE            [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! SHORT           [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! INT             [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! LONG            [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! CHAR            [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! FLOAT           [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! DOUBLE          [ reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .) ]
  ! PUBLIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PROTECTED       [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! PRIVATE         [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ABSTRACT        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STATIC          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! FINAL           [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! STRICTFP        [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]
  ! ATRATE          [ reduce using rule 292 (ClassModifier -> PUBLIC .) ]


state 865

    (42) ConstantModifier -> STATIC .
    (51) InterfaceMethodModifier -> STATIC .
    (296) ClassModifier -> STATIC .
    (26) InterfaceModifier -> STATIC .

  ! reduce/reduce conflict for PUBLIC resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for IDENT resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for BYTE resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for SHORT resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for INT resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for LONG resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for CHAR resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for FLOAT resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 51 (InterfaceMethodModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for FINAL resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 51 (InterfaceMethodModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 42 (ConstantModifier -> STATIC .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STATIC resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 26 (InterfaceModifier -> STATIC .)
  ! reduce/reduce conflict for ATRATE resolved using rule 26 (InterfaceModifier -> STATIC .)
    FINAL           reduce using rule 42 (ConstantModifier -> STATIC .)
    BOOLEAN         reduce using rule 42 (ConstantModifier -> STATIC .)
    IDENT           reduce using rule 42 (ConstantModifier -> STATIC .)
    BYTE            reduce using rule 42 (ConstantModifier -> STATIC .)
    SHORT           reduce using rule 42 (ConstantModifier -> STATIC .)
    INT             reduce using rule 42 (ConstantModifier -> STATIC .)
    LONG            reduce using rule 42 (ConstantModifier -> STATIC .)
    CHAR            reduce using rule 42 (ConstantModifier -> STATIC .)
    FLOAT           reduce using rule 42 (ConstantModifier -> STATIC .)
    DOUBLE          reduce using rule 42 (ConstantModifier -> STATIC .)
    DEFAULT         reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    VOID            reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    LSS             reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    CLASS           reduce using rule 296 (ClassModifier -> STATIC .)
    ENUM            reduce using rule 296 (ClassModifier -> STATIC .)
    PUBLIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    PROTECTED       reduce using rule 26 (InterfaceModifier -> STATIC .)
    PRIVATE         reduce using rule 26 (InterfaceModifier -> STATIC .)
    ABSTRACT        reduce using rule 26 (InterfaceModifier -> STATIC .)
    STATIC          reduce using rule 26 (InterfaceModifier -> STATIC .)
    STRICTFP        reduce using rule 26 (InterfaceModifier -> STATIC .)
    ATRATE          reduce using rule 26 (InterfaceModifier -> STATIC .)
    INTERFACE       reduce using rule 26 (InterfaceModifier -> STATIC .)

  ! PUBLIC          [ reduce using rule 42 (ConstantModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 42 (ConstantModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 42 (ConstantModifier -> STATIC .) ]
  ! PUBLIC          [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! BOOLEAN         [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! IDENT           [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! BYTE            [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! SHORT           [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! INT             [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! LONG            [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! CHAR            [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! FLOAT           [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! DOUBLE          [ reduce using rule 51 (InterfaceMethodModifier -> STATIC .) ]
  ! PUBLIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PROTECTED       [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! PRIVATE         [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ABSTRACT        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STATIC          [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! FINAL           [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! STRICTFP        [ reduce using rule 296 (ClassModifier -> STATIC .) ]
  ! ATRATE          [ reduce using rule 296 (ClassModifier -> STATIC .) ]


state 866

    (49) InterfaceMethodModifier -> ABSTRACT .
    (295) ClassModifier -> ABSTRACT .
    (25) InterfaceModifier -> ABSTRACT .

  ! reduce/reduce conflict for PUBLIC resolved using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STATIC resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
  ! reduce/reduce conflict for ATRATE resolved using rule 25 (InterfaceModifier -> ABSTRACT .)
    DEFAULT         reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    VOID            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    LSS             reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    INT             reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    LONG            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    FINAL           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    CLASS           reduce using rule 295 (ClassModifier -> ABSTRACT .)
    ENUM            reduce using rule 295 (ClassModifier -> ABSTRACT .)
    PUBLIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PROTECTED       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    PRIVATE         reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STATIC          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    ATRATE          reduce using rule 25 (InterfaceModifier -> ABSTRACT .)
    INTERFACE       reduce using rule 25 (InterfaceModifier -> ABSTRACT .)

  ! PUBLIC          [ reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .) ]
  ! PUBLIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PROTECTED       [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! PRIVATE         [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ABSTRACT        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STATIC          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! STRICTFP        [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]
  ! ATRATE          [ reduce using rule 295 (ClassModifier -> ABSTRACT .) ]


state 867

    (50) InterfaceMethodModifier -> DEFAULT .

    PUBLIC          reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    ABSTRACT        reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    DEFAULT         reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    STATIC          reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    STRICTFP        reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    ATRATE          reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    VOID            reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    LSS             reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    BOOLEAN         reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    IDENT           reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    BYTE            reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    SHORT           reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    INT             reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    LONG            reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    CHAR            reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    FLOAT           reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)
    DOUBLE          reduce using rule 50 (InterfaceMethodModifier -> DEFAULT .)


state 868

    (52) InterfaceMethodModifier -> STRICTFP .
    (298) ClassModifier -> STRICTFP .
    (27) InterfaceModifier -> STRICTFP .

  ! reduce/reduce conflict for PUBLIC resolved using rule 52 (InterfaceMethodModifier -> STRICTFP .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 52 (InterfaceMethodModifier -> STRICTFP .)
  ! reduce/reduce conflict for STATIC resolved using rule 52 (InterfaceMethodModifier -> STRICTFP .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 52 (InterfaceMethodModifier -> STRICTFP .)
  ! reduce/reduce conflict for ATRATE resolved using rule 52 (InterfaceMethodModifier -> STRICTFP .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STATIC resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for STRICTFP resolved using rule 27 (InterfaceModifier -> STRICTFP .)
  ! reduce/reduce conflict for ATRATE resolved using rule 27 (InterfaceModifier -> STRICTFP .)
    DEFAULT         reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    VOID            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    LSS             reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    IDENT           reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    BYTE            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    SHORT           reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    INT             reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    LONG            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    CHAR            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    FINAL           reduce using rule 298 (ClassModifier -> STRICTFP .)
    CLASS           reduce using rule 298 (ClassModifier -> STRICTFP .)
    ENUM            reduce using rule 298 (ClassModifier -> STRICTFP .)
    PUBLIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PROTECTED       reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    PRIVATE         reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STATIC          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    STRICTFP        reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    ATRATE          reduce using rule 27 (InterfaceModifier -> STRICTFP .)
    INTERFACE       reduce using rule 27 (InterfaceModifier -> STRICTFP .)

  ! PUBLIC          [ reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .) ]
  ! ABSTRACT        [ reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .) ]
  ! STATIC          [ reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .) ]
  ! STRICTFP        [ reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .) ]
  ! ATRATE          [ reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .) ]
  ! PUBLIC          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! PROTECTED       [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! PRIVATE         [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! ABSTRACT        [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! STATIC          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! STRICTFP        [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]
  ! ATRATE          [ reduce using rule 298 (ClassModifier -> STRICTFP .) ]


state 869

    (54) AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .

    SEMICOLON       reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    PUBLIC          reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    PROTECTED       reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    PRIVATE         reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    ABSTRACT        reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    STATIC          reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    FINAL           reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    STRICTFP        reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    EXTENDS         reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    ATRATE          reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    CLASS           reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    ENUM            reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    IMPLEMENTS      reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    LBRACE          reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    INTERFACE       reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    $end            reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    TRANSIENT       reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    VOLATILE        reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    SYNCHRONIZED    reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    NATIVE          reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    LSS             reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    IDENT           reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    BOOLEAN         reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    BYTE            reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    SHORT           reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    INT             reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    LONG            reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    CHAR            reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    FLOAT           reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    DOUBLE          reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    VOID            reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    RBRACE          reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)
    DEFAULT         reduce using rule 54 (AnnotationTypeBody -> LBRACE AnnotationTypeMemberDeclarationS RBRACE .)


state 870

    (55) AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS .

    RBRACE          reduce using rule 55 (AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarationS .)


state 871

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType . IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON

    IDENT           shift and go to state 978


state 872

    (37) ConstantDeclaration -> ConstantModifierS UnannType . VariableDeclaratorList SEMICOLON
    (333) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (336) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclaratorList         shift and go to state 979
    VariableDeclarator             shift and go to state 703
    VariableDeclaratorId           shift and go to state 704

state 873

    (67) AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .

    BOOLEAN         reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    IDENT           reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    BYTE            reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    SHORT           reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    INT             reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    LONG            reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    CHAR            reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    FLOAT           reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)
    DOUBLE          reduce using rule 67 (AnnotationTypeElementModifierS -> AnnotationTypeElementModifier AnnotationTypeElementModifierS .)


state 874

    (68) AnnotationTypeElementModifierS -> empty .

    BOOLEAN         reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    IDENT           reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    BYTE            reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    SHORT           reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    INT             reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    LONG            reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    CHAR            reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    FLOAT           reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)
    DOUBLE          reduce using rule 68 (AnnotationTypeElementModifierS -> empty .)


state 875

    (69) AnnotationTypeElementModifier -> Annotation .

    PUBLIC          reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    ABSTRACT        reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    ATRATE          reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    BOOLEAN         reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    IDENT           reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    BYTE            reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    SHORT           reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    INT             reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    LONG            reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    CHAR            reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    FLOAT           reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)
    DOUBLE          reduce using rule 69 (AnnotationTypeElementModifier -> Annotation .)


state 876

    (70) AnnotationTypeElementModifier -> PUBLIC .

    PUBLIC          reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    ATRATE          reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    IDENT           reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    BYTE            reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    SHORT           reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    INT             reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    LONG            reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    CHAR            reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    FLOAT           reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)
    DOUBLE          reduce using rule 70 (AnnotationTypeElementModifier -> PUBLIC .)


state 877

    (71) AnnotationTypeElementModifier -> ABSTRACT .

    PUBLIC          reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    ATRATE          reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    IDENT           reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    BYTE            reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    SHORT           reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    INT             reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    LONG            reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    CHAR            reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    FLOAT           reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 71 (AnnotationTypeElementModifier -> ABSTRACT .)


state 878

    (38) ConstantModifierS -> ConstantModifier ConstantModifierS .

    BOOLEAN         reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    IDENT           reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    BYTE            reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    SHORT           reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    INT             reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    LONG            reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    CHAR            reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    FLOAT           reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)
    DOUBLE          reduce using rule 38 (ConstantModifierS -> ConstantModifier ConstantModifierS .)


state 879

    (39) ConstantModifierS -> empty .

    BOOLEAN         reduce using rule 39 (ConstantModifierS -> empty .)
    IDENT           reduce using rule 39 (ConstantModifierS -> empty .)
    BYTE            reduce using rule 39 (ConstantModifierS -> empty .)
    SHORT           reduce using rule 39 (ConstantModifierS -> empty .)
    INT             reduce using rule 39 (ConstantModifierS -> empty .)
    LONG            reduce using rule 39 (ConstantModifierS -> empty .)
    CHAR            reduce using rule 39 (ConstantModifierS -> empty .)
    FLOAT           reduce using rule 39 (ConstantModifierS -> empty .)
    DOUBLE          reduce using rule 39 (ConstantModifierS -> empty .)


state 880

    (40) ConstantModifier -> Annotation .

    PUBLIC          reduce using rule 40 (ConstantModifier -> Annotation .)
    STATIC          reduce using rule 40 (ConstantModifier -> Annotation .)
    FINAL           reduce using rule 40 (ConstantModifier -> Annotation .)
    ATRATE          reduce using rule 40 (ConstantModifier -> Annotation .)
    BOOLEAN         reduce using rule 40 (ConstantModifier -> Annotation .)
    IDENT           reduce using rule 40 (ConstantModifier -> Annotation .)
    BYTE            reduce using rule 40 (ConstantModifier -> Annotation .)
    SHORT           reduce using rule 40 (ConstantModifier -> Annotation .)
    INT             reduce using rule 40 (ConstantModifier -> Annotation .)
    LONG            reduce using rule 40 (ConstantModifier -> Annotation .)
    CHAR            reduce using rule 40 (ConstantModifier -> Annotation .)
    FLOAT           reduce using rule 40 (ConstantModifier -> Annotation .)
    DOUBLE          reduce using rule 40 (ConstantModifier -> Annotation .)


state 881

    (41) ConstantModifier -> PUBLIC .

    PUBLIC          reduce using rule 41 (ConstantModifier -> PUBLIC .)
    STATIC          reduce using rule 41 (ConstantModifier -> PUBLIC .)
    FINAL           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    ATRATE          reduce using rule 41 (ConstantModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 41 (ConstantModifier -> PUBLIC .)
    IDENT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    BYTE            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    SHORT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    INT             reduce using rule 41 (ConstantModifier -> PUBLIC .)
    LONG            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    CHAR            reduce using rule 41 (ConstantModifier -> PUBLIC .)
    FLOAT           reduce using rule 41 (ConstantModifier -> PUBLIC .)
    DOUBLE          reduce using rule 41 (ConstantModifier -> PUBLIC .)


state 882

    (42) ConstantModifier -> STATIC .

    PUBLIC          reduce using rule 42 (ConstantModifier -> STATIC .)
    STATIC          reduce using rule 42 (ConstantModifier -> STATIC .)
    FINAL           reduce using rule 42 (ConstantModifier -> STATIC .)
    ATRATE          reduce using rule 42 (ConstantModifier -> STATIC .)
    BOOLEAN         reduce using rule 42 (ConstantModifier -> STATIC .)
    IDENT           reduce using rule 42 (ConstantModifier -> STATIC .)
    BYTE            reduce using rule 42 (ConstantModifier -> STATIC .)
    SHORT           reduce using rule 42 (ConstantModifier -> STATIC .)
    INT             reduce using rule 42 (ConstantModifier -> STATIC .)
    LONG            reduce using rule 42 (ConstantModifier -> STATIC .)
    CHAR            reduce using rule 42 (ConstantModifier -> STATIC .)
    FLOAT           reduce using rule 42 (ConstantModifier -> STATIC .)
    DOUBLE          reduce using rule 42 (ConstantModifier -> STATIC .)


state 883

    (43) ConstantModifier -> FINAL .

    PUBLIC          reduce using rule 43 (ConstantModifier -> FINAL .)
    STATIC          reduce using rule 43 (ConstantModifier -> FINAL .)
    FINAL           reduce using rule 43 (ConstantModifier -> FINAL .)
    ATRATE          reduce using rule 43 (ConstantModifier -> FINAL .)
    BOOLEAN         reduce using rule 43 (ConstantModifier -> FINAL .)
    IDENT           reduce using rule 43 (ConstantModifier -> FINAL .)
    BYTE            reduce using rule 43 (ConstantModifier -> FINAL .)
    SHORT           reduce using rule 43 (ConstantModifier -> FINAL .)
    INT             reduce using rule 43 (ConstantModifier -> FINAL .)
    LONG            reduce using rule 43 (ConstantModifier -> FINAL .)
    CHAR            reduce using rule 43 (ConstantModifier -> FINAL .)
    FLOAT           reduce using rule 43 (ConstantModifier -> FINAL .)
    DOUBLE          reduce using rule 43 (ConstantModifier -> FINAL .)


state 884

    (143) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT . LPAREN ZooArgumentList RPAREN

    LPAREN          shift and go to state 980


state 885

    (151) MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .

    LBRACK          reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    PERIOD          reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON_SEP       reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    INC             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    DEC             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    MUL             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUO             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    REM             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    ADD             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SUB             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHL             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SHR_UN          reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LSS             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    GTR             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LEQ             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    GEQ             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    INSTANCEOF      reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    EQL             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    NEQ             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    AND             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    XOR             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    OR              reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LAND            reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    QUES            reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    LOR             reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    RPAREN          reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    COMMA           reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACE          reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    COLON           reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    RBRACK          reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)
    SEMICOLON       reduce using rule 151 (MethodReference -> TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT .)


state 886

    (139) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 981


state 887

    (169) COMMAIDENTS -> COMMA IDENT COMMAIDENTS .

    RPAREN          reduce using rule 169 (COMMAIDENTS -> COMMA IDENT COMMAIDENTS .)


state 888

    (394) ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS .

    COMMA           reduce using rule 394 (ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS .)
    RPAREN          reduce using rule 394 (ReceiverParameter -> AnnotationS UnannType ZooIDENTPERIOD THIS .)


state 889

    (392) ZooIDENTPERIOD -> IDENT PERIOD .

    THIS            reduce using rule 392 (ZooIDENTPERIOD -> IDENT PERIOD .)


state 890

    (381) COMMAFormalParameterS -> COMMA FormalParameter COMMAFormalParameterS .

    COMMA           reduce using rule 381 (COMMAFormalParameterS -> COMMA FormalParameter COMMAFormalParameterS .)


state 891

    (390) LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS . VariableDeclaratorId
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclaratorId           shift and go to state 982

state 892

    (447) PrimitiveType -> AnnotationS . NumericType
    (448) PrimitiveType -> AnnotationS . BOOLEAN
    (466) TypeVariable -> AnnotationS . IDENT
    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments
    (394) ReceiverParameter -> AnnotationS . UnannType ZooIDENTPERIOD THIS
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 592
    IDENT           shift and go to state 593
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    NumericType                    shift and go to state 591
    UnannType                      shift and go to state 594
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 893

    (141) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 983


state 894

    (140) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 984


state 895

    (471) AnnotationSLBRACERBRACES -> AnnotationS LBRACE . RBRACE AnnotationSLBRACERBRACES

    RBRACE          shift and go to state 985


state 896

    (94) ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA . RBRACE

    RBRACE          shift and go to state 986


state 897

    (97) VariableInitializerList -> VariableInitializer COMMAVariableInitializerS .

    COMMA           reduce using rule 97 (VariableInitializerList -> VariableInitializer COMMAVariableInitializerS .)
    RBRACE          reduce using rule 97 (VariableInitializerList -> VariableInitializer COMMAVariableInitializerS .)


state 898

    (98) COMMAVariableInitializerS -> COMMA . VariableInitializer COMMAVariableInitializerS
    (338) VariableInitializer -> . Expression
    (339) VariableInitializer -> . ArrayInitializer
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (94) ArrayInitializer -> . LBRACE ZooVariableInitializerList ZooCOMMA RBRACE
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    LBRACE          shift and go to state 629
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    VariableInitializer            shift and go to state 987
    Expression                     shift and go to state 772
    ArrayInitializer               shift and go to state 773
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 899

    (99) COMMAVariableInitializerS -> empty .

    COMMA           reduce using rule 99 (COMMAVariableInitializerS -> empty .)
    RBRACE          reduce using rule 99 (COMMAVariableInitializerS -> empty .)


state 900

    (161) DimExpr -> AnnotationS LBRACK Expression RBRACK .

    ATRATE          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LBRACE          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    PERIOD          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    COLON_SEP       reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    INC             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    DEC             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    MUL             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    QUO             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    REM             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    ADD             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SUB             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SHL             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SHR             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SHR_UN          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LSS             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    GTR             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LEQ             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    GEQ             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    INSTANCEOF      reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    EQL             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    NEQ             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    AND             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    XOR             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    OR              reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LAND            reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    QUES            reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    LOR             reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    COMMA           reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    COLON           reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)
    SEMICOLON       reduce using rule 161 (DimExpr -> AnnotationS LBRACK Expression RBRACK .)


state 901

    (121) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN . ZooClassBody
    (439) ZooClassBody -> . ClassBody
    (440) ZooClassBody -> . empty
    (310) ClassBody -> . LBRACE ClassBodyDeclarationS RBRACE
    (1) empty -> .

    LBRACE          shift and go to state 185
    LBRACK          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    COLON_SEP       reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooClassBody                   shift and go to state 988
    ClassBody                      shift and go to state 989
    empty                          shift and go to state 990

state 902

    (124) ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond .

    LPAREN          reduce using rule 124 (ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS ZooTypeArgumentsOrDiamond .)


state 903

    (127) ZooTypeArgumentsOrDiamond -> TypeArgumentsOrDiamond .

    LPAREN          reduce using rule 127 (ZooTypeArgumentsOrDiamond -> TypeArgumentsOrDiamond .)


state 904

    (128) ZooTypeArgumentsOrDiamond -> empty .

    LPAREN          reduce using rule 128 (ZooTypeArgumentsOrDiamond -> empty .)


state 905

    (131) TypeArgumentsOrDiamond -> TypeArguments .

    LPAREN          reduce using rule 131 (TypeArgumentsOrDiamond -> TypeArguments .)


state 906

    (132) TypeArgumentsOrDiamond -> LSS . GTR
    (482) TypeArguments -> LSS . TypeArgumentList GTR
    (483) TypeArgumentList -> . TypeArgument COMMATypeArgumentS
    (486) TypeArgument -> . ReferenceType
    (487) TypeArgument -> . Wildcard
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (488) Wildcard -> . AnnotationS QUES ZooWildcardBounds
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (465) InterfaceType -> . ClassType
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    GTR             shift and go to state 991
    QUES            reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    TypeArgumentList               shift and go to state 439
    TypeArgument                   shift and go to state 440
    ReferenceType                  shift and go to state 441
    Wildcard                       shift and go to state 442
    ClassOrInterfaceType           shift and go to state 208
    TypeVariable                   shift and go to state 172
    ArrayType                      shift and go to state 408
    AnnotationS                    shift and go to state 443
    ClassType                      shift and go to state 277
    InterfaceType                  shift and go to state 92
    PrimitiveType                  shift and go to state 138
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 907

    (129) PERIODAnnotationSIDENTS -> PERIOD AnnotationS . IDENT PERIODAnnotationSIDENTS

    IDENT           shift and go to state 992


state 908

    (484) COMMATypeArgumentS -> COMMA TypeArgument COMMATypeArgumentS .

    GTR             reduce using rule 484 (COMMATypeArgumentS -> COMMA TypeArgument COMMATypeArgumentS .)


state 909

    (491) WildcardBounds -> EXTENDS ReferenceType .

    COMMA           reduce using rule 491 (WildcardBounds -> EXTENDS ReferenceType .)
    GTR             reduce using rule 491 (WildcardBounds -> EXTENDS ReferenceType .)


state 910

    (492) WildcardBounds -> SUPER ReferenceType .

    COMMA           reduce using rule 492 (WildcardBounds -> SUPER ReferenceType .)
    GTR             reduce using rule 492 (WildcardBounds -> SUPER ReferenceType .)


state 911

    (142) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 993


state 912

    (145) COMMAExpressionS -> COMMA Expression COMMAExpressionS .

    RPAREN          reduce using rule 145 (COMMAExpressionS -> COMMA Expression COMMAExpressionS .)


state 913

    (300) COMMMATypeParameterS -> COMMA TypeParameter COMMMATypeParameterS .

    GTR             reduce using rule 300 (COMMMATypeParameterS -> COMMA TypeParameter COMMMATypeParameterS .)


state 914

    (479) TypeBound -> EXTENDS TypeVariable .

    COMMA           reduce using rule 479 (TypeBound -> EXTENDS TypeVariable .)
    GTR             reduce using rule 479 (TypeBound -> EXTENDS TypeVariable .)


state 915

    (480) TypeBound -> EXTENDS ClassOrInterfaceType . AdditionalBoundS
    (464) ClassType -> ClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments
    (244) AdditionalBoundS -> . AdditionalBound AdditionalBoundS
    (245) AdditionalBoundS -> . empty
    (481) AdditionalBound -> . AND InterfaceType
    (1) empty -> .

    PERIOD          shift and go to state 192
    AND             shift and go to state 367
    COMMA           reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)

    AdditionalBoundS               shift and go to state 994
    AdditionalBound                shift and go to state 365
    empty                          shift and go to state 366

state 916

    (466) TypeVariable -> AnnotationS . IDENT
    (463) ClassType -> AnnotationS . IDENT ZooTypeArguments

    IDENT           shift and go to state 369


state 917

    (432) EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations . RBRACE

    RBRACE          shift and go to state 995


state 918

    (430) ZooEnumBodyDeclarations -> EnumBodyDeclarations .

    RBRACE          reduce using rule 430 (ZooEnumBodyDeclarations -> EnumBodyDeclarations .)


state 919

    (431) ZooEnumBodyDeclarations -> empty .

    RBRACE          reduce using rule 431 (ZooEnumBodyDeclarations -> empty .)


state 920

    (444) EnumBodyDeclarations -> SEMICOLON . ClassBodyDeclarationS
    (308) ClassBodyDeclarationS -> . ClassBodyDeclaration ClassBodyDeclarationS
    (309) ClassBodyDeclarationS -> . empty
    (311) ClassBodyDeclaration -> . ClassMemberDeclaration
    (312) ClassBodyDeclaration -> . InstanceInitializer
    (313) ClassBodyDeclaration -> . StaticInitializer
    (314) ClassBodyDeclaration -> . ConstructorDeclaration
    (1) empty -> .
    (315) ClassMemberDeclaration -> . FieldDeclaration
    (316) ClassMemberDeclaration -> . MethodDeclaration
    (317) ClassMemberDeclaration -> . ClassDeclaration
    (318) ClassMemberDeclaration -> . InterfaceDeclaration
    (319) ClassMemberDeclaration -> . SEMICOLON
    (403) InstanceInitializer -> . Block
    (404) StaticInitializer -> . STATIC Block
    (407) ConstructorDeclaration -> . ConstructorModifierS ConstructorDeclarator ZooThrows ConstructorBody
    (322) FieldDeclaration -> . FieldModifierS UnannType VariableDeclaratorList SEMICOLON
    (358) MethodDeclaration -> . MethodModifierS MethodHeader MethodBody
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (12) InterfaceDeclaration -> . NormalInterfaceDeclaration
    (13) InterfaceDeclaration -> . AnnotationTypeDeclaration
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (405) ConstructorModifierS -> . ConstructorModifier ConstructorModifierS
    (406) ConstructorModifierS -> . empty
    (320) FieldModifierS -> . FieldModifier FieldModifierS
    (321) FieldModifierS -> . empty
    (356) MethodModifierS -> . MethodModifier MethodModifierS
    (357) MethodModifierS -> . empty
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (14) NormalInterfaceDeclaration -> . InterfaceModifierS INTERFACE IDENT ZooTypeParameters ZooExtendsInterfaces InterfaceBody
    (53) AnnotationTypeDeclaration -> . InterfaceModifierS ATRATE INTERFACE IDENT AnnotationTypeBody
    (408) ConstructorModifier -> . Annotation
    (409) ConstructorModifier -> . PUBLIC
    (410) ConstructorModifier -> . PROTECTED
    (411) ConstructorModifier -> . PRIVATE
    (323) FieldModifier -> . Annotation
    (324) FieldModifier -> . PUBLIC
    (325) FieldModifier -> . PROTECTED
    (326) FieldModifier -> . PRIVATE
    (327) FieldModifier -> . STATIC
    (328) FieldModifier -> . FINAL
    (329) FieldModifier -> . TRANSIENT
    (330) FieldModifier -> . VOLATILE
    (359) MethodModifier -> . Annotation
    (360) MethodModifier -> . PUBLIC
    (361) MethodModifier -> . PROTECTED
    (362) MethodModifier -> . PRIVATE
    (363) MethodModifier -> . ABSTRACT
    (364) MethodModifier -> . STATIC
    (365) MethodModifier -> . FINAL
    (366) MethodModifier -> . SYNCHRONIZED
    (367) MethodModifier -> . NATIVE
    (368) MethodModifier -> . STRICTFP
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (19) InterfaceModifierS -> . InterfaceModifier InterfaceModifierS
    (20) InterfaceModifierS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (21) InterfaceModifier -> . Annotation
    (22) InterfaceModifier -> . PUBLIC
    (23) InterfaceModifier -> . PROTECTED
    (24) InterfaceModifier -> . PRIVATE
    (25) InterfaceModifier -> . ABSTRACT
    (26) InterfaceModifier -> . STATIC
    (27) InterfaceModifier -> . STRICTFP
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ATRATE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    INTERFACE       reduce using rule 1 (empty -> .)
    SEMICOLON       shift and go to state 311
    STATIC          shift and go to state 313
    LBRACE          shift and go to state 299
    PUBLIC          shift and go to state 321
    PROTECTED       shift and go to state 322
    PRIVATE         shift and go to state 323
    FINAL           shift and go to state 324
    TRANSIENT       shift and go to state 325
    VOLATILE        shift and go to state 326
    ABSTRACT        shift and go to state 327
    SYNCHRONIZED    shift and go to state 328
    NATIVE          shift and go to state 329
    STRICTFP        shift and go to state 330
    EXTENDS         shift and go to state 52
    ATRATE          shift and go to state 13

  ! LBRACE          [ reduce using rule 1 (empty -> .) ]
  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    ClassBodyDeclarationS          shift and go to state 996
    ClassBodyDeclaration           shift and go to state 301
    empty                          shift and go to state 302
    ClassMemberDeclaration         shift and go to state 303
    InstanceInitializer            shift and go to state 304
    StaticInitializer              shift and go to state 305
    ConstructorDeclaration         shift and go to state 306
    FieldDeclaration               shift and go to state 307
    MethodDeclaration              shift and go to state 308
    ClassDeclaration               shift and go to state 309
    InterfaceDeclaration           shift and go to state 310
    Block                          shift and go to state 312
    ConstructorModifierS           shift and go to state 314
    FieldModifierS                 shift and go to state 315
    MethodModifierS                shift and go to state 316
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    NormalInterfaceDeclaration     shift and go to state 36
    AnnotationTypeDeclaration      shift and go to state 37
    ConstructorModifier            shift and go to state 317
    FieldModifier                  shift and go to state 318
    MethodModifier                 shift and go to state 319
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    InterfaceModifierS             shift and go to state 40
    Annotation                     shift and go to state 320
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    InterfaceModifier              shift and go to state 43
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 921

    (433) COMMAEnumConstantS -> COMMA EnumConstant . COMMAEnumConstantS
    (433) COMMAEnumConstantS -> . COMMA EnumConstant COMMAEnumConstantS
    (434) COMMAEnumConstantS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 795
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAEnumConstantS             shift and go to state 997
    empty                          shift and go to state 796

state 922

    (436) EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN . ZooClassBody
    (439) ZooClassBody -> . ClassBody
    (440) ZooClassBody -> . empty
    (310) ClassBody -> . LBRACE ClassBodyDeclarationS RBRACE
    (1) empty -> .

    LBRACE          shift and go to state 185
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)

    ZooClassBody                   shift and go to state 998
    ClassBody                      shift and go to state 989
    empty                          shift and go to state 990

state 923

    (441) ZooLPARENZooArgumentListRPAREN -> LPAREN . ZooArgumentList RPAREN
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooArgumentList                shift and go to state 999
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 924

    (442) ZooLPARENZooArgumentListRPAREN -> empty .

    LBRACE          reduce using rule 442 (ZooLPARENZooArgumentListRPAREN -> empty .)
    COMMA           reduce using rule 442 (ZooLPARENZooArgumentListRPAREN -> empty .)
    SEMICOLON       reduce using rule 442 (ZooLPARENZooArgumentListRPAREN -> empty .)
    RBRACE          reduce using rule 442 (ZooLPARENZooArgumentListRPAREN -> empty .)


state 925

    (540) IfThenStatement -> IF LPAREN Expression RPAREN . Statement
    (541) IfThenElseStatement -> IF LPAREN Expression RPAREN . StatementNoShortIf ELSE Statement
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (512) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (513) StatementNoShortIf -> . LabeledStatementNoShortIf
    (514) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (515) StatementNoShortIf -> . WhileStatementNoShortIf
    (516) StatementNoShortIf -> . ForStatementNoShortIf
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (531) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (542) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (558) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (562) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (563) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1008
    IF              shift and go to state 1000
    WHILE           shift and go to state 1009
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 1012
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1001
    StatementNoShortIf             shift and go to state 1002
    StatementWithoutTrailingSubstatement shift and go to state 1003
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    LabeledStatementNoShortIf      shift and go to state 1004
    IfThenElseStatementNoShortIf   shift and go to state 1005
    WhileStatementNoShortIf        shift and go to state 1006
    ForStatementNoShortIf          shift and go to state 1007
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    BasicForStatementNoShortIf     shift and go to state 1010
    EnhancedForStatementNoShortIf  shift and go to state 1011
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 926

    (557) WhileStatement -> WHILE LPAREN Expression RPAREN . Statement
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1013
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 927

    (544) AssertStatement -> ASSERT Expression COLON Expression . SEMICOLON

    SEMICOLON       shift and go to state 1014


state 928

    (545) SwitchStatement -> SWITCH LPAREN Expression RPAREN . SwitchBlock
    (546) SwitchBlock -> . LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE

    LBRACE          shift and go to state 1016

    SwitchBlock                    shift and go to state 1015

state 929

    (559) DoStatement -> DO Statement WHILE LPAREN . Expression RPAREN SEMICOLON
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 1017
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 930

    (586) SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN . Block
    (493) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 1018

state 931

    (588) TryStatement -> TRY Block ZooCatches Finally .

    IDENT           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    IF              reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    WHILE           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    LBRACE          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    SEMICOLON       reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    ASSERT          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    SWITCH          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    DO              reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    BREAK           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    CONTINUE        reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    RETURN          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    SYNCHRONIZED    reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    THROW           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    TRY             reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    FOR             reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    FINAL           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    PUBLIC          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    PROTECTED       reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    PRIVATE         reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    ABSTRACT        reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    STATIC          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    STRICTFP        reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    EXTENDS         reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    INC             reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    DEC             reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    SUPER           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    ATRATE          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    NEW             reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    THIS            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    LPAREN          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    BOOL_LIT        reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    NULL_LIT        reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    DECIMAL_LIT     reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    HEX_LIT         reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    OCTAL_LIT       reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    BINARY_LIT      reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    FLOAT_DEC_LIT   reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    FLOAT_HEX_LIT   reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    STRING_LIT      reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    CHAR_LIT        reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    BOOLEAN         reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    VOID            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    BYTE            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    SHORT           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    INT             reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    LONG            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    CHAR            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    FLOAT           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    DOUBLE          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    CLASS           reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    ENUM            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    IMPLEMENTS      reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    RBRACE          reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    CASE            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    DEFAULT         reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)
    ELSE            reduce using rule 588 (TryStatement -> TRY Block ZooCatches Finally .)


state 932

    (600) Finally -> FINALLY . Block
    (493) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 1019

state 933

    (593) CatchClauseS -> CatchClause . CatchClauseS
    (593) CatchClauseS -> . CatchClause CatchClauseS
    (594) CatchClauseS -> . empty
    (595) CatchClause -> . CATCH LPAREN CatchFormalParameter RPAREN Block
    (1) empty -> .

    CATCH           shift and go to state 818
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    FINALLY         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)

    CatchClause                    shift and go to state 933
    CatchClauseS                   shift and go to state 1020
    empty                          shift and go to state 935

state 934

    (592) Catches -> CatchClause CatchClauseS .

    IDENT           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    IF              reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    WHILE           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    LBRACE          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    SEMICOLON       reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    ASSERT          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    SWITCH          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    DO              reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    BREAK           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    CONTINUE        reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    RETURN          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    SYNCHRONIZED    reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    THROW           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    TRY             reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    FOR             reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    FINAL           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    PUBLIC          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    PROTECTED       reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    PRIVATE         reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    ABSTRACT        reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    STATIC          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    STRICTFP        reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    EXTENDS         reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    INC             reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    DEC             reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    SUPER           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    ATRATE          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    NEW             reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    THIS            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    LPAREN          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    BOOL_LIT        reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    NULL_LIT        reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    DECIMAL_LIT     reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    HEX_LIT         reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    OCTAL_LIT       reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    BINARY_LIT      reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    FLOAT_DEC_LIT   reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    FLOAT_HEX_LIT   reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    STRING_LIT      reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    CHAR_LIT        reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    BOOLEAN         reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    VOID            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    BYTE            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    SHORT           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    INT             reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    LONG            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    CHAR            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    FLOAT           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    DOUBLE          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    CLASS           reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    ENUM            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    IMPLEMENTS      reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    RBRACE          reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    CASE            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    DEFAULT         reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    FINALLY         reduce using rule 592 (Catches -> CatchClause CatchClauseS .)
    ELSE            reduce using rule 592 (Catches -> CatchClause CatchClauseS .)


state 935

    (594) CatchClauseS -> empty .

    IDENT           reduce using rule 594 (CatchClauseS -> empty .)
    IF              reduce using rule 594 (CatchClauseS -> empty .)
    WHILE           reduce using rule 594 (CatchClauseS -> empty .)
    LBRACE          reduce using rule 594 (CatchClauseS -> empty .)
    SEMICOLON       reduce using rule 594 (CatchClauseS -> empty .)
    ASSERT          reduce using rule 594 (CatchClauseS -> empty .)
    SWITCH          reduce using rule 594 (CatchClauseS -> empty .)
    DO              reduce using rule 594 (CatchClauseS -> empty .)
    BREAK           reduce using rule 594 (CatchClauseS -> empty .)
    CONTINUE        reduce using rule 594 (CatchClauseS -> empty .)
    RETURN          reduce using rule 594 (CatchClauseS -> empty .)
    SYNCHRONIZED    reduce using rule 594 (CatchClauseS -> empty .)
    THROW           reduce using rule 594 (CatchClauseS -> empty .)
    TRY             reduce using rule 594 (CatchClauseS -> empty .)
    FOR             reduce using rule 594 (CatchClauseS -> empty .)
    FINAL           reduce using rule 594 (CatchClauseS -> empty .)
    PUBLIC          reduce using rule 594 (CatchClauseS -> empty .)
    PROTECTED       reduce using rule 594 (CatchClauseS -> empty .)
    PRIVATE         reduce using rule 594 (CatchClauseS -> empty .)
    ABSTRACT        reduce using rule 594 (CatchClauseS -> empty .)
    STATIC          reduce using rule 594 (CatchClauseS -> empty .)
    STRICTFP        reduce using rule 594 (CatchClauseS -> empty .)
    EXTENDS         reduce using rule 594 (CatchClauseS -> empty .)
    INC             reduce using rule 594 (CatchClauseS -> empty .)
    DEC             reduce using rule 594 (CatchClauseS -> empty .)
    SUPER           reduce using rule 594 (CatchClauseS -> empty .)
    ATRATE          reduce using rule 594 (CatchClauseS -> empty .)
    NEW             reduce using rule 594 (CatchClauseS -> empty .)
    THIS            reduce using rule 594 (CatchClauseS -> empty .)
    LPAREN          reduce using rule 594 (CatchClauseS -> empty .)
    BOOL_LIT        reduce using rule 594 (CatchClauseS -> empty .)
    NULL_LIT        reduce using rule 594 (CatchClauseS -> empty .)
    DECIMAL_LIT     reduce using rule 594 (CatchClauseS -> empty .)
    HEX_LIT         reduce using rule 594 (CatchClauseS -> empty .)
    OCTAL_LIT       reduce using rule 594 (CatchClauseS -> empty .)
    BINARY_LIT      reduce using rule 594 (CatchClauseS -> empty .)
    FLOAT_DEC_LIT   reduce using rule 594 (CatchClauseS -> empty .)
    FLOAT_HEX_LIT   reduce using rule 594 (CatchClauseS -> empty .)
    STRING_LIT      reduce using rule 594 (CatchClauseS -> empty .)
    CHAR_LIT        reduce using rule 594 (CatchClauseS -> empty .)
    BOOLEAN         reduce using rule 594 (CatchClauseS -> empty .)
    VOID            reduce using rule 594 (CatchClauseS -> empty .)
    BYTE            reduce using rule 594 (CatchClauseS -> empty .)
    SHORT           reduce using rule 594 (CatchClauseS -> empty .)
    INT             reduce using rule 594 (CatchClauseS -> empty .)
    LONG            reduce using rule 594 (CatchClauseS -> empty .)
    CHAR            reduce using rule 594 (CatchClauseS -> empty .)
    FLOAT           reduce using rule 594 (CatchClauseS -> empty .)
    DOUBLE          reduce using rule 594 (CatchClauseS -> empty .)
    CLASS           reduce using rule 594 (CatchClauseS -> empty .)
    ENUM            reduce using rule 594 (CatchClauseS -> empty .)
    IMPLEMENTS      reduce using rule 594 (CatchClauseS -> empty .)
    RBRACE          reduce using rule 594 (CatchClauseS -> empty .)
    CASE            reduce using rule 594 (CatchClauseS -> empty .)
    DEFAULT         reduce using rule 594 (CatchClauseS -> empty .)
    FINALLY         reduce using rule 594 (CatchClauseS -> empty .)
    ELSE            reduce using rule 594 (CatchClauseS -> empty .)


state 936

    (595) CatchClause -> CATCH LPAREN . CatchFormalParameter RPAREN Block
    (596) CatchFormalParameter -> . VariableModifierS CatchType VariableDeclaratorId
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 362
    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    CatchFormalParameter           shift and go to state 1021
    VariableModifierS              shift and go to state 1022
    VariableModifier               shift and go to state 498
    empty                          shift and go to state 603
    Annotation                     shift and go to state 604
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 937

    (601) TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches . ZooFinally
    (602) ZooFinally -> . Finally
    (603) ZooFinally -> . empty
    (600) Finally -> . FINALLY Block
    (1) empty -> .

    FINALLY         shift and go to state 932
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ELSE            reduce using rule 1 (empty -> .)

    ZooFinally                     shift and go to state 1023
    Finally                        shift and go to state 1024
    empty                          shift and go to state 1025

state 938

    (590) ZooCatches -> Catches .

    FINALLY         reduce using rule 590 (ZooCatches -> Catches .)
    IDENT           reduce using rule 590 (ZooCatches -> Catches .)
    IF              reduce using rule 590 (ZooCatches -> Catches .)
    WHILE           reduce using rule 590 (ZooCatches -> Catches .)
    LBRACE          reduce using rule 590 (ZooCatches -> Catches .)
    SEMICOLON       reduce using rule 590 (ZooCatches -> Catches .)
    ASSERT          reduce using rule 590 (ZooCatches -> Catches .)
    SWITCH          reduce using rule 590 (ZooCatches -> Catches .)
    DO              reduce using rule 590 (ZooCatches -> Catches .)
    BREAK           reduce using rule 590 (ZooCatches -> Catches .)
    CONTINUE        reduce using rule 590 (ZooCatches -> Catches .)
    RETURN          reduce using rule 590 (ZooCatches -> Catches .)
    SYNCHRONIZED    reduce using rule 590 (ZooCatches -> Catches .)
    THROW           reduce using rule 590 (ZooCatches -> Catches .)
    TRY             reduce using rule 590 (ZooCatches -> Catches .)
    FOR             reduce using rule 590 (ZooCatches -> Catches .)
    FINAL           reduce using rule 590 (ZooCatches -> Catches .)
    PUBLIC          reduce using rule 590 (ZooCatches -> Catches .)
    PROTECTED       reduce using rule 590 (ZooCatches -> Catches .)
    PRIVATE         reduce using rule 590 (ZooCatches -> Catches .)
    ABSTRACT        reduce using rule 590 (ZooCatches -> Catches .)
    STATIC          reduce using rule 590 (ZooCatches -> Catches .)
    STRICTFP        reduce using rule 590 (ZooCatches -> Catches .)
    EXTENDS         reduce using rule 590 (ZooCatches -> Catches .)
    INC             reduce using rule 590 (ZooCatches -> Catches .)
    DEC             reduce using rule 590 (ZooCatches -> Catches .)
    SUPER           reduce using rule 590 (ZooCatches -> Catches .)
    ATRATE          reduce using rule 590 (ZooCatches -> Catches .)
    NEW             reduce using rule 590 (ZooCatches -> Catches .)
    THIS            reduce using rule 590 (ZooCatches -> Catches .)
    LPAREN          reduce using rule 590 (ZooCatches -> Catches .)
    BOOL_LIT        reduce using rule 590 (ZooCatches -> Catches .)
    NULL_LIT        reduce using rule 590 (ZooCatches -> Catches .)
    DECIMAL_LIT     reduce using rule 590 (ZooCatches -> Catches .)
    HEX_LIT         reduce using rule 590 (ZooCatches -> Catches .)
    OCTAL_LIT       reduce using rule 590 (ZooCatches -> Catches .)
    BINARY_LIT      reduce using rule 590 (ZooCatches -> Catches .)
    FLOAT_DEC_LIT   reduce using rule 590 (ZooCatches -> Catches .)
    FLOAT_HEX_LIT   reduce using rule 590 (ZooCatches -> Catches .)
    STRING_LIT      reduce using rule 590 (ZooCatches -> Catches .)
    CHAR_LIT        reduce using rule 590 (ZooCatches -> Catches .)
    BOOLEAN         reduce using rule 590 (ZooCatches -> Catches .)
    VOID            reduce using rule 590 (ZooCatches -> Catches .)
    BYTE            reduce using rule 590 (ZooCatches -> Catches .)
    SHORT           reduce using rule 590 (ZooCatches -> Catches .)
    INT             reduce using rule 590 (ZooCatches -> Catches .)
    LONG            reduce using rule 590 (ZooCatches -> Catches .)
    CHAR            reduce using rule 590 (ZooCatches -> Catches .)
    FLOAT           reduce using rule 590 (ZooCatches -> Catches .)
    DOUBLE          reduce using rule 590 (ZooCatches -> Catches .)
    CLASS           reduce using rule 590 (ZooCatches -> Catches .)
    ENUM            reduce using rule 590 (ZooCatches -> Catches .)
    IMPLEMENTS      reduce using rule 590 (ZooCatches -> Catches .)
    RBRACE          reduce using rule 590 (ZooCatches -> Catches .)
    CASE            reduce using rule 590 (ZooCatches -> Catches .)
    DEFAULT         reduce using rule 590 (ZooCatches -> Catches .)
    ELSE            reduce using rule 590 (ZooCatches -> Catches .)


state 939

    (606) ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON . RPAREN

    RPAREN          shift and go to state 1026


state 940

    (604) ZooSEMICOLON -> SEMICOLON .

    RPAREN          reduce using rule 604 (ZooSEMICOLON -> SEMICOLON .)


state 941

    (605) ZooSEMICOLON -> empty .

    RPAREN          reduce using rule 605 (ZooSEMICOLON -> empty .)


state 942

    (607) ResourceList -> Resource SEMICOLONResourceS .

    SEMICOLON       reduce using rule 607 (ResourceList -> Resource SEMICOLONResourceS .)
    RPAREN          reduce using rule 607 (ResourceList -> Resource SEMICOLONResourceS .)


state 943

    (608) SEMICOLONResourceS -> SEMICOLON . Resource SEMICOLONResourceS
    (610) Resource -> . VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    FINAL           shift and go to state 362
    BOOLEAN         reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    Resource                       shift and go to state 1027
    VariableModifierS              shift and go to state 822
    VariableModifier               shift and go to state 498
    empty                          shift and go to state 603
    Annotation                     shift and go to state 604
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 944

    (609) SEMICOLONResourceS -> empty .

    SEMICOLON       reduce using rule 609 (SEMICOLONResourceS -> empty .)
    RPAREN          reduce using rule 609 (SEMICOLONResourceS -> empty .)


state 945

    (610) Resource -> VariableModifierS UnannType . VariableDeclaratorId ASSIGN Expression
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclaratorId           shift and go to state 1028

state 946

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON . ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (567) ZooExpression -> . Expression
    (568) ZooExpression -> . empty
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (1) empty -> .
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooExpression                  shift and go to state 1029
    Expression                     shift and go to state 684
    empty                          shift and go to state 685
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 947

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType . VariableDeclaratorId COLON Expression RPAREN Statement
    (503) LocalVariableDeclaration -> VariableModifierS UnannType . VariableDeclaratorList
    (337) VariableDeclaratorId -> . IDENT ZooDims
    (333) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (336) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer

    IDENT           shift and go to state 705

    VariableDeclaratorId           shift and go to state 1030
    VariableDeclaratorList         shift and go to state 801
    VariableDeclarator             shift and go to state 703

state 948

    (575) StatementExpressionList -> StatementExpression COMMAStatementExpressionS .

    SEMICOLON       reduce using rule 575 (StatementExpressionList -> StatementExpression COMMAStatementExpressionS .)
    RPAREN          reduce using rule 575 (StatementExpressionList -> StatementExpression COMMAStatementExpressionS .)


state 949

    (576) COMMAStatementExpressionS -> COMMA . StatementExpression COMMAStatementExpressionS
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    IDENT           shift and go to state 831
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    StatementExpression            shift and go to state 1031
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 950

    (577) COMMAStatementExpressionS -> empty .

    SEMICOLON       reduce using rule 577 (COMMAStatementExpressionS -> empty .)
    RPAREN          reduce using rule 577 (COMMAStatementExpressionS -> empty .)


state 951

    (143) MethodInvocation -> TypeName PERIOD SUPER PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (135) FieldAccess -> TypeName PERIOD SUPER PERIOD . IDENT
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 739
    LSS             shift and go to state 280

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 740
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 952

    (414) ConstructorBody -> LBRACE ZooExplicitConstructorInvocation . ZooBlockStatements RBRACE
    (494) ZooBlockStatements -> . BlockStatements
    (495) ZooBlockStatements -> . empty
    (496) BlockStatements -> . BlockStatement BlockStatementS
    (1) empty -> .
    (499) BlockStatement -> . LocalVariableDeclarationStatement
    (500) BlockStatement -> . ClassDeclaration
    (501) BlockStatement -> . Statement
    (502) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (503) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    FINAL           shift and go to state 512
    PUBLIC          shift and go to state 72
    PROTECTED       shift and go to state 73
    PRIVATE         shift and go to state 74
    ABSTRACT        shift and go to state 75
    STATIC          shift and go to state 76
    STRICTFP        shift and go to state 77
    EXTENDS         shift and go to state 52
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    ATRATE          shift and go to state 13
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    ZooBlockStatements             shift and go to state 1032
    BlockStatements                shift and go to state 465
    empty                          shift and go to state 466
    BlockStatement                 shift and go to state 467
    LocalVariableDeclarationStatement shift and go to state 468
    ClassDeclaration               shift and go to state 469
    Statement                      shift and go to state 470
    LocalVariableDeclaration       shift and go to state 471
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    VariableModifierS              shift and go to state 479
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    VariableModifier               shift and go to state 498
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Annotation                     shift and go to state 511
    ClassType                      shift and go to state 168
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 953

    (415) ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .

    IDENT           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    IF              reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    WHILE           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    LBRACE          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SEMICOLON       reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ASSERT          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SWITCH          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DO              reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BREAK           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CONTINUE        reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    RETURN          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SYNCHRONIZED    reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    THROW           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    TRY             reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FOR             reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FINAL           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    PUBLIC          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    PROTECTED       reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    PRIVATE         reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ABSTRACT        reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    STATIC          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    STRICTFP        reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    EXTENDS         reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    INC             reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DEC             reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SUPER           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ATRATE          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    NEW             reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    THIS            reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    LPAREN          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BOOL_LIT        reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    NULL_LIT        reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DECIMAL_LIT     reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    HEX_LIT         reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    OCTAL_LIT       reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BINARY_LIT      reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FLOAT_DEC_LIT   reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FLOAT_HEX_LIT   reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    STRING_LIT      reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CHAR_LIT        reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BOOLEAN         reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    VOID            reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    BYTE            reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    SHORT           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    INT             reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    LONG            reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CHAR            reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    FLOAT           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    DOUBLE          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    RBRACE          reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    CLASS           reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    ENUM            reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)
    IMPLEMENTS      reduce using rule 415 (ZooExplicitConstructorInvocation -> ExplicitConstructorInvocation .)


state 954

    (416) ZooExplicitConstructorInvocation -> empty .
    (123) ZooTypeArguments -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for THIS resolved using rule 123 (ZooTypeArguments -> empty .)
  ! reduce/reduce conflict for SUPER resolved using rule 123 (ZooTypeArguments -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 126 (AnnotationS -> empty .)
    IF              reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    WHILE           reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    LBRACE          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    SEMICOLON       reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    ASSERT          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    SWITCH          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    DO              reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    BREAK           reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    CONTINUE        reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    RETURN          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    SYNCHRONIZED    reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    THROW           reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    TRY             reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    FOR             reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    FINAL           reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    PUBLIC          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    PROTECTED       reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    PRIVATE         reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    ABSTRACT        reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    STATIC          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    STRICTFP        reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    EXTENDS         reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    INC             reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    DEC             reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    ATRATE          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    NEW             reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    LPAREN          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    BOOL_LIT        reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    NULL_LIT        reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    DECIMAL_LIT     reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    HEX_LIT         reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    OCTAL_LIT       reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    BINARY_LIT      reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    FLOAT_DEC_LIT   reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    FLOAT_HEX_LIT   reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    STRING_LIT      reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    CHAR_LIT        reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    VOID            reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    RBRACE          reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    CLASS           reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    ENUM            reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    IMPLEMENTS      reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .)
    THIS            reduce using rule 123 (ZooTypeArguments -> empty .)
    SUPER           reduce using rule 123 (ZooTypeArguments -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)

  ! IDENT           [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! SUPER           [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! THIS            [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! BOOLEAN         [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! BYTE            [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! SHORT           [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! INT             [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! LONG            [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! CHAR            [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! FLOAT           [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]
  ! DOUBLE          [ reduce using rule 416 (ZooExplicitConstructorInvocation -> empty .) ]


state 955

    (419) ExplicitConstructorInvocation -> ZooTypeArguments . THIS LPAREN ZooArgumentList RPAREN SEMICOLON
    (420) ExplicitConstructorInvocation -> ZooTypeArguments . SUPER LPAREN ZooArgumentList RPAREN SEMICOLON

    THIS            shift and go to state 1033
    SUPER           shift and go to state 1034


state 956

    (421) ExplicitConstructorInvocation -> ExpressionName . PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (119) ClassInstanceCreationExpression -> ExpressionName . PERIOD UnqualifiedClassInstanceCreationExpression
    (136) ArrayAccess -> ExpressionName . LBRACK Expression RBRACK
    (140) MethodInvocation -> ExpressionName . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> ExpressionName . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 1035
    LBRACK          shift and go to state 267
    COLON_SEP       shift and go to state 268


state 957

    (422) ExplicitConstructorInvocation -> Primary . PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (120) ClassInstanceCreationExpression -> Primary . PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> Primary . PERIOD IDENT
    (141) MethodInvocation -> Primary . PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (149) MethodReference -> Primary . COLON_SEP ZooTypeArguments IDENT

    PERIOD          shift and go to state 1036
    COLON_SEP       shift and go to state 265


state 958

    (398) ExceptionTypeList -> ExceptionType COMMAExceptionTypeS .

    LBRACE          reduce using rule 398 (ExceptionTypeList -> ExceptionType COMMAExceptionTypeS .)
    SEMICOLON       reduce using rule 398 (ExceptionTypeList -> ExceptionType COMMAExceptionTypeS .)


state 959

    (396) COMMAExceptionTypeS -> COMMA . ExceptionType COMMAExceptionTypeS
    (399) ExceptionType -> . ClassType
    (400) ExceptionType -> . TypeVariable
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (465) InterfaceType -> . ClassType
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ExceptionType                  shift and go to state 1037
    ClassType                      shift and go to state 837
    TypeVariable                   shift and go to state 838
    AnnotationS                    shift and go to state 839
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    InterfaceType                  shift and go to state 92
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 960

    (397) COMMAExceptionTypeS -> empty .

    LBRACE          reduce using rule 397 (COMMAExceptionTypeS -> empty .)
    SEMICOLON       reduce using rule 397 (COMMAExceptionTypeS -> empty .)


state 961

    (412) ConstructorDeclarator -> ZooTypeParameters SimpleTypeName LPAREN ZooFormalParameterList . RPAREN

    RPAREN          shift and go to state 1038


state 962

    (394) ReceiverParameter -> AnnotationS . UnannType ZooIDENTPERIOD THIS
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 594
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 963

    (331) COMMAVariableDeclaratorS -> COMMA VariableDeclarator . COMMAVariableDeclaratorS
    (331) COMMAVariableDeclaratorS -> . COMMA VariableDeclarator COMMAVariableDeclaratorS
    (332) COMMAVariableDeclaratorS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 843
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAVariableDeclaratorS       shift and go to state 1039
    empty                          shift and go to state 844

state 964

    (334) ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer .

    COMMA           reduce using rule 334 (ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer .)
    SEMICOLON       reduce using rule 334 (ZooASSIGNVariableInitializer -> ASSIGN VariableInitializer .)


state 965

    (350) UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT . ZooTypeArguments
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    PERIOD          reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 1040
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 966

    (377) MethodDeclarator -> IDENT LPAREN ZooFormalParameterList . RPAREN ZooDims

    RPAREN          shift and go to state 1041


state 967

    (372) MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator . ZooThrows
    (369) ZooThrows -> . Throws
    (370) ZooThrows -> . empty
    (395) Throws -> . THROWS ExceptionTypeList
    (1) empty -> .

    THROWS          shift and go to state 699
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)

    ZooThrows                      shift and go to state 1042
    Throws                         shift and go to state 697
    empty                          shift and go to state 698

state 968

    (29) InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .

    SEMICOLON       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    PUBLIC          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    PROTECTED       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    PRIVATE         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    ABSTRACT        reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    STATIC          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    FINAL           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    STRICTFP        reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    EXTENDS         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    ATRATE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    CLASS           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    ENUM            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    IMPLEMENTS      reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    LBRACE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    INTERFACE       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    $end            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    TRANSIENT       reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    VOLATILE        reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    SYNCHRONIZED    reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    NATIVE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    LSS             reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    IDENT           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    BOOLEAN         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    BYTE            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    SHORT           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    INT             reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    LONG            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    CHAR            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    FLOAT           reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    DOUBLE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    VOID            reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    RBRACE          reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)
    DEFAULT         reduce using rule 29 (InterfaceBody -> LBRACE InterfaceMemberDeclarationS RBRACE .)


state 969

    (30) InterfaceMemberDeclarationS -> InterfaceMemberDeclaration InterfaceMemberDeclarationS .

    RBRACE          reduce using rule 30 (InterfaceMemberDeclarationS -> InterfaceMemberDeclaration InterfaceMemberDeclarationS .)


state 970

    (44) InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader . MethodBody
    (401) MethodBody -> . Block
    (402) MethodBody -> . SEMICOLON
    (493) Block -> . LBRACE ZooBlockStatements RBRACE

    SEMICOLON       shift and go to state 713
    LBRACE          shift and go to state 299

    MethodBody                     shift and go to state 1043
    Block                          shift and go to state 712

state 971

    (45) InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .

    VOID            reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    LSS             reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    BOOLEAN         reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    IDENT           reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    BYTE            reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    SHORT           reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    INT             reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    LONG            reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    CHAR            reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    FLOAT           reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)
    DOUBLE          reduce using rule 45 (InterfaceMethodModifierS -> InterfaceMethodModifier InterfaceMethodModifierS .)


state 972

    (46) InterfaceMethodModifierS -> empty .

    VOID            reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    LSS             reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    BOOLEAN         reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    IDENT           reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    BYTE            reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    SHORT           reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    INT             reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    LONG            reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    CHAR            reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    FLOAT           reduce using rule 46 (InterfaceMethodModifierS -> empty .)
    DOUBLE          reduce using rule 46 (InterfaceMethodModifierS -> empty .)


state 973

    (47) InterfaceMethodModifier -> Annotation .

    PUBLIC          reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    ABSTRACT        reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    DEFAULT         reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    STATIC          reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    STRICTFP        reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    ATRATE          reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    VOID            reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    LSS             reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    BOOLEAN         reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    IDENT           reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    BYTE            reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    SHORT           reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    INT             reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    LONG            reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    CHAR            reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    FLOAT           reduce using rule 47 (InterfaceMethodModifier -> Annotation .)
    DOUBLE          reduce using rule 47 (InterfaceMethodModifier -> Annotation .)


state 974

    (48) InterfaceMethodModifier -> PUBLIC .

    PUBLIC          reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    ABSTRACT        reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    DEFAULT         reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    STATIC          reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    STRICTFP        reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    ATRATE          reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    VOID            reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    LSS             reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    BOOLEAN         reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    IDENT           reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    BYTE            reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    SHORT           reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    INT             reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    LONG            reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    CHAR            reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    FLOAT           reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)
    DOUBLE          reduce using rule 48 (InterfaceMethodModifier -> PUBLIC .)


state 975

    (49) InterfaceMethodModifier -> ABSTRACT .

    PUBLIC          reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    ABSTRACT        reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    DEFAULT         reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    STATIC          reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    STRICTFP        reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    ATRATE          reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    VOID            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    LSS             reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    BOOLEAN         reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    IDENT           reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    BYTE            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    SHORT           reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    INT             reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    LONG            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    CHAR            reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    FLOAT           reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)
    DOUBLE          reduce using rule 49 (InterfaceMethodModifier -> ABSTRACT .)


state 976

    (51) InterfaceMethodModifier -> STATIC .

    PUBLIC          reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    ABSTRACT        reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    DEFAULT         reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    STATIC          reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    STRICTFP        reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    ATRATE          reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    VOID            reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    LSS             reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    BOOLEAN         reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    IDENT           reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    BYTE            reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    SHORT           reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    INT             reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    LONG            reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    CHAR            reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    FLOAT           reduce using rule 51 (InterfaceMethodModifier -> STATIC .)
    DOUBLE          reduce using rule 51 (InterfaceMethodModifier -> STATIC .)


state 977

    (52) InterfaceMethodModifier -> STRICTFP .

    PUBLIC          reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    ABSTRACT        reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    DEFAULT         reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    STATIC          reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    STRICTFP        reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    ATRATE          reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    VOID            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    LSS             reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    BOOLEAN         reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    IDENT           reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    BYTE            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    SHORT           reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    INT             reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    LONG            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    CHAR            reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    FLOAT           reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)
    DOUBLE          reduce using rule 52 (InterfaceMethodModifier -> STRICTFP .)


state 978

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT . LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON

    LPAREN          shift and go to state 1044


state 979

    (37) ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList . SEMICOLON

    SEMICOLON       shift and go to state 1045


state 980

    (143) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN . ZooArgumentList RPAREN
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    TypeName                       shift and go to state 217
    ZooArgumentList                shift and go to state 1046
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 981

    (139) MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 139 (MethodInvocation -> TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 982

    (390) LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId .

    RPAREN          reduce using rule 390 (LastFormalParameter -> VariableModifierS UnannType AnnotationS ELLIPSIS VariableDeclaratorId .)


state 983

    (141) MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 141 (MethodInvocation -> Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 984

    (140) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 140 (MethodInvocation -> ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 985

    (471) AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE . AnnotationSLBRACERBRACES
    (471) AnnotationSLBRACERBRACES -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (472) AnnotationSLBRACERBRACES -> . empty
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (1) empty -> .
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for ATRATE resolved as shift
    COLON_SEP       reduce using rule 1 (empty -> .)
    LSS             reduce using rule 1 (empty -> .)
    GTR             reduce using rule 1 (empty -> .)
    LEQ             reduce using rule 1 (empty -> .)
    GEQ             reduce using rule 1 (empty -> .)
    INSTANCEOF      reduce using rule 1 (empty -> .)
    EQL             reduce using rule 1 (empty -> .)
    NEQ             reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    XOR             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    LAND            reduce using rule 1 (empty -> .)
    QUES            reduce using rule 1 (empty -> .)
    LOR             reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RBRACE          reduce using rule 1 (empty -> .)
    COLON           reduce using rule 1 (empty -> .)
    MUL             reduce using rule 1 (empty -> .)
    QUO             reduce using rule 1 (empty -> .)
    REM             reduce using rule 1 (empty -> .)
    ADD             reduce using rule 1 (empty -> .)
    SUB             reduce using rule 1 (empty -> .)
    SHL             reduce using rule 1 (empty -> .)
    SHR             reduce using rule 1 (empty -> .)
    SHR_UN          reduce using rule 1 (empty -> .)
    RBRACK          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    ELLIPSIS        reduce using rule 1 (empty -> .)
    ASSIGN          reduce using rule 1 (empty -> .)
    THROWS          reduce using rule 1 (empty -> .)
    DEFAULT         reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

  ! ATRATE          [ reduce using rule 1 (empty -> .) ]

    AnnotationS                    shift and go to state 765
    AnnotationSLBRACERBRACES       shift and go to state 1047
    empty                          shift and go to state 767
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 986

    (94) ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .

    PERIOD          reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    COLON_SEP       reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    INC             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    DEC             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    MUL             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    QUO             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    REM             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    ADD             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SUB             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SHL             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SHR             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SHR_UN          reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LSS             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    GTR             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LEQ             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    GEQ             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    INSTANCEOF      reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    EQL             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    NEQ             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    AND             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    XOR             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    OR              reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LAND            reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    QUES            reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    LOR             reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    RPAREN          reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    COMMA           reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    RBRACE          reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    COLON           reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    RBRACK          reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)
    SEMICOLON       reduce using rule 94 (ArrayInitializer -> LBRACE ZooVariableInitializerList ZooCOMMA RBRACE .)


state 987

    (98) COMMAVariableInitializerS -> COMMA VariableInitializer . COMMAVariableInitializerS
    (98) COMMAVariableInitializerS -> . COMMA VariableInitializer COMMAVariableInitializerS
    (99) COMMAVariableInitializerS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 898
    RBRACE          reduce using rule 1 (empty -> .)

  ! COMMA           [ reduce using rule 1 (empty -> .) ]

    COMMAVariableInitializerS      shift and go to state 1048
    empty                          shift and go to state 899

state 988

    (121) UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .

    LBRACK          reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    PERIOD          reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    COLON_SEP       reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    INC             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    DEC             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    MUL             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    QUO             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    REM             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    ADD             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SUB             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SHL             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SHR             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SHR_UN          reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LSS             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    GTR             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LEQ             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    GEQ             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    INSTANCEOF      reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    EQL             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    NEQ             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    AND             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    XOR             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    OR              reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LAND            reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    QUES            reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    LOR             reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    RPAREN          reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    COMMA           reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    RBRACE          reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    COLON           reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    RBRACK          reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)
    SEMICOLON       reduce using rule 121 (UnqualifiedClassInstanceCreationExpression -> NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody .)


state 989

    (439) ZooClassBody -> ClassBody .

    LBRACK          reduce using rule 439 (ZooClassBody -> ClassBody .)
    PERIOD          reduce using rule 439 (ZooClassBody -> ClassBody .)
    COLON_SEP       reduce using rule 439 (ZooClassBody -> ClassBody .)
    INC             reduce using rule 439 (ZooClassBody -> ClassBody .)
    DEC             reduce using rule 439 (ZooClassBody -> ClassBody .)
    MUL             reduce using rule 439 (ZooClassBody -> ClassBody .)
    QUO             reduce using rule 439 (ZooClassBody -> ClassBody .)
    REM             reduce using rule 439 (ZooClassBody -> ClassBody .)
    ADD             reduce using rule 439 (ZooClassBody -> ClassBody .)
    SUB             reduce using rule 439 (ZooClassBody -> ClassBody .)
    SHL             reduce using rule 439 (ZooClassBody -> ClassBody .)
    SHR             reduce using rule 439 (ZooClassBody -> ClassBody .)
    SHR_UN          reduce using rule 439 (ZooClassBody -> ClassBody .)
    LSS             reduce using rule 439 (ZooClassBody -> ClassBody .)
    GTR             reduce using rule 439 (ZooClassBody -> ClassBody .)
    LEQ             reduce using rule 439 (ZooClassBody -> ClassBody .)
    GEQ             reduce using rule 439 (ZooClassBody -> ClassBody .)
    INSTANCEOF      reduce using rule 439 (ZooClassBody -> ClassBody .)
    EQL             reduce using rule 439 (ZooClassBody -> ClassBody .)
    NEQ             reduce using rule 439 (ZooClassBody -> ClassBody .)
    AND             reduce using rule 439 (ZooClassBody -> ClassBody .)
    XOR             reduce using rule 439 (ZooClassBody -> ClassBody .)
    OR              reduce using rule 439 (ZooClassBody -> ClassBody .)
    LAND            reduce using rule 439 (ZooClassBody -> ClassBody .)
    QUES            reduce using rule 439 (ZooClassBody -> ClassBody .)
    LOR             reduce using rule 439 (ZooClassBody -> ClassBody .)
    RPAREN          reduce using rule 439 (ZooClassBody -> ClassBody .)
    COMMA           reduce using rule 439 (ZooClassBody -> ClassBody .)
    RBRACE          reduce using rule 439 (ZooClassBody -> ClassBody .)
    COLON           reduce using rule 439 (ZooClassBody -> ClassBody .)
    RBRACK          reduce using rule 439 (ZooClassBody -> ClassBody .)
    SEMICOLON       reduce using rule 439 (ZooClassBody -> ClassBody .)


state 990

    (440) ZooClassBody -> empty .

    LBRACK          reduce using rule 440 (ZooClassBody -> empty .)
    PERIOD          reduce using rule 440 (ZooClassBody -> empty .)
    COLON_SEP       reduce using rule 440 (ZooClassBody -> empty .)
    INC             reduce using rule 440 (ZooClassBody -> empty .)
    DEC             reduce using rule 440 (ZooClassBody -> empty .)
    MUL             reduce using rule 440 (ZooClassBody -> empty .)
    QUO             reduce using rule 440 (ZooClassBody -> empty .)
    REM             reduce using rule 440 (ZooClassBody -> empty .)
    ADD             reduce using rule 440 (ZooClassBody -> empty .)
    SUB             reduce using rule 440 (ZooClassBody -> empty .)
    SHL             reduce using rule 440 (ZooClassBody -> empty .)
    SHR             reduce using rule 440 (ZooClassBody -> empty .)
    SHR_UN          reduce using rule 440 (ZooClassBody -> empty .)
    LSS             reduce using rule 440 (ZooClassBody -> empty .)
    GTR             reduce using rule 440 (ZooClassBody -> empty .)
    LEQ             reduce using rule 440 (ZooClassBody -> empty .)
    GEQ             reduce using rule 440 (ZooClassBody -> empty .)
    INSTANCEOF      reduce using rule 440 (ZooClassBody -> empty .)
    EQL             reduce using rule 440 (ZooClassBody -> empty .)
    NEQ             reduce using rule 440 (ZooClassBody -> empty .)
    AND             reduce using rule 440 (ZooClassBody -> empty .)
    XOR             reduce using rule 440 (ZooClassBody -> empty .)
    OR              reduce using rule 440 (ZooClassBody -> empty .)
    LAND            reduce using rule 440 (ZooClassBody -> empty .)
    QUES            reduce using rule 440 (ZooClassBody -> empty .)
    LOR             reduce using rule 440 (ZooClassBody -> empty .)
    RPAREN          reduce using rule 440 (ZooClassBody -> empty .)
    COMMA           reduce using rule 440 (ZooClassBody -> empty .)
    RBRACE          reduce using rule 440 (ZooClassBody -> empty .)
    COLON           reduce using rule 440 (ZooClassBody -> empty .)
    RBRACK          reduce using rule 440 (ZooClassBody -> empty .)
    SEMICOLON       reduce using rule 440 (ZooClassBody -> empty .)


state 991

    (132) TypeArgumentsOrDiamond -> LSS GTR .

    LPAREN          reduce using rule 132 (TypeArgumentsOrDiamond -> LSS GTR .)


state 992

    (129) PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT . PERIODAnnotationSIDENTS
    (129) PERIODAnnotationSIDENTS -> . PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS
    (130) PERIODAnnotationSIDENTS -> . empty
    (1) empty -> .

    PERIOD          shift and go to state 778
    LSS             reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)

    PERIODAnnotationSIDENTS        shift and go to state 1049
    empty                          shift and go to state 779

state 993

    (142) MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 142 (MethodInvocation -> SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 994

    (480) TypeBound -> EXTENDS ClassOrInterfaceType AdditionalBoundS .

    COMMA           reduce using rule 480 (TypeBound -> EXTENDS ClassOrInterfaceType AdditionalBoundS .)
    GTR             reduce using rule 480 (TypeBound -> EXTENDS ClassOrInterfaceType AdditionalBoundS .)


state 995

    (432) EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .

    SEMICOLON       reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    PUBLIC          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    PROTECTED       reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    PRIVATE         reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ABSTRACT        reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    STATIC          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FINAL           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    STRICTFP        reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    EXTENDS         reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ATRATE          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CLASS           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ENUM            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    IMPLEMENTS      reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LBRACE          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    INTERFACE       reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    $end            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    TRANSIENT       reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    VOLATILE        reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SYNCHRONIZED    reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    NATIVE          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LSS             reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    IDENT           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BOOLEAN         reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BYTE            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SHORT           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    INT             reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LONG            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CHAR            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FLOAT           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DOUBLE          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    VOID            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    RBRACE          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    IF              reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    WHILE           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    ASSERT          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SWITCH          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DO              reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BREAK           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CONTINUE        reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    RETURN          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    THROW           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    TRY             reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FOR             reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    INC             reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DEC             reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    SUPER           reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    NEW             reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    THIS            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    LPAREN          reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BOOL_LIT        reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    NULL_LIT        reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DECIMAL_LIT     reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    HEX_LIT         reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    OCTAL_LIT       reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    BINARY_LIT      reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    STRING_LIT      reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CHAR_LIT        reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    CASE            reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)
    DEFAULT         reduce using rule 432 (EnumBody -> LBRACE ZooEnumConstantList ZooCOMMA ZooEnumBodyDeclarations RBRACE .)


state 996

    (444) EnumBodyDeclarations -> SEMICOLON ClassBodyDeclarationS .

    RBRACE          reduce using rule 444 (EnumBodyDeclarations -> SEMICOLON ClassBodyDeclarationS .)


state 997

    (433) COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .

    COMMA           reduce using rule 433 (COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .)
    SEMICOLON       reduce using rule 433 (COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .)
    RBRACE          reduce using rule 433 (COMMAEnumConstantS -> COMMA EnumConstant COMMAEnumConstantS .)


state 998

    (436) EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .

    COMMA           reduce using rule 436 (EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .)
    SEMICOLON       reduce using rule 436 (EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .)
    RBRACE          reduce using rule 436 (EnumConstant -> EnumConstantModifierS IDENT ZooLPARENZooArgumentListRPAREN ZooClassBody .)


state 999

    (441) ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1050


state 1000

    (540) IfThenStatement -> IF . LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> IF . LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (542) IfThenElseStatementNoShortIf -> IF . LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf

    LPAREN          shift and go to state 1051


state 1001

    (540) IfThenStatement -> IF LPAREN Expression RPAREN Statement .

    IDENT           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    IF              reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    WHILE           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    LBRACE          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SEMICOLON       reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ASSERT          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SWITCH          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DO              reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BREAK           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CONTINUE        reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    RETURN          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    THROW           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    TRY             reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FOR             reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FINAL           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    PUBLIC          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    PROTECTED       reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    PRIVATE         reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ABSTRACT        reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    STATIC          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    STRICTFP        reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    EXTENDS         reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    INC             reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DEC             reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SUPER           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ATRATE          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    NEW             reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    THIS            reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    LPAREN          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BOOL_LIT        reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    NULL_LIT        reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    HEX_LIT         reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    OCTAL_LIT       reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BINARY_LIT      reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    STRING_LIT      reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CHAR_LIT        reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BOOLEAN         reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    VOID            reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    BYTE            reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    SHORT           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    INT             reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    LONG            reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CHAR            reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    FLOAT           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DOUBLE          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CLASS           reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    ENUM            reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    IMPLEMENTS      reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    RBRACE          reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    CASE            reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)
    DEFAULT         reduce using rule 540 (IfThenStatement -> IF LPAREN Expression RPAREN Statement .)


state 1002

    (541) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf . ELSE Statement

    ELSE            shift and go to state 1052


state 1003

    (506) Statement -> StatementWithoutTrailingSubstatement .
    (512) StatementNoShortIf -> StatementWithoutTrailingSubstatement .

    IDENT           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMICOLON       reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ASSERT          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SYNCHRONIZED    reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    THROW           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    TRY             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FINAL           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    PUBLIC          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    PROTECTED       reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    PRIVATE         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ABSTRACT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    STATIC          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    STRICTFP        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    EXTENDS         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ATRATE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LIT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    NULL_LIT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LIT     reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LIT         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    OCTAL_LIT       reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LIT      reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_DEC_LIT   reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_HEX_LIT   reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LIT      reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LIT        reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    VOID            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CLASS           reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ENUM            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    IMPLEMENTS      reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    RBRACE          reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 506 (Statement -> StatementWithoutTrailingSubstatement .)
    ELSE            reduce using rule 512 (StatementNoShortIf -> StatementWithoutTrailingSubstatement .)


state 1004

    (513) StatementNoShortIf -> LabeledStatementNoShortIf .

    ELSE            reduce using rule 513 (StatementNoShortIf -> LabeledStatementNoShortIf .)


state 1005

    (514) StatementNoShortIf -> IfThenElseStatementNoShortIf .

    ELSE            reduce using rule 514 (StatementNoShortIf -> IfThenElseStatementNoShortIf .)


state 1006

    (515) StatementNoShortIf -> WhileStatementNoShortIf .

    ELSE            reduce using rule 515 (StatementNoShortIf -> WhileStatementNoShortIf .)


state 1007

    (516) StatementNoShortIf -> ForStatementNoShortIf .

    ELSE            reduce using rule 516 (StatementNoShortIf -> ForStatementNoShortIf .)


state 1008

    (530) LabeledStatement -> IDENT . COLON Statement
    (531) LabeledStatementNoShortIf -> IDENT . COLON StatementNoShortIf
    (277) MethodName -> IDENT .
    (271) TypeName -> IDENT .
    (275) ExpressionName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (280) AmbiguousName -> IDENT .

  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    COLON           shift and go to state 1053
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    ASSIGN          reduce using rule 275 (ExpressionName -> IDENT .)
    MUL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    QUO_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    REM_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    ADD_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SUB_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 275 (ExpressionName -> IDENT .)
    AND_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    XOR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    OR_ASSIGN       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)

  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]


state 1009

    (557) WhileStatement -> WHILE . LPAREN Expression RPAREN Statement
    (558) WhileStatementNoShortIf -> WHILE . LPAREN Expression RPAREN StatementNoShortIf

    LPAREN          shift and go to state 1054


state 1010

    (562) ForStatementNoShortIf -> BasicForStatementNoShortIf .

    ELSE            reduce using rule 562 (ForStatementNoShortIf -> BasicForStatementNoShortIf .)


state 1011

    (563) ForStatementNoShortIf -> EnhancedForStatementNoShortIf .

    ELSE            reduce using rule 563 (ForStatementNoShortIf -> EnhancedForStatementNoShortIf .)


state 1012

    (564) BasicForStatement -> FOR . LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> FOR . LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> FOR . LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> FOR . LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf

    LPAREN          shift and go to state 1055


state 1013

    (557) WhileStatement -> WHILE LPAREN Expression RPAREN Statement .

    IDENT           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    IF              reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    WHILE           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    LBRACE          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SEMICOLON       reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ASSERT          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SWITCH          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DO              reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BREAK           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CONTINUE        reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    RETURN          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    THROW           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    TRY             reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FOR             reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FINAL           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    PUBLIC          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    PROTECTED       reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    PRIVATE         reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ABSTRACT        reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    STATIC          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    STRICTFP        reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    EXTENDS         reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    INC             reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DEC             reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SUPER           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ATRATE          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    NEW             reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    THIS            reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    LPAREN          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BOOL_LIT        reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    NULL_LIT        reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    HEX_LIT         reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    OCTAL_LIT       reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BINARY_LIT      reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    STRING_LIT      reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CHAR_LIT        reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BOOLEAN         reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    VOID            reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    BYTE            reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    SHORT           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    INT             reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    LONG            reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CHAR            reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    FLOAT           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DOUBLE          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CLASS           reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    ENUM            reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    IMPLEMENTS      reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    RBRACE          reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    CASE            reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)
    DEFAULT         reduce using rule 557 (WhileStatement -> WHILE LPAREN Expression RPAREN Statement .)


state 1014

    (544) AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .

    IDENT           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    IF              reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    WHILE           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    LBRACE          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SEMICOLON       reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ASSERT          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SWITCH          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DO              reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BREAK           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CONTINUE        reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    RETURN          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SYNCHRONIZED    reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    THROW           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    TRY             reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FOR             reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FINAL           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    PUBLIC          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    PROTECTED       reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    PRIVATE         reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ABSTRACT        reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    STATIC          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    STRICTFP        reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    EXTENDS         reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    INC             reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DEC             reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SUPER           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ATRATE          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    NEW             reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    THIS            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    LPAREN          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BOOL_LIT        reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    NULL_LIT        reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DECIMAL_LIT     reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    HEX_LIT         reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    OCTAL_LIT       reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BINARY_LIT      reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    STRING_LIT      reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CHAR_LIT        reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BOOLEAN         reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    VOID            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    BYTE            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    SHORT           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    INT             reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    LONG            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CHAR            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    FLOAT           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DOUBLE          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CLASS           reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ENUM            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    IMPLEMENTS      reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    RBRACE          reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    CASE            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    DEFAULT         reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)
    ELSE            reduce using rule 544 (AssertStatement -> ASSERT Expression COLON Expression SEMICOLON .)


state 1015

    (545) SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .

    IDENT           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IF              reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    WHILE           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LBRACE          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SEMICOLON       reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ASSERT          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SWITCH          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DO              reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BREAK           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CONTINUE        reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    RETURN          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SYNCHRONIZED    reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    THROW           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    TRY             reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FOR             reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FINAL           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    PUBLIC          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    PROTECTED       reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    PRIVATE         reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ABSTRACT        reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STATIC          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STRICTFP        reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    EXTENDS         reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INC             reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEC             reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SUPER           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ATRATE          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    NEW             reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    THIS            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LPAREN          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOL_LIT        reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    NULL_LIT        reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DECIMAL_LIT     reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    HEX_LIT         reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    OCTAL_LIT       reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BINARY_LIT      reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT_DEC_LIT   reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT_HEX_LIT   reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STRING_LIT      reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR_LIT        reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOLEAN         reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    VOID            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BYTE            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SHORT           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INT             reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LONG            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DOUBLE          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CLASS           reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ENUM            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IMPLEMENTS      reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    RBRACE          reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CASE            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEFAULT         reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ELSE            reduce using rule 545 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)


state 1016

    (546) SwitchBlock -> LBRACE . SwitchBlockStatementGroupS SwitchLabelS RBRACE
    (547) SwitchBlockStatementGroupS -> . SwitchBlockStatementGroup SwitchBlockStatementGroupS
    (548) SwitchBlockStatementGroupS -> . empty
    (549) SwitchBlockStatementGroup -> . SwitchLabels BlockStatements
    (1) empty -> .
    (550) SwitchLabels -> . SwitchLabel SwitchLabelS
    (553) SwitchLabel -> . CASE ConstantExpression COLON
    (554) SwitchLabel -> . CASE EnumConstantName COLON
    (555) SwitchLabel -> . DEFAULT COLON

  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            shift and go to state 1061
    DEFAULT         shift and go to state 1062

  ! CASE            [ reduce using rule 1 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 1 (empty -> .) ]

    SwitchBlockStatementGroupS     shift and go to state 1056
    SwitchBlockStatementGroup      shift and go to state 1057
    empty                          shift and go to state 1058
    SwitchLabels                   shift and go to state 1059
    SwitchLabel                    shift and go to state 1060

state 1017

    (559) DoStatement -> DO Statement WHILE LPAREN Expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 1063


state 1018

    (586) SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .

    IDENT           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    IF              reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    WHILE           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    LBRACE          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SEMICOLON       reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ASSERT          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SWITCH          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DO              reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BREAK           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CONTINUE        reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    RETURN          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SYNCHRONIZED    reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    THROW           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    TRY             reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FOR             reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FINAL           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    PUBLIC          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    PROTECTED       reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    PRIVATE         reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ABSTRACT        reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    STATIC          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    STRICTFP        reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    EXTENDS         reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    INC             reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DEC             reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SUPER           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ATRATE          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    NEW             reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    THIS            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    LPAREN          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BOOL_LIT        reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    NULL_LIT        reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DECIMAL_LIT     reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    HEX_LIT         reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    OCTAL_LIT       reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BINARY_LIT      reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FLOAT_DEC_LIT   reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FLOAT_HEX_LIT   reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    STRING_LIT      reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CHAR_LIT        reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BOOLEAN         reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    VOID            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    BYTE            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    SHORT           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    INT             reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    LONG            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CHAR            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    FLOAT           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DOUBLE          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CLASS           reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ENUM            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    IMPLEMENTS      reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    RBRACE          reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    CASE            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    DEFAULT         reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)
    ELSE            reduce using rule 586 (SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block .)


state 1019

    (600) Finally -> FINALLY Block .

    IDENT           reduce using rule 600 (Finally -> FINALLY Block .)
    IF              reduce using rule 600 (Finally -> FINALLY Block .)
    WHILE           reduce using rule 600 (Finally -> FINALLY Block .)
    LBRACE          reduce using rule 600 (Finally -> FINALLY Block .)
    SEMICOLON       reduce using rule 600 (Finally -> FINALLY Block .)
    ASSERT          reduce using rule 600 (Finally -> FINALLY Block .)
    SWITCH          reduce using rule 600 (Finally -> FINALLY Block .)
    DO              reduce using rule 600 (Finally -> FINALLY Block .)
    BREAK           reduce using rule 600 (Finally -> FINALLY Block .)
    CONTINUE        reduce using rule 600 (Finally -> FINALLY Block .)
    RETURN          reduce using rule 600 (Finally -> FINALLY Block .)
    SYNCHRONIZED    reduce using rule 600 (Finally -> FINALLY Block .)
    THROW           reduce using rule 600 (Finally -> FINALLY Block .)
    TRY             reduce using rule 600 (Finally -> FINALLY Block .)
    FOR             reduce using rule 600 (Finally -> FINALLY Block .)
    FINAL           reduce using rule 600 (Finally -> FINALLY Block .)
    PUBLIC          reduce using rule 600 (Finally -> FINALLY Block .)
    PROTECTED       reduce using rule 600 (Finally -> FINALLY Block .)
    PRIVATE         reduce using rule 600 (Finally -> FINALLY Block .)
    ABSTRACT        reduce using rule 600 (Finally -> FINALLY Block .)
    STATIC          reduce using rule 600 (Finally -> FINALLY Block .)
    STRICTFP        reduce using rule 600 (Finally -> FINALLY Block .)
    EXTENDS         reduce using rule 600 (Finally -> FINALLY Block .)
    INC             reduce using rule 600 (Finally -> FINALLY Block .)
    DEC             reduce using rule 600 (Finally -> FINALLY Block .)
    SUPER           reduce using rule 600 (Finally -> FINALLY Block .)
    ATRATE          reduce using rule 600 (Finally -> FINALLY Block .)
    NEW             reduce using rule 600 (Finally -> FINALLY Block .)
    THIS            reduce using rule 600 (Finally -> FINALLY Block .)
    LPAREN          reduce using rule 600 (Finally -> FINALLY Block .)
    BOOL_LIT        reduce using rule 600 (Finally -> FINALLY Block .)
    NULL_LIT        reduce using rule 600 (Finally -> FINALLY Block .)
    DECIMAL_LIT     reduce using rule 600 (Finally -> FINALLY Block .)
    HEX_LIT         reduce using rule 600 (Finally -> FINALLY Block .)
    OCTAL_LIT       reduce using rule 600 (Finally -> FINALLY Block .)
    BINARY_LIT      reduce using rule 600 (Finally -> FINALLY Block .)
    FLOAT_DEC_LIT   reduce using rule 600 (Finally -> FINALLY Block .)
    FLOAT_HEX_LIT   reduce using rule 600 (Finally -> FINALLY Block .)
    STRING_LIT      reduce using rule 600 (Finally -> FINALLY Block .)
    CHAR_LIT        reduce using rule 600 (Finally -> FINALLY Block .)
    BOOLEAN         reduce using rule 600 (Finally -> FINALLY Block .)
    VOID            reduce using rule 600 (Finally -> FINALLY Block .)
    BYTE            reduce using rule 600 (Finally -> FINALLY Block .)
    SHORT           reduce using rule 600 (Finally -> FINALLY Block .)
    INT             reduce using rule 600 (Finally -> FINALLY Block .)
    LONG            reduce using rule 600 (Finally -> FINALLY Block .)
    CHAR            reduce using rule 600 (Finally -> FINALLY Block .)
    FLOAT           reduce using rule 600 (Finally -> FINALLY Block .)
    DOUBLE          reduce using rule 600 (Finally -> FINALLY Block .)
    CLASS           reduce using rule 600 (Finally -> FINALLY Block .)
    ENUM            reduce using rule 600 (Finally -> FINALLY Block .)
    IMPLEMENTS      reduce using rule 600 (Finally -> FINALLY Block .)
    RBRACE          reduce using rule 600 (Finally -> FINALLY Block .)
    CASE            reduce using rule 600 (Finally -> FINALLY Block .)
    DEFAULT         reduce using rule 600 (Finally -> FINALLY Block .)
    ELSE            reduce using rule 600 (Finally -> FINALLY Block .)


state 1020

    (593) CatchClauseS -> CatchClause CatchClauseS .

    IDENT           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    IF              reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    WHILE           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    LBRACE          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    SEMICOLON       reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    ASSERT          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    SWITCH          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    DO              reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    BREAK           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    CONTINUE        reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    RETURN          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    SYNCHRONIZED    reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    THROW           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    TRY             reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    FOR             reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    FINAL           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    PUBLIC          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    PROTECTED       reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    PRIVATE         reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    ABSTRACT        reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    STATIC          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    STRICTFP        reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    EXTENDS         reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    INC             reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    DEC             reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    SUPER           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    ATRATE          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    NEW             reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    THIS            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    LPAREN          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    BOOL_LIT        reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    NULL_LIT        reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    DECIMAL_LIT     reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    HEX_LIT         reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    OCTAL_LIT       reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    BINARY_LIT      reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    FLOAT_DEC_LIT   reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    FLOAT_HEX_LIT   reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    STRING_LIT      reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    CHAR_LIT        reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    BOOLEAN         reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    VOID            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    BYTE            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    SHORT           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    INT             reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    LONG            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    CHAR            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    FLOAT           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    DOUBLE          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    CLASS           reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    ENUM            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    IMPLEMENTS      reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    RBRACE          reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    CASE            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    DEFAULT         reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    FINALLY         reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)
    ELSE            reduce using rule 593 (CatchClauseS -> CatchClause CatchClauseS .)


state 1021

    (595) CatchClause -> CATCH LPAREN CatchFormalParameter . RPAREN Block

    RPAREN          shift and go to state 1064


state 1022

    (596) CatchFormalParameter -> VariableModifierS . CatchType VariableDeclaratorId
    (597) CatchType -> . UnannClassType ORClassTypeS
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (351) UnannInterfaceType -> . UnannClassType

    IDENT           shift and go to state 1067

    CatchType                      shift and go to state 1065
    UnannClassType                 shift and go to state 1066
    UnannClassOrInterfaceType      shift and go to state 1068
    UnannInterfaceType             shift and go to state 540

state 1023

    (601) TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .

    IDENT           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    IF              reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    WHILE           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    LBRACE          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SEMICOLON       reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ASSERT          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SWITCH          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DO              reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BREAK           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CONTINUE        reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    RETURN          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SYNCHRONIZED    reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    THROW           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    TRY             reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FOR             reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FINAL           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    PUBLIC          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    PROTECTED       reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    PRIVATE         reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ABSTRACT        reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    STATIC          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    STRICTFP        reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    EXTENDS         reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    INC             reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DEC             reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SUPER           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ATRATE          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    NEW             reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    THIS            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    LPAREN          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BOOL_LIT        reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    NULL_LIT        reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DECIMAL_LIT     reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    HEX_LIT         reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    OCTAL_LIT       reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BINARY_LIT      reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FLOAT_DEC_LIT   reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FLOAT_HEX_LIT   reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    STRING_LIT      reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CHAR_LIT        reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BOOLEAN         reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    VOID            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    BYTE            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    SHORT           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    INT             reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    LONG            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CHAR            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    FLOAT           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DOUBLE          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CLASS           reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ENUM            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    IMPLEMENTS      reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    RBRACE          reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    CASE            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    DEFAULT         reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)
    ELSE            reduce using rule 601 (TryWithResourcesStatement -> TRY ResourceSpecification Block ZooCatches ZooFinally .)


state 1024

    (602) ZooFinally -> Finally .

    IDENT           reduce using rule 602 (ZooFinally -> Finally .)
    IF              reduce using rule 602 (ZooFinally -> Finally .)
    WHILE           reduce using rule 602 (ZooFinally -> Finally .)
    LBRACE          reduce using rule 602 (ZooFinally -> Finally .)
    SEMICOLON       reduce using rule 602 (ZooFinally -> Finally .)
    ASSERT          reduce using rule 602 (ZooFinally -> Finally .)
    SWITCH          reduce using rule 602 (ZooFinally -> Finally .)
    DO              reduce using rule 602 (ZooFinally -> Finally .)
    BREAK           reduce using rule 602 (ZooFinally -> Finally .)
    CONTINUE        reduce using rule 602 (ZooFinally -> Finally .)
    RETURN          reduce using rule 602 (ZooFinally -> Finally .)
    SYNCHRONIZED    reduce using rule 602 (ZooFinally -> Finally .)
    THROW           reduce using rule 602 (ZooFinally -> Finally .)
    TRY             reduce using rule 602 (ZooFinally -> Finally .)
    FOR             reduce using rule 602 (ZooFinally -> Finally .)
    FINAL           reduce using rule 602 (ZooFinally -> Finally .)
    PUBLIC          reduce using rule 602 (ZooFinally -> Finally .)
    PROTECTED       reduce using rule 602 (ZooFinally -> Finally .)
    PRIVATE         reduce using rule 602 (ZooFinally -> Finally .)
    ABSTRACT        reduce using rule 602 (ZooFinally -> Finally .)
    STATIC          reduce using rule 602 (ZooFinally -> Finally .)
    STRICTFP        reduce using rule 602 (ZooFinally -> Finally .)
    EXTENDS         reduce using rule 602 (ZooFinally -> Finally .)
    INC             reduce using rule 602 (ZooFinally -> Finally .)
    DEC             reduce using rule 602 (ZooFinally -> Finally .)
    SUPER           reduce using rule 602 (ZooFinally -> Finally .)
    ATRATE          reduce using rule 602 (ZooFinally -> Finally .)
    NEW             reduce using rule 602 (ZooFinally -> Finally .)
    THIS            reduce using rule 602 (ZooFinally -> Finally .)
    LPAREN          reduce using rule 602 (ZooFinally -> Finally .)
    BOOL_LIT        reduce using rule 602 (ZooFinally -> Finally .)
    NULL_LIT        reduce using rule 602 (ZooFinally -> Finally .)
    DECIMAL_LIT     reduce using rule 602 (ZooFinally -> Finally .)
    HEX_LIT         reduce using rule 602 (ZooFinally -> Finally .)
    OCTAL_LIT       reduce using rule 602 (ZooFinally -> Finally .)
    BINARY_LIT      reduce using rule 602 (ZooFinally -> Finally .)
    FLOAT_DEC_LIT   reduce using rule 602 (ZooFinally -> Finally .)
    FLOAT_HEX_LIT   reduce using rule 602 (ZooFinally -> Finally .)
    STRING_LIT      reduce using rule 602 (ZooFinally -> Finally .)
    CHAR_LIT        reduce using rule 602 (ZooFinally -> Finally .)
    BOOLEAN         reduce using rule 602 (ZooFinally -> Finally .)
    VOID            reduce using rule 602 (ZooFinally -> Finally .)
    BYTE            reduce using rule 602 (ZooFinally -> Finally .)
    SHORT           reduce using rule 602 (ZooFinally -> Finally .)
    INT             reduce using rule 602 (ZooFinally -> Finally .)
    LONG            reduce using rule 602 (ZooFinally -> Finally .)
    CHAR            reduce using rule 602 (ZooFinally -> Finally .)
    FLOAT           reduce using rule 602 (ZooFinally -> Finally .)
    DOUBLE          reduce using rule 602 (ZooFinally -> Finally .)
    CLASS           reduce using rule 602 (ZooFinally -> Finally .)
    ENUM            reduce using rule 602 (ZooFinally -> Finally .)
    IMPLEMENTS      reduce using rule 602 (ZooFinally -> Finally .)
    RBRACE          reduce using rule 602 (ZooFinally -> Finally .)
    CASE            reduce using rule 602 (ZooFinally -> Finally .)
    DEFAULT         reduce using rule 602 (ZooFinally -> Finally .)
    ELSE            reduce using rule 602 (ZooFinally -> Finally .)


state 1025

    (603) ZooFinally -> empty .

    IDENT           reduce using rule 603 (ZooFinally -> empty .)
    IF              reduce using rule 603 (ZooFinally -> empty .)
    WHILE           reduce using rule 603 (ZooFinally -> empty .)
    LBRACE          reduce using rule 603 (ZooFinally -> empty .)
    SEMICOLON       reduce using rule 603 (ZooFinally -> empty .)
    ASSERT          reduce using rule 603 (ZooFinally -> empty .)
    SWITCH          reduce using rule 603 (ZooFinally -> empty .)
    DO              reduce using rule 603 (ZooFinally -> empty .)
    BREAK           reduce using rule 603 (ZooFinally -> empty .)
    CONTINUE        reduce using rule 603 (ZooFinally -> empty .)
    RETURN          reduce using rule 603 (ZooFinally -> empty .)
    SYNCHRONIZED    reduce using rule 603 (ZooFinally -> empty .)
    THROW           reduce using rule 603 (ZooFinally -> empty .)
    TRY             reduce using rule 603 (ZooFinally -> empty .)
    FOR             reduce using rule 603 (ZooFinally -> empty .)
    FINAL           reduce using rule 603 (ZooFinally -> empty .)
    PUBLIC          reduce using rule 603 (ZooFinally -> empty .)
    PROTECTED       reduce using rule 603 (ZooFinally -> empty .)
    PRIVATE         reduce using rule 603 (ZooFinally -> empty .)
    ABSTRACT        reduce using rule 603 (ZooFinally -> empty .)
    STATIC          reduce using rule 603 (ZooFinally -> empty .)
    STRICTFP        reduce using rule 603 (ZooFinally -> empty .)
    EXTENDS         reduce using rule 603 (ZooFinally -> empty .)
    INC             reduce using rule 603 (ZooFinally -> empty .)
    DEC             reduce using rule 603 (ZooFinally -> empty .)
    SUPER           reduce using rule 603 (ZooFinally -> empty .)
    ATRATE          reduce using rule 603 (ZooFinally -> empty .)
    NEW             reduce using rule 603 (ZooFinally -> empty .)
    THIS            reduce using rule 603 (ZooFinally -> empty .)
    LPAREN          reduce using rule 603 (ZooFinally -> empty .)
    BOOL_LIT        reduce using rule 603 (ZooFinally -> empty .)
    NULL_LIT        reduce using rule 603 (ZooFinally -> empty .)
    DECIMAL_LIT     reduce using rule 603 (ZooFinally -> empty .)
    HEX_LIT         reduce using rule 603 (ZooFinally -> empty .)
    OCTAL_LIT       reduce using rule 603 (ZooFinally -> empty .)
    BINARY_LIT      reduce using rule 603 (ZooFinally -> empty .)
    FLOAT_DEC_LIT   reduce using rule 603 (ZooFinally -> empty .)
    FLOAT_HEX_LIT   reduce using rule 603 (ZooFinally -> empty .)
    STRING_LIT      reduce using rule 603 (ZooFinally -> empty .)
    CHAR_LIT        reduce using rule 603 (ZooFinally -> empty .)
    BOOLEAN         reduce using rule 603 (ZooFinally -> empty .)
    VOID            reduce using rule 603 (ZooFinally -> empty .)
    BYTE            reduce using rule 603 (ZooFinally -> empty .)
    SHORT           reduce using rule 603 (ZooFinally -> empty .)
    INT             reduce using rule 603 (ZooFinally -> empty .)
    LONG            reduce using rule 603 (ZooFinally -> empty .)
    CHAR            reduce using rule 603 (ZooFinally -> empty .)
    FLOAT           reduce using rule 603 (ZooFinally -> empty .)
    DOUBLE          reduce using rule 603 (ZooFinally -> empty .)
    CLASS           reduce using rule 603 (ZooFinally -> empty .)
    ENUM            reduce using rule 603 (ZooFinally -> empty .)
    IMPLEMENTS      reduce using rule 603 (ZooFinally -> empty .)
    RBRACE          reduce using rule 603 (ZooFinally -> empty .)
    CASE            reduce using rule 603 (ZooFinally -> empty .)
    DEFAULT         reduce using rule 603 (ZooFinally -> empty .)
    ELSE            reduce using rule 603 (ZooFinally -> empty .)


state 1026

    (606) ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON RPAREN .

    LBRACE          reduce using rule 606 (ResourceSpecification -> LPAREN ResourceList ZooSEMICOLON RPAREN .)


state 1027

    (608) SEMICOLONResourceS -> SEMICOLON Resource . SEMICOLONResourceS
    (608) SEMICOLONResourceS -> . SEMICOLON Resource SEMICOLONResourceS
    (609) SEMICOLONResourceS -> . empty
    (1) empty -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 943
    RPAREN          reduce using rule 1 (empty -> .)

  ! SEMICOLON       [ reduce using rule 1 (empty -> .) ]

    SEMICOLONResourceS             shift and go to state 1069
    empty                          shift and go to state 944

state 1028

    (610) Resource -> VariableModifierS UnannType VariableDeclaratorId . ASSIGN Expression

    ASSIGN          shift and go to state 1070


state 1029

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression . SEMICOLON ZooForUpdate RPAREN Statement

    SEMICOLON       shift and go to state 1071


state 1030

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId . COLON Expression RPAREN Statement
    (336) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (334) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (335) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    COLON           shift and go to state 1072
    ASSIGN          shift and go to state 846
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 845
    empty                          shift and go to state 847

state 1031

    (576) COMMAStatementExpressionS -> COMMA StatementExpression . COMMAStatementExpressionS
    (576) COMMAStatementExpressionS -> . COMMA StatementExpression COMMAStatementExpressionS
    (577) COMMAStatementExpressionS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 949
    SEMICOLON       reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    COMMAStatementExpressionS      shift and go to state 1073
    empty                          shift and go to state 950

state 1032

    (414) ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements . RBRACE

    RBRACE          shift and go to state 1074


state 1033

    (419) ExplicitConstructorInvocation -> ZooTypeArguments THIS . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1075


state 1034

    (420) ExplicitConstructorInvocation -> ZooTypeArguments SUPER . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1076


state 1035

    (421) ExplicitConstructorInvocation -> ExpressionName PERIOD . ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (119) ClassInstanceCreationExpression -> ExpressionName PERIOD . UnqualifiedClassInstanceCreationExpression
    (140) MethodInvocation -> ExpressionName PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    NEW             shift and go to state 422
    LSS             shift and go to state 280
    SUPER           reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 1077
    UnqualifiedClassInstanceCreationExpression shift and go to state 424
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 1036

    (422) ExplicitConstructorInvocation -> Primary PERIOD . ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (120) ClassInstanceCreationExpression -> Primary PERIOD . UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> Primary PERIOD . IDENT
    (141) MethodInvocation -> Primary PERIOD . ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 420
    NEW             shift and go to state 422
    LSS             shift and go to state 280
    SUPER           reduce using rule 1 (empty -> .)

  ! IDENT           [ reduce using rule 1 (empty -> .) ]

    ZooTypeArguments               shift and go to state 1078
    UnqualifiedClassInstanceCreationExpression shift and go to state 419
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 1037

    (396) COMMAExceptionTypeS -> COMMA ExceptionType . COMMAExceptionTypeS
    (396) COMMAExceptionTypeS -> . COMMA ExceptionType COMMAExceptionTypeS
    (397) COMMAExceptionTypeS -> . empty
    (1) empty -> .

    COMMA           shift and go to state 959
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    COMMAExceptionTypeS            shift and go to state 1079
    empty                          shift and go to state 960

state 1038

    (412) ConstructorDeclarator -> ZooTypeParameters SimpleTypeName LPAREN ZooFormalParameterList RPAREN .

    THROWS          reduce using rule 412 (ConstructorDeclarator -> ZooTypeParameters SimpleTypeName LPAREN ZooFormalParameterList RPAREN .)
    LBRACE          reduce using rule 412 (ConstructorDeclarator -> ZooTypeParameters SimpleTypeName LPAREN ZooFormalParameterList RPAREN .)


state 1039

    (331) COMMAVariableDeclaratorS -> COMMA VariableDeclarator COMMAVariableDeclaratorS .

    SEMICOLON       reduce using rule 331 (COMMAVariableDeclaratorS -> COMMA VariableDeclarator COMMAVariableDeclaratorS .)


state 1040

    (350) UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .

    PERIOD          reduce using rule 350 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    ATRATE          reduce using rule 350 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    LBRACE          reduce using rule 350 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    IDENT           reduce using rule 350 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    THIS            reduce using rule 350 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    ELLIPSIS        reduce using rule 350 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)
    OR              reduce using rule 350 (UnannClassType -> UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments .)


state 1041

    (377) MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN . ZooDims
    (63) ZooDims -> . Dims
    (64) ZooDims -> . empty
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    THROWS          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 1080
    Dims                           shift and go to state 626
    empty                          shift and go to state 627
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1042

    (372) MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows .

    SEMICOLON       reduce using rule 372 (MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows .)
    LBRACE          reduce using rule 372 (MethodHeader -> TypeParameters AnnotationS Result MethodDeclarator ZooThrows .)


state 1043

    (44) InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .

    SEMICOLON       reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    PUBLIC          reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    STATIC          reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    FINAL           reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    ABSTRACT        reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    DEFAULT         reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    STRICTFP        reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    PROTECTED       reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    PRIVATE         reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    EXTENDS         reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    ATRATE          reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    BOOLEAN         reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    IDENT           reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    BYTE            reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    SHORT           reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    INT             reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    LONG            reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    CHAR            reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    FLOAT           reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    DOUBLE          reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    VOID            reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    LSS             reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    CLASS           reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    ENUM            reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    IMPLEMENTS      reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    LBRACE          reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    INTERFACE       reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)
    RBRACE          reduce using rule 44 (InterfaceMethodDeclaration -> InterfaceMethodModifierS MethodHeader MethodBody .)


state 1044

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN . RPAREN ZooDims ZooDefaultValue SEMICOLON

    RPAREN          shift and go to state 1081


state 1045

    (37) ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .

    SEMICOLON       reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PUBLIC          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ABSTRACT        reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STATIC          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FINAL           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PROTECTED       reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    PRIVATE         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    STRICTFP        reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    EXTENDS         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ATRATE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BOOLEAN         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IDENT           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    BYTE            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    SHORT           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INT             reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LONG            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CHAR            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    FLOAT           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    DOUBLE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    CLASS           reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    ENUM            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    IMPLEMENTS      reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LBRACE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    INTERFACE       reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    RBRACE          reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    DEFAULT         reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    VOID            reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)
    LSS             reduce using rule 37 (ConstantDeclaration -> ConstantModifierS UnannType VariableDeclaratorList SEMICOLON .)


state 1046

    (143) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList . RPAREN

    RPAREN          shift and go to state 1082


state 1047

    (471) AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .

    COLON_SEP       reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LSS             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GTR             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LEQ             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    GEQ             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INSTANCEOF      reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    EQL             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    NEQ             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    AND             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    XOR             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    OR              reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LAND            reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUES            reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LOR             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RPAREN          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COMMA           reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACE          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    COLON           reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    MUL             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    QUO             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    REM             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ADD             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SUB             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHL             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SHR_UN          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    RBRACK          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    SEMICOLON       reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    LBRACE          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    PERIOD          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    INC             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEC             reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    IDENT           reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THIS            reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ATRATE          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ELLIPSIS        reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    ASSIGN          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    THROWS          reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)
    DEFAULT         reduce using rule 471 (AnnotationSLBRACERBRACES -> AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES .)


state 1048

    (98) COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS .

    COMMA           reduce using rule 98 (COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS .)
    RBRACE          reduce using rule 98 (COMMAVariableInitializerS -> COMMA VariableInitializer COMMAVariableInitializerS .)


state 1049

    (129) PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS .

    LSS             reduce using rule 129 (PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS .)
    LPAREN          reduce using rule 129 (PERIODAnnotationSIDENTS -> PERIOD AnnotationS IDENT PERIODAnnotationSIDENTS .)


state 1050

    (441) ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .

    LBRACE          reduce using rule 441 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 441 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 441 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 441 (ZooLPARENZooArgumentListRPAREN -> LPAREN ZooArgumentList RPAREN .)


state 1051

    (540) IfThenStatement -> IF LPAREN . Expression RPAREN Statement
    (541) IfThenElseStatement -> IF LPAREN . Expression RPAREN StatementNoShortIf ELSE Statement
    (542) IfThenElseStatementNoShortIf -> IF LPAREN . Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 1083
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1052

    (541) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE . Statement
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1084
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1053

    (530) LabeledStatement -> IDENT COLON . Statement
    (531) LabeledStatementNoShortIf -> IDENT COLON . StatementNoShortIf
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (512) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (513) StatementNoShortIf -> . LabeledStatementNoShortIf
    (514) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (515) StatementNoShortIf -> . WhileStatementNoShortIf
    (516) StatementNoShortIf -> . ForStatementNoShortIf
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (531) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (542) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (558) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (562) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (563) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1008
    IF              shift and go to state 1000
    WHILE           shift and go to state 1009
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 1012
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 802
    StatementNoShortIf             shift and go to state 1085
    StatementWithoutTrailingSubstatement shift and go to state 1003
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    LabeledStatementNoShortIf      shift and go to state 1004
    IfThenElseStatementNoShortIf   shift and go to state 1005
    WhileStatementNoShortIf        shift and go to state 1006
    ForStatementNoShortIf          shift and go to state 1007
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    BasicForStatementNoShortIf     shift and go to state 1010
    EnhancedForStatementNoShortIf  shift and go to state 1011
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1054

    (557) WhileStatement -> WHILE LPAREN . Expression RPAREN Statement
    (558) WhileStatementNoShortIf -> WHILE LPAREN . Expression RPAREN StatementNoShortIf
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 1086
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1055

    (564) BasicForStatement -> FOR LPAREN . ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> FOR LPAREN . VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> FOR LPAREN . ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> FOR LPAREN . VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (569) ZooForInit -> . ForInit
    (570) ZooForInit -> . empty
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (572) ForInit -> . StatementExpressionList
    (573) ForInit -> . LocalVariableDeclaration
    (1) empty -> .
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (575) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (503) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    SEMICOLON       reduce using rule 1 (empty -> .)
    FINAL           shift and go to state 362
    ATRATE          shift and go to state 13
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    IDENT           shift and go to state 831
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooForInit                     shift and go to state 1087
    VariableModifierS              shift and go to state 1088
    ForInit                        shift and go to state 825
    empty                          shift and go to state 826
    VariableModifier               shift and go to state 498
    StatementExpressionList        shift and go to state 827
    LocalVariableDeclaration       shift and go to state 828
    Annotation                     shift and go to state 829
    StatementExpression            shift and go to state 830
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    TypeName                       shift and go to state 521
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 1056

    (546) SwitchBlock -> LBRACE SwitchBlockStatementGroupS . SwitchLabelS RBRACE
    (551) SwitchLabelS -> . SwitchLabel SwitchLabelS
    (552) SwitchLabelS -> . empty
    (553) SwitchLabel -> . CASE ConstantExpression COLON
    (554) SwitchLabel -> . CASE EnumConstantName COLON
    (555) SwitchLabel -> . DEFAULT COLON
    (1) empty -> .

    CASE            shift and go to state 1061
    DEFAULT         shift and go to state 1062
    RBRACE          reduce using rule 1 (empty -> .)

    SwitchLabelS                   shift and go to state 1089
    SwitchLabel                    shift and go to state 1090
    empty                          shift and go to state 1091

state 1057

    (547) SwitchBlockStatementGroupS -> SwitchBlockStatementGroup . SwitchBlockStatementGroupS
    (547) SwitchBlockStatementGroupS -> . SwitchBlockStatementGroup SwitchBlockStatementGroupS
    (548) SwitchBlockStatementGroupS -> . empty
    (549) SwitchBlockStatementGroup -> . SwitchLabels BlockStatements
    (1) empty -> .
    (550) SwitchLabels -> . SwitchLabel SwitchLabelS
    (553) SwitchLabel -> . CASE ConstantExpression COLON
    (554) SwitchLabel -> . CASE EnumConstantName COLON
    (555) SwitchLabel -> . DEFAULT COLON

  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
    RBRACE          reduce using rule 1 (empty -> .)
    CASE            shift and go to state 1061
    DEFAULT         shift and go to state 1062

  ! CASE            [ reduce using rule 1 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 1 (empty -> .) ]

    SwitchBlockStatementGroup      shift and go to state 1057
    SwitchBlockStatementGroupS     shift and go to state 1092
    empty                          shift and go to state 1058
    SwitchLabels                   shift and go to state 1059
    SwitchLabel                    shift and go to state 1060

state 1058

    (548) SwitchBlockStatementGroupS -> empty .

    CASE            reduce using rule 548 (SwitchBlockStatementGroupS -> empty .)
    DEFAULT         reduce using rule 548 (SwitchBlockStatementGroupS -> empty .)
    RBRACE          reduce using rule 548 (SwitchBlockStatementGroupS -> empty .)


state 1059

    (549) SwitchBlockStatementGroup -> SwitchLabels . BlockStatements
    (496) BlockStatements -> . BlockStatement BlockStatementS
    (499) BlockStatement -> . LocalVariableDeclarationStatement
    (500) BlockStatement -> . ClassDeclaration
    (501) BlockStatement -> . Statement
    (502) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMICOLON
    (282) ClassDeclaration -> . NormalClassDeclaration
    (283) ClassDeclaration -> . EnumDeclaration
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (503) LocalVariableDeclaration -> . VariableModifierS UnannType VariableDeclaratorList
    (289) NormalClassDeclaration -> . ClassModifierS CLASS IDENT ZooTypeParameters
    (290) NormalClassDeclaration -> . ZooSuperClass ZooSuperinterfaces ClassBody
    (425) EnumDeclaration -> . ClassModifierS ENUM IDENT ZooSuperinterfaces EnumBody
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (504) VariableModifierS -> . VariableModifier VariableModifierS
    (505) VariableModifierS -> . empty
    (423) ClassModifierS -> . ClassModifier ClassModifierS
    (424) ClassModifierS -> . empty
    (285) ZooSuperClass -> . SuperClass
    (286) ZooSuperClass -> . empty
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (388) VariableModifier -> . Annotation
    (389) VariableModifier -> . FINAL
    (1) empty -> .
    (291) ClassModifier -> . Annotation
    (292) ClassModifier -> . PUBLIC
    (293) ClassModifier -> . PROTECTED
    (294) ClassModifier -> . PRIVATE
    (295) ClassModifier -> . ABSTRACT
    (296) ClassModifier -> . STATIC
    (297) ClassModifier -> . FINAL
    (298) ClassModifier -> . STRICTFP
    (284) SuperClass -> . EXTENDS ClassType
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    FINAL           shift and go to state 512
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)
    PUBLIC          shift and go to state 72
    PROTECTED       shift and go to state 73
    PRIVATE         shift and go to state 74
    ABSTRACT        shift and go to state 75
    STATIC          shift and go to state 76
    STRICTFP        shift and go to state 77
    EXTENDS         shift and go to state 52
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    ATRATE          shift and go to state 13
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]
  ! LBRACE          [ reduce using rule 1 (empty -> .) ]

    BlockStatements                shift and go to state 1093
    BlockStatement                 shift and go to state 467
    LocalVariableDeclarationStatement shift and go to state 468
    ClassDeclaration               shift and go to state 469
    Statement                      shift and go to state 470
    LocalVariableDeclaration       shift and go to state 471
    NormalClassDeclaration         shift and go to state 34
    EnumDeclaration                shift and go to state 35
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    VariableModifierS              shift and go to state 479
    ClassModifierS                 shift and go to state 38
    ZooSuperClass                  shift and go to state 39
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    VariableModifier               shift and go to state 498
    empty                          shift and go to state 1094
    ClassModifier                  shift and go to state 41
    SuperClass                     shift and go to state 42
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Annotation                     shift and go to state 511
    ClassType                      shift and go to state 168
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92

state 1060

    (550) SwitchLabels -> SwitchLabel . SwitchLabelS
    (551) SwitchLabelS -> . SwitchLabel SwitchLabelS
    (552) SwitchLabelS -> . empty
    (553) SwitchLabel -> . CASE ConstantExpression COLON
    (554) SwitchLabel -> . CASE EnumConstantName COLON
    (555) SwitchLabel -> . DEFAULT COLON
    (1) empty -> .

    CASE            shift and go to state 1061
    DEFAULT         shift and go to state 1062
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)

    SwitchLabel                    shift and go to state 1090
    SwitchLabelS                   shift and go to state 1095
    empty                          shift and go to state 1091

state 1061

    (553) SwitchLabel -> CASE . ConstantExpression COLON
    (554) SwitchLabel -> CASE . EnumConstantName COLON
    (246) ConstantExpression -> . Expression
    (556) EnumConstantName -> . IDENT
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1099
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ConstantExpression             shift and go to state 1096
    EnumConstantName               shift and go to state 1097
    Expression                     shift and go to state 1098
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1062

    (555) SwitchLabel -> DEFAULT . COLON

    COLON           shift and go to state 1100


state 1063

    (559) DoStatement -> DO Statement WHILE LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1101


state 1064

    (595) CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN . Block
    (493) Block -> . LBRACE ZooBlockStatements RBRACE

    LBRACE          shift and go to state 299

    Block                          shift and go to state 1102

state 1065

    (596) CatchFormalParameter -> VariableModifierS CatchType . VariableDeclaratorId
    (337) VariableDeclaratorId -> . IDENT ZooDims

    IDENT           shift and go to state 705

    VariableDeclaratorId           shift and go to state 1103

state 1066

    (597) CatchType -> UnannClassType . ORClassTypeS
    (347) UnannClassOrInterfaceType -> UnannClassType .
    (351) UnannInterfaceType -> UnannClassType .
    (598) ORClassTypeS -> . OR ClassType ORClassTypeS
    (599) ORClassTypeS -> . empty
    (1) empty -> .

  ! reduce/reduce conflict for PERIOD resolved using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    PERIOD          reduce using rule 347 (UnannClassOrInterfaceType -> UnannClassType .)
    OR              shift and go to state 1105
    IDENT           reduce using rule 1 (empty -> .)

  ! PERIOD          [ reduce using rule 351 (UnannInterfaceType -> UnannClassType .) ]

    ORClassTypeS                   shift and go to state 1104
    empty                          shift and go to state 1106

state 1067

    (349) UnannClassType -> IDENT . ZooTypeArguments
    (122) ZooTypeArguments -> . TypeArguments
    (123) ZooTypeArguments -> . empty
    (482) TypeArguments -> . LSS TypeArgumentList GTR
    (1) empty -> .

    LSS             shift and go to state 280
    OR              reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    PERIOD          reduce using rule 1 (empty -> .)

    ZooTypeArguments               shift and go to state 710
    TypeArguments                  shift and go to state 278
    empty                          shift and go to state 337

state 1068

    (350) UnannClassType -> UnannClassOrInterfaceType . PERIOD AnnotationS IDENT ZooTypeArguments

    PERIOD          shift and go to state 708


state 1069

    (608) SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS .

    SEMICOLON       reduce using rule 608 (SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS .)
    RPAREN          reduce using rule 608 (SEMICOLONResourceS -> SEMICOLON Resource SEMICOLONResourceS .)


state 1070

    (610) Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN . Expression
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 1107
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1071

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON . ZooForUpdate RPAREN Statement
    (565) ZooForUpdate -> . ForUpdate
    (566) ZooForUpdate -> . empty
    (574) ForUpdate -> . StatementExpressionList
    (1) empty -> .
    (575) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    IDENT           shift and go to state 831
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooForUpdate                   shift and go to state 1108
    ForUpdate                      shift and go to state 1109
    empty                          shift and go to state 1110
    StatementExpressionList        shift and go to state 1111
    StatementExpression            shift and go to state 830
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1072

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON . Expression RPAREN Statement
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 1112
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1073

    (576) COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS .

    SEMICOLON       reduce using rule 576 (COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS .)
    RPAREN          reduce using rule 576 (COMMAStatementExpressionS -> COMMA StatementExpression COMMAStatementExpressionS .)


state 1074

    (414) ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .

    SEMICOLON       reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    STATIC          reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    LBRACE          reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    PUBLIC          reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    PROTECTED       reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    PRIVATE         reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    FINAL           reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    TRANSIENT       reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    VOLATILE        reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    ABSTRACT        reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    SYNCHRONIZED    reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    NATIVE          reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    STRICTFP        reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    EXTENDS         reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    ATRATE          reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    LSS             reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    IDENT           reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    BOOLEAN         reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    BYTE            reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    SHORT           reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    INT             reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    LONG            reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    CHAR            reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    FLOAT           reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    DOUBLE          reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    VOID            reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    CLASS           reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    ENUM            reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    IMPLEMENTS      reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    INTERFACE       reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)
    RBRACE          reduce using rule 414 (ConstructorBody -> LBRACE ZooExplicitConstructorInvocation ZooBlockStatements RBRACE .)


state 1075

    (419) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN . ZooArgumentList RPAREN SEMICOLON
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooArgumentList                shift and go to state 1113
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1076

    (420) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN . ZooArgumentList RPAREN SEMICOLON
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooArgumentList                shift and go to state 1114
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1077

    (421) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments . SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (140) MethodInvocation -> ExpressionName PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    SUPER           shift and go to state 1115
    IDENT           shift and go to state 620


state 1078

    (422) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments . SUPER LPAREN ZooArgumentList RPAREN SEMICOLON
    (141) MethodInvocation -> Primary PERIOD ZooTypeArguments . IDENT LPAREN ZooArgumentList RPAREN

    SUPER           shift and go to state 1116
    IDENT           shift and go to state 618


state 1079

    (396) COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS .

    LBRACE          reduce using rule 396 (COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS .)
    SEMICOLON       reduce using rule 396 (COMMAExceptionTypeS -> COMMA ExceptionType COMMAExceptionTypeS .)


state 1080

    (377) MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .

    THROWS          reduce using rule 377 (MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .)
    SEMICOLON       reduce using rule 377 (MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .)
    LBRACE          reduce using rule 377 (MethodDeclarator -> IDENT LPAREN ZooFormalParameterList RPAREN ZooDims .)


state 1081

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN . ZooDims ZooDefaultValue SEMICOLON
    (63) ZooDims -> . Dims
    (64) ZooDims -> . empty
    (470) Dims -> . AnnotationS LBRACE RBRACE AnnotationSLBRACERBRACES
    (1) empty -> .
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    DEFAULT         reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ZooDims                        shift and go to state 1117
    Dims                           shift and go to state 626
    empty                          shift and go to state 627
    AnnotationS                    shift and go to state 270
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1082

    (143) MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .

    LBRACK          reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    PERIOD          reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON_SEP       reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INC             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    DEC             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    MUL             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUO             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    REM             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    ADD             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SUB             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHL             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SHR_UN          reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LSS             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GTR             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LEQ             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    GEQ             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    INSTANCEOF      reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    EQL             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    NEQ             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    AND             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    XOR             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    OR              reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LAND            reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    QUES            reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    LOR             reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RPAREN          reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COMMA           reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACE          reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    COLON           reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    RBRACK          reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)
    SEMICOLON       reduce using rule 143 (MethodInvocation -> TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN .)


state 1083

    (540) IfThenStatement -> IF LPAREN Expression . RPAREN Statement
    (541) IfThenElseStatement -> IF LPAREN Expression . RPAREN StatementNoShortIf ELSE Statement
    (542) IfThenElseStatementNoShortIf -> IF LPAREN Expression . RPAREN StatementNoShortIf ELSE StatementNoShortIf

    RPAREN          shift and go to state 1118


state 1084

    (541) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .

    IDENT           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    IF              reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    WHILE           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    LBRACE          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SEMICOLON       reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ASSERT          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SWITCH          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DO              reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BREAK           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CONTINUE        reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    RETURN          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SYNCHRONIZED    reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    THROW           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    TRY             reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FOR             reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FINAL           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    PUBLIC          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    PROTECTED       reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    PRIVATE         reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ABSTRACT        reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    STATIC          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    STRICTFP        reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    EXTENDS         reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    INC             reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DEC             reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SUPER           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ATRATE          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    NEW             reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    THIS            reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    LPAREN          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BOOL_LIT        reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    NULL_LIT        reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DECIMAL_LIT     reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    HEX_LIT         reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    OCTAL_LIT       reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BINARY_LIT      reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FLOAT_DEC_LIT   reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FLOAT_HEX_LIT   reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    STRING_LIT      reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CHAR_LIT        reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BOOLEAN         reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    VOID            reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    BYTE            reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    SHORT           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    INT             reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    LONG            reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CHAR            reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    FLOAT           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DOUBLE          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CLASS           reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    ENUM            reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    IMPLEMENTS      reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    RBRACE          reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    CASE            reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)
    DEFAULT         reduce using rule 541 (IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement .)


state 1085

    (531) LabeledStatementNoShortIf -> IDENT COLON StatementNoShortIf .

    ELSE            reduce using rule 531 (LabeledStatementNoShortIf -> IDENT COLON StatementNoShortIf .)


state 1086

    (557) WhileStatement -> WHILE LPAREN Expression . RPAREN Statement
    (558) WhileStatementNoShortIf -> WHILE LPAREN Expression . RPAREN StatementNoShortIf

    RPAREN          shift and go to state 1119


state 1087

    (564) BasicForStatement -> FOR LPAREN ZooForInit . SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (571) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit . SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf

    SEMICOLON       shift and go to state 1120


state 1088

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS . UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (579) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS . UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (503) LocalVariableDeclaration -> VariableModifierS . UnannType VariableDeclaratorList
    (340) UnannType -> . UnannPrimitiveType
    (341) UnannType -> . UnannReferenceType
    (342) UnannPrimitiveType -> . NumericType
    (343) UnannPrimitiveType -> . BOOLEAN
    (344) UnannReferenceType -> . UnannClassOrInterfaceType
    (345) UnannReferenceType -> . UnannTypeVariable
    (346) UnannReferenceType -> . UnannArrayType
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (347) UnannClassOrInterfaceType -> . UnannClassType
    (348) UnannClassOrInterfaceType -> . UnannInterfaceType
    (352) UnannTypeVariable -> . IDENT
    (353) UnannArrayType -> . UnannPrimitiveType Dims
    (354) UnannArrayType -> . UnannClassOrInterfaceType Dims
    (355) UnannArrayType -> . UnannTypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (349) UnannClassType -> . IDENT ZooTypeArguments
    (350) UnannClassType -> . UnannClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (351) UnannInterfaceType -> . UnannClassType

    BOOLEAN         shift and go to state 535
    IDENT           shift and go to state 541
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

    UnannType                      shift and go to state 1121
    UnannPrimitiveType             shift and go to state 532
    UnannReferenceType             shift and go to state 533
    NumericType                    shift and go to state 534
    UnannClassOrInterfaceType      shift and go to state 536
    UnannTypeVariable              shift and go to state 537
    UnannArrayType                 shift and go to state 538
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    UnannClassType                 shift and go to state 539
    UnannInterfaceType             shift and go to state 540

state 1089

    (546) SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS . RBRACE

    RBRACE          shift and go to state 1122


state 1090

    (551) SwitchLabelS -> SwitchLabel . SwitchLabelS
    (551) SwitchLabelS -> . SwitchLabel SwitchLabelS
    (552) SwitchLabelS -> . empty
    (553) SwitchLabel -> . CASE ConstantExpression COLON
    (554) SwitchLabel -> . CASE EnumConstantName COLON
    (555) SwitchLabel -> . DEFAULT COLON
    (1) empty -> .

    CASE            shift and go to state 1061
    DEFAULT         shift and go to state 1062
    RBRACE          reduce using rule 1 (empty -> .)
    IDENT           reduce using rule 1 (empty -> .)
    IF              reduce using rule 1 (empty -> .)
    WHILE           reduce using rule 1 (empty -> .)
    LBRACE          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)
    ASSERT          reduce using rule 1 (empty -> .)
    SWITCH          reduce using rule 1 (empty -> .)
    DO              reduce using rule 1 (empty -> .)
    BREAK           reduce using rule 1 (empty -> .)
    CONTINUE        reduce using rule 1 (empty -> .)
    RETURN          reduce using rule 1 (empty -> .)
    SYNCHRONIZED    reduce using rule 1 (empty -> .)
    THROW           reduce using rule 1 (empty -> .)
    TRY             reduce using rule 1 (empty -> .)
    FOR             reduce using rule 1 (empty -> .)
    FINAL           reduce using rule 1 (empty -> .)
    PUBLIC          reduce using rule 1 (empty -> .)
    PROTECTED       reduce using rule 1 (empty -> .)
    PRIVATE         reduce using rule 1 (empty -> .)
    ABSTRACT        reduce using rule 1 (empty -> .)
    STATIC          reduce using rule 1 (empty -> .)
    STRICTFP        reduce using rule 1 (empty -> .)
    EXTENDS         reduce using rule 1 (empty -> .)
    INC             reduce using rule 1 (empty -> .)
    DEC             reduce using rule 1 (empty -> .)
    SUPER           reduce using rule 1 (empty -> .)
    ATRATE          reduce using rule 1 (empty -> .)
    NEW             reduce using rule 1 (empty -> .)
    THIS            reduce using rule 1 (empty -> .)
    LPAREN          reduce using rule 1 (empty -> .)
    BOOL_LIT        reduce using rule 1 (empty -> .)
    NULL_LIT        reduce using rule 1 (empty -> .)
    DECIMAL_LIT     reduce using rule 1 (empty -> .)
    HEX_LIT         reduce using rule 1 (empty -> .)
    OCTAL_LIT       reduce using rule 1 (empty -> .)
    BINARY_LIT      reduce using rule 1 (empty -> .)
    FLOAT_DEC_LIT   reduce using rule 1 (empty -> .)
    FLOAT_HEX_LIT   reduce using rule 1 (empty -> .)
    STRING_LIT      reduce using rule 1 (empty -> .)
    CHAR_LIT        reduce using rule 1 (empty -> .)
    BOOLEAN         reduce using rule 1 (empty -> .)
    VOID            reduce using rule 1 (empty -> .)
    BYTE            reduce using rule 1 (empty -> .)
    SHORT           reduce using rule 1 (empty -> .)
    INT             reduce using rule 1 (empty -> .)
    LONG            reduce using rule 1 (empty -> .)
    CHAR            reduce using rule 1 (empty -> .)
    FLOAT           reduce using rule 1 (empty -> .)
    DOUBLE          reduce using rule 1 (empty -> .)
    CLASS           reduce using rule 1 (empty -> .)
    ENUM            reduce using rule 1 (empty -> .)
    IMPLEMENTS      reduce using rule 1 (empty -> .)

    SwitchLabel                    shift and go to state 1090
    SwitchLabelS                   shift and go to state 1123
    empty                          shift and go to state 1091

state 1091

    (552) SwitchLabelS -> empty .

    RBRACE          reduce using rule 552 (SwitchLabelS -> empty .)
    IDENT           reduce using rule 552 (SwitchLabelS -> empty .)
    IF              reduce using rule 552 (SwitchLabelS -> empty .)
    WHILE           reduce using rule 552 (SwitchLabelS -> empty .)
    LBRACE          reduce using rule 552 (SwitchLabelS -> empty .)
    SEMICOLON       reduce using rule 552 (SwitchLabelS -> empty .)
    ASSERT          reduce using rule 552 (SwitchLabelS -> empty .)
    SWITCH          reduce using rule 552 (SwitchLabelS -> empty .)
    DO              reduce using rule 552 (SwitchLabelS -> empty .)
    BREAK           reduce using rule 552 (SwitchLabelS -> empty .)
    CONTINUE        reduce using rule 552 (SwitchLabelS -> empty .)
    RETURN          reduce using rule 552 (SwitchLabelS -> empty .)
    SYNCHRONIZED    reduce using rule 552 (SwitchLabelS -> empty .)
    THROW           reduce using rule 552 (SwitchLabelS -> empty .)
    TRY             reduce using rule 552 (SwitchLabelS -> empty .)
    FOR             reduce using rule 552 (SwitchLabelS -> empty .)
    FINAL           reduce using rule 552 (SwitchLabelS -> empty .)
    PUBLIC          reduce using rule 552 (SwitchLabelS -> empty .)
    PROTECTED       reduce using rule 552 (SwitchLabelS -> empty .)
    PRIVATE         reduce using rule 552 (SwitchLabelS -> empty .)
    ABSTRACT        reduce using rule 552 (SwitchLabelS -> empty .)
    STATIC          reduce using rule 552 (SwitchLabelS -> empty .)
    STRICTFP        reduce using rule 552 (SwitchLabelS -> empty .)
    EXTENDS         reduce using rule 552 (SwitchLabelS -> empty .)
    INC             reduce using rule 552 (SwitchLabelS -> empty .)
    DEC             reduce using rule 552 (SwitchLabelS -> empty .)
    SUPER           reduce using rule 552 (SwitchLabelS -> empty .)
    ATRATE          reduce using rule 552 (SwitchLabelS -> empty .)
    NEW             reduce using rule 552 (SwitchLabelS -> empty .)
    THIS            reduce using rule 552 (SwitchLabelS -> empty .)
    LPAREN          reduce using rule 552 (SwitchLabelS -> empty .)
    BOOL_LIT        reduce using rule 552 (SwitchLabelS -> empty .)
    NULL_LIT        reduce using rule 552 (SwitchLabelS -> empty .)
    DECIMAL_LIT     reduce using rule 552 (SwitchLabelS -> empty .)
    HEX_LIT         reduce using rule 552 (SwitchLabelS -> empty .)
    OCTAL_LIT       reduce using rule 552 (SwitchLabelS -> empty .)
    BINARY_LIT      reduce using rule 552 (SwitchLabelS -> empty .)
    FLOAT_DEC_LIT   reduce using rule 552 (SwitchLabelS -> empty .)
    FLOAT_HEX_LIT   reduce using rule 552 (SwitchLabelS -> empty .)
    STRING_LIT      reduce using rule 552 (SwitchLabelS -> empty .)
    CHAR_LIT        reduce using rule 552 (SwitchLabelS -> empty .)
    BOOLEAN         reduce using rule 552 (SwitchLabelS -> empty .)
    VOID            reduce using rule 552 (SwitchLabelS -> empty .)
    BYTE            reduce using rule 552 (SwitchLabelS -> empty .)
    SHORT           reduce using rule 552 (SwitchLabelS -> empty .)
    INT             reduce using rule 552 (SwitchLabelS -> empty .)
    LONG            reduce using rule 552 (SwitchLabelS -> empty .)
    CHAR            reduce using rule 552 (SwitchLabelS -> empty .)
    FLOAT           reduce using rule 552 (SwitchLabelS -> empty .)
    DOUBLE          reduce using rule 552 (SwitchLabelS -> empty .)
    CLASS           reduce using rule 552 (SwitchLabelS -> empty .)
    ENUM            reduce using rule 552 (SwitchLabelS -> empty .)
    IMPLEMENTS      reduce using rule 552 (SwitchLabelS -> empty .)


state 1092

    (547) SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .

    CASE            reduce using rule 547 (SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .)
    DEFAULT         reduce using rule 547 (SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .)
    RBRACE          reduce using rule 547 (SwitchBlockStatementGroupS -> SwitchBlockStatementGroup SwitchBlockStatementGroupS .)


state 1093

    (549) SwitchBlockStatementGroup -> SwitchLabels BlockStatements .

    CASE            reduce using rule 549 (SwitchBlockStatementGroup -> SwitchLabels BlockStatements .)
    DEFAULT         reduce using rule 549 (SwitchBlockStatementGroup -> SwitchLabels BlockStatements .)
    RBRACE          reduce using rule 549 (SwitchBlockStatementGroup -> SwitchLabels BlockStatements .)


state 1094

    (505) VariableModifierS -> empty .
    (424) ClassModifierS -> empty .
    (286) ZooSuperClass -> empty .
    (126) AnnotationS -> empty .

  ! reduce/reduce conflict for IDENT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for BYTE resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for SHORT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for LONG resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for CHAR resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 126 (AnnotationS -> empty .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 126 (AnnotationS -> empty .)
    CLASS           reduce using rule 424 (ClassModifierS -> empty .)
    ENUM            reduce using rule 424 (ClassModifierS -> empty .)
    IMPLEMENTS      reduce using rule 286 (ZooSuperClass -> empty .)
    LBRACE          reduce using rule 286 (ZooSuperClass -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)

  ! BOOLEAN         [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! IDENT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! BYTE            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! SHORT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! INT             [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! LONG            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! CHAR            [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! FLOAT           [ reduce using rule 505 (VariableModifierS -> empty .) ]
  ! DOUBLE          [ reduce using rule 505 (VariableModifierS -> empty .) ]


state 1095

    (550) SwitchLabels -> SwitchLabel SwitchLabelS .

    IDENT           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    IF              reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    WHILE           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    LBRACE          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SEMICOLON       reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ASSERT          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SWITCH          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DO              reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BREAK           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CONTINUE        reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    RETURN          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SYNCHRONIZED    reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    THROW           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    TRY             reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FOR             reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FINAL           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    PUBLIC          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    PROTECTED       reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    PRIVATE         reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ABSTRACT        reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    STATIC          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    STRICTFP        reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    EXTENDS         reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    INC             reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DEC             reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SUPER           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ATRATE          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    NEW             reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    THIS            reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    LPAREN          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BOOL_LIT        reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    NULL_LIT        reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DECIMAL_LIT     reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    HEX_LIT         reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    OCTAL_LIT       reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BINARY_LIT      reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FLOAT_DEC_LIT   reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FLOAT_HEX_LIT   reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    STRING_LIT      reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CHAR_LIT        reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BOOLEAN         reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    VOID            reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    BYTE            reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    SHORT           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    INT             reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    LONG            reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CHAR            reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    FLOAT           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    DOUBLE          reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    CLASS           reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    ENUM            reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)
    IMPLEMENTS      reduce using rule 550 (SwitchLabels -> SwitchLabel SwitchLabelS .)


state 1096

    (553) SwitchLabel -> CASE ConstantExpression . COLON

    COLON           shift and go to state 1124


state 1097

    (554) SwitchLabel -> CASE EnumConstantName . COLON

    COLON           shift and go to state 1125


state 1098

    (246) ConstantExpression -> Expression .

    COLON           reduce using rule 246 (ConstantExpression -> Expression .)


state 1099

    (556) EnumConstantName -> IDENT .
    (165) LambdaParameters -> IDENT .
    (275) ExpressionName -> IDENT .
    (280) AmbiguousName -> IDENT .
    (271) TypeName -> IDENT .
    (273) PackageOrTypeName -> IDENT .
    (277) MethodName -> IDENT .

  ! reduce/reduce conflict for COLON resolved using rule 275 (ExpressionName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 275 (ExpressionName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LBRACK resolved using rule 271 (TypeName -> IDENT .)
  ! reduce/reduce conflict for PERIOD resolved using rule 271 (TypeName -> IDENT .)
    ARROW           reduce using rule 165 (LambdaParameters -> IDENT .)
    COLON_SEP       reduce using rule 275 (ExpressionName -> IDENT .)
    ASSIGN          reduce using rule 275 (ExpressionName -> IDENT .)
    MUL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    QUO_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    REM_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    ADD_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SUB_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHL_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN_ASSIGN   reduce using rule 275 (ExpressionName -> IDENT .)
    AND_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    XOR_ASSIGN      reduce using rule 275 (ExpressionName -> IDENT .)
    OR_ASSIGN       reduce using rule 275 (ExpressionName -> IDENT .)
    INC             reduce using rule 275 (ExpressionName -> IDENT .)
    DEC             reduce using rule 275 (ExpressionName -> IDENT .)
    MUL             reduce using rule 275 (ExpressionName -> IDENT .)
    QUO             reduce using rule 275 (ExpressionName -> IDENT .)
    REM             reduce using rule 275 (ExpressionName -> IDENT .)
    ADD             reduce using rule 275 (ExpressionName -> IDENT .)
    SUB             reduce using rule 275 (ExpressionName -> IDENT .)
    SHL             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR             reduce using rule 275 (ExpressionName -> IDENT .)
    SHR_UN          reduce using rule 275 (ExpressionName -> IDENT .)
    LSS             reduce using rule 275 (ExpressionName -> IDENT .)
    GTR             reduce using rule 275 (ExpressionName -> IDENT .)
    LEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    GEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    INSTANCEOF      reduce using rule 275 (ExpressionName -> IDENT .)
    EQL             reduce using rule 275 (ExpressionName -> IDENT .)
    NEQ             reduce using rule 275 (ExpressionName -> IDENT .)
    AND             reduce using rule 275 (ExpressionName -> IDENT .)
    XOR             reduce using rule 275 (ExpressionName -> IDENT .)
    OR              reduce using rule 275 (ExpressionName -> IDENT .)
    LAND            reduce using rule 275 (ExpressionName -> IDENT .)
    QUES            reduce using rule 275 (ExpressionName -> IDENT .)
    LOR             reduce using rule 275 (ExpressionName -> IDENT .)
    COLON           reduce using rule 275 (ExpressionName -> IDENT .)
    PERIOD          reduce using rule 271 (TypeName -> IDENT .)
    LBRACK          reduce using rule 271 (TypeName -> IDENT .)
    LPAREN          reduce using rule 277 (MethodName -> IDENT .)

  ! COLON           [ reduce using rule 556 (EnumConstantName -> IDENT .) ]
  ! LBRACK          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 275 (ExpressionName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 280 (AmbiguousName -> IDENT .) ]
  ! PERIOD          [ reduce using rule 273 (PackageOrTypeName -> IDENT .) ]


state 1100

    (555) SwitchLabel -> DEFAULT COLON .

    CASE            reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    DEFAULT         reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    IDENT           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    IF              reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    WHILE           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    LBRACE          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    SEMICOLON       reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    ASSERT          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    SWITCH          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    DO              reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    BREAK           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    CONTINUE        reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    RETURN          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    SYNCHRONIZED    reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    THROW           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    TRY             reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    FOR             reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    FINAL           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    PUBLIC          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    PROTECTED       reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    PRIVATE         reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    ABSTRACT        reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    STATIC          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    STRICTFP        reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    EXTENDS         reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    INC             reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    DEC             reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    SUPER           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    ATRATE          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    NEW             reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    THIS            reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    LPAREN          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    BOOL_LIT        reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    NULL_LIT        reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    DECIMAL_LIT     reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    HEX_LIT         reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    OCTAL_LIT       reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    BINARY_LIT      reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    FLOAT_DEC_LIT   reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    FLOAT_HEX_LIT   reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    STRING_LIT      reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    CHAR_LIT        reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    BOOLEAN         reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    VOID            reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    BYTE            reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    SHORT           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    INT             reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    LONG            reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    CHAR            reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    FLOAT           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    DOUBLE          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    CLASS           reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    ENUM            reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    IMPLEMENTS      reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)
    RBRACE          reduce using rule 555 (SwitchLabel -> DEFAULT COLON .)


state 1101

    (559) DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .

    IDENT           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    IF              reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ASSERT          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SWITCH          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DO              reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    THROW           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    TRY             reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FOR             reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FINAL           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    STATIC          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    INC             reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DEC             reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SUPER           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ATRATE          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    NEW             reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    THIS            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    VOID            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    BYTE            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    SHORT           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    INT             reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    LONG            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CHAR            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CLASS           reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ENUM            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    CASE            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 559 (DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON .)


state 1102

    (595) CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .

    CATCH           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    IDENT           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    IF              reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    WHILE           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    LBRACE          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SEMICOLON       reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ASSERT          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SWITCH          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DO              reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BREAK           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CONTINUE        reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    RETURN          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SYNCHRONIZED    reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    THROW           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    TRY             reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FOR             reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FINAL           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    PUBLIC          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    PROTECTED       reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    PRIVATE         reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ABSTRACT        reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    STATIC          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    STRICTFP        reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    EXTENDS         reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    INC             reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DEC             reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SUPER           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ATRATE          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    NEW             reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    THIS            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    LPAREN          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BOOL_LIT        reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    NULL_LIT        reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DECIMAL_LIT     reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    HEX_LIT         reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    OCTAL_LIT       reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BINARY_LIT      reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FLOAT_DEC_LIT   reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FLOAT_HEX_LIT   reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    STRING_LIT      reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CHAR_LIT        reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BOOLEAN         reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    VOID            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    BYTE            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    SHORT           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    INT             reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    LONG            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CHAR            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FLOAT           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DOUBLE          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CLASS           reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ENUM            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    IMPLEMENTS      reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    RBRACE          reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    CASE            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    DEFAULT         reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    FINALLY         reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)
    ELSE            reduce using rule 595 (CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block .)


state 1103

    (596) CatchFormalParameter -> VariableModifierS CatchType VariableDeclaratorId .

    RPAREN          reduce using rule 596 (CatchFormalParameter -> VariableModifierS CatchType VariableDeclaratorId .)


state 1104

    (597) CatchType -> UnannClassType ORClassTypeS .

    IDENT           reduce using rule 597 (CatchType -> UnannClassType ORClassTypeS .)


state 1105

    (598) ORClassTypeS -> OR . ClassType ORClassTypeS
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (465) InterfaceType -> . ClassType
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

    IDENT           reduce using rule 1 (empty -> .)
    ATRATE          shift and go to state 13

    ClassType                      shift and go to state 1126
    AnnotationS                    shift and go to state 88
    ClassOrInterfaceType           shift and go to state 89
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    InterfaceType                  shift and go to state 92
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1106

    (599) ORClassTypeS -> empty .

    IDENT           reduce using rule 599 (ORClassTypeS -> empty .)


state 1107

    (610) Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression .

    SEMICOLON       reduce using rule 610 (Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression .)
    RPAREN          reduce using rule 610 (Resource -> VariableModifierS UnannType VariableDeclaratorId ASSIGN Expression .)


state 1108

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate . RPAREN Statement

    RPAREN          shift and go to state 1127


state 1109

    (565) ZooForUpdate -> ForUpdate .

    RPAREN          reduce using rule 565 (ZooForUpdate -> ForUpdate .)


state 1110

    (566) ZooForUpdate -> empty .
    (126) AnnotationS -> empty .

    RPAREN          reduce using rule 566 (ZooForUpdate -> empty .)
    IDENT           reduce using rule 126 (AnnotationS -> empty .)
    BOOLEAN         reduce using rule 126 (AnnotationS -> empty .)
    BYTE            reduce using rule 126 (AnnotationS -> empty .)
    SHORT           reduce using rule 126 (AnnotationS -> empty .)
    INT             reduce using rule 126 (AnnotationS -> empty .)
    LONG            reduce using rule 126 (AnnotationS -> empty .)
    CHAR            reduce using rule 126 (AnnotationS -> empty .)
    FLOAT           reduce using rule 126 (AnnotationS -> empty .)
    DOUBLE          reduce using rule 126 (AnnotationS -> empty .)


state 1111

    (574) ForUpdate -> StatementExpressionList .

    RPAREN          reduce using rule 574 (ForUpdate -> StatementExpressionList .)


state 1112

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression . RPAREN Statement

    RPAREN          shift and go to state 1128


state 1113

    (419) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1129


state 1114

    (420) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1130


state 1115

    (421) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1131


state 1116

    (422) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER . LPAREN ZooArgumentList RPAREN SEMICOLON

    LPAREN          shift and go to state 1132


state 1117

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims . ZooDefaultValue SEMICOLON
    (65) ZooDefaultValue -> . DefaultValue
    (66) ZooDefaultValue -> . empty
    (72) DefaultValue -> . DEFAULT ElementValue
    (1) empty -> .

    DEFAULT         shift and go to state 1136
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooDefaultValue                shift and go to state 1133
    DefaultValue                   shift and go to state 1134
    empty                          shift and go to state 1135

state 1118

    (540) IfThenStatement -> IF LPAREN Expression RPAREN . Statement
    (541) IfThenElseStatement -> IF LPAREN Expression RPAREN . StatementNoShortIf ELSE Statement
    (542) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN . StatementNoShortIf ELSE StatementNoShortIf
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (512) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (513) StatementNoShortIf -> . LabeledStatementNoShortIf
    (514) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (515) StatementNoShortIf -> . WhileStatementNoShortIf
    (516) StatementNoShortIf -> . ForStatementNoShortIf
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (531) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (542) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (558) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (562) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (563) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1008
    IF              shift and go to state 1000
    WHILE           shift and go to state 1009
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 1012
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1001
    StatementNoShortIf             shift and go to state 1137
    StatementWithoutTrailingSubstatement shift and go to state 1003
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    LabeledStatementNoShortIf      shift and go to state 1004
    IfThenElseStatementNoShortIf   shift and go to state 1005
    WhileStatementNoShortIf        shift and go to state 1006
    ForStatementNoShortIf          shift and go to state 1007
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    BasicForStatementNoShortIf     shift and go to state 1010
    EnhancedForStatementNoShortIf  shift and go to state 1011
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1119

    (557) WhileStatement -> WHILE LPAREN Expression RPAREN . Statement
    (558) WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN . StatementNoShortIf
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (512) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (513) StatementNoShortIf -> . LabeledStatementNoShortIf
    (514) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (515) StatementNoShortIf -> . WhileStatementNoShortIf
    (516) StatementNoShortIf -> . ForStatementNoShortIf
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (531) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (542) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (558) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (562) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (563) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1008
    IF              shift and go to state 1000
    WHILE           shift and go to state 1009
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 1012
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1013
    StatementNoShortIf             shift and go to state 1138
    StatementWithoutTrailingSubstatement shift and go to state 1003
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    LabeledStatementNoShortIf      shift and go to state 1004
    IfThenElseStatementNoShortIf   shift and go to state 1005
    WhileStatementNoShortIf        shift and go to state 1006
    ForStatementNoShortIf          shift and go to state 1007
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    BasicForStatementNoShortIf     shift and go to state 1010
    EnhancedForStatementNoShortIf  shift and go to state 1011
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1120

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON . ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (571) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON . ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (567) ZooExpression -> . Expression
    (568) ZooExpression -> . empty
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (1) empty -> .
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    SEMICOLON       reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooExpression                  shift and go to state 1139
    Expression                     shift and go to state 684
    empty                          shift and go to state 685
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1121

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType . VariableDeclaratorId COLON Expression RPAREN Statement
    (579) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType . VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (503) LocalVariableDeclaration -> VariableModifierS UnannType . VariableDeclaratorList
    (337) VariableDeclaratorId -> . IDENT ZooDims
    (333) VariableDeclaratorList -> . VariableDeclarator COMMAVariableDeclaratorS
    (336) VariableDeclarator -> . VariableDeclaratorId ZooASSIGNVariableInitializer

    IDENT           shift and go to state 705

    VariableDeclaratorId           shift and go to state 1140
    VariableDeclaratorList         shift and go to state 801
    VariableDeclarator             shift and go to state 703

state 1122

    (546) SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .

    IDENT           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    IF              reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    WHILE           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    LBRACE          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SEMICOLON       reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ASSERT          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SWITCH          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DO              reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BREAK           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CONTINUE        reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    RETURN          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SYNCHRONIZED    reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    THROW           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    TRY             reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FOR             reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FINAL           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    PUBLIC          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    PROTECTED       reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    PRIVATE         reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ABSTRACT        reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    STATIC          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    STRICTFP        reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    EXTENDS         reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    INC             reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DEC             reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SUPER           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ATRATE          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    NEW             reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    THIS            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    LPAREN          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BOOL_LIT        reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    NULL_LIT        reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DECIMAL_LIT     reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    HEX_LIT         reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    OCTAL_LIT       reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BINARY_LIT      reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FLOAT_DEC_LIT   reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FLOAT_HEX_LIT   reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    STRING_LIT      reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CHAR_LIT        reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BOOLEAN         reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    VOID            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    BYTE            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    SHORT           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    INT             reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    LONG            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CHAR            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    FLOAT           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DOUBLE          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CLASS           reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ENUM            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    IMPLEMENTS      reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    RBRACE          reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    CASE            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    DEFAULT         reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)
    ELSE            reduce using rule 546 (SwitchBlock -> LBRACE SwitchBlockStatementGroupS SwitchLabelS RBRACE .)


state 1123

    (551) SwitchLabelS -> SwitchLabel SwitchLabelS .

    RBRACE          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    IDENT           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    IF              reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    WHILE           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    LBRACE          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SEMICOLON       reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ASSERT          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SWITCH          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DO              reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BREAK           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CONTINUE        reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    RETURN          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SYNCHRONIZED    reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    THROW           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    TRY             reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FOR             reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FINAL           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    PUBLIC          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    PROTECTED       reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    PRIVATE         reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ABSTRACT        reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    STATIC          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    STRICTFP        reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    EXTENDS         reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    INC             reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DEC             reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SUPER           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ATRATE          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    NEW             reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    THIS            reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    LPAREN          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BOOL_LIT        reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    NULL_LIT        reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DECIMAL_LIT     reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    HEX_LIT         reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    OCTAL_LIT       reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BINARY_LIT      reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FLOAT_DEC_LIT   reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FLOAT_HEX_LIT   reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    STRING_LIT      reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CHAR_LIT        reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BOOLEAN         reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    VOID            reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    BYTE            reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    SHORT           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    INT             reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    LONG            reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CHAR            reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    FLOAT           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    DOUBLE          reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    CLASS           reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    ENUM            reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)
    IMPLEMENTS      reduce using rule 551 (SwitchLabelS -> SwitchLabel SwitchLabelS .)


state 1124

    (553) SwitchLabel -> CASE ConstantExpression COLON .

    CASE            reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEFAULT         reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    IDENT           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    IF              reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    WHILE           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    LBRACE          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    SEMICOLON       reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    ASSERT          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    SWITCH          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    DO              reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    BREAK           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    CONTINUE        reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    RETURN          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    SYNCHRONIZED    reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    THROW           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    TRY             reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    FOR             reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    FINAL           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    PUBLIC          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    PROTECTED       reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    PRIVATE         reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    ABSTRACT        reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    STATIC          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    STRICTFP        reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    EXTENDS         reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    INC             reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEC             reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    SUPER           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    ATRATE          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    NEW             reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    THIS            reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    LPAREN          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOL_LIT        reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    NULL_LIT        reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    DECIMAL_LIT     reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    HEX_LIT         reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    OCTAL_LIT       reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    BINARY_LIT      reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT_DEC_LIT   reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT_HEX_LIT   reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    STRING_LIT      reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR_LIT        reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOLEAN         reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    VOID            reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    BYTE            reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    SHORT           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    INT             reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    LONG            reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR            reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    DOUBLE          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    CLASS           reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    ENUM            reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    IMPLEMENTS      reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)
    RBRACE          reduce using rule 553 (SwitchLabel -> CASE ConstantExpression COLON .)


state 1125

    (554) SwitchLabel -> CASE EnumConstantName COLON .

    CASE            reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    DEFAULT         reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    IDENT           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    IF              reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    WHILE           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    LBRACE          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    SEMICOLON       reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    ASSERT          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    SWITCH          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    DO              reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    BREAK           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    CONTINUE        reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    RETURN          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    SYNCHRONIZED    reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    THROW           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    TRY             reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    FOR             reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    FINAL           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    PUBLIC          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    PROTECTED       reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    PRIVATE         reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    ABSTRACT        reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    STATIC          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    STRICTFP        reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    EXTENDS         reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    INC             reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    DEC             reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    SUPER           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    ATRATE          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    NEW             reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    THIS            reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    LPAREN          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    BOOL_LIT        reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    NULL_LIT        reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    DECIMAL_LIT     reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    HEX_LIT         reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    OCTAL_LIT       reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    BINARY_LIT      reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    FLOAT_DEC_LIT   reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    FLOAT_HEX_LIT   reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    STRING_LIT      reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    CHAR_LIT        reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    BOOLEAN         reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    VOID            reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    BYTE            reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    SHORT           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    INT             reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    LONG            reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    CHAR            reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    FLOAT           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    DOUBLE          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    CLASS           reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    ENUM            reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    IMPLEMENTS      reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)
    RBRACE          reduce using rule 554 (SwitchLabel -> CASE EnumConstantName COLON .)


state 1126

    (598) ORClassTypeS -> OR ClassType . ORClassTypeS
    (461) ClassOrInterfaceType -> ClassType .
    (465) InterfaceType -> ClassType .
    (598) ORClassTypeS -> . OR ClassType ORClassTypeS
    (599) ORClassTypeS -> . empty
    (1) empty -> .

  ! reduce/reduce conflict for PERIOD resolved using rule 461 (ClassOrInterfaceType -> ClassType .)
    PERIOD          reduce using rule 461 (ClassOrInterfaceType -> ClassType .)
    OR              shift and go to state 1105
    IDENT           reduce using rule 1 (empty -> .)

  ! PERIOD          [ reduce using rule 465 (InterfaceType -> ClassType .) ]

    ORClassTypeS                   shift and go to state 1141
    empty                          shift and go to state 1106

state 1127

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN . Statement
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1142
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1128

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN . Statement
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 480
    IF              shift and go to state 493
    WHILE           shift and go to state 495
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 510
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1143
    StatementWithoutTrailingSubstatement shift and go to state 473
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1129

    (419) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1144


state 1130

    (420) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1145


state 1131

    (421) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN . ZooArgumentList RPAREN SEMICOLON
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ExpressionName                 shift and go to state 218
    ZooArgumentList                shift and go to state 1146
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1132

    (422) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN . ZooArgumentList RPAREN SEMICOLON
    (417) ZooArgumentList -> . ArgumentList
    (418) ZooArgumentList -> . empty
    (144) ArgumentList -> . Expression COMMAExpressionS
    (1) empty -> .
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Primary                        shift and go to state 221
    ZooArgumentList                shift and go to state 1147
    ArgumentList                   shift and go to state 451
    empty                          shift and go to state 452
    Expression                     shift and go to state 453
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1133

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue . SEMICOLON

    SEMICOLON       shift and go to state 1148


state 1134

    (65) ZooDefaultValue -> DefaultValue .

    SEMICOLON       reduce using rule 65 (ZooDefaultValue -> DefaultValue .)


state 1135

    (66) ZooDefaultValue -> empty .

    SEMICOLON       reduce using rule 66 (ZooDefaultValue -> empty .)


state 1136

    (72) DefaultValue -> DEFAULT . ElementValue
    (83) ElementValue -> . ConditionalExpression
    (84) ElementValue -> . ElementValueArrayInitializer
    (85) ElementValue -> . Annotation
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (86) ElementValueArrayInitializer -> . LBRACE ZooElementValueList ZooCOMMA RBRACE
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (1) empty -> .

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    LBRACE          shift and go to state 110
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132
    LPAREN          shift and go to state 100
    IDENT           shift and go to state 234
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    SUPER           shift and go to state 166
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ElementValue                   shift and go to state 1149
    ConditionalExpression          shift and go to state 105
    ElementValueArrayInitializer   shift and go to state 106
    Annotation                     shift and go to state 107
    ConditionalOrExpression        shift and go to state 109
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    ConditionalAndExpression       shift and go to state 112
    TypeName                       shift and go to state 99
    InclusiveOrExpression          shift and go to state 113
    ExclusiveOrExpression          shift and go to state 114
    AndExpression                  shift and go to state 115
    EqualityExpression             shift and go to state 116
    RelationalExpression           shift and go to state 117
    ShiftExpression                shift and go to state 118
    ReferenceType                  shift and go to state 119
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    Primary                        shift and go to state 134
    ExpressionName                 shift and go to state 135
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137
    PrimitiveType                  shift and go to state 138
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    AmbiguousName                  shift and go to state 141
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    FieldAccess                    shift and go to state 146
    ArrayAccess                    shift and go to state 147
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    PackageOrTypeName              shift and go to state 27
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    empty                          shift and go to state 91

state 1137

    (541) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf . ELSE Statement
    (542) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf . ELSE StatementNoShortIf

    ELSE            shift and go to state 1150


state 1138

    (558) WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN StatementNoShortIf .

    ELSE            reduce using rule 558 (WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN StatementNoShortIf .)


state 1139

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression . SEMICOLON ZooForUpdate RPAREN Statement
    (571) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression . SEMICOLON ZooForUpdate RPAREN StatementNoShortIf

    SEMICOLON       shift and go to state 1151


state 1140

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId . COLON Expression RPAREN Statement
    (579) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId . COLON Expression RPAREN StatementNoShortIf
    (336) VariableDeclarator -> VariableDeclaratorId . ZooASSIGNVariableInitializer
    (334) ZooASSIGNVariableInitializer -> . ASSIGN VariableInitializer
    (335) ZooASSIGNVariableInitializer -> . empty
    (1) empty -> .

    COLON           shift and go to state 1152
    ASSIGN          shift and go to state 846
    COMMA           reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    ZooASSIGNVariableInitializer   shift and go to state 845
    empty                          shift and go to state 847

state 1141

    (598) ORClassTypeS -> OR ClassType ORClassTypeS .

    IDENT           reduce using rule 598 (ORClassTypeS -> OR ClassType ORClassTypeS .)


state 1142

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .

    IDENT           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    IF              reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    WHILE           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    LBRACE          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SEMICOLON       reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ASSERT          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SWITCH          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DO              reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BREAK           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CONTINUE        reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    RETURN          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    THROW           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    TRY             reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FOR             reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FINAL           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    PUBLIC          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    PROTECTED       reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    PRIVATE         reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ABSTRACT        reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    STATIC          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    STRICTFP        reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    EXTENDS         reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    INC             reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DEC             reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SUPER           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ATRATE          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    NEW             reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    THIS            reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    LPAREN          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BOOL_LIT        reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    NULL_LIT        reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    HEX_LIT         reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    OCTAL_LIT       reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BINARY_LIT      reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    STRING_LIT      reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CHAR_LIT        reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BOOLEAN         reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    VOID            reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    BYTE            reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    SHORT           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    INT             reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    LONG            reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CHAR            reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    FLOAT           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DOUBLE          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CLASS           reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    ENUM            reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    IMPLEMENTS      reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    RBRACE          reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    CASE            reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)
    DEFAULT         reduce using rule 564 (BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement .)


state 1143

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .

    IDENT           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    IF              reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    WHILE           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    LBRACE          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SEMICOLON       reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ASSERT          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SWITCH          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DO              reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BREAK           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CONTINUE        reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    RETURN          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SYNCHRONIZED    reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    THROW           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    TRY             reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FOR             reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FINAL           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    PUBLIC          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    PROTECTED       reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    PRIVATE         reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ABSTRACT        reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    STATIC          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    STRICTFP        reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    EXTENDS         reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    INC             reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DEC             reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SUPER           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ATRATE          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    NEW             reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    THIS            reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    LPAREN          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BOOL_LIT        reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    NULL_LIT        reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DECIMAL_LIT     reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    HEX_LIT         reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    OCTAL_LIT       reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BINARY_LIT      reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT_DEC_LIT   reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT_HEX_LIT   reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    STRING_LIT      reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CHAR_LIT        reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BOOLEAN         reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    VOID            reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    BYTE            reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    SHORT           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    INT             reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    LONG            reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CHAR            reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    FLOAT           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DOUBLE          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CLASS           reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    ENUM            reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    IMPLEMENTS      reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    RBRACE          reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    CASE            reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)
    DEFAULT         reduce using rule 578 (EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement .)


state 1144

    (419) ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 419 (ExplicitConstructorInvocation -> ZooTypeArguments THIS LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1145

    (420) ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 420 (ExplicitConstructorInvocation -> ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1146

    (421) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1153


state 1147

    (422) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList . RPAREN SEMICOLON

    RPAREN          shift and go to state 1154


state 1148

    (62) AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .

    SEMICOLON       reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PUBLIC          reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ABSTRACT        reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    STATIC          reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    FINAL           reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PROTECTED       reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    PRIVATE         reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    STRICTFP        reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    EXTENDS         reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ATRATE          reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    BOOLEAN         reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    IDENT           reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    BYTE            reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    SHORT           reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    INT             reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    LONG            reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    CHAR            reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    FLOAT           reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    DOUBLE          reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    CLASS           reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    ENUM            reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    IMPLEMENTS      reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    LBRACE          reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    INTERFACE       reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)
    RBRACE          reduce using rule 62 (AnnotationTypeElementDeclaration -> AnnotationTypeElementModifierS UnannType IDENT LPAREN RPAREN ZooDims ZooDefaultValue SEMICOLON .)


state 1149

    (72) DefaultValue -> DEFAULT ElementValue .

    SEMICOLON       reduce using rule 72 (DefaultValue -> DEFAULT ElementValue .)


state 1150

    (541) IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE . Statement
    (542) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE . StatementNoShortIf
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (512) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (513) StatementNoShortIf -> . LabeledStatementNoShortIf
    (514) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (515) StatementNoShortIf -> . WhileStatementNoShortIf
    (516) StatementNoShortIf -> . ForStatementNoShortIf
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (531) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (542) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (558) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (562) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (563) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1008
    IF              shift and go to state 1000
    WHILE           shift and go to state 1009
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 1012
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    StatementNoShortIf             shift and go to state 1155
    Statement                      shift and go to state 1084
    StatementWithoutTrailingSubstatement shift and go to state 1003
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    LabeledStatementNoShortIf      shift and go to state 1004
    IfThenElseStatementNoShortIf   shift and go to state 1005
    WhileStatementNoShortIf        shift and go to state 1006
    ForStatementNoShortIf          shift and go to state 1007
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    BasicForStatementNoShortIf     shift and go to state 1010
    EnhancedForStatementNoShortIf  shift and go to state 1011
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1151

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON . ZooForUpdate RPAREN Statement
    (571) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON . ZooForUpdate RPAREN StatementNoShortIf
    (565) ZooForUpdate -> . ForUpdate
    (566) ZooForUpdate -> . empty
    (574) ForUpdate -> . StatementExpressionList
    (1) empty -> .
    (575) StatementExpressionList -> . StatementExpression COMMAStatementExpressionS
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    RPAREN          reduce using rule 1 (empty -> .)
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    IDENT           shift and go to state 831
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    ZooForUpdate                   shift and go to state 1156
    ForUpdate                      shift and go to state 1109
    empty                          shift and go to state 1110
    StatementExpressionList        shift and go to state 1111
    StatementExpression            shift and go to state 830
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1152

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON . Expression RPAREN Statement
    (579) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON . Expression RPAREN StatementNoShortIf
    (162) Expression -> . LambdaExpression
    (163) Expression -> . AssignmentExpression
    (164) LambdaExpression -> . LambdaParameters ARROW LambdaBody
    (173) AssignmentExpression -> . ConditionalExpression
    (174) AssignmentExpression -> . Assignment
    (165) LambdaParameters -> . IDENT
    (166) LambdaParameters -> . LPAREN ZooFormalParameterList RPAREN
    (167) LambdaParameters -> . LPAREN InferredFormalParameterList RPAREN
    (191) ConditionalExpression -> . ConditionalOrExpression
    (192) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON ConditionalExpression
    (193) ConditionalExpression -> . ConditionalOrExpression QUES Expression COLON LambdaExpression
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (194) ConditionalOrExpression -> . ConditionalAndExpression
    (195) ConditionalOrExpression -> . ConditionalOrExpression LOR ConditionalAndExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (196) ConditionalAndExpression -> . InclusiveOrExpression
    (197) ConditionalAndExpression -> . ConditionalAndExpression LAND InclusiveOrExpression
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (198) InclusiveOrExpression -> . ExclusiveOrExpression
    (199) InclusiveOrExpression -> . InclusiveOrExpression OR ExclusiveOrExpression
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (200) ExclusiveOrExpression -> . AndExpression
    (201) ExclusiveOrExpression -> . ExclusiveOrExpression XOR AndExpression
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (202) AndExpression -> . EqualityExpression
    (203) AndExpression -> . AndExpression AND EqualityExpression
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (277) MethodName -> . IDENT
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (204) EqualityExpression -> . RelationalExpression
    (205) EqualityExpression -> . EqualityExpression EQL RelationalExpression
    (206) EqualityExpression -> . EqualityExpression NEQ RelationalExpression
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (207) RelationalExpression -> . ShiftExpression
    (208) RelationalExpression -> . RelationalExpression LSS ShiftExpression
    (209) RelationalExpression -> . RelationalExpression GTR ShiftExpression
    (210) RelationalExpression -> . RelationalExpression LEQ ShiftExpression
    (211) RelationalExpression -> . RelationalExpression GEQ ShiftExpression
    (212) RelationalExpression -> . RelationalExpression INSTANCEOF ReferenceType
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (213) ShiftExpression -> . AdditiveExpression
    (214) ShiftExpression -> . ShiftExpression SHL AdditiveExpression
    (215) ShiftExpression -> . ShiftExpression SHR AdditiveExpression
    (216) ShiftExpression -> . ShiftExpression SHR_UN AdditiveExpression
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN
    (217) AdditiveExpression -> . MultiplicativeExpression
    (218) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (219) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (220) MultiplicativeExpression -> . UnaryExpression
    (221) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (222) MultiplicativeExpression -> . MultiplicativeExpression QUO UnaryExpression
    (223) MultiplicativeExpression -> . MultiplicativeExpression REM UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotPlusMinus
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotPlusMinus -> . PostfixExpression
    (232) UnaryExpressionNotPlusMinus -> . LNOT UnaryExpression
    (233) UnaryExpressionNotPlusMinus -> . NOT UnaryExpression
    (234) UnaryExpressionNotPlusMinus -> . CastExpression
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (241) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (242) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus
    (243) CastExpression -> . LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 212
    LPAREN          shift and go to state 202
    SUPER           shift and go to state 166
    THIS            shift and go to state 144
    NEW             shift and go to state 150
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13
    ADD             shift and go to state 122
    SUB             shift and go to state 123
    INC             shift and go to state 128
    DEC             shift and go to state 129
    LNOT            shift and go to state 131
    NOT             shift and go to state 132

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Expression                     shift and go to state 1157
    LambdaExpression               shift and go to state 205
    AssignmentExpression           shift and go to state 210
    LambdaParameters               shift and go to state 213
    ConditionalExpression          shift and go to state 214
    Assignment                     shift and go to state 215
    ConditionalOrExpression        shift and go to state 109
    LeftHandSide                   shift and go to state 216
    ConditionalAndExpression       shift and go to state 112
    ExpressionName                 shift and go to state 218
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    InclusiveOrExpression          shift and go to state 113
    AmbiguousName                  shift and go to state 141
    Primary                        shift and go to state 221
    TypeName                       shift and go to state 217
    PrimaryNoNewArray              shift and go to state 222
    ExclusiveOrExpression          shift and go to state 114
    ArrayCreationExpression        shift and go to state 140
    PackageOrTypeName              shift and go to state 27
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    ClassInstanceCreationExpression shift and go to state 145
    MethodInvocation               shift and go to state 148
    MethodReference                shift and go to state 149
    AndExpression                  shift and go to state 115
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    MethodName                     shift and go to state 167
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    EqualityExpression             shift and go to state 116
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    RelationalExpression           shift and go to state 117
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    ShiftExpression                shift and go to state 118
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12
    AdditiveExpression             shift and go to state 120
    MultiplicativeExpression       shift and go to state 121
    UnaryExpression                shift and go to state 124
    PreIncrementExpression         shift and go to state 125
    PreDecrementExpression         shift and go to state 126
    UnaryExpressionNotPlusMinus    shift and go to state 127
    PostfixExpression              shift and go to state 130
    CastExpression                 shift and go to state 133
    PostIncrementExpression        shift and go to state 136
    PostDecrementExpression        shift and go to state 137

state 1153

    (421) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1158


state 1154

    (422) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 1159


state 1155

    (542) IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf .

    ELSE            reduce using rule 542 (IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf .)


state 1156

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate . RPAREN Statement
    (571) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate . RPAREN StatementNoShortIf

    RPAREN          shift and go to state 1160


state 1157

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression . RPAREN Statement
    (579) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression . RPAREN StatementNoShortIf

    RPAREN          shift and go to state 1161


state 1158

    (421) ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 421 (ExplicitConstructorInvocation -> ExpressionName PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1159

    (422) ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .

    IDENT           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IF              reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    WHILE           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LBRACE          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ASSERT          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SWITCH          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DO              reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BREAK           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RETURN          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SYNCHRONIZED    reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THROW           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    TRY             reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FOR             reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FINAL           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STATIC          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRICTFP        reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    EXTENDS         reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INC             reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DEC             reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SUPER           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ATRATE          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NEW             reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    THIS            reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LPAREN          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOL_LIT        reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    NULL_LIT        reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DECIMAL_LIT     reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    HEX_LIT         reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    OCTAL_LIT       reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BINARY_LIT      reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_DEC_LIT   reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT_HEX_LIT   reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    STRING_LIT      reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR_LIT        reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    VOID            reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    BYTE            reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    SHORT           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    INT             reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    LONG            reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CHAR            reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    FLOAT           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    RBRACE          reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    CLASS           reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    ENUM            reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)
    IMPLEMENTS      reduce using rule 422 (ExplicitConstructorInvocation -> Primary PERIOD ZooTypeArguments SUPER LPAREN ZooArgumentList RPAREN SEMICOLON .)


state 1160

    (564) BasicForStatement -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN . Statement
    (571) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN . StatementNoShortIf
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (512) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (513) StatementNoShortIf -> . LabeledStatementNoShortIf
    (514) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (515) StatementNoShortIf -> . WhileStatementNoShortIf
    (516) StatementNoShortIf -> . ForStatementNoShortIf
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (531) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (542) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (558) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (562) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (563) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1008
    IF              shift and go to state 1000
    WHILE           shift and go to state 1009
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 1012
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1142
    StatementNoShortIf             shift and go to state 1162
    StatementWithoutTrailingSubstatement shift and go to state 1003
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    LabeledStatementNoShortIf      shift and go to state 1004
    IfThenElseStatementNoShortIf   shift and go to state 1005
    WhileStatementNoShortIf        shift and go to state 1006
    ForStatementNoShortIf          shift and go to state 1007
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    BasicForStatementNoShortIf     shift and go to state 1010
    EnhancedForStatementNoShortIf  shift and go to state 1011
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1161

    (578) EnhancedForStatement -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN . Statement
    (579) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN . StatementNoShortIf
    (506) Statement -> . StatementWithoutTrailingSubstatement
    (507) Statement -> . LabeledStatement
    (508) Statement -> . IfThenStatement
    (509) Statement -> . IfThenElseStatement
    (510) Statement -> . WhileStatement
    (511) Statement -> . ForStatement
    (512) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (513) StatementNoShortIf -> . LabeledStatementNoShortIf
    (514) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (515) StatementNoShortIf -> . WhileStatementNoShortIf
    (516) StatementNoShortIf -> . ForStatementNoShortIf
    (517) StatementWithoutTrailingSubstatement -> . Block
    (518) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (519) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (520) StatementWithoutTrailingSubstatement -> . AssertStatement
    (521) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (522) StatementWithoutTrailingSubstatement -> . DoStatement
    (523) StatementWithoutTrailingSubstatement -> . BreakStatement
    (524) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (525) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (526) StatementWithoutTrailingSubstatement -> . SynchronizedStatement
    (527) StatementWithoutTrailingSubstatement -> . ThrowStatement
    (528) StatementWithoutTrailingSubstatement -> . TryStatement
    (530) LabeledStatement -> . IDENT COLON Statement
    (540) IfThenStatement -> . IF LPAREN Expression RPAREN Statement
    (541) IfThenElseStatement -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement
    (557) WhileStatement -> . WHILE LPAREN Expression RPAREN Statement
    (560) ForStatement -> . BasicForStatement
    (561) ForStatement -> . EnhancedForStatement
    (531) LabeledStatementNoShortIf -> . IDENT COLON StatementNoShortIf
    (542) IfThenElseStatementNoShortIf -> . IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf
    (558) WhileStatementNoShortIf -> . WHILE LPAREN Expression RPAREN StatementNoShortIf
    (562) ForStatementNoShortIf -> . BasicForStatementNoShortIf
    (563) ForStatementNoShortIf -> . EnhancedForStatementNoShortIf
    (493) Block -> . LBRACE ZooBlockStatements RBRACE
    (529) EmptyStatement -> . SEMICOLON
    (532) ExpressionStatement -> . StatementExpression SEMICOLON
    (543) AssertStatement -> . ASSERT Expression SEMICOLON
    (544) AssertStatement -> . ASSERT Expression COLON Expression SEMICOLON
    (545) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (559) DoStatement -> . DO Statement WHILE LPAREN Expression RPAREN SEMICOLON
    (580) BreakStatement -> . BREAK ZooIDENT SEMICOLON
    (583) ContinueStatement -> . CONTINUE ZooIDENT SEMICOLON
    (584) ReturnStatement -> . RETURN ZooExpression SEMICOLON
    (586) SynchronizedStatement -> . SYNCHRONIZED LPAREN Expression RPAREN Block
    (585) ThrowStatement -> . THROW Expression SEMICOLON
    (587) TryStatement -> . TRY Block Catches
    (588) TryStatement -> . TRY Block ZooCatches Finally
    (589) TryStatement -> . TryWithResourcesStatement
    (564) BasicForStatement -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN Statement
    (578) EnhancedForStatement -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement
    (571) BasicForStatementNoShortIf -> . FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf
    (579) EnhancedForStatementNoShortIf -> . FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf
    (533) StatementExpression -> . Assignment
    (534) StatementExpression -> . PreIncrementExpression
    (535) StatementExpression -> . PreDecrementExpression
    (536) StatementExpression -> . PostIncrementExpression
    (537) StatementExpression -> . PostDecrementExpression
    (538) StatementExpression -> . MethodInvocation
    (539) StatementExpression -> . ClassInstanceCreationExpression
    (601) TryWithResourcesStatement -> . TRY ResourceSpecification Block ZooCatches ZooFinally
    (175) Assignment -> . LeftHandSide AssignmentOperator Expression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (239) PostIncrementExpression -> . PostfixExpression INC
    (240) PostDecrementExpression -> . PostfixExpression DEC
    (138) MethodInvocation -> . MethodName LPAREN ZooArgumentList RPAREN
    (139) MethodInvocation -> . TypeName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (140) MethodInvocation -> . ExpressionName PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (141) MethodInvocation -> . Primary PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (142) MethodInvocation -> . SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (143) MethodInvocation -> . TypeName PERIOD SUPER PERIOD ZooTypeArguments IDENT LPAREN ZooArgumentList RPAREN
    (118) ClassInstanceCreationExpression -> . UnqualifiedClassInstanceCreationExpression
    (119) ClassInstanceCreationExpression -> . ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression
    (120) ClassInstanceCreationExpression -> . Primary PERIOD UnqualifiedClassInstanceCreationExpression
    (176) LeftHandSide -> . ExpressionName
    (177) LeftHandSide -> . FieldAccess
    (178) LeftHandSide -> . ArrayAccess
    (235) PostfixExpression -> . Primary
    (236) PostfixExpression -> . ExpressionName
    (237) PostfixExpression -> . PostIncrementExpression
    (238) PostfixExpression -> . PostDecrementExpression
    (277) MethodName -> . IDENT
    (271) TypeName -> . IDENT
    (272) TypeName -> . PackageOrTypeName PERIOD IDENT
    (275) ExpressionName -> . IDENT
    (276) ExpressionName -> . AmbiguousName PERIOD IDENT
    (100) Primary -> . PrimaryNoNewArray
    (101) Primary -> . ArrayCreationExpression
    (121) UnqualifiedClassInstanceCreationExpression -> . NEW ZooTypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ZooArgumentList RPAREN ZooClassBody
    (133) FieldAccess -> . Primary PERIOD IDENT
    (134) FieldAccess -> . SUPER PERIOD IDENT
    (135) FieldAccess -> . TypeName PERIOD SUPER PERIOD IDENT
    (136) ArrayAccess -> . ExpressionName LBRACK Expression RBRACK
    (137) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (273) PackageOrTypeName -> . IDENT
    (274) PackageOrTypeName -> . PackageOrTypeName PERIOD IDENT
    (280) AmbiguousName -> . IDENT
    (281) AmbiguousName -> . AmbiguousName PERIOD IDENT
    (102) PrimaryNoNewArray -> . Literal
    (103) PrimaryNoNewArray -> . ClassLiteral
    (104) PrimaryNoNewArray -> . THIS
    (105) PrimaryNoNewArray -> . TypeName PERIOD THIS
    (106) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (107) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (108) PrimaryNoNewArray -> . FieldAccess
    (109) PrimaryNoNewArray -> . ArrayAccess
    (110) PrimaryNoNewArray -> . MethodInvocation
    (111) PrimaryNoNewArray -> . MethodReference
    (154) ArrayCreationExpression -> . NEW PrimitiveType DimExprs ZooDims
    (155) ArrayCreationExpression -> . NEW ClassOrInterfaceType DimExprs ZooDims
    (156) ArrayCreationExpression -> . NEW PrimitiveType Dims ArrayInitializer
    (157) ArrayCreationExpression -> . NEW ClassOrInterfaceType Dims ArrayInitializer
    (2) Literal -> . BOOL_LIT
    (3) Literal -> . NULL_LIT
    (4) Literal -> . DECIMAL_LIT
    (5) Literal -> . HEX_LIT
    (6) Literal -> . OCTAL_LIT
    (7) Literal -> . BINARY_LIT
    (8) Literal -> . FLOAT_DEC_LIT
    (9) Literal -> . FLOAT_HEX_LIT
    (10) Literal -> . STRING_LIT
    (11) Literal -> . CHAR_LIT
    (112) ClassLiteral -> . TypeName LBRACKRBRACKS PERIOD CLASS
    (113) ClassLiteral -> . NumericType LBRACKRBRACKS PERIOD CLASS
    (114) ClassLiteral -> . BOOLEAN LBRACKRBRACKS PERIOD CLASS
    (115) ClassLiteral -> . VOID PERIOD CLASS
    (147) MethodReference -> . ExpressionName COLON_SEP ZooTypeArguments IDENT
    (148) MethodReference -> . ReferenceType COLON_SEP ZooTypeArguments IDENT
    (149) MethodReference -> . Primary COLON_SEP ZooTypeArguments IDENT
    (150) MethodReference -> . SUPER COLON_SEP ZooTypeArguments IDENT
    (151) MethodReference -> . TypeName PERIOD SUPER COLON_SEP ZooTypeArguments IDENT
    (152) MethodReference -> . ClassType COLON_SEP ZooTypeArguments NEW
    (153) MethodReference -> . ArrayType COLON_SEP NEW
    (449) NumericType -> . IntegralType
    (450) NumericType -> . FloatingPointType
    (458) ReferenceType -> . ClassOrInterfaceType
    (459) ReferenceType -> . TypeVariable
    (460) ReferenceType -> . ArrayType
    (463) ClassType -> . AnnotationS IDENT ZooTypeArguments
    (464) ClassType -> . ClassOrInterfaceType PERIOD AnnotationS IDENT ZooTypeArguments
    (467) ArrayType -> . PrimitiveType Dims
    (468) ArrayType -> . ClassOrInterfaceType Dims
    (469) ArrayType -> . TypeVariable Dims
    (451) IntegralType -> . BYTE
    (452) IntegralType -> . SHORT
    (453) IntegralType -> . INT
    (454) IntegralType -> . LONG
    (455) IntegralType -> . CHAR
    (456) FloatingPointType -> . FLOAT
    (457) FloatingPointType -> . DOUBLE
    (461) ClassOrInterfaceType -> . ClassType
    (462) ClassOrInterfaceType -> . InterfaceType
    (466) TypeVariable -> . AnnotationS IDENT
    (125) AnnotationS -> . Annotation AnnotationS
    (126) AnnotationS -> . empty
    (447) PrimitiveType -> . AnnotationS NumericType
    (448) PrimitiveType -> . AnnotationS BOOLEAN
    (465) InterfaceType -> . ClassType
    (73) Annotation -> . NormalAnnotation
    (74) Annotation -> . MarkerAnnotation
    (75) Annotation -> . SingleElementAnnotation
    (1) empty -> .
    (76) NormalAnnotation -> . ATRATE TypeName LPAREN ZooElementValuePairList RPAREN
    (92) MarkerAnnotation -> . ATRATE TypeName
    (93) SingleElementAnnotation -> . ATRATE TypeName LPAREN ElementValue RPAREN

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
    IDENT           shift and go to state 1008
    IF              shift and go to state 1000
    WHILE           shift and go to state 1009
    LBRACE          shift and go to state 299
    SEMICOLON       shift and go to state 472
    ASSERT          shift and go to state 500
    SWITCH          shift and go to state 501
    DO              shift and go to state 502
    BREAK           shift and go to state 503
    CONTINUE        shift and go to state 504
    RETURN          shift and go to state 505
    SYNCHRONIZED    shift and go to state 506
    THROW           shift and go to state 507
    TRY             shift and go to state 508
    FOR             shift and go to state 1012
    INC             shift and go to state 128
    DEC             shift and go to state 129
    SUPER           shift and go to state 524
    NEW             shift and go to state 525
    THIS            shift and go to state 144
    LPAREN          shift and go to state 494
    BOOL_LIT        shift and go to state 152
    NULL_LIT        shift and go to state 153
    DECIMAL_LIT     shift and go to state 154
    HEX_LIT         shift and go to state 155
    OCTAL_LIT       shift and go to state 156
    BINARY_LIT      shift and go to state 157
    FLOAT_DEC_LIT   shift and go to state 158
    FLOAT_HEX_LIT   shift and go to state 159
    STRING_LIT      shift and go to state 160
    CHAR_LIT        shift and go to state 161
    BOOLEAN         shift and go to state 163
    VOID            shift and go to state 164
    BYTE            shift and go to state 174
    SHORT           shift and go to state 175
    INT             shift and go to state 176
    LONG            shift and go to state 177
    CHAR            shift and go to state 178
    FLOAT           shift and go to state 179
    DOUBLE          shift and go to state 180
    ATRATE          shift and go to state 13

  ! IDENT           [ reduce using rule 1 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 1 (empty -> .) ]
  ! BYTE            [ reduce using rule 1 (empty -> .) ]
  ! SHORT           [ reduce using rule 1 (empty -> .) ]
  ! INT             [ reduce using rule 1 (empty -> .) ]
  ! LONG            [ reduce using rule 1 (empty -> .) ]
  ! CHAR            [ reduce using rule 1 (empty -> .) ]
  ! FLOAT           [ reduce using rule 1 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 1 (empty -> .) ]

    Statement                      shift and go to state 1143
    StatementNoShortIf             shift and go to state 1163
    StatementWithoutTrailingSubstatement shift and go to state 1003
    LabeledStatement               shift and go to state 474
    IfThenStatement                shift and go to state 475
    IfThenElseStatement            shift and go to state 476
    WhileStatement                 shift and go to state 477
    ForStatement                   shift and go to state 478
    LabeledStatementNoShortIf      shift and go to state 1004
    IfThenElseStatementNoShortIf   shift and go to state 1005
    WhileStatementNoShortIf        shift and go to state 1006
    ForStatementNoShortIf          shift and go to state 1007
    Block                          shift and go to state 481
    EmptyStatement                 shift and go to state 482
    ExpressionStatement            shift and go to state 483
    AssertStatement                shift and go to state 484
    SwitchStatement                shift and go to state 485
    DoStatement                    shift and go to state 486
    BreakStatement                 shift and go to state 487
    ContinueStatement              shift and go to state 488
    ReturnStatement                shift and go to state 489
    SynchronizedStatement          shift and go to state 490
    ThrowStatement                 shift and go to state 491
    TryStatement                   shift and go to state 492
    BasicForStatement              shift and go to state 496
    EnhancedForStatement           shift and go to state 497
    BasicForStatementNoShortIf     shift and go to state 1010
    EnhancedForStatementNoShortIf  shift and go to state 1011
    StatementExpression            shift and go to state 499
    TryWithResourcesStatement      shift and go to state 509
    Assignment                     shift and go to state 513
    PreIncrementExpression         shift and go to state 514
    PreDecrementExpression         shift and go to state 515
    PostIncrementExpression        shift and go to state 516
    PostDecrementExpression        shift and go to state 517
    MethodInvocation               shift and go to state 518
    ClassInstanceCreationExpression shift and go to state 519
    LeftHandSide                   shift and go to state 216
    PostfixExpression              shift and go to state 520
    MethodName                     shift and go to state 167
    TypeName                       shift and go to state 521
    ExpressionName                 shift and go to state 522
    Primary                        shift and go to state 523
    UnqualifiedClassInstanceCreationExpression shift and go to state 165
    FieldAccess                    shift and go to state 219
    ArrayAccess                    shift and go to state 220
    PackageOrTypeName              shift and go to state 27
    AmbiguousName                  shift and go to state 141
    PrimaryNoNewArray              shift and go to state 139
    ArrayCreationExpression        shift and go to state 140
    Literal                        shift and go to state 142
    ClassLiteral                   shift and go to state 143
    MethodReference                shift and go to state 149
    PrimitiveType                  shift and go to state 138
    ClassOrInterfaceType           shift and go to state 151
    NumericType                    shift and go to state 162
    ReferenceType                  shift and go to state 119
    ClassType                      shift and go to state 168
    ArrayType                      shift and go to state 169
    IntegralType                   shift and go to state 170
    FloatingPointType              shift and go to state 171
    TypeVariable                   shift and go to state 172
    AnnotationS                    shift and go to state 173
    InterfaceType                  shift and go to state 92
    Annotation                     shift and go to state 90
    empty                          shift and go to state 91
    NormalAnnotation               shift and go to state 10
    MarkerAnnotation               shift and go to state 11
    SingleElementAnnotation        shift and go to state 12

state 1162

    (571) BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf .

    ELSE            reduce using rule 571 (BasicForStatementNoShortIf -> FOR LPAREN ZooForInit SEMICOLON ZooExpression SEMICOLON ZooForUpdate RPAREN StatementNoShortIf .)


state 1163

    (579) EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf .

    ELSE            reduce using rule 579 (EnhancedForStatementNoShortIf -> FOR LPAREN VariableModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ATRATE in state 2 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 14 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 29 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 43 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 58 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 58 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for LONG in state 58 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 58 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 99 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 100 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 100 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 100 resolved as shift
WARNING: shift/reduce conflict for INT in state 100 resolved as shift
WARNING: shift/reduce conflict for LONG in state 100 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 100 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 100 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 100 resolved as shift
WARNING: shift/reduce conflict for QUES in state 109 resolved as shift
WARNING: shift/reduce conflict for LOR in state 109 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 110 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 110 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 110 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 110 resolved as shift
WARNING: shift/reduce conflict for INT in state 110 resolved as shift
WARNING: shift/reduce conflict for LONG in state 110 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 110 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 110 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 110 resolved as shift
WARNING: shift/reduce conflict for LAND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for XOR in state 114 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for EQL in state 116 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 116 resolved as shift
WARNING: shift/reduce conflict for LSS in state 117 resolved as shift
WARNING: shift/reduce conflict for GTR in state 117 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 117 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 117 resolved as shift
WARNING: shift/reduce conflict for INSTANCEOF in state 117 resolved as shift
WARNING: shift/reduce conflict for SHL in state 118 resolved as shift
WARNING: shift/reduce conflict for SHR in state 118 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 118 resolved as shift
WARNING: shift/reduce conflict for ADD in state 120 resolved as shift
WARNING: shift/reduce conflict for SUB in state 120 resolved as shift
WARNING: shift/reduce conflict for MUL in state 121 resolved as shift
WARNING: shift/reduce conflict for QUO in state 121 resolved as shift
WARNING: shift/reduce conflict for REM in state 121 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 122 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 122 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 122 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 122 resolved as shift
WARNING: shift/reduce conflict for INT in state 122 resolved as shift
WARNING: shift/reduce conflict for LONG in state 122 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 122 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 122 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 122 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 123 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 123 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 123 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 123 resolved as shift
WARNING: shift/reduce conflict for INT in state 123 resolved as shift
WARNING: shift/reduce conflict for LONG in state 123 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 123 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 123 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 123 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 128 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 128 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 128 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 128 resolved as shift
WARNING: shift/reduce conflict for INT in state 128 resolved as shift
WARNING: shift/reduce conflict for LONG in state 128 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 128 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 128 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 128 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 129 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 129 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 129 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 129 resolved as shift
WARNING: shift/reduce conflict for INT in state 129 resolved as shift
WARNING: shift/reduce conflict for LONG in state 129 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 129 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 129 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 129 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 131 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 131 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 131 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 131 resolved as shift
WARNING: shift/reduce conflict for INT in state 131 resolved as shift
WARNING: shift/reduce conflict for LONG in state 131 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 131 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 131 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 131 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 132 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 132 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 132 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 132 resolved as shift
WARNING: shift/reduce conflict for INT in state 132 resolved as shift
WARNING: shift/reduce conflict for LONG in state 132 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 132 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 132 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 132 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 150 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 168 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 168 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 169 resolved as shift
WARNING: shift/reduce conflict for LSS in state 182 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 185 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 185 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 202 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 202 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 202 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 202 resolved as shift
WARNING: shift/reduce conflict for INT in state 202 resolved as shift
WARNING: shift/reduce conflict for LONG in state 202 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 202 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 202 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 202 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 209 resolved as shift
WARNING: shift/reduce conflict for COLON_SEP in state 211 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 217 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 228 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 228 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 228 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 228 resolved as shift
WARNING: shift/reduce conflict for INT in state 228 resolved as shift
WARNING: shift/reduce conflict for LONG in state 228 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 228 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 228 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 228 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 229 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 229 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 229 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 229 resolved as shift
WARNING: shift/reduce conflict for INT in state 229 resolved as shift
WARNING: shift/reduce conflict for LONG in state 229 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 229 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 229 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 229 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 233 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 235 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 235 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 235 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 235 resolved as shift
WARNING: shift/reduce conflict for INT in state 235 resolved as shift
WARNING: shift/reduce conflict for LONG in state 235 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 235 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 235 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 235 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 236 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 236 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 236 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 236 resolved as shift
WARNING: shift/reduce conflict for INT in state 236 resolved as shift
WARNING: shift/reduce conflict for LONG in state 236 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 236 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 236 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 236 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 237 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 237 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 237 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 237 resolved as shift
WARNING: shift/reduce conflict for INT in state 237 resolved as shift
WARNING: shift/reduce conflict for LONG in state 237 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 237 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 237 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 237 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 238 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 238 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 238 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 238 resolved as shift
WARNING: shift/reduce conflict for INT in state 238 resolved as shift
WARNING: shift/reduce conflict for LONG in state 238 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 238 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 238 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 238 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 239 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 239 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 239 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 239 resolved as shift
WARNING: shift/reduce conflict for INT in state 239 resolved as shift
WARNING: shift/reduce conflict for LONG in state 239 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 239 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 239 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 239 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 240 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 240 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 240 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 240 resolved as shift
WARNING: shift/reduce conflict for INT in state 240 resolved as shift
WARNING: shift/reduce conflict for LONG in state 240 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 240 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 240 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 240 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 241 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 241 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 241 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 241 resolved as shift
WARNING: shift/reduce conflict for INT in state 241 resolved as shift
WARNING: shift/reduce conflict for LONG in state 241 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 241 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 241 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 241 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 242 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 242 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 242 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 242 resolved as shift
WARNING: shift/reduce conflict for INT in state 242 resolved as shift
WARNING: shift/reduce conflict for LONG in state 242 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 242 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 242 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 242 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 243 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 243 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 243 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 243 resolved as shift
WARNING: shift/reduce conflict for INT in state 243 resolved as shift
WARNING: shift/reduce conflict for LONG in state 243 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 243 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 243 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 243 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 244 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 244 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 244 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 244 resolved as shift
WARNING: shift/reduce conflict for INT in state 244 resolved as shift
WARNING: shift/reduce conflict for LONG in state 244 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 244 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 244 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 244 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 245 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 245 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 245 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 245 resolved as shift
WARNING: shift/reduce conflict for INT in state 245 resolved as shift
WARNING: shift/reduce conflict for LONG in state 245 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 245 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 245 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 245 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 247 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 247 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 247 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 247 resolved as shift
WARNING: shift/reduce conflict for INT in state 247 resolved as shift
WARNING: shift/reduce conflict for LONG in state 247 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 247 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 247 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 247 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 248 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 248 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 248 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 248 resolved as shift
WARNING: shift/reduce conflict for INT in state 248 resolved as shift
WARNING: shift/reduce conflict for LONG in state 248 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 248 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 248 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 248 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 249 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 249 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 249 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 249 resolved as shift
WARNING: shift/reduce conflict for INT in state 249 resolved as shift
WARNING: shift/reduce conflict for LONG in state 249 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 249 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 249 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 249 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 251 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 251 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 251 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 251 resolved as shift
WARNING: shift/reduce conflict for INT in state 251 resolved as shift
WARNING: shift/reduce conflict for LONG in state 251 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 251 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 251 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 251 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 252 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 252 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 252 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 252 resolved as shift
WARNING: shift/reduce conflict for INT in state 252 resolved as shift
WARNING: shift/reduce conflict for LONG in state 252 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 252 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 252 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 252 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 253 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 253 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 253 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 253 resolved as shift
WARNING: shift/reduce conflict for INT in state 253 resolved as shift
WARNING: shift/reduce conflict for LONG in state 253 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 253 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 253 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 253 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 254 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 254 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 254 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 254 resolved as shift
WARNING: shift/reduce conflict for INT in state 254 resolved as shift
WARNING: shift/reduce conflict for LONG in state 254 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 254 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 254 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 254 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 255 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 255 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 255 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 255 resolved as shift
WARNING: shift/reduce conflict for INT in state 255 resolved as shift
WARNING: shift/reduce conflict for LONG in state 255 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 255 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 255 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 255 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 264 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 267 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 267 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 267 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 267 resolved as shift
WARNING: shift/reduce conflict for INT in state 267 resolved as shift
WARNING: shift/reduce conflict for LONG in state 267 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 267 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 267 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 267 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 271 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 271 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 271 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 271 resolved as shift
WARNING: shift/reduce conflict for INT in state 271 resolved as shift
WARNING: shift/reduce conflict for LONG in state 271 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 271 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 271 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 271 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 285 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 287 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 287 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 287 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 287 resolved as shift
WARNING: shift/reduce conflict for INT in state 287 resolved as shift
WARNING: shift/reduce conflict for LONG in state 287 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 287 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 287 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 287 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 299 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 299 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 299 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 299 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 299 resolved as shift
WARNING: shift/reduce conflict for INT in state 299 resolved as shift
WARNING: shift/reduce conflict for LONG in state 299 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 299 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 299 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 299 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 301 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 301 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 354 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 357 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 358 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 363 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 363 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 363 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 363 resolved as shift
WARNING: shift/reduce conflict for INT in state 363 resolved as shift
WARNING: shift/reduce conflict for LONG in state 363 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 363 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 363 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 363 resolved as shift
WARNING: shift/reduce conflict for LSS in state 369 resolved as shift
WARNING: shift/reduce conflict for LSS in state 369 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 370 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 370 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 370 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 370 resolved as shift
WARNING: shift/reduce conflict for INT in state 370 resolved as shift
WARNING: shift/reduce conflict for LONG in state 370 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 370 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 370 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 370 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 371 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 371 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 371 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 371 resolved as shift
WARNING: shift/reduce conflict for INT in state 371 resolved as shift
WARNING: shift/reduce conflict for LONG in state 371 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 371 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 371 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 371 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 385 resolved as shift
WARNING: shift/reduce conflict for LAND in state 389 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 394 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 394 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 394 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 394 resolved as shift
WARNING: shift/reduce conflict for INT in state 394 resolved as shift
WARNING: shift/reduce conflict for LONG in state 394 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 394 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 394 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 394 resolved as shift
WARNING: shift/reduce conflict for OR in state 397 resolved as shift
WARNING: shift/reduce conflict for XOR in state 398 resolved as shift
WARNING: shift/reduce conflict for AND in state 399 resolved as shift
WARNING: shift/reduce conflict for EQL in state 400 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 400 resolved as shift
WARNING: shift/reduce conflict for LSS in state 401 resolved as shift
WARNING: shift/reduce conflict for GTR in state 401 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 401 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 401 resolved as shift
WARNING: shift/reduce conflict for INSTANCEOF in state 401 resolved as shift
WARNING: shift/reduce conflict for LSS in state 402 resolved as shift
WARNING: shift/reduce conflict for GTR in state 402 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 402 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 402 resolved as shift
WARNING: shift/reduce conflict for INSTANCEOF in state 402 resolved as shift
WARNING: shift/reduce conflict for SHL in state 403 resolved as shift
WARNING: shift/reduce conflict for SHR in state 403 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 403 resolved as shift
WARNING: shift/reduce conflict for SHL in state 404 resolved as shift
WARNING: shift/reduce conflict for SHR in state 404 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 404 resolved as shift
WARNING: shift/reduce conflict for SHL in state 405 resolved as shift
WARNING: shift/reduce conflict for SHR in state 405 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 405 resolved as shift
WARNING: shift/reduce conflict for SHL in state 406 resolved as shift
WARNING: shift/reduce conflict for SHR in state 406 resolved as shift
WARNING: shift/reduce conflict for SHR_UN in state 406 resolved as shift
WARNING: shift/reduce conflict for ADD in state 410 resolved as shift
WARNING: shift/reduce conflict for SUB in state 410 resolved as shift
WARNING: shift/reduce conflict for ADD in state 411 resolved as shift
WARNING: shift/reduce conflict for SUB in state 411 resolved as shift
WARNING: shift/reduce conflict for ADD in state 412 resolved as shift
WARNING: shift/reduce conflict for SUB in state 412 resolved as shift
WARNING: shift/reduce conflict for MUL in state 414 resolved as shift
WARNING: shift/reduce conflict for QUO in state 414 resolved as shift
WARNING: shift/reduce conflict for REM in state 414 resolved as shift
WARNING: shift/reduce conflict for MUL in state 415 resolved as shift
WARNING: shift/reduce conflict for QUO in state 415 resolved as shift
WARNING: shift/reduce conflict for REM in state 415 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 433 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 467 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 467 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 467 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 467 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 467 resolved as shift
WARNING: shift/reduce conflict for INT in state 467 resolved as shift
WARNING: shift/reduce conflict for LONG in state 467 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 467 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 467 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 467 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 494 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 494 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 494 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 494 resolved as shift
WARNING: shift/reduce conflict for INT in state 494 resolved as shift
WARNING: shift/reduce conflict for LONG in state 494 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 494 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 494 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 494 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 500 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 500 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 500 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 500 resolved as shift
WARNING: shift/reduce conflict for INT in state 500 resolved as shift
WARNING: shift/reduce conflict for LONG in state 500 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 500 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 500 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 500 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 502 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 502 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 502 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 502 resolved as shift
WARNING: shift/reduce conflict for INT in state 502 resolved as shift
WARNING: shift/reduce conflict for LONG in state 502 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 502 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 502 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 502 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 505 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 505 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 505 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 505 resolved as shift
WARNING: shift/reduce conflict for INT in state 505 resolved as shift
WARNING: shift/reduce conflict for LONG in state 505 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 505 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 505 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 505 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 507 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 507 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 507 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 507 resolved as shift
WARNING: shift/reduce conflict for INT in state 507 resolved as shift
WARNING: shift/reduce conflict for LONG in state 507 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 507 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 507 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 507 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 511 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 521 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 525 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 532 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 536 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 537 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 577 resolved as shift
WARNING: shift/reduce conflict for LSS in state 578 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 581 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 606 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 606 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 606 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 606 resolved as shift
WARNING: shift/reduce conflict for INT in state 606 resolved as shift
WARNING: shift/reduce conflict for LONG in state 606 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 606 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 606 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 606 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 614 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 614 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 614 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 614 resolved as shift
WARNING: shift/reduce conflict for INT in state 614 resolved as shift
WARNING: shift/reduce conflict for LONG in state 614 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 614 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 614 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 614 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 616 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 623 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 629 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 629 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 629 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 629 resolved as shift
WARNING: shift/reduce conflict for INT in state 629 resolved as shift
WARNING: shift/reduce conflict for LONG in state 629 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 629 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 629 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 629 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 630 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 634 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 634 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 634 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 634 resolved as shift
WARNING: shift/reduce conflict for INT in state 634 resolved as shift
WARNING: shift/reduce conflict for LONG in state 634 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 634 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 634 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 634 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 637 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 637 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 637 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 637 resolved as shift
WARNING: shift/reduce conflict for INT in state 637 resolved as shift
WARNING: shift/reduce conflict for LONG in state 637 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 637 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 637 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 637 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 650 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 650 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 650 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 650 resolved as shift
WARNING: shift/reduce conflict for INT in state 650 resolved as shift
WARNING: shift/reduce conflict for LONG in state 650 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 650 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 650 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 650 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 662 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 667 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 667 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 667 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 667 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 667 resolved as shift
WARNING: shift/reduce conflict for INT in state 667 resolved as shift
WARNING: shift/reduce conflict for LONG in state 667 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 667 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 667 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 667 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 672 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 672 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 672 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 672 resolved as shift
WARNING: shift/reduce conflict for INT in state 672 resolved as shift
WARNING: shift/reduce conflict for LONG in state 672 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 672 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 672 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 672 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 673 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 673 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 673 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 673 resolved as shift
WARNING: shift/reduce conflict for INT in state 673 resolved as shift
WARNING: shift/reduce conflict for LONG in state 673 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 673 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 673 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 673 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 674 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 674 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 674 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 674 resolved as shift
WARNING: shift/reduce conflict for INT in state 674 resolved as shift
WARNING: shift/reduce conflict for LONG in state 674 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 674 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 674 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 674 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 677 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 677 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 677 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 677 resolved as shift
WARNING: shift/reduce conflict for INT in state 677 resolved as shift
WARNING: shift/reduce conflict for LONG in state 677 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 677 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 677 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 677 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 686 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 686 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 686 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 686 resolved as shift
WARNING: shift/reduce conflict for INT in state 686 resolved as shift
WARNING: shift/reduce conflict for LONG in state 686 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 686 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 686 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 686 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 691 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 691 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 691 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 691 resolved as shift
WARNING: shift/reduce conflict for INT in state 691 resolved as shift
WARNING: shift/reduce conflict for LONG in state 691 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 691 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 691 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 691 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 694 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 695 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 719 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 722 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 742 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 742 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 742 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 742 resolved as shift
WARNING: shift/reduce conflict for INT in state 742 resolved as shift
WARNING: shift/reduce conflict for LONG in state 742 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 742 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 742 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 742 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 748 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 756 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 756 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 756 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 756 resolved as shift
WARNING: shift/reduce conflict for INT in state 756 resolved as shift
WARNING: shift/reduce conflict for LONG in state 756 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 756 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 756 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 756 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 761 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 761 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 761 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 761 resolved as shift
WARNING: shift/reduce conflict for INT in state 761 resolved as shift
WARNING: shift/reduce conflict for LONG in state 761 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 761 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 761 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 761 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 763 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 763 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 763 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 763 resolved as shift
WARNING: shift/reduce conflict for INT in state 763 resolved as shift
WARNING: shift/reduce conflict for LONG in state 763 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 763 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 763 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 763 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 764 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 764 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 764 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 764 resolved as shift
WARNING: shift/reduce conflict for INT in state 764 resolved as shift
WARNING: shift/reduce conflict for LONG in state 764 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 764 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 764 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 764 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 771 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 786 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 786 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 786 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 786 resolved as shift
WARNING: shift/reduce conflict for INT in state 786 resolved as shift
WARNING: shift/reduce conflict for LONG in state 786 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 786 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 786 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 786 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 806 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 806 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 806 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 806 resolved as shift
WARNING: shift/reduce conflict for INT in state 806 resolved as shift
WARNING: shift/reduce conflict for LONG in state 806 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 806 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 806 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 806 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 821 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 829 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 834 resolved as shift
WARNING: shift/reduce conflict for THIS in state 834 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 834 resolved as shift
WARNING: shift/reduce conflict for NEW in state 834 resolved as shift
WARNING: shift/reduce conflict for BOOL_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for NULL_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for DECIMAL_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for HEX_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for OCTAL_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for BINARY_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for FLOAT_DEC_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for FLOAT_HEX_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for STRING_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for CHAR_LIT in state 834 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 834 resolved as shift
WARNING: shift/reduce conflict for VOID in state 834 resolved as shift
WARNING: shift/reduce conflict for SUPER in state 834 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 834 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 834 resolved as shift
WARNING: shift/reduce conflict for INT in state 834 resolved as shift
WARNING: shift/reduce conflict for LONG in state 834 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 834 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 834 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 834 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 834 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 846 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 846 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 846 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 846 resolved as shift
WARNING: shift/reduce conflict for INT in state 846 resolved as shift
WARNING: shift/reduce conflict for LONG in state 846 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 846 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 846 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 846 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 854 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 898 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 898 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 898 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 898 resolved as shift
WARNING: shift/reduce conflict for INT in state 898 resolved as shift
WARNING: shift/reduce conflict for LONG in state 898 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 898 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 898 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 898 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 920 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 920 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 921 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 923 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 923 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 923 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 923 resolved as shift
WARNING: shift/reduce conflict for INT in state 923 resolved as shift
WARNING: shift/reduce conflict for LONG in state 923 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 923 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 923 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 923 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 925 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 925 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 925 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 925 resolved as shift
WARNING: shift/reduce conflict for INT in state 925 resolved as shift
WARNING: shift/reduce conflict for LONG in state 925 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 925 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 925 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 925 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 926 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 926 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 926 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 926 resolved as shift
WARNING: shift/reduce conflict for INT in state 926 resolved as shift
WARNING: shift/reduce conflict for LONG in state 926 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 926 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 926 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 926 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 929 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 929 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 929 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 929 resolved as shift
WARNING: shift/reduce conflict for INT in state 929 resolved as shift
WARNING: shift/reduce conflict for LONG in state 929 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 929 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 929 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 929 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 946 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 946 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 946 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 946 resolved as shift
WARNING: shift/reduce conflict for INT in state 946 resolved as shift
WARNING: shift/reduce conflict for LONG in state 946 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 946 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 946 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 946 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 949 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 949 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 949 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 949 resolved as shift
WARNING: shift/reduce conflict for INT in state 949 resolved as shift
WARNING: shift/reduce conflict for LONG in state 949 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 949 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 949 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 949 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 951 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 952 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 952 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 952 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 952 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 952 resolved as shift
WARNING: shift/reduce conflict for INT in state 952 resolved as shift
WARNING: shift/reduce conflict for LONG in state 952 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 952 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 952 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 952 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 980 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 980 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 980 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 980 resolved as shift
WARNING: shift/reduce conflict for INT in state 980 resolved as shift
WARNING: shift/reduce conflict for LONG in state 980 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 980 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 980 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 980 resolved as shift
WARNING: shift/reduce conflict for ATRATE in state 985 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 987 resolved as shift
WARNING: shift/reduce conflict for CASE in state 1016 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 1016 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 1027 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1036 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1051 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1051 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1051 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1051 resolved as shift
WARNING: shift/reduce conflict for INT in state 1051 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1051 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1051 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1051 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1051 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1052 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1052 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1052 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1052 resolved as shift
WARNING: shift/reduce conflict for INT in state 1052 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1052 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1052 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1052 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1052 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1053 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1053 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1053 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1053 resolved as shift
WARNING: shift/reduce conflict for INT in state 1053 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1053 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1053 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1053 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1053 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1054 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1054 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1054 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1054 resolved as shift
WARNING: shift/reduce conflict for INT in state 1054 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1054 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1054 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1054 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1054 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1055 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1055 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1055 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1055 resolved as shift
WARNING: shift/reduce conflict for INT in state 1055 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1055 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1055 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1055 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1055 resolved as shift
WARNING: shift/reduce conflict for CASE in state 1057 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 1057 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1059 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 1059 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1059 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1059 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1059 resolved as shift
WARNING: shift/reduce conflict for INT in state 1059 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1059 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1059 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1059 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1059 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1061 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1061 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1061 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1061 resolved as shift
WARNING: shift/reduce conflict for INT in state 1061 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1061 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1061 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1061 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1061 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1070 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1070 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1070 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1070 resolved as shift
WARNING: shift/reduce conflict for INT in state 1070 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1070 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1070 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1070 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1070 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1071 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1071 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1071 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1071 resolved as shift
WARNING: shift/reduce conflict for INT in state 1071 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1071 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1071 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1071 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1071 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1072 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1072 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1072 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1072 resolved as shift
WARNING: shift/reduce conflict for INT in state 1072 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1072 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1072 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1072 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1072 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1075 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1075 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1075 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1075 resolved as shift
WARNING: shift/reduce conflict for INT in state 1075 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1075 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1075 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1075 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1075 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1076 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1076 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1076 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1076 resolved as shift
WARNING: shift/reduce conflict for INT in state 1076 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1076 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1076 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1076 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1076 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1118 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1118 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1118 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1118 resolved as shift
WARNING: shift/reduce conflict for INT in state 1118 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1118 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1118 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1118 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1118 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1119 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1119 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1119 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1119 resolved as shift
WARNING: shift/reduce conflict for INT in state 1119 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1119 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1119 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1119 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1119 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1120 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1120 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1120 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1120 resolved as shift
WARNING: shift/reduce conflict for INT in state 1120 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1120 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1120 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1120 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1120 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1127 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1127 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1127 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1127 resolved as shift
WARNING: shift/reduce conflict for INT in state 1127 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1127 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1127 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1127 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1127 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1128 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1128 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1128 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1128 resolved as shift
WARNING: shift/reduce conflict for INT in state 1128 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1128 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1128 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1128 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1128 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1131 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1131 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1131 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1131 resolved as shift
WARNING: shift/reduce conflict for INT in state 1131 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1131 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1131 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1131 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1131 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1132 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1132 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1132 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1132 resolved as shift
WARNING: shift/reduce conflict for INT in state 1132 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1132 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1132 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1132 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1132 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1136 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1136 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1136 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1136 resolved as shift
WARNING: shift/reduce conflict for INT in state 1136 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1136 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1136 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1136 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1136 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1150 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1150 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1150 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1150 resolved as shift
WARNING: shift/reduce conflict for INT in state 1150 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1150 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1150 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1150 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1150 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1151 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1151 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1151 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1151 resolved as shift
WARNING: shift/reduce conflict for INT in state 1151 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1151 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1151 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1151 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1151 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1152 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1152 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1152 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1152 resolved as shift
WARNING: shift/reduce conflict for INT in state 1152 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1152 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1152 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1152 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1152 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1160 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1160 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1160 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1160 resolved as shift
WARNING: shift/reduce conflict for INT in state 1160 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1160 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1160 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1160 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1160 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 1161 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 1161 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 1161 resolved as shift
WARNING: shift/reduce conflict for SHORT in state 1161 resolved as shift
WARNING: shift/reduce conflict for INT in state 1161 resolved as shift
WARNING: shift/reduce conflict for LONG in state 1161 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 1161 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 1161 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 1161 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 26
WARNING: reduce/reduce conflict in state 44 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 44
WARNING: reduce/reduce conflict in state 45 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 45
WARNING: reduce/reduce conflict in state 46 resolved using rule (InterfaceModifier -> PROTECTED)
WARNING: rejected rule (ClassModifier -> PROTECTED) in state 46
WARNING: reduce/reduce conflict in state 47 resolved using rule (InterfaceModifier -> PRIVATE)
WARNING: rejected rule (ClassModifier -> PRIVATE) in state 47
WARNING: reduce/reduce conflict in state 48 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (ClassModifier -> ABSTRACT) in state 48
WARNING: reduce/reduce conflict in state 49 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ClassModifier -> STATIC) in state 49
WARNING: reduce/reduce conflict in state 51 resolved using rule (InterfaceModifier -> STRICTFP)
WARNING: rejected rule (ClassModifier -> STRICTFP) in state 51
WARNING: reduce/reduce conflict in state 87 resolved using rule (ClassOrInterfaceType -> ClassType)
WARNING: rejected rule (InterfaceType -> ClassType) in state 87
WARNING: reduce/reduce conflict in state 111 resolved using rule (ExpressionName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 111
WARNING: reduce/reduce conflict in state 168 resolved using rule (ClassOrInterfaceType -> ClassType)
WARNING: rejected rule (InterfaceType -> ClassType) in state 168
WARNING: reduce/reduce conflict in state 181 resolved using rule (TypeName -> PackageOrTypeName PERIOD IDENT)
WARNING: rejected rule (PackageOrTypeName -> PackageOrTypeName PERIOD IDENT) in state 181
WARNING: reduce/reduce conflict in state 188 resolved using rule (ClassOrInterfaceType -> ClassType)
WARNING: rejected rule (InterfaceType -> ClassType) in state 188
WARNING: reduce/reduce conflict in state 211 resolved using rule (ClassOrInterfaceType -> ClassType)
WARNING: rejected rule (InterfaceType -> ClassType) in state 211
WARNING: reduce/reduce conflict in state 212 resolved using rule (ExpressionName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 212
WARNING: reduce/reduce conflict in state 234 resolved using rule (ExpressionName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 234
WARNING: reduce/reduce conflict in state 277 resolved using rule (ClassOrInterfaceType -> ClassType)
WARNING: rejected rule (InterfaceType -> ClassType) in state 277
WARNING: reduce/reduce conflict in state 279 resolved using rule (ZooTypeArguments -> empty)
WARNING: rejected rule (AnnotationS -> empty) in state 279
WARNING: reduce/reduce conflict in state 291 resolved using rule (empty -> <empty>)
WARNING: rejected rule (TypeVariable -> AnnotationS IDENT) in state 291
WARNING: reduce/reduce conflict in state 302 resolved using rule (FieldModifierS -> empty)
WARNING: rejected rule (ConstructorModifierS -> empty) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (MethodModifierS -> empty)
WARNING: rejected rule (ConstructorModifierS -> empty) in state 302
WARNING: reduce/reduce conflict in state 302 resolved using rule (FieldModifierS -> empty)
WARNING: rejected rule (MethodModifierS -> empty) in state 302
WARNING: reduce/reduce conflict in state 313 resolved using rule (FieldModifier -> STATIC)
WARNING: rejected rule (MethodModifier -> STATIC) in state 313
WARNING: reduce/reduce conflict in state 313 resolved using rule (ClassModifier -> STATIC)
WARNING: rejected rule (FieldModifier -> STATIC) in state 313
WARNING: reduce/reduce conflict in state 313 resolved using rule (ClassModifier -> STATIC)
WARNING: rejected rule (MethodModifier -> STATIC) in state 313
WARNING: reduce/reduce conflict in state 313 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ClassModifier -> STATIC) in state 313
WARNING: reduce/reduce conflict in state 320 resolved using rule (FieldModifier -> Annotation)
WARNING: rejected rule (ConstructorModifier -> Annotation) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (FieldModifier -> Annotation)
WARNING: rejected rule (MethodModifier -> Annotation) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (MethodModifier -> Annotation)
WARNING: rejected rule (ConstructorModifier -> Annotation) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (ClassModifier -> Annotation)
WARNING: rejected rule (FieldModifier -> Annotation) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (ClassModifier -> Annotation)
WARNING: rejected rule (MethodModifier -> Annotation) in state 320
WARNING: reduce/reduce conflict in state 320 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 320
WARNING: reduce/reduce conflict in state 321 resolved using rule (FieldModifier -> PUBLIC)
WARNING: rejected rule (ConstructorModifier -> PUBLIC) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (FieldModifier -> PUBLIC)
WARNING: rejected rule (MethodModifier -> PUBLIC) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (MethodModifier -> PUBLIC)
WARNING: rejected rule (ConstructorModifier -> PUBLIC) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (ClassModifier -> PUBLIC)
WARNING: rejected rule (FieldModifier -> PUBLIC) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (ClassModifier -> PUBLIC)
WARNING: rejected rule (MethodModifier -> PUBLIC) in state 321
WARNING: reduce/reduce conflict in state 321 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 321
WARNING: reduce/reduce conflict in state 322 resolved using rule (FieldModifier -> PROTECTED)
WARNING: rejected rule (ConstructorModifier -> PROTECTED) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (FieldModifier -> PROTECTED)
WARNING: rejected rule (MethodModifier -> PROTECTED) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (MethodModifier -> PROTECTED)
WARNING: rejected rule (ConstructorModifier -> PROTECTED) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (ClassModifier -> PROTECTED)
WARNING: rejected rule (FieldModifier -> PROTECTED) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (ClassModifier -> PROTECTED)
WARNING: rejected rule (MethodModifier -> PROTECTED) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (InterfaceModifier -> PROTECTED)
WARNING: rejected rule (ClassModifier -> PROTECTED) in state 322
WARNING: reduce/reduce conflict in state 323 resolved using rule (FieldModifier -> PRIVATE)
WARNING: rejected rule (ConstructorModifier -> PRIVATE) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (FieldModifier -> PRIVATE)
WARNING: rejected rule (MethodModifier -> PRIVATE) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (MethodModifier -> PRIVATE)
WARNING: rejected rule (ConstructorModifier -> PRIVATE) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (ClassModifier -> PRIVATE)
WARNING: rejected rule (FieldModifier -> PRIVATE) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (ClassModifier -> PRIVATE)
WARNING: rejected rule (MethodModifier -> PRIVATE) in state 323
WARNING: reduce/reduce conflict in state 323 resolved using rule (InterfaceModifier -> PRIVATE)
WARNING: rejected rule (ClassModifier -> PRIVATE) in state 323
WARNING: reduce/reduce conflict in state 324 resolved using rule (FieldModifier -> FINAL)
WARNING: rejected rule (MethodModifier -> FINAL) in state 324
WARNING: reduce/reduce conflict in state 324 resolved using rule (ClassModifier -> FINAL)
WARNING: rejected rule (FieldModifier -> FINAL) in state 324
WARNING: reduce/reduce conflict in state 324 resolved using rule (ClassModifier -> FINAL)
WARNING: rejected rule (MethodModifier -> FINAL) in state 324
WARNING: reduce/reduce conflict in state 327 resolved using rule (ClassModifier -> ABSTRACT)
WARNING: rejected rule (MethodModifier -> ABSTRACT) in state 327
WARNING: reduce/reduce conflict in state 327 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (ClassModifier -> ABSTRACT) in state 327
WARNING: reduce/reduce conflict in state 330 resolved using rule (ClassModifier -> STRICTFP)
WARNING: rejected rule (MethodModifier -> STRICTFP) in state 330
WARNING: reduce/reduce conflict in state 330 resolved using rule (InterfaceModifier -> STRICTFP)
WARNING: rejected rule (ClassModifier -> STRICTFP) in state 330
WARNING: reduce/reduce conflict in state 351 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 351
WARNING: reduce/reduce conflict in state 351 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (ZooVariableModifier -> empty) in state 351
WARNING: reduce/reduce conflict in state 352 resolved using rule (ExpressionName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ExpressionName -> IDENT) in state 352
WARNING: reduce/reduce conflict in state 357 resolved using rule (empty -> <empty>)
WARNING: rejected rule (VariableModifier -> Annotation) in state 357
WARNING: reduce/reduce conflict in state 361 resolved using rule (empty -> <empty>)
WARNING: rejected rule (ZooVariableModifier -> VariableModifier) in state 361
WARNING: reduce/reduce conflict in state 369 resolved using rule (empty -> <empty>)
WARNING: rejected rule (TypeVariable -> AnnotationS IDENT) in state 369
WARNING: reduce/reduce conflict in state 430 resolved using rule (ExpressionName -> AmbiguousName PERIOD IDENT)
WARNING: rejected rule (AmbiguousName -> AmbiguousName PERIOD IDENT) in state 430
WARNING: reduce/reduce conflict in state 466 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 466
WARNING: reduce/reduce conflict in state 480 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 480
WARNING: reduce/reduce conflict in state 480 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 480
WARNING: reduce/reduce conflict in state 480 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 480
WARNING: reduce/reduce conflict in state 511 resolved using rule (ClassModifier -> Annotation)
WARNING: rejected rule (VariableModifier -> Annotation) in state 511
WARNING: reduce/reduce conflict in state 511 resolved using rule (empty -> <empty>)
WARNING: rejected rule (VariableModifier -> Annotation) in state 511
WARNING: reduce/reduce conflict in state 512 resolved using rule (ClassModifier -> FINAL)
WARNING: rejected rule (VariableModifier -> FINAL) in state 512
WARNING: reduce/reduce conflict in state 539 resolved using rule (UnannClassOrInterfaceType -> UnannClassType)
WARNING: rejected rule (UnannInterfaceType -> UnannClassType) in state 539
WARNING: reduce/reduce conflict in state 541 resolved using rule (empty -> <empty>)
WARNING: rejected rule (UnannTypeVariable -> IDENT) in state 541
WARNING: reduce/reduce conflict in state 591 resolved using rule (UnannPrimitiveType -> NumericType)
WARNING: rejected rule (PrimitiveType -> AnnotationS NumericType) in state 591
WARNING: reduce/reduce conflict in state 592 resolved using rule (UnannPrimitiveType -> BOOLEAN)
WARNING: rejected rule (PrimitiveType -> AnnotationS BOOLEAN) in state 592
WARNING: reduce/reduce conflict in state 593 resolved using rule (UnannTypeVariable -> IDENT)
WARNING: rejected rule (TypeVariable -> AnnotationS IDENT) in state 593
WARNING: reduce/reduce conflict in state 593 resolved using rule (empty -> <empty>)
WARNING: rejected rule (TypeVariable -> AnnotationS IDENT) in state 593
WARNING: reduce/reduce conflict in state 593 resolved using rule (empty -> <empty>)
WARNING: rejected rule (UnannTypeVariable -> IDENT) in state 593
WARNING: reduce/reduce conflict in state 627 resolved using rule (ZooDims -> empty)
WARNING: rejected rule (AnnotationS -> empty) in state 627
WARNING: reduce/reduce conflict in state 669 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 669
WARNING: reduce/reduce conflict in state 723 resolved using rule (ConstantModifierS -> empty)
WARNING: rejected rule (AnnotationTypeElementModifierS -> empty) in state 723
WARNING: reduce/reduce conflict in state 733 resolved using rule (ConstantModifier -> Annotation)
WARNING: rejected rule (AnnotationTypeElementModifier -> Annotation) in state 733
WARNING: reduce/reduce conflict in state 733 resolved using rule (ConstantModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 733
WARNING: reduce/reduce conflict in state 733 resolved using rule (AnnotationTypeElementModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 733
WARNING: reduce/reduce conflict in state 733 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ConstantModifier -> Annotation) in state 733
WARNING: reduce/reduce conflict in state 733 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 733
WARNING: reduce/reduce conflict in state 733 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (AnnotationTypeElementModifier -> Annotation) in state 733
WARNING: reduce/reduce conflict in state 734 resolved using rule (ConstantModifier -> PUBLIC)
WARNING: rejected rule (AnnotationTypeElementModifier -> PUBLIC) in state 734
WARNING: reduce/reduce conflict in state 734 resolved using rule (ConstantModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 734
WARNING: reduce/reduce conflict in state 734 resolved using rule (AnnotationTypeElementModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 734
WARNING: reduce/reduce conflict in state 734 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ConstantModifier -> PUBLIC) in state 734
WARNING: reduce/reduce conflict in state 734 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 734
WARNING: reduce/reduce conflict in state 734 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (AnnotationTypeElementModifier -> PUBLIC) in state 734
WARNING: reduce/reduce conflict in state 735 resolved using rule (AnnotationTypeElementModifier -> ABSTRACT)
WARNING: rejected rule (ClassModifier -> ABSTRACT) in state 735
WARNING: reduce/reduce conflict in state 735 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (AnnotationTypeElementModifier -> ABSTRACT) in state 735
WARNING: reduce/reduce conflict in state 735 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (ClassModifier -> ABSTRACT) in state 735
WARNING: reduce/reduce conflict in state 736 resolved using rule (ConstantModifier -> STATIC)
WARNING: rejected rule (ClassModifier -> STATIC) in state 736
WARNING: reduce/reduce conflict in state 736 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ConstantModifier -> STATIC) in state 736
WARNING: reduce/reduce conflict in state 736 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ClassModifier -> STATIC) in state 736
WARNING: reduce/reduce conflict in state 737 resolved using rule (ConstantModifier -> FINAL)
WARNING: rejected rule (ClassModifier -> FINAL) in state 737
WARNING: reduce/reduce conflict in state 744 resolved using rule (UnannClassType -> IDENT ZooTypeArguments)
WARNING: rejected rule (ClassType -> AnnotationS IDENT ZooTypeArguments) in state 744
WARNING: reduce/reduce conflict in state 753 resolved using rule (ZooVariableModifier -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 753
WARNING: reduce/reduce conflict in state 767 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (AnnotationSLBRACERBRACES -> empty) in state 767
WARNING: reduce/reduce conflict in state 826 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 826
WARNING: reduce/reduce conflict in state 829 resolved using rule (empty -> <empty>)
WARNING: rejected rule (VariableModifier -> Annotation) in state 829
WARNING: reduce/reduce conflict in state 831 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 831
WARNING: reduce/reduce conflict in state 831 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 831
WARNING: reduce/reduce conflict in state 831 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 831
WARNING: reduce/reduce conflict in state 837 resolved using rule (ClassOrInterfaceType -> ClassType)
WARNING: rejected rule (InterfaceType -> ClassType) in state 837
WARNING: reduce/reduce conflict in state 855 resolved using rule (ConstantModifierS -> empty)
WARNING: rejected rule (InterfaceMethodModifierS -> empty) in state 855
WARNING: reduce/reduce conflict in state 863 resolved using rule (ConstantModifier -> Annotation)
WARNING: rejected rule (InterfaceMethodModifier -> Annotation) in state 863
WARNING: reduce/reduce conflict in state 863 resolved using rule (ConstantModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 863
WARNING: reduce/reduce conflict in state 863 resolved using rule (InterfaceMethodModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 863
WARNING: reduce/reduce conflict in state 863 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ConstantModifier -> Annotation) in state 863
WARNING: reduce/reduce conflict in state 863 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (ClassModifier -> Annotation) in state 863
WARNING: reduce/reduce conflict in state 863 resolved using rule (InterfaceModifier -> Annotation)
WARNING: rejected rule (InterfaceMethodModifier -> Annotation) in state 863
WARNING: reduce/reduce conflict in state 864 resolved using rule (ConstantModifier -> PUBLIC)
WARNING: rejected rule (InterfaceMethodModifier -> PUBLIC) in state 864
WARNING: reduce/reduce conflict in state 864 resolved using rule (ConstantModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 864
WARNING: reduce/reduce conflict in state 864 resolved using rule (InterfaceMethodModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 864
WARNING: reduce/reduce conflict in state 864 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ConstantModifier -> PUBLIC) in state 864
WARNING: reduce/reduce conflict in state 864 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (ClassModifier -> PUBLIC) in state 864
WARNING: reduce/reduce conflict in state 864 resolved using rule (InterfaceModifier -> PUBLIC)
WARNING: rejected rule (InterfaceMethodModifier -> PUBLIC) in state 864
WARNING: reduce/reduce conflict in state 865 resolved using rule (ConstantModifier -> STATIC)
WARNING: rejected rule (InterfaceMethodModifier -> STATIC) in state 865
WARNING: reduce/reduce conflict in state 865 resolved using rule (ConstantModifier -> STATIC)
WARNING: rejected rule (ClassModifier -> STATIC) in state 865
WARNING: reduce/reduce conflict in state 865 resolved using rule (InterfaceMethodModifier -> STATIC)
WARNING: rejected rule (ClassModifier -> STATIC) in state 865
WARNING: reduce/reduce conflict in state 865 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ConstantModifier -> STATIC) in state 865
WARNING: reduce/reduce conflict in state 865 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (ClassModifier -> STATIC) in state 865
WARNING: reduce/reduce conflict in state 865 resolved using rule (InterfaceModifier -> STATIC)
WARNING: rejected rule (InterfaceMethodModifier -> STATIC) in state 865
WARNING: reduce/reduce conflict in state 866 resolved using rule (InterfaceMethodModifier -> ABSTRACT)
WARNING: rejected rule (ClassModifier -> ABSTRACT) in state 866
WARNING: reduce/reduce conflict in state 866 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (InterfaceMethodModifier -> ABSTRACT) in state 866
WARNING: reduce/reduce conflict in state 866 resolved using rule (InterfaceModifier -> ABSTRACT)
WARNING: rejected rule (ClassModifier -> ABSTRACT) in state 866
WARNING: reduce/reduce conflict in state 868 resolved using rule (InterfaceMethodModifier -> STRICTFP)
WARNING: rejected rule (ClassModifier -> STRICTFP) in state 868
WARNING: reduce/reduce conflict in state 868 resolved using rule (InterfaceModifier -> STRICTFP)
WARNING: rejected rule (InterfaceMethodModifier -> STRICTFP) in state 868
WARNING: reduce/reduce conflict in state 868 resolved using rule (InterfaceModifier -> STRICTFP)
WARNING: rejected rule (ClassModifier -> STRICTFP) in state 868
WARNING: reduce/reduce conflict in state 954 resolved using rule (ZooTypeArguments -> empty)
WARNING: rejected rule (ZooExplicitConstructorInvocation -> empty) in state 954
WARNING: reduce/reduce conflict in state 954 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (ZooExplicitConstructorInvocation -> empty) in state 954
WARNING: reduce/reduce conflict in state 1008 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 1008
WARNING: reduce/reduce conflict in state 1008 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 1008
WARNING: reduce/reduce conflict in state 1008 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 1008
WARNING: reduce/reduce conflict in state 1066 resolved using rule (UnannClassOrInterfaceType -> UnannClassType)
WARNING: rejected rule (UnannInterfaceType -> UnannClassType) in state 1066
WARNING: reduce/reduce conflict in state 1094 resolved using rule (AnnotationS -> empty)
WARNING: rejected rule (VariableModifierS -> empty) in state 1094
WARNING: reduce/reduce conflict in state 1099 resolved using rule (ExpressionName -> IDENT)
WARNING: rejected rule (EnumConstantName -> IDENT) in state 1099
WARNING: reduce/reduce conflict in state 1099 resolved using rule (ExpressionName -> IDENT)
WARNING: rejected rule (AmbiguousName -> IDENT) in state 1099
WARNING: reduce/reduce conflict in state 1099 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (ExpressionName -> IDENT) in state 1099
WARNING: reduce/reduce conflict in state 1099 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (PackageOrTypeName -> IDENT) in state 1099
WARNING: reduce/reduce conflict in state 1126 resolved using rule (ClassOrInterfaceType -> ClassType)
WARNING: rejected rule (InterfaceType -> ClassType) in state 1126
WARNING: Rule (PackageOrTypeName -> IDENT) is never reduced
WARNING: Rule (AmbiguousName -> IDENT) is never reduced
WARNING: Rule (PackageOrTypeName -> PackageOrTypeName PERIOD IDENT) is never reduced
WARNING: Rule (TypeVariable -> AnnotationS IDENT) is never reduced
WARNING: Rule (AmbiguousName -> AmbiguousName PERIOD IDENT) is never reduced
WARNING: Rule (UnannInterfaceType -> UnannClassType) is never reduced
WARNING: Rule (UnannTypeVariable -> IDENT) is never reduced
WARNING: Rule (EnumConstantName -> IDENT) is never reduced
