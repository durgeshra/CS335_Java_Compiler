
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startABSTRACT ADD ADD_ASSIGN AND AND_ASSIGN ARROW ASSERT ASSIGN ATRATE BINARY_LIT BOOLEAN BOOL_LIT BREAK BYTE CASE CATCH CHAR CHAR_LIT CLASS COLON COLON_SEP COMMA COMMENT CONST CONTINUE DEC DECIMAL_LIT DEFAULT DO DOUBLE ELLIPSIS ELSE ENUM EQL EXTENDS FINAL FINALLY FLOAT FLOAT_DEC_LIT FLOAT_HEX_LIT FOR GEQ GOTO GTR HEX_LIT IDENT IF IMPLEMENTS IMPORT INC INSTANCEOF INT INTERFACE LAND LBRACE LBRACK LEQ LNOT LONG LOR LPAREN LSS MUL MUL_ASSIGN NATIVE NEQ NEW NOT NULL_LIT OCTAL_LIT OR OR_ASSIGN PACKAGE PERIOD PRIVATE PROTECTED PUBLIC QUES QUO QUO_ASSIGN RBRACE RBRACK REM REM_ASSIGN RETURN RPAREN SEMICOLON SHL SHL_ASSIGN SHORT SHR SHR_ASSIGN SHR_UN SHR_UN_ASSIGN STATIC STRICTFP STRING_LIT SUB SUB_ASSIGN SUPER SWITCH SYNCHRONIZED THIS THROW THROWS TRANSIENT TRY UNCLOSED_CHAR UNCLOSED_STR VOID VOLATILE WHILE XOR XOR_ASSIGNempty : Literal : BOOL_LIT\n        | NULL_LIT\n        | DECIMAL_LIT\n        | HEX_LIT\n        | OCTAL_LIT\n        | BINARY_LIT\n        | FLOAT_DEC_LIT\n        | FLOAT_HEX_LIT\n        | STRING_LIT\n        | CHAR_LITInterfaceDeclaration : NormalInterfaceDeclaration\n                           | AnnotationTypeDeclarationNormalInterfaceDeclaration :  CommonModifierS INTERFACE IDENT TypeParameters ExtendsInterfaces InterfaceBody\n                             | CommonModifierS INTERFACE IDENT TypeParameters InterfaceBody\n                              | CommonModifierS INTERFACE IDENT ExtendsInterfaces InterfaceBody\n                               | CommonModifierS INTERFACE IDENT InterfaceBody\n                                | INTERFACE IDENT TypeParameters ExtendsInterfaces InterfaceBody\n                            | INTERFACE IDENT TypeParameters InterfaceBody\n                             | INTERFACE IDENT ExtendsInterfaces InterfaceBody\n                              | INTERFACE IDENT InterfaceBody\n    ExtendsInterfaces : EXTENDS InterfaceTypeListInterfaceBody : lbrace InterfaceMemberDeclarationS rbrace  InterfaceMemberDeclarationS : InterfaceMemberDeclarationS InterfaceMemberDeclaration\n                                    | InterfaceMemberDeclarationS SEMICOLON\n                                    | empty InterfaceMemberDeclaration : ConstantDeclaration\n                                 | InterfaceMethodDeclaration\n                                 | ClassDeclaration\n                                 | InterfaceDeclarationConstantDeclaration : CommonModifierS UnannType VariableDeclaratorList SEMICOLON\n                            | CommonModifierS NumericType VariableDeclaratorList SEMICOLON\n                            | CommonModifierS BOOLEAN VariableDeclaratorList SEMICOLON\n                            | CommonModifierS IDENT VariableDeclaratorList SEMICOLON\n                            | UnannType VariableDeclaratorList SEMICOLON\n                            | NumericType VariableDeclaratorList SEMICOLON\n                            | BOOLEAN VariableDeclaratorList SEMICOLON\n                            | IDENT VariableDeclaratorList SEMICOLON\n                            | CommonModifierS UnannType IDENT SEMICOLON\n                            | CommonModifierS NumericType IDENT SEMICOLON\n                            | CommonModifierS BOOLEAN IDENT SEMICOLON\n                            | CommonModifierS IDENT IDENT SEMICOLON\n                            | UnannType IDENT SEMICOLON\n                            | NumericType IDENT SEMICOLON\n                            | BOOLEAN IDENT SEMICOLON\n                            | IDENT IDENT SEMICOLONInterfaceMethodDeclaration : CommonModifierS MethodHeader MethodBody\n                                |  MethodHeader MethodBody\n                                | CommonModifierS MethodHeader SEMICOLON\n                                |  MethodHeader SEMICOLONAnnotationTypeDeclaration : CommonModifierS ATRATE INTERFACE IDENT AnnotationTypeBody\n                            | ATRATE INTERFACE IDENT AnnotationTypeBodyAnnotationTypeBody :  lbrace AnnotationTypeMemberDeclarationS rbraceAnnotationTypeMemberDeclarationS : AnnotationTypeMemberDeclarationS AnnotationTypeMemberDeclaration\n                        | AnnotationTypeMemberDeclarationS SEMICOLON\n                         | emptyAnnotationTypeMemberDeclaration : AnnotationTypeElementDeclaration\n                                        | ConstantDeclaration\n                                        | ClassDeclaration\n                                        | InterfaceDeclarationAnnotationTypeElementDeclaration :  CommonModifierS UnannType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                    | CommonModifierS NumericType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                    | CommonModifierS BOOLEAN IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                    |  CommonModifierS IDENT IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                    |    CommonModifierS UnannType IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |    CommonModifierS NumericType IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |    CommonModifierS BOOLEAN IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |  CommonModifierS IDENT IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |    CommonModifierS UnannType IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |    CommonModifierS NumericType IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |    CommonModifierS BOOLEAN IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |  CommonModifierS IDENT IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |    CommonModifierS UnannType IDENT LPAREN RPAREN SEMICOLON\n                                    |    CommonModifierS NumericType IDENT LPAREN RPAREN SEMICOLON\n                                    |    CommonModifierS BOOLEAN IDENT LPAREN RPAREN SEMICOLON\n                                    |  CommonModifierS IDENT IDENT LPAREN RPAREN SEMICOLON\n                                    | UnannType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                    | NumericType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                    | BOOLEAN IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                        |  IDENT IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON\n                                    |    UnannType IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |    NumericType IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |    BOOLEAN IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |  IDENT IDENT LPAREN RPAREN  DefaultValue SEMICOLON\n                                    |    UnannType IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |    NumericType IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |    BOOLEAN IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |  IDENT IDENT LPAREN RPAREN Dims  SEMICOLON\n                                    |    UnannType IDENT LPAREN RPAREN SEMICOLON\n                                    |    NumericType IDENT LPAREN RPAREN SEMICOLON\n                                    |    BOOLEAN IDENT LPAREN RPAREN SEMICOLON\n                                    |  IDENT IDENT LPAREN RPAREN SEMICOLONDefaultValue : DEFAULT ElementValueAnnotation : NormalAnnotation\n                  | MarkerAnnotation\n                  | SingleElementAnnotationNormalAnnotation : ATRATE ExpressionName LPAREN ElementValuePairList RPAREN\n                        | ATRATE ExpressionName LPAREN  RPAREN ElementValuePairList : ElementValuePair COMMAElementValuePairSCOMMAElementValuePairS : COMMAElementValuePairS COMMA ElementValuePair\n                              | emptyElementValuePair : IDENT ASSIGN ElementValueElementValue : ConditionalExpression\n                    | ElementValueArrayInitializer\n                    | Annotation ElementValueArrayInitializer : lbrace ElementValueList COMMA rbrace\n    | lbrace ElementValueList  rbrace\n    | lbrace  COMMA rbrace\n    | lbrace   rbraceElementValueList : ElementValue  COMMAElementValueSCOMMAElementValueS : COMMAElementValueS COMMA ElementValue\n                         | empty MarkerAnnotation : ATRATE ExpressionNameSingleElementAnnotation : ATRATE ExpressionName LPAREN ElementValue RPARENArrayInitializer : lbrace VariableInitializerList COMMA rbrace\n    | lbrace VariableInitializerList rbrace\n    | lbrace COMMA rbrace\n    | lbrace rbrace lbrace : LBRACErbrace : RBRACEVariableInitializerList : VariableInitializer COMMAVariableInitializerSCOMMAVariableInitializerS : COMMAVariableInitializerS COMMA VariableInitializer\n                                 | emptyPrimary : PrimaryNoNewArray\n              | ArrayCreationExpression PrimaryNoNewArray : Literal\n                        | ClassLiteral\n                        | THIS\n                        | ExpressionName PERIOD THIS\n                        | LPAREN Expression RPAREN\n                        | ClassInstanceCreationExpression\n                        | FieldAccess\n                        | ArrayAccess\n                        | MethodInvocation\n                        | MethodReferenceClassLiteral : ExpressionName LBRACKRBRACKS PERIOD CLASS\n                   | NumericType LBRACKRBRACKS PERIOD CLASS\n                   | BOOLEAN LBRACKRBRACKS PERIOD CLASS\n                   | VOID PERIOD CLASS LBRACKRBRACKS : LBRACKRBRACKS LBRACK RBRACK\n                    | emptyClassInstanceCreationExpression : UnqualifiedClassInstanceCreationExpression\n                                      | ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression\n                                      | IDENT PERIOD UnqualifiedClassInstanceCreationExpression\n                                      | Primary PERIOD UnqualifiedClassInstanceCreationExpressionUnqualifiedClassInstanceCreationExpression : NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN ClassBody\n    | NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN  RPAREN ClassBody\n    | NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN\n    | NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN  RPAREN\n    | NEW ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN ClassBody\n    | NEW ClassOrInterfaceTypeToInstantiate LPAREN  RPAREN ClassBody\n    | NEW ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN\n    | NEW ClassOrInterfaceTypeToInstantiate LPAREN  RPARENClassOrInterfaceTypeToInstantiate : AnnotationS IDENT PERIODAnnotationSIDENTS TypeArgumentsOrDiamond\n                                        | AnnotationS IDENT PERIODAnnotationSIDENTS\n                                         |  IDENT PERIODAnnotationSIDENTS\n                                         |  IDENT PERIODAnnotationSIDENTS TypeArgumentsOrDiamondAnnotationS : AnnotationS Annotation\n                  | AnnotationPERIODAnnotationSIDENTS : PERIODAnnotationSIDENTS PERIOD AnnotationS IDENT\n                                | PERIODAnnotationSIDENTS PERIOD IDENT\n                              | emptyTypeArgumentsOrDiamond : TypeArguments\n                             | LSS GTRFieldAccess : Primary PERIOD IDENT\n                  | SUPER PERIOD IDENT\n                  | ExpressionName PERIOD SUPER PERIOD IDENTArrayAccess : ExpressionName LBRACK Expression RBRACK\n                    | IDENT LBRACK Expression RBRACK\n                  | PrimaryNoNewArray LBRACK Expression RBRACKMethodInvocation : IDENT LPAREN RPAREN\n                        | IDENT LPAREN ArgumentList RPAREN\n                       | ExpressionName PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN\n                       | ExpressionName PERIOD TypeArguments IDENT LPAREN  RPAREN\n                       | ExpressionName PERIOD  IDENT LPAREN ArgumentList RPAREN\n                       | ExpressionName PERIOD  IDENT LPAREN  RPAREN\n                       | IDENT PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN\n                       | IDENT PERIOD TypeArguments IDENT LPAREN  RPAREN\n                       | IDENT PERIOD  IDENT LPAREN ArgumentList RPAREN\n                       | IDENT PERIOD  IDENT LPAREN  RPAREN\n                       | Primary PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN\n                       | Primary PERIOD TypeArguments IDENT LPAREN  RPAREN\n                       | Primary PERIOD  IDENT LPAREN ArgumentList RPAREN\n                       | Primary PERIOD  IDENT LPAREN  RPAREN\n                       | SUPER PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN\n                       | SUPER PERIOD TypeArguments IDENT LPAREN  RPAREN\n                       | SUPER PERIOD  IDENT LPAREN ArgumentList RPAREN\n                       | SUPER PERIOD  IDENT LPAREN  RPAREN\n                       | ExpressionName PERIOD SUPER PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN\n                       | ExpressionName PERIOD SUPER PERIOD TypeArguments IDENT LPAREN  RPAREN\n                       | ExpressionName PERIOD SUPER PERIOD  IDENT LPAREN ArgumentList RPAREN\n                       | ExpressionName PERIOD SUPER PERIOD  IDENT LPAREN  RPAREN ArgumentList : Expression COMMAExpressionSCOMMAExpressionS : COMMAExpressionS COMMA Expression\n                       | emptyMethodReference : ExpressionName COLON_SEP TypeArguments IDENT\n                      | ReferenceType COLON_SEP TypeArguments IDENT\n                      | IDENT COLON_SEP TypeArguments IDENT\n                      | Primary COLON_SEP TypeArguments IDENT\n                      | SUPER COLON_SEP TypeArguments IDENT\n                      | ExpressionName PERIOD SUPER COLON_SEP TypeArguments IDENT\n                      | ClassType COLON_SEP TypeArguments NEW\n                      | TypeVariable COLON_SEP TypeArguments NEW\n                      | IDENT PERIOD IDENT COLON_SEP TypeArguments NEW\n                      | IDENT COLON_SEP TypeArguments NEW\n                      | ExpressionName COLON_SEP IDENT\n                    | ReferenceType COLON_SEP IDENT\n                    | IDENT COLON_SEP IDENT\n                    | Primary COLON_SEP IDENT\n                    | SUPER COLON_SEP IDENT\n                    | ExpressionName PERIOD SUPER COLON_SEP IDENT\n                    | ClassType COLON_SEP NEW\n                    | TypeVariable COLON_SEP NEW\n                    | IDENT PERIOD IDENT COLON_SEP NEW\n                    | IDENT COLON_SEP NEW\n                      | ArrayType COLON_SEP NEWArrayCreationExpression : NEW PrimitiveType DimExprs Dims\n                              | NEW BOOLEAN DimExprs Dims\n                              | NEW ClassType DimExprs Dims\n                              | NEW TypeVariable DimExprs Dims\n                              | NEW IDENT PERIOD IDENT DimExprs Dims\n                              | NEW IDENT DimExprs Dims\n                              | NEW PrimitiveType DimExprs\n                              | NEW BOOLEAN DimExprs\n                              | NEW ClassType DimExprs\n                              | NEW TypeVariable DimExprs\n                              | NEW IDENT PERIOD IDENT DimExprs\n                              | NEW IDENT DimExprs\n                              | NEW PrimitiveType Dims ArrayInitializer\n                              | NEW BOOLEAN Dims ArrayInitializer\n                              | NEW ClassType Dims ArrayInitializer\n                              | NEW TypeVariable Dims ArrayInitializer\n                              | NEW IDENT PERIOD IDENT Dims ArrayInitializer\n                              | NEW IDENT Dims ArrayInitializerDimExprs : DimExpr DimExprSDimExprS : DimExprS DimExpr\n               | emptyDimExpr : AnnotationS LBRACK Expression RBRACK\n                | LBRACK Expression RBRACKExpression : LambdaExpression\n                 | AssignmentExpressionLambdaExpression : LambdaParameters ARROW LambdaBodyLambdaParameters : IDENT\n                       | LPAREN FormalParameterList RPAREN\n                       | LPAREN  RPAREN\n                       | LPAREN InferredFormalParameterList RPARENInferredFormalParameterList : IDENT COMMAIDENTSCOMMAIDENTS : COMMAIDENTS COMMA IDENT\n                  | emptyLambdaBody : Expression\n                 | BlockAssignmentExpression : ConditionalExpression\n                           | AssignmentAssignment : LeftHandSide AssignmentOperator Expression\n                    | IDENT AssignmentOperator ExpressionLeftHandSide : ExpressionName\n                   | FieldAccess\n                   | ArrayAccessAssignmentOperator : ASSIGN\n                         | MUL_ASSIGN\n                         | QUO_ASSIGN\n                         | REM_ASSIGN\n                         | ADD_ASSIGN\n                         | SUB_ASSIGN\n                         | SHL_ASSIGN\n                         | SHR_ASSIGN\n                         | SHR_UN_ASSIGN\n                         | AND_ASSIGN\n                         | XOR_ASSIGN\n                         | OR_ASSIGNConditionalExpression : ConditionalOrExpression\n                            | ConditionalOrExpression QUES Expression COLON ConditionalExpression\n                            | ConditionalOrExpression QUES Expression COLON LambdaExpression ConditionalOrExpression : ConditionalAndExpression\n                              | ConditionalOrExpression LOR ConditionalAndExpressionConditionalAndExpression : InclusiveOrExpression\n                               | ConditionalAndExpression LAND InclusiveOrExpressionInclusiveOrExpression : ExclusiveOrExpression\n                            | InclusiveOrExpression OR ExclusiveOrExpressionExclusiveOrExpression : AndExpression\n                            | ExclusiveOrExpression XOR AndExpressionAndExpression : EqualityExpression\n                    | AndExpression AND EqualityExpressionEqualityExpression : RelationalExpression\n                         | EqualityExpression EQL RelationalExpression\n                         | EqualityExpression NEQ RelationalExpressionRelationalExpression : ShiftExpression\n                           | RelationalExpression LSS ShiftExpression\n                           | RelationalExpression GTR ShiftExpression\n                           | RelationalExpression LEQ ShiftExpression\n                           | RelationalExpression GEQ ShiftExpression\n                           | RelationalExpression INSTANCEOF ReferenceType\n                           | RelationalExpression INSTANCEOF IDENTShiftExpression : AdditiveExpression\n                      | ShiftExpression SHL AdditiveExpression\n                      | ShiftExpression SHR AdditiveExpression\n                      | ShiftExpression SHR_UN AdditiveExpressionAdditiveExpression : MultiplicativeExpression\n                         | AdditiveExpression ADD MultiplicativeExpression\n                         | AdditiveExpression SUB MultiplicativeExpression\n                          | AdditiveExpression ADD IDENT\n                          | AdditiveExpression SUB IDENTMultiplicativeExpression : UnaryExpression\n                               | MultiplicativeExpression MUL UnaryExpression\n                               | MultiplicativeExpression QUO UnaryExpression\n                               | MultiplicativeExpression REM UnaryExpression\n                               | MultiplicativeExpression MUL IDENT\n                               | MultiplicativeExpression QUO IDENT\n                               | MultiplicativeExpression REM IDENT\n                               | IDENT MUL UnaryExpression\n                               | IDENT QUO UnaryExpression\n                               | IDENT REM UnaryExpression\n                               | IDENT MUL IDENT\n                               | IDENT QUO IDENT\n                               | IDENT REM IDENTUnaryExpression : PreIncrementExpression\n                      | PreDecrementExpression\n                      | ADD UnaryExpression\n                      | SUB UnaryExpression\n                      | UnaryExpressionNotPlusMinusPreIncrementExpression : INC UnaryExpression\n                                | INC IDENTPreDecrementExpression : DEC UnaryExpression\n                                | DEC IDENTUnaryExpressionNotPlusMinus : PostfixExpression\n                                   | LNOT UnaryExpression\n                                   | NOT UnaryExpression\n                                   | LNOT IDENT\n                                   | NOT IDENT\n                                   | CastExpressionPostfixExpression : Primary\n                        | ExpressionName\n                        | PostIncrementExpression\n                        | PostDecrementExpressionPostIncrementExpression : PostfixExpression INC\n                                | IDENT INCPostDecrementExpression : PostfixExpression DEC\n                                | IDENT DECCastExpression : LPAREN PrimitiveType RPAREN UnaryExpression\n                     | LPAREN PrimitiveType RPAREN IDENT\n                     | LPAREN BOOLEAN RPAREN UnaryExpression\n                  | LPAREN BOOLEAN RPAREN IDENT\n                     | LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus\n                     | LPAREN ReferenceType AdditionalBoundS RPAREN IDENT\n                     | LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression\n                  | LPAREN IDENT AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus\n                  | LPAREN IDENT AdditionalBoundS RPAREN IDENT\n                  | LPAREN IDENT AdditionalBoundS RPAREN LambdaExpression\n                  | LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus\n                  | LPAREN ReferenceType RPAREN IDENT\n                  | LPAREN ReferenceType RPAREN LambdaExpression\n               | LPAREN IDENT RPAREN UnaryExpressionNotPlusMinus\n               | LPAREN IDENT RPAREN IDENT\n               | LPAREN IDENT RPAREN LambdaExpressionAdditionalBoundS : AdditionalBoundS AdditionalBound\n                       | AdditionalBoundConstantExpression : ExpressionCompilationUnit : ImportDeclarationS TypeDeclarationS\n                    | PackageDeclaration ImportDeclarationS TypeDeclarationSImportDeclarationS : ImportDeclarationS ImportDeclaration\n                          | emptyTypeDeclarationS : TypeDeclarationS TypeDeclaration\n                        | TypeDeclarationS SEMICOLON\n                          | emptyPackageDeclaration : PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLONPackageModifierS : PackageModifierS PackageModifier\n                          | emptyPERIODIDENTS : PERIODIDENTS PERIOD IDENT\n                   | emptyPackageModifier : AnnotationImportDeclaration : SingleTypeImportDeclaration\n                        | TypeImportOnDemandDeclaration\n                        | SingleStaticImportDeclaration\n                        | StaticImportOnDemandDeclarationSingleTypeImportDeclaration : IMPORT ExpressionName SEMICOLONTypeImportOnDemandDeclaration : IMPORT ExpressionName PERIOD MUL SEMICOLON\n                                     | IMPORT IDENT PERIOD MUL SEMICOLONSingleStaticImportDeclaration : IMPORT STATIC ExpressionName PERIOD IDENT SEMICOLONStaticImportOnDemandDeclaration : IMPORT STATIC ExpressionName PERIOD MUL SEMICOLONTypeDeclaration : ClassDeclaration\n                      | InterfaceDeclarationExpressionName : PERIOD IDENT\n                        | ExpressionName PERIOD IDENTClassDeclaration : NormalClassDeclaration\n                        | EnumDeclarationSuperClass : EXTENDS ClassType\n                    | EXTENDS TypeVariable\n                    | EXTENDS IDENT PERIOD IDENT\n                    | EXTENDS IDENT\n    NormalClassDeclaration : CommonModifierS CLASS IDENT TypeParameters\n                            | CommonModifierS CLASS IDENT\n                            | CLASS IDENT TypeParameters\n                            | CLASS IDENT\n                              | SuperClass Superinterfaces ClassBody\n                              | SuperClass  ClassBody\n                              | Superinterfaces ClassBody\n                              | ClassBodyTypeParameters : LSS TypeParameterList GTR\n    COMMMATypeParameterS : COMMMATypeParameterS COMMA TypeParameter\n                            | empty\n    TypeParameterList : TypeParameter COMMMATypeParameterS\n    Superinterfaces : IMPLEMENTS InterfaceTypeList\n    COMMAInterfaceTypeS : COMMA InterfaceTypeList\n                            | empty\n    InterfaceTypeList : ClassType COMMAInterfaceTypeS\n                    | TypeVariable COMMAInterfaceTypeS\n                    | IDENT PERIOD IDENT COMMAInterfaceTypeS\n                    | IDENT COMMAInterfaceTypeS\n    ClassBodyDeclarationS : ClassBodyDeclarationS ClassBodyDeclaration\n                            | ClassBodyDeclarationS SEMICOLON\n                             | empty\n    ClassBody : lbrace ClassBodyDeclarationS rbrace\n    ClassBodyDeclaration : ClassMemberDeclaration\n                            | Block\n                            | StaticInitializer\n                            | ConstructorDeclaration\n    ClassMemberDeclaration : FieldDeclaration\n                            | MethodDeclaration\n                            | ClassDeclaration\n                            | InterfaceDeclaration\n    FieldDeclaration : CommonModifierS UnannType VariableDeclaratorList SEMICOLON\n                        | CommonModifierS NumericType VariableDeclaratorList SEMICOLON\n                        | CommonModifierS BOOLEAN VariableDeclaratorList SEMICOLON\n                        | CommonModifierS IDENT VariableDeclaratorList SEMICOLON\n                        | UnannType VariableDeclaratorList SEMICOLON\n                        | NumericType VariableDeclaratorList SEMICOLON\n                        | BOOLEAN VariableDeclaratorList SEMICOLON\n                        | IDENT VariableDeclaratorList SEMICOLON\n                        | CommonModifierS UnannType IDENT SEMICOLON\n                        | CommonModifierS NumericType IDENT SEMICOLON\n                        | CommonModifierS BOOLEAN IDENT SEMICOLON\n                        | CommonModifierS IDENT IDENT SEMICOLON\n                        | UnannType IDENT SEMICOLON\n                        | NumericType IDENT SEMICOLON\n                        | BOOLEAN IDENT SEMICOLON\n                        | IDENT IDENT SEMICOLON\n                        COMMAVariableDeclaratorS : COMMAVariableDeclaratorS COMMA VariableDeclarator\n                            | COMMAVariableDeclaratorS COMMA IDENT\n                                | COMMA IDENT\n                                | COMMA VariableDeclarator\n    VariableDeclaratorList : VariableDeclarator COMMAVariableDeclaratorS\n                    | IDENT COMMAVariableDeclaratorS\n                    | VariableDeclarator\n    VariableDeclarator : VariableDeclaratorId ASSIGN VariableInitializer\n                        | IDENT ASSIGN VariableInitializer\n                        | VariableDeclaratorId\n    VariableDeclaratorId : IDENT DimsVariableInitializer : Expression\n                            | ArrayInitializer\n    UnannType : UnannReferenceType\n                | IDENT PERIOD IDENT\n    UnannReferenceType :  UnannClassType\n                        | UnannArrayType\n    UnannClassType : IDENT TypeArguments\n                        | UnannClassType PERIOD IDENT\n                        | UnannClassType PERIOD IDENT TypeArguments\n                        | UnannClassType PERIOD AnnotationS IDENT\n                        | UnannClassType PERIOD AnnotationS IDENT TypeArguments\n                        | IDENT PERIOD IDENT TypeArguments\n                        | IDENT PERIOD AnnotationS IDENT\n                        | IDENT PERIOD AnnotationS IDENT TypeArguments\n    UnannArrayType :  NumericType Dims\n                        | BOOLEAN Dims\n                        | UnannClassType Dims\n                        | IDENT PERIOD IDENT Dims\n                        | IDENT Dims\n    MethodDeclaration : CommonModifierS MethodHeader MethodBody\n                         | MethodHeader MethodBody\n                        | CommonModifierS MethodHeader SEMICOLON\n                        | MethodHeader SEMICOLON\n    MethodHeader : TypeParameters AnnotationS UnannType MethodDeclarator Throws\n                    | TypeParameters UnannType MethodDeclarator Throws\n                    | TypeParameters AnnotationS NumericType MethodDeclarator Throws\n                    | TypeParameters NumericType MethodDeclarator Throws\n                    | TypeParameters AnnotationS BOOLEAN MethodDeclarator Throws\n                    | TypeParameters BOOLEAN MethodDeclarator Throws\n                    | TypeParameters AnnotationS VOID MethodDeclarator Throws\n                    | TypeParameters VOID MethodDeclarator Throws\n                    | TypeParameters AnnotationS IDENT MethodDeclarator Throws\n                    | TypeParameters IDENT MethodDeclarator Throws\n                    | TypeParameters AnnotationS UnannType MethodDeclarator\n                    | TypeParameters UnannType MethodDeclarator\n                    | TypeParameters AnnotationS NumericType MethodDeclarator\n                    | TypeParameters NumericType MethodDeclarator\n                    | TypeParameters AnnotationS BOOLEAN MethodDeclarator\n                    | TypeParameters BOOLEAN MethodDeclarator\n                    | TypeParameters AnnotationS VOID MethodDeclarator\n                    | TypeParameters VOID MethodDeclarator\n                    | TypeParameters AnnotationS IDENT MethodDeclarator\n                    | TypeParameters IDENT MethodDeclarator\n                    | BOOLEAN MethodDeclarator Throws\n                    | BOOLEAN MethodDeclarator\n                    | IDENT MethodDeclarator Throws\n                    | IDENT MethodDeclarator\n                    | VOID MethodDeclarator Throws\n                    | VOID MethodDeclarator\n                    | UnannType MethodDeclarator\n                    | UnannType MethodDeclarator Throws\n                    | NumericType MethodDeclarator Throws\n                    | NumericType MethodDeclarator\n    MethodDeclarator : IDENT LPAREN FormalParameterList RPAREN\n                        | IDENT LPAREN RPAREN\n    FormalParameterList :  ReceiverParameter\n                            | FormalParameters COMMA FormalParameter\n                            | FormalParameter\n                            | FormalParameters\n    COMMAFormalParameterS : COMMAFormalParameterS COMMA FormalParameter\n                            | COMMA FormalParameter\n    FormalParameters : FormalParameter COMMAFormalParameterS\n                        | ReceiverParameter COMMAFormalParameterS\n                        | FormalParameter COMMA FormalParameter\n                        | ReceiverParameter COMMA FormalParameter\n    FormalParameter : CommonModifier UnannType VariableDeclaratorId\n                        | CommonModifier NumericType VariableDeclaratorId\n                        | CommonModifier BOOLEAN VariableDeclaratorId\n                        | CommonModifier IDENT VariableDeclaratorId\n                        | CommonModifier UnannType IDENT\n                        | CommonModifier NumericType IDENT\n                        | CommonModifier BOOLEAN IDENT\n                        | CommonModifier IDENT IDENT\n                        |  UnannType VariableDeclaratorId\n                        |  NumericType VariableDeclaratorId\n                        |  BOOLEAN VariableDeclaratorId\n                        |  IDENT VariableDeclaratorId\n                        |  UnannType IDENT\n                        |  NumericType IDENT\n                        |  BOOLEAN IDENT\n                        |  IDENT IDENT\n    ReceiverParameter : AnnotationS UnannType IDENT PERIOD THIS\n                            | AnnotationS NumericType IDENT PERIOD THIS\n                            | AnnotationS BOOLEAN IDENT PERIOD THIS\n                            | AnnotationS IDENT IDENT PERIOD THIS\n                            | UnannType IDENT PERIOD THIS\n                            | NumericType IDENT PERIOD THIS\n                            | BOOLEAN IDENT PERIOD THIS\n                            | IDENT IDENT PERIOD THIS\n                            | AnnotationS UnannType THIS\n                            | AnnotationS NumericType THIS\n                            | AnnotationS BOOLEAN THIS\n                            | AnnotationS IDENT THIS\n                            | UnannType THIS\n                            | NumericType THIS\n                            | BOOLEAN THIS\n                            | IDENT THIS\n    Throws :  THROWS ExceptionTypeList\n    COMMAExceptionTypeS : COMMAExceptionTypeS COMMA ExceptionType\n                    | COMMAExceptionTypeS COMMA IDENT\n                            | empty\n    ExceptionTypeList : ExceptionType COMMAExceptionTypeS\n                    | IDENT COMMAExceptionTypeS\n     ExceptionType :  ClassType\n                        | IDENT PERIOD IDENT\n                        | TypeVariable\n    MethodBody : Block\n    StaticInitializer : STATIC Block\n    ConstructorDeclaration : CommonModifierS ConstructorDeclarator ConstructorBody\n                                | CommonModifierS ConstructorDeclarator Throws ConstructorBody\n                                |  ConstructorDeclarator ConstructorBody\n                                |  ConstructorDeclarator Throws ConstructorBody\n    ConstructorDeclarator : TypeParameters IDENT LPAREN FormalParameterList RPAREN\n                            |  IDENT LPAREN FormalParameterList RPAREN\n                            | TypeParameters IDENT LPAREN  RPAREN\n                            |  IDENT LPAREN  RPAREN\n    ConstructorBody : lbrace  ExplicitConstructorInvocation BlockStatements  rbrace\n                        | lbrace  ExplicitConstructorInvocation SEMICOLON  rbrace\n                        | lbrace  ExplicitConstructorInvocation  rbrace\n                        | lbrace  BlockStatements  rbrace\n                        | lbrace  SEMICOLON  rbrace\n                        | lbrace  rbrace\n    ExplicitConstructorInvocation : TypeArguments THIS LPAREN ArgumentList RPAREN SEMICOLON\n                                    | TypeArguments THIS LPAREN  RPAREN SEMICOLON\n                                    |  THIS LPAREN ArgumentList RPAREN SEMICOLON\n                                    |  THIS LPAREN  RPAREN SEMICOLON\n                                    | TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    | TypeArguments SUPER LPAREN  RPAREN SEMICOLON\n                                    |  SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    |  SUPER LPAREN  RPAREN SEMICOLON\n                                    | ExpressionName PERIOD TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    | ExpressionName PERIOD  SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    | ExpressionName PERIOD TypeArguments SUPER LPAREN  RPAREN SEMICOLON\n                                    | ExpressionName PERIOD  SUPER LPAREN  RPAREN SEMICOLON\n                                    | IDENT PERIOD TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    | IDENT PERIOD  SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    | IDENT PERIOD TypeArguments SUPER LPAREN  RPAREN SEMICOLON\n                                    | IDENT PERIOD  SUPER LPAREN  RPAREN SEMICOLON\n                                    | Primary PERIOD TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    | Primary PERIOD TypeArguments SUPER LPAREN RPAREN SEMICOLON\n                                    | Primary PERIOD  SUPER LPAREN ArgumentList RPAREN SEMICOLON\n                                    | Primary PERIOD  SUPER LPAREN  RPAREN SEMICOLON\n    EnumDeclaration : CommonModifierS ENUM IDENT Superinterfaces EnumBody\n                    | CommonModifierS ENUM IDENT EnumBody\n                    |  ENUM IDENT Superinterfaces EnumBody\n                    |  ENUM IDENT EnumBody\n    EnumBody : lbrace EnumConstantList COMMA EnumBodyDeclarations  rbrace\n                | lbrace EnumConstantList COMMA   rbrace\n                | lbrace EnumConstantList  EnumBodyDeclarations  rbrace\n                | lbrace EnumConstantList    rbrace\n                | lbrace COMMA EnumBodyDeclarations  rbrace\n                | lbrace COMMA   rbrace\n                | lbrace  EnumBodyDeclarations  rbrace\n                | lbrace    rbrace\n    COMMAEnumConstantS : COMMAEnumConstantS COMMA EnumConstant\n                          | empty\n    EnumConstantList : EnumConstant COMMAEnumConstantS\n    EnumConstant : EnumConstantModifierS IDENT LPAREN RPAREN ClassBody\n    | EnumConstantModifierS IDENT LPAREN ArgumentList  RPAREN ClassBody\n    | EnumConstantModifierS IDENT  ClassBody\n    | EnumConstantModifierS IDENT LPAREN RPAREN\n    | EnumConstantModifierS IDENT LPAREN ArgumentList  RPAREN\n    | EnumConstantModifierS IDENT\n    EnumConstantModifierS : EnumConstantModifierS EnumConstantModifier\n                            | empty\n    EnumConstantModifier : Annotation\n    EnumBodyDeclarations : SEMICOLON ClassBodyDeclarationS\n    PrimitiveType : AnnotationS NumericType\n                     | NumericType\n                     | AnnotationS BOOLEANNumericType : IntegralType\n                   | FloatingPointTypeIntegralType : BYTE\n                    | SHORT\n                    | INT\n                    | LONG\n                    | CHARFloatingPointType : FLOAT\n                         | DOUBLEReferenceType : ExceptionType\n                     | ArrayTypeClassType : TypeVariable TypeArguments\n                 | IDENT TypeArguments\n                 | ClassType PERIOD TypeVariable TypeArguments\n                 | ClassType PERIOD IDENT TypeArguments\n                 | IDENT PERIOD TypeVariable TypeArguments\n                 | IDENT PERIOD IDENT TypeArguments\n                 | ClassType PERIOD TypeVariable\n                 | ClassType PERIOD IDENT\n                 | IDENT PERIOD TypeVariableTypeVariable : AnnotationS IDENTArrayType :  PrimitiveType Dims\n                | BOOLEAN Dims\n                 |  ClassType Dims\n                 |  IDENT PERIOD IDENT Dims\n                 |  TypeVariable Dims\n                 | IDENT DimsDims : lbrace rbrace AnnotationSLBRACERBRACES : AnnotationSLBRACERBRACES AnnotationS lbrace rbrace\n                                | AnnotationSLBRACERBRACES lbrace rbrace\n                                | empty TypeParameter :  TypeParameterModifierS IDENT TypeBound\n                    | TypeParameterModifierS IDENTTypeParameterModifierS : TypeParameterModifierS TypeParameterModifier\n                              | empty TypeParameterModifier : Annotation TypeBound : EXTENDS TypeVariable\n                 | EXTENDS IDENT\n                 | EXTENDS ClassType AdditionalBoundS\n                 | EXTENDS ClassType\n                 | EXTENDS TypeVariable AdditionalBoundS\n                 | EXTENDS IDENT PERIOD IDENT AdditionalBoundS\n                 | EXTENDS IDENT PERIOD IDENT\n                 | EXTENDS IDENT AdditionalBoundSAdditionalBound : AND ClassType\n                        | AND TypeVariable\n                        | AND IDENT PERIOD IDENT\n                        | AND IDENTTypeArguments : LSS TypeArgumentList GTR TypeArgumentList : TypeArgument COMMATypeArgumentS\n                        |  IDENT COMMATypeArgumentSCOMMATypeArgumentS : COMMATypeArgumentS COMMA TypeArgument\n                        | COMMATypeArgumentS COMMA IDENT\n                          | empty TypeArgument : ReferenceType\n                    | Wildcard Wildcard : AnnotationS QUES WildcardBounds\n                | AnnotationS QUES\n                | QUES WildcardBounds\n                | QUESWildcardBounds : EXTENDS ReferenceType\n                      | EXTENDS IDENT\n                      | SUPER ReferenceType\n                      | SUPER IDENTBlock : lbrace rbrace\n    | lbrace BlockStatements rbrace\n    | lbrace SEMICOLON rbrace\nBlockStatements : BlockStatement BlockStatements\n                        | SEMICOLON BlockStatements\n                        | BlockStatement SEMICOLON\n                        | BlockStatement\nBlockStatement : LocalVariableDeclarationStatement\n                    | ClassDeclaration\n                    | Statement\n                    LocalVariableDeclarationStatement : LocalVariableDeclaration SEMICOLON\nLocalVariableDeclaration : CommonModifierS UnannType VariableDeclaratorList\n                                | CommonModifierS NumericType VariableDeclaratorList\n                                | CommonModifierS BOOLEAN VariableDeclaratorList\n                                | CommonModifierS IDENT VariableDeclaratorList\n                                |  UnannType VariableDeclaratorList\n                                |  NumericType VariableDeclaratorList\n                                |  BOOLEAN VariableDeclaratorList\n                                |  IDENT VariableDeclaratorList\n                                | CommonModifierS UnannType IDENT\n                                | CommonModifierS NumericType IDENT\n                                | CommonModifierS BOOLEAN IDENT\n                                | CommonModifierS IDENT IDENT\n                                |  UnannType IDENT\n                                |  NumericType IDENT\n                                |  BOOLEAN IDENT\n                                |  IDENT IDENT\nStatement : IfThenStatement\n        StatementNoShortIf : StatementWithoutTrailingSubstatement\n| LabeledStatementNoShortIf\n| IfThenElseStatementNoShortIf\n| WhileStatementNoShortIf\n| ForStatementNoShortIf\nStatementWithoutTrailingSubstatement : Block\n            | ExpressionStatement\n            | AssertStatement\n            | SwitchStatement\n            | DoStatement\n            | BreakStatement\n            | ContinueStatement\n            | ReturnStatement\n            | SynchronizedStatement\n            | ThrowStatement\n            | TryStatement\n            LabeledStatement : IDENT  COLON  Statement\n                    | IDENT COLON SEMICOLON\nLabeledStatementNoShortIf : IDENT  COLON  StatementNoShortIf\n                        | IDENT COLON SEMICOLON\nExpressionStatement : StatementExpression SEMICOLON\nStatementExpression : Assignment\n| PreIncrementExpression\n| PreDecrementExpression\n| PostIncrementExpression\n| PostDecrementExpression\n| MethodInvocation\n| ClassInstanceCreationExpression\nIfThenStatement : IF LPAREN Expression RPAREN Statement\n        | IF LPAREN Expression RPAREN SEMICOLON\nIfThenElseStatement : IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement\n            | IF LPAREN Expression RPAREN SEMICOLON ELSE Statement\n            | IF LPAREN Expression RPAREN StatementNoShortIf ELSE SEMICOLON\n            | IF LPAREN Expression RPAREN SEMICOLON ELSE SEMICOLON\nIfThenElseStatementNoShortIf : IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf\n        | IF LPAREN Expression RPAREN SEMICOLON ELSE StatementNoShortIf\n        | IF LPAREN Expression RPAREN StatementNoShortIf ELSE SEMICOLON\n        | IF LPAREN Expression RPAREN SEMICOLON ELSE SEMICOLON\nAssertStatement : ASSERT Expression SEMICOLON\n| ASSERT Expression  COLON  Expression SEMICOLON\nSwitchStatement : SWITCH LPAREN Expression RPAREN SwitchBlock\nSwitchBlock : lbrace SwitchBlockStatementGroupS SwitchLabelS rbrace\nSwitchBlockStatementGroupS : SwitchBlockStatementGroupS SwitchBlockStatementGroup\n| emptySwitchBlockStatementGroup : SwitchLabels BlockStatements\n                                    | SwitchLabels SEMICOLON\nSwitchLabels : SwitchLabel SwitchLabelS\nSwitchLabelS : SwitchLabelS SwitchLabel\n| emptySwitchLabel : CASE ConstantExpression  COLON\n    | CASE IDENT COLON\n    | DEFAULT  COLON WhileStatement : WHILE LPAREN Expression RPAREN Statement\n        | WHILE LPAREN Expression RPAREN SEMICOLON\nWhileStatementNoShortIf : WHILE LPAREN Expression RPAREN StatementNoShortIf\n        | WHILE LPAREN Expression RPAREN SEMICOLON\nDoStatement : DO Statement WHILE LPAREN Expression RPAREN SEMICOLON\n        | DO SEMICOLON WHILE LPAREN Expression RPAREN SEMICOLON\nForStatement : BasicForStatement\n| EnhancedForStatement\nForStatementNoShortIf : BasicForStatementNoShortIf\n| EnhancedForStatementNoShortIf\nBasicForStatement : FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN Statement\n    | FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN Statement\n    | FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN Statement\n    | FOR LPAREN ForInit SEMICOLON SEMICOLON  RPAREN Statement\n    | FOR LPAREN  SEMICOLON Expression SEMICOLON ForUpdate RPAREN Statement\n    | FOR LPAREN  SEMICOLON Expression SEMICOLON RPAREN Statement\n    | FOR LPAREN  SEMICOLON SEMICOLON ForUpdate RPAREN Statement\n    | FOR LPAREN  SEMICOLON SEMICOLON  RPAREN Statement\n    | FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON\n    | FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN SEMICOLON\n    | FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN SEMICOLON\n    | FOR LPAREN ForInit SEMICOLON SEMICOLON  RPAREN SEMICOLON\n    | FOR LPAREN  SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON\n    | FOR LPAREN  SEMICOLON Expression SEMICOLON RPAREN SEMICOLON\n    | FOR LPAREN  SEMICOLON SEMICOLON ForUpdate RPAREN SEMICOLON\n    | FOR LPAREN  SEMICOLON SEMICOLON  RPAREN SEMICOLON\nBasicForStatementNoShortIf : FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN StatementNoShortIf\n                                | FOR LPAREN ForInit SEMICOLON Expression SEMICOLON  RPAREN StatementNoShortIf\n                                | FOR LPAREN ForInit SEMICOLON  SEMICOLON ForUpdate RPAREN StatementNoShortIf\n                                | FOR LPAREN ForInit SEMICOLON  SEMICOLON  RPAREN StatementNoShortIf\n                                | FOR LPAREN  SEMICOLON Expression SEMICOLON ForUpdate RPAREN StatementNoShortIf\n                                | FOR LPAREN  SEMICOLON Expression SEMICOLON  RPAREN StatementNoShortIf\n                                | FOR LPAREN  SEMICOLON  SEMICOLON ForUpdate RPAREN StatementNoShortIf\n                                | FOR LPAREN  SEMICOLON  SEMICOLON  RPAREN StatementNoShortIf\n                                | FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON\n                                | FOR LPAREN ForInit SEMICOLON Expression SEMICOLON  RPAREN SEMICOLON\n                                | FOR LPAREN ForInit SEMICOLON  SEMICOLON ForUpdate RPAREN SEMICOLON\n                                | FOR LPAREN ForInit SEMICOLON  SEMICOLON  RPAREN SEMICOLON\n                                | FOR LPAREN  SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON\n                                | FOR LPAREN  SEMICOLON Expression SEMICOLON  RPAREN SEMICOLON\n                                | FOR LPAREN  SEMICOLON  SEMICOLON ForUpdate RPAREN SEMICOLON\n                                | FOR LPAREN  SEMICOLON  SEMICOLON  RPAREN SEMICOLON\n\nForInit : StatementExpressionList\n| LocalVariableDeclaration\nForUpdate : StatementExpressionList\nStatementExpressionList : StatementExpression COMMAStatementExpressionS\nCOMMAStatementExpressionS : COMMAStatementExpressionS COMMA StatementExpression\n                    | emptyEnhancedForStatement : FOR LPAREN CommonModifierS UnannType VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS NumericType VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS IDENT VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS UnannType IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS NumericType IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS BOOLEAN IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS IDENT IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  UnannType VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  NumericType VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  IDENT VariableDeclaratorId  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  UnannType IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  NumericType IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  BOOLEAN IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN  IDENT IDENT  COLON  Expression RPAREN Statement\n                            | FOR LPAREN CommonModifierS UnannType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN CommonModifierS NumericType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN CommonModifierS IDENT VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN CommonModifierS UnannType IDENT  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN CommonModifierS NumericType IDENT  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN CommonModifierS BOOLEAN IDENT  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN CommonModifierS IDENT IDENT  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  UnannType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  NumericType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  IDENT VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  UnannType IDENT  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  NumericType IDENT  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  BOOLEAN IDENT  COLON  Expression RPAREN SEMICOLON\n                            | FOR LPAREN  IDENT IDENT  COLON  Expression RPAREN SEMICOLON\nEnhancedForStatementNoShortIf : FOR LPAREN CommonModifierS UnannType VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS NumericType VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS IDENT VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS UnannType IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS NumericType IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS BOOLEAN IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS IDENT IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  UnannType VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  NumericType VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  IDENT VariableDeclaratorId  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  UnannType IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  NumericType IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  BOOLEAN IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN  IDENT IDENT  COLON  Expression RPAREN StatementNoShortIf\n                                    | FOR LPAREN CommonModifierS UnannType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN CommonModifierS NumericType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN CommonModifierS IDENT VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN CommonModifierS UnannType IDENT  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN CommonModifierS NumericType IDENT  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN CommonModifierS BOOLEAN IDENT  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN CommonModifierS IDENT IDENT  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  UnannType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  NumericType VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  BOOLEAN VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  IDENT VariableDeclaratorId  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  UnannType IDENT  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  NumericType IDENT  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  BOOLEAN IDENT  COLON  Expression RPAREN SEMICOLON\n                                    | FOR LPAREN  IDENT IDENT  COLON  Expression RPAREN SEMICOLON\nBreakStatement : BREAK SEMICOLON\n                    | BREAK IDENT SEMICOLON\nContinueStatement : CONTINUE IDENT SEMICOLON\n                        | CONTINUE SEMICOLON\nReturnStatement : RETURN Expression SEMICOLON\n                    |  RETURN  SEMICOLON\nThrowStatement : THROW Expression SEMICOLON\nSynchronizedStatement : SYNCHRONIZED LPAREN Expression RPAREN Block\nTryStatement : TRY Block Catches\n| TRY Block  Finally\n| TRY Block Catches Finally\n| TryWithResourcesStatement\nCatches : CatchClause CatchClauseS\nCatchClauseS : CatchClauseS CatchClause\n| emptyCatchClause : CATCH LPAREN CatchFormalParameter RPAREN Block\nCatchFormalParameter : CommonModifierS CatchType VariableDeclaratorId\n                            | CommonModifierS CatchType IDENT\n                            |  CatchType VariableDeclaratorId\n                            |  CatchType IDENT\nCatchType : UnannClassType ORClassTypeS\n                | IDENT PERIOD IDENT ORClassTypeS\n                | IDENT ORClassTypeS\nORClassTypeS : ORClassTypeS OR ClassType\n                    | ORClassTypeS OR TypeVariable\n                    | ORClassTypeS OR IDENT PERIOD IDENT\n                    | ORClassTypeS OR IDENT\n                    | emptyFinally : FINALLY Block\nTryWithResourcesStatement : TRY ResourceSpecification Block Catches Finally\n                                | TRY ResourceSpecification Block  Finally\n                                | TRY ResourceSpecification Block Catches\n                                | TRY ResourceSpecification Block\nResourceSpecification : LPAREN ResourceList SEMICOLON RPAREN\n                            | LPAREN ResourceList RPAREN\nResourceList : Resource SEMICOLONResourceS\n                | Resource\nSEMICOLONResourceS : SEMICOLONResourceS SEMICOLON Resource\n                    | SEMICOLON ResourceCommonModifierS : CommonModifierS CommonModifier\n                        | CommonModifier\n    CommonModifier : Annotation\n                    | PUBLIC\n                    | PROTECTED\n                    | PRIVATE\n                     | STATIC\n                     | FINAL\n                     | TRANSIENT\n                     | VOLATILE\n                     | ABSTRACT\n                     | SYNCHRONIZED\n                    | NATIVE\n                    | STRICTFP\n                    | DEFAULT\n    Resource : CommonModifierS UnannType VariableDeclaratorId ASSIGN Expression\n                | CommonModifierS NumericType VariableDeclaratorId ASSIGN Expression\n                | CommonModifierS BOOLEAN VariableDeclaratorId ASSIGN Expression\n                | CommonModifierS IDENT VariableDeclaratorId ASSIGN Expression\n                | CommonModifierS UnannType IDENT ASSIGN Expression\n                | CommonModifierS NumericType IDENT ASSIGN Expression\n                | CommonModifierS BOOLEAN IDENT ASSIGN Expression\n                | CommonModifierS IDENT IDENT ASSIGN Expression\n                |  UnannType VariableDeclaratorId ASSIGN Expression\n                |  NumericType VariableDeclaratorId ASSIGN Expression\n                |  BOOLEAN VariableDeclaratorId ASSIGN Expression\n                |  IDENT VariableDeclaratorId ASSIGN Expression\n                |  UnannType IDENT ASSIGN Expression\n                |  NumericType IDENT ASSIGN Expression\n                |  BOOLEAN IDENT ASSIGN Expression\n                |  IDENT IDENT ASSIGN Expressionstart : INC CompilationUnit'
    
_lr_action_items = {'INC':([0,58,91,96,128,131,168,169,177,179,190,191,196,197,198,199,200,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,351,354,356,371,372,373,374,375,380,381,382,383,384,385,387,388,391,392,397,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,419,422,424,425,426,428,430,436,529,549,566,571,575,611,612,613,620,622,626,630,634,636,637,638,639,640,641,642,643,644,645,646,647,649,652,653,654,659,661,663,666,669,672,674,699,701,703,705,707,709,710,711,714,717,719,721,722,724,726,729,736,739,741,743,744,747,748,758,820,821,838,885,889,891,892,902,905,906,915,918,926,930,931,934,935,936,938,939,940,942,943,944,945,946,947,948,949,951,952,953,954,955,956,958,959,964,967,969,970,971,972,974,1014,1015,1035,1074,1075,1078,1079,1082,1085,1090,1093,1095,1096,1097,1100,1101,1104,1105,1106,1108,1109,1115,1116,1117,1120,1121,1155,1159,1162,1166,1167,1183,1184,1186,1188,1192,1193,1195,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1227,1230,1233,1236,1237,1243,1244,1245,1247,1248,1249,1250,1259,1284,1286,1321,],[2,-119,-382,196,-412,-120,-332,196,384,196,196,196,196,196,425,196,196,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,196,196,384,-332,-132,-133,-331,-124,196,196,196,196,-336,-338,196,196,196,196,384,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,384,384,384,-335,-337,384,384,196,196,196,196,196,-645,-383,-129,-143,384,-206,384,196,196,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,196,-130,196,196,384,384,384,-144,-171,-208,-215,-207,384,384,384,384,384,-145,-165,-209,-223,-1,196,-224,-225,-226,-228,196,-212,-213,-139,-166,-210,-216,196,196,196,196,196,-136,-168,-196,384,196,384,384,384,196,-169,-172,-198,-205,196,196,-197,196,-199,-138,-170,-217,-229,-235,-237,196,-218,-230,-219,-231,-220,-232,-222,-234,196,-153,-202,-203,-137,196,-200,196,196,-118,-176,-167,-211,196,384,384,384,-180,-214,196,196,384,196,-184,196,-236,-239,-227,-149,-152,-151,-188,196,196,196,196,-116,-117,-175,196,-201,-174,-179,-204,-178,384,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,196,196,196,-115,196,-192,196,-173,-177,-181,-146,-185,196,-191,-190,-189,]),'$end':([1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,25,26,27,28,29,30,31,32,37,63,71,73,74,89,98,102,104,106,110,128,131,166,237,239,242,248,252,258,259,263,344,345,456,458,459,460,461,469,471,472,479,480,609,610,749,754,755,756,776,979,],[0,-1,-944,-1,-1,-361,-358,-360,-364,-371,-372,-373,-374,-1,-361,-362,-363,-380,-381,-384,-385,-12,-13,-397,-359,-393,-395,-396,-375,-391,-392,-394,-593,-21,-412,-120,-365,-390,-591,-17,-592,-601,-19,-20,-52,-376,-377,-590,-15,-16,-51,-398,-597,-599,-600,-18,-23,-378,-379,-14,-595,-596,-598,-53,-594,]),'IMPORT':([2,4,5,6,9,11,12,13,14,16,17,89,166,344,345,609,610,],[-1,15,-1,-361,-360,-371,-372,-373,-374,15,-361,-375,-365,-376,-377,-378,-379,]),'SEMICOLON':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,37,44,58,59,63,64,65,71,73,74,87,88,89,91,94,95,98,102,104,106,107,110,112,115,118,119,127,128,129,130,131,132,133,134,135,136,137,138,139,147,162,163,164,166,168,171,174,175,176,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,237,239,242,248,249,250,252,253,254,258,259,261,262,263,264,265,266,272,275,276,280,283,285,286,287,288,289,290,291,298,299,305,306,308,310,311,312,313,314,315,316,317,320,321,322,324,325,328,331,332,333,340,344,345,346,347,348,359,364,368,369,371,372,373,374,375,376,377,384,385,390,395,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,456,458,459,460,461,467,469,471,472,473,474,475,476,479,480,481,482,483,484,485,486,492,494,495,496,497,498,507,508,510,511,512,515,516,521,522,523,524,525,526,527,528,530,532,533,534,535,536,537,538,539,540,541,542,543,545,546,557,558,559,560,561,562,563,564,567,569,570,572,573,574,575,576,577,578,579,580,594,596,602,603,604,605,606,609,610,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,678,679,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,749,754,755,756,759,764,765,766,767,768,769,770,771,772,773,774,776,777,778,779,780,781,782,789,795,796,797,798,799,800,801,802,804,805,806,807,808,809,810,811,812,814,815,816,817,828,829,830,834,835,836,837,839,840,841,873,874,875,876,877,878,879,880,881,882,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,937,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,979,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1005,1006,1007,1008,1011,1012,1013,1017,1019,1029,1030,1031,1032,1035,1067,1068,1069,1070,1071,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1145,1147,1149,1150,1151,1152,1153,1163,1164,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1212,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1229,1232,1235,1236,1243,1245,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1276,1277,1278,1280,1281,1282,1284,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,26,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,-397,-1,-119,89,26,-1,-113,-393,-395,-396,130,-411,-375,-382,166,-369,-391,-392,-394,-593,254,-21,-1,-629,-630,-638,285,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,332,344,-383,345,-365,-332,-98,-103,-104,-105,-271,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-390,-591,-17,-592,254,254,-601,-1,-1,-19,-20,482,-26,-52,-1,-635,-636,-628,-551,-553,-637,-682,511,515,-689,-690,-691,516,-709,-555,285,541,-558,546,562,563,-497,-443,-446,572,573,-500,576,577,-492,579,580,-494,-468,-470,-554,-496,-376,-377,609,610,-368,-240,-241,-252,-253,-332,-132,-133,-331,-124,-97,-114,-336,-338,-644,-109,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-590,-15,-16,-51,-398,254,-597,-599,-600,-604,-603,130,-610,-18,-23,-24,-25,-27,-28,-29,-30,774,778,-56,-631,-632,-666,-634,-633,-683,511,-684,511,-692,-697,-705,-698,-706,-699,-707,-708,-700,-556,805,806,807,808,809,810,811,812,-467,-469,-559,815,-569,511,-545,-1,-1,-551,-553,-425,-433,-442,-447,-498,-441,-426,-434,-499,-645,-427,-435,-491,-436,-428,-493,-490,-482,-484,-486,-488,-495,-378,-379,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-107,-108,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-14,-595,-596,-598,-607,992,993,994,995,996,997,998,999,1000,-48,-50,-53,-54,-55,-57,-58,-59,-60,-552,-693,-701,-694,-702,-695,-703,-704,-696,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,511,-567,-568,-549,-548,-550,-502,-445,-448,-449,-439,-440,-444,-480,-481,-483,-485,-487,-489,-472,-474,-476,-478,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-106,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-594,-602,-608,1128,1129,1130,1131,1132,1133,1134,1135,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,994,999,996,998,1145,-564,-565,1151,1153,-552,-437,-438,-501,-118,-471,-473,-475,-477,-479,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-605,-609,-31,-39,-32,-40,-33,-41,-42,-34,1129,1134,1131,1133,-738,-739,1222,1224,1225,-573,1226,-577,-546,-547,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-606,1258,1262,1265,1268,1269,-571,1270,-575,-572,-576,1274,1278,1282,-115,-192,-173,-177,-181,-146,-185,1289,1292,1295,1298,1300,1301,-89,1304,1305,-92,1307,1308,-90,1310,1311,-91,-570,-574,1313,1314,-581,1316,1317,-585,1319,1320,-589,-191,-190,1323,1324,-73,1326,1327,-76,1329,1330,-74,1332,1333,-75,1334,-85,-81,-93,1335,-88,-84,1336,-86,-82,1337,-87,-83,1338,-580,-579,1339,-584,-583,1340,-587,-588,-189,1341,-69,-65,1342,-72,-68,1343,-70,-66,1344,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'CLASS':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,331,332,333,344,345,376,377,450,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,572,573,576,577,579,580,609,610,617,715,742,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,34,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,66,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,34,-113,-913,-393,-395,-396,34,-411,-375,-382,-391,-392,-394,-593,-21,-1,34,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,66,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,34,-26,-52,-1,-682,34,34,-689,-690,-691,-709,66,-555,34,-558,34,-468,-470,-554,-376,-377,-97,-114,743,-590,-15,-16,-51,-398,-597,-599,-600,34,-18,-23,-24,-25,-27,-28,-29,-30,66,34,-56,-683,34,-684,34,-692,-556,-467,-469,-559,34,-569,34,-915,-425,-433,-426,-434,-427,-435,-436,-428,-378,-379,889,943,971,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,66,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,34,-567,-568,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'ENUM':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,331,332,333,344,345,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,572,573,576,577,579,580,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,38,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,67,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,38,-113,-913,-393,-395,-396,38,-411,-375,-382,-391,-392,-394,-593,-21,-1,38,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,67,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,38,-26,-52,-1,-682,38,38,-689,-690,-691,-709,67,-555,38,-558,38,-468,-470,-554,-376,-377,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,38,-18,-23,-24,-25,-27,-28,-29,-30,67,38,-56,-683,38,-684,38,-692,-556,-467,-469,-559,38,-569,38,-915,-425,-433,-426,-434,-427,-435,-436,-428,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,67,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,38,-567,-568,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'INTERFACE':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,69,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,298,306,331,332,333,344,345,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,512,530,540,541,542,545,562,563,572,573,576,577,579,580,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,816,817,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1128,1129,1130,1131,1132,1133,1134,1135,1258,1262,1265,1268,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1341,1342,1343,1344,],[-1,-1,-1,-361,39,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,68,-397,77,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,39,-113,101,-913,-393,-395,-396,39,-411,-375,-382,-391,-392,-394,-593,-21,-1,-1,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,68,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,39,-26,-52,-1,-682,-555,-558,-468,-470,-554,-376,-377,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,39,-18,-23,-24,-25,-27,-28,-29,-30,68,39,-56,-683,-684,-556,-467,-469,-559,-569,-425,-433,-426,-434,-427,-435,-436,-428,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,68,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,-567,-568,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,-31,-39,-32,-40,-33,-41,-42,-34,-89,-92,-90,-91,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-61,-64,-62,-63,]),'ATRATE':([2,4,5,6,7,8,9,10,11,12,13,14,16,17,19,20,21,22,23,25,26,27,28,29,30,31,32,33,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,81,82,87,88,89,91,96,98,102,103,104,106,107,110,111,112,114,115,116,117,118,119,120,122,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,150,151,155,156,157,158,159,160,161,163,166,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,246,247,248,252,254,255,256,258,259,261,262,263,264,265,266,273,278,280,283,285,286,287,288,289,291,292,298,299,306,308,309,326,327,331,332,333,335,342,344,345,351,354,361,376,377,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,437,438,439,440,441,442,444,454,455,456,458,459,460,461,465,466,469,471,472,475,477,478,479,480,481,482,483,484,485,486,487,493,494,495,496,497,498,502,505,506,507,508,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,593,595,608,609,610,616,628,630,632,633,634,636,637,638,639,640,641,642,643,644,645,646,647,648,649,651,653,654,694,719,720,721,728,734,736,737,749,750,752,754,755,756,757,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,823,831,838,847,848,850,885,896,903,905,916,926,936,938,940,947,948,949,957,961,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1025,1028,1038,1079,1087,1088,1096,1097,1101,1105,1106,1108,1111,1121,1123,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1190,1201,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,24,40,-360,-364,-371,-372,-373,-374,-1,-361,-366,-370,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,69,-397,-914,24,24,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,40,-113,-913,-393,-395,-396,24,-159,40,-411,-375,-382,24,-391,-392,-1,-394,-593,-1,-21,24,-1,24,-629,24,24,-630,-638,-158,24,24,24,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,69,24,-618,-619,-620,-621,-622,-623,-624,-625,-626,-383,-365,24,-98,-159,24,24,24,24,24,24,24,24,24,-390,-591,-17,24,-652,-592,-601,-1,24,-612,-19,-20,40,-26,-52,-1,-635,-636,24,-616,-637,-682,24,24,-689,-690,-691,-709,24,-555,24,-558,24,24,24,24,-468,-470,-554,24,24,-376,-377,24,24,24,-97,-114,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-615,-617,-590,-15,-16,-51,-398,-651,-653,-597,-599,-600,40,-611,-613,-18,-23,-24,-25,-27,-28,-29,-30,69,24,40,-56,-631,-632,-666,24,24,24,-634,-633,-683,24,-684,24,-692,24,-556,-467,-469,-559,24,-569,24,24,-159,-425,-433,24,24,24,-426,-434,-427,-435,-436,-428,24,24,24,24,-378,-379,24,24,24,24,24,24,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,24,24,24,24,24,24,-1,24,24,24,24,24,-638,-14,-1,24,-595,-596,-598,-1,24,-48,-50,-53,-54,-55,-57,-58,-59,-60,69,24,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,24,-567,-568,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-237,24,24,24,24,24,24,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,24,24,24,24,24,24,24,24,24,24,24,24,-236,-239,24,24,24,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,24,24,24,24,24,-238,-571,-575,-572,-576,24,24,24,24,24,-89,24,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'EXTENDS':([2,4,5,6,8,9,10,11,12,13,14,16,17,25,26,27,28,29,30,31,32,37,44,58,63,71,73,74,76,87,88,89,98,100,102,104,106,108,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,166,237,239,240,242,248,252,254,258,259,261,262,263,264,274,283,285,286,287,288,289,291,298,299,306,308,331,332,333,344,345,456,458,459,460,461,464,469,471,472,475,479,480,481,482,483,484,485,486,494,495,503,510,511,512,515,516,530,540,541,542,543,545,546,562,563,572,573,576,577,579,580,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,804,805,806,807,808,809,810,811,812,814,815,816,817,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,42,-360,-364,-371,-372,-373,-374,-1,-361,-362,-363,-380,-381,-384,-385,-12,-13,-397,-1,-119,42,-393,-395,-396,111,42,-411,-375,-391,111,-392,-394,-593,111,-21,-1,42,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-365,-390,-591,111,-17,-592,-601,-1,-19,-20,42,-26,-52,-1,505,-682,42,42,-689,-690,-691,-709,-555,42,-558,42,-468,-470,-554,-376,-377,-590,-15,-16,-51,-398,752,-597,-599,-600,42,-18,-23,-24,-25,-27,-28,-29,-30,42,-56,505,-683,42,-684,42,-692,-556,-467,-469,-559,42,-569,42,-425,-433,-426,-434,-427,-435,-436,-428,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,42,-567,-568,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'IMPLEMENTS':([2,4,5,6,8,9,10,11,12,13,14,16,17,25,26,27,28,29,30,31,32,35,37,44,58,63,71,73,74,75,78,79,80,87,88,89,98,99,102,104,106,110,112,115,118,119,127,128,129,130,131,132,133,134,135,136,137,138,139,166,237,239,242,248,252,254,258,259,261,262,263,264,265,266,279,280,283,285,286,287,288,289,291,298,299,306,308,331,332,333,344,345,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,494,495,496,497,498,507,508,510,511,512,515,516,530,540,541,542,543,545,546,562,563,572,573,576,577,579,580,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,804,805,806,807,808,809,810,811,812,814,815,816,817,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,43,-360,-364,-371,-372,-373,-374,-1,-361,-362,-363,-380,-381,-384,-385,-12,-13,43,-397,-1,-119,43,-393,-395,-396,43,-386,-387,-389,43,-411,-375,-391,43,-392,-394,-593,-21,-1,-629,-630,-638,43,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-365,-390,-591,-17,-592,-601,-1,-19,-20,43,-26,-52,-1,-635,-636,-388,-637,-682,43,43,-689,-690,-691,-709,-555,43,-558,43,-468,-470,-554,-376,-377,-590,-15,-16,-51,-398,-597,-599,-600,43,-18,-23,-24,-25,-27,-28,-29,-30,43,-56,-631,-632,-666,-634,-633,-683,43,-684,43,-692,-556,-467,-469,-559,43,-569,43,-425,-433,-426,-434,-427,-435,-436,-428,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,43,-567,-568,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'PUBLIC':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,46,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,46,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,46,-113,-913,-393,-395,-396,46,-411,-375,-382,-391,-392,-394,-593,-21,-1,46,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,46,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,46,-26,-52,-1,-682,46,46,-689,-690,-691,-709,46,-555,46,-558,46,46,-468,-470,-554,-376,-377,46,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,46,-18,-23,-24,-25,-27,-28,-29,-30,46,46,-56,-683,46,-684,46,-692,-556,-467,-469,-559,46,-569,46,-915,-425,-433,46,-426,-434,-427,-435,-436,-428,46,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,46,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,46,-567,-568,46,46,46,46,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,46,46,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'PROTECTED':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,47,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,47,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,47,-113,-913,-393,-395,-396,47,-411,-375,-382,-391,-392,-394,-593,-21,-1,47,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,47,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,47,-26,-52,-1,-682,47,47,-689,-690,-691,-709,47,-555,47,-558,47,47,-468,-470,-554,-376,-377,47,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,47,-18,-23,-24,-25,-27,-28,-29,-30,47,47,-56,-683,47,-684,47,-692,-556,-467,-469,-559,47,-569,47,-915,-425,-433,47,-426,-434,-427,-435,-436,-428,47,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,47,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,47,-567,-568,47,47,47,47,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,47,47,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'PRIVATE':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,48,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,48,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,48,-113,-913,-393,-395,-396,48,-411,-375,-382,-391,-392,-394,-593,-21,-1,48,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,48,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,48,-26,-52,-1,-682,48,48,-689,-690,-691,-709,48,-555,48,-558,48,48,-468,-470,-554,-376,-377,48,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,48,-18,-23,-24,-25,-27,-28,-29,-30,48,48,-56,-683,48,-684,48,-692,-556,-467,-469,-559,48,-569,48,-915,-425,-433,48,-426,-434,-427,-435,-436,-428,48,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,48,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,48,-567,-568,48,48,48,48,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,48,48,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'STATIC':([2,4,5,6,8,9,10,11,12,13,14,15,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,49,-360,-364,-371,-372,-373,-374,62,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,49,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,49,-113,-913,-393,-395,-396,140,-411,-375,-382,-391,-392,-394,-593,-21,-1,49,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,49,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,49,-26,-52,-1,-682,49,49,-689,-690,-691,-709,49,-555,49,-558,49,49,-468,-470,-554,-376,-377,49,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,140,-18,-23,-24,-25,-27,-28,-29,-30,49,49,-56,-683,49,-684,49,-692,-556,-467,-469,-559,49,-569,49,-915,-425,-433,49,-426,-434,-427,-435,-436,-428,49,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,49,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,49,-567,-568,49,49,49,49,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,49,49,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'FINAL':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,50,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,50,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,50,-113,-913,-393,-395,-396,50,-411,-375,-382,-391,-392,-394,-593,-21,-1,50,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,50,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,50,-26,-52,-1,-682,50,50,-689,-690,-691,-709,50,-555,50,-558,50,50,-468,-470,-554,-376,-377,50,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,50,-18,-23,-24,-25,-27,-28,-29,-30,50,50,-56,-683,50,-684,50,-692,-556,-467,-469,-559,50,-569,50,-915,-425,-433,50,-426,-434,-427,-435,-436,-428,50,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,50,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,50,-567,-568,50,50,50,50,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,50,50,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'TRANSIENT':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,51,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,51,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,51,-113,-913,-393,-395,-396,51,-411,-375,-382,-391,-392,-394,-593,-21,-1,51,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,51,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,51,-26,-52,-1,-682,51,51,-689,-690,-691,-709,51,-555,51,-558,51,51,-468,-470,-554,-376,-377,51,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,51,-18,-23,-24,-25,-27,-28,-29,-30,51,51,-56,-683,51,-684,51,-692,-556,-467,-469,-559,51,-569,51,-915,-425,-433,51,-426,-434,-427,-435,-436,-428,51,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,51,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,51,-567,-568,51,51,51,51,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,51,51,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'VOLATILE':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,52,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,52,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,52,-113,-913,-393,-395,-396,52,-411,-375,-382,-391,-392,-394,-593,-21,-1,52,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,52,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,52,-26,-52,-1,-682,52,52,-689,-690,-691,-709,52,-555,52,-558,52,52,-468,-470,-554,-376,-377,52,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,52,-18,-23,-24,-25,-27,-28,-29,-30,52,52,-56,-683,52,-684,52,-692,-556,-467,-469,-559,52,-569,52,-915,-425,-433,52,-426,-434,-427,-435,-436,-428,52,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,52,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,52,-567,-568,52,52,52,52,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,52,52,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'ABSTRACT':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,53,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,53,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,53,-113,-913,-393,-395,-396,53,-411,-375,-382,-391,-392,-394,-593,-21,-1,53,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,53,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,53,-26,-52,-1,-682,53,53,-689,-690,-691,-709,53,-555,53,-558,53,53,-468,-470,-554,-376,-377,53,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,53,-18,-23,-24,-25,-27,-28,-29,-30,53,53,-56,-683,53,-684,53,-692,-556,-467,-469,-559,53,-569,53,-915,-425,-433,53,-426,-434,-427,-435,-436,-428,53,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,53,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,53,-567,-568,53,53,53,53,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,53,53,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'SYNCHRONIZED':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,54,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,54,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,54,-113,-913,-393,-395,-396,54,-411,-375,-382,-391,-392,-394,-593,-21,-1,54,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,54,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,54,-26,-52,-1,-682,54,54,-689,-690,-691,-709,54,-555,54,-558,54,54,-468,-470,-554,-376,-377,54,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,54,-18,-23,-24,-25,-27,-28,-29,-30,54,54,-56,-683,54,-684,54,-692,-556,-467,-469,-559,54,-569,54,-915,-425,-433,54,-426,-434,-427,-435,-436,-428,54,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,54,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,54,-567,-568,54,54,54,54,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,54,54,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'NATIVE':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,55,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,55,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,55,-113,-913,-393,-395,-396,55,-411,-375,-382,-391,-392,-394,-593,-21,-1,55,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,55,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,55,-26,-52,-1,-682,55,55,-689,-690,-691,-709,55,-555,55,-558,55,55,-468,-470,-554,-376,-377,55,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,55,-18,-23,-24,-25,-27,-28,-29,-30,55,55,-56,-683,55,-684,55,-692,-556,-467,-469,-559,55,-569,55,-915,-425,-433,55,-426,-434,-427,-435,-436,-428,55,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,55,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,55,-567,-568,55,55,55,55,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,55,55,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'STRICTFP':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1222,1224,1225,1226,1258,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,56,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,56,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,56,-113,-913,-393,-395,-396,56,-411,-375,-382,-391,-392,-394,-593,-21,-1,56,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,56,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,56,-26,-52,-1,-682,56,56,-689,-690,-691,-709,56,-555,56,-558,56,56,-468,-470,-554,-376,-377,56,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,56,-18,-23,-24,-25,-27,-28,-29,-30,56,56,-56,-683,56,-684,56,-692,-556,-467,-469,-559,56,-569,56,-915,-425,-433,56,-426,-434,-427,-435,-436,-428,56,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,56,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,56,-567,-568,56,56,56,56,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,56,56,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,-571,-575,-572,-576,-89,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'DEFAULT':([2,4,5,6,8,9,10,11,12,13,14,16,17,21,22,23,25,26,27,28,29,30,31,32,33,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,71,73,74,87,88,89,91,98,102,104,106,110,112,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,163,166,171,237,239,242,248,252,254,258,259,261,262,263,264,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,344,345,354,376,377,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,494,495,510,511,512,515,516,530,540,541,542,543,545,546,556,562,563,565,572,573,575,576,577,579,580,595,609,610,749,754,755,756,773,774,776,777,778,779,780,781,782,783,804,805,806,807,808,809,810,811,812,814,815,816,817,847,848,850,905,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1038,1101,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1217,1218,1219,1220,1222,1224,1225,1226,1252,1253,1254,1255,1256,1258,1260,1262,1263,1265,1266,1268,1269,1270,1274,1278,1282,1287,1289,1290,1292,1293,1295,1296,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,57,-360,-364,-371,-372,-373,-374,-1,-361,-94,-95,-96,-362,-363,-380,-381,-384,-385,-12,-13,57,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,57,-113,-913,-393,-395,-396,57,-411,-375,-382,-391,-392,-394,-593,-21,-1,57,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,57,-383,-365,-98,-390,-591,-17,-592,-601,-1,-19,-20,57,-26,-52,-1,-682,57,57,-689,-690,-691,-709,57,-555,57,-558,57,57,-468,-470,-554,-376,-377,57,-97,-114,-590,-15,-16,-51,-398,-597,-599,-600,57,-18,-23,-24,-25,-27,-28,-29,-30,57,57,-56,-683,57,-684,57,-692,-556,-467,-469,-559,57,-569,57,-915,-425,-433,57,-426,-434,-645,-427,-435,-436,-428,57,-378,-379,-14,-595,-596,-598,-48,-50,-53,-54,-55,-57,-58,-59,-60,57,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,57,-567,-568,57,57,57,57,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,57,57,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,1259,1259,1259,1259,-571,-575,-572,-576,1259,1259,1259,1259,1259,-89,1259,-92,1259,-90,1259,-91,-570,-574,-581,-585,-589,1259,-73,1259,-76,1259,-74,1259,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'LBRACE':([2,4,5,6,8,9,10,11,12,13,14,16,17,25,26,27,28,29,30,31,32,35,36,37,44,58,63,71,72,73,74,75,76,78,79,80,83,84,85,86,87,88,89,96,98,99,100,102,104,105,106,108,109,110,112,113,115,118,119,121,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,144,145,146,147,150,151,153,155,156,157,158,159,160,161,166,177,179,205,206,218,219,230,237,238,239,240,241,242,243,248,252,254,257,258,259,260,261,262,263,264,265,266,269,275,276,277,278,279,280,281,282,283,285,286,287,288,289,291,294,295,296,298,299,300,302,303,304,305,306,307,308,311,312,316,317,321,322,324,328,329,331,332,333,334,337,338,340,344,345,355,356,357,362,365,366,380,397,419,422,424,428,430,437,438,439,440,441,454,455,456,457,458,459,460,461,469,471,472,475,476,479,480,481,482,483,484,485,486,489,490,491,492,494,495,496,497,498,507,508,509,510,511,512,515,516,518,519,520,522,524,526,527,530,531,533,535,537,538,540,541,542,543,545,546,552,554,555,557,558,559,560,561,562,563,566,569,571,572,573,574,575,576,577,578,579,580,581,583,589,590,592,594,596,598,599,601,602,603,604,605,606,607,609,610,620,626,627,629,653,659,661,663,665,693,701,703,705,707,709,717,718,719,722,723,724,725,726,727,729,730,737,749,754,755,756,761,762,763,764,766,768,770,771,773,774,775,776,777,778,779,780,781,782,785,786,787,789,792,794,796,798,800,801,804,805,806,807,808,809,810,811,812,814,815,816,817,824,828,829,830,834,838,839,842,845,852,853,854,855,858,861,865,866,867,868,870,872,873,874,875,876,877,878,879,880,881,882,883,884,898,899,900,902,906,909,915,918,938,947,948,957,967,979,981,984,986,988,989,991,992,993,994,995,996,997,998,999,1000,1002,1003,1004,1005,1006,1007,1008,1010,1012,1013,1022,1029,1031,1032,1041,1042,1043,1058,1060,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1081,1082,1085,1086,1090,1100,1106,1108,1109,1110,1115,1116,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1144,1145,1151,1153,1156,1160,1163,1164,1172,1173,1174,1175,1197,1201,1205,1217,1218,1219,1220,1222,1224,1225,1226,1237,1246,1252,1253,1254,1255,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-1,-1,-1,-361,58,-360,-364,-371,-372,-373,-374,-1,-361,-362,-363,-380,-381,-384,-385,-12,-13,58,58,-397,-1,-119,58,-393,58,-395,-396,58,58,-386,-387,-389,-402,-1,-1,-1,58,-411,-375,58,-391,58,58,-392,-394,58,-593,58,58,-21,-1,58,-629,-630,-638,-405,-404,-406,-408,58,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,58,58,58,58,58,58,-618,-619,58,-620,-621,-622,-623,-624,-625,-626,-365,58,58,58,58,58,58,-616,-390,58,-591,58,58,-17,58,-592,-601,-1,58,-19,-20,-22,58,-26,-52,-1,-635,-636,58,58,58,58,-616,-388,-637,-403,-1,-682,58,58,-689,-690,-691,-709,58,58,58,-555,58,58,58,58,58,58,-558,58,58,58,-497,58,-500,58,-492,58,-494,-454,-468,-470,-554,58,58,58,-496,-376,-377,58,58,58,-616,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-615,-617,-590,58,-15,-16,-51,-398,-597,-599,-600,58,58,-18,-23,-24,-25,-27,-28,-29,-30,58,58,58,58,58,-56,-631,-632,-666,-634,-633,-407,-683,58,-684,58,-692,58,58,58,58,58,58,58,-556,58,58,58,58,58,-467,-469,-559,58,-569,58,58,58,58,-545,-1,-1,-551,-553,-425,-433,58,-498,58,-426,-434,-499,-645,-427,-435,-491,-436,-428,58,-563,58,58,58,-493,-490,58,58,58,-482,-484,-486,-488,-495,-455,-378,-379,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-1,58,58,58,58,58,58,58,58,-638,-14,-595,-596,-598,58,58,58,58,58,58,58,58,-48,-50,58,-53,-54,-55,-57,-58,-59,-60,58,58,58,58,58,58,58,58,58,58,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,58,-567,-568,-454,-549,-548,-550,-502,58,58,58,-561,58,58,58,58,58,58,58,58,58,-459,-460,-562,-480,-481,-483,-485,-487,-489,-472,-474,-476,-478,-456,-457,58,58,58,58,58,58,58,58,58,-235,-237,58,58,-594,58,58,58,58,58,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,58,58,58,58,58,58,58,58,-564,-565,58,-552,58,-501,58,58,58,58,58,58,58,-461,-560,-471,-473,-475,-477,-479,-458,58,58,58,58,58,58,-236,-239,58,58,58,58,58,-31,-39,-32,-40,-33,-41,-42,-34,58,58,58,58,-738,-739,-573,-577,-459,-460,-546,-547,58,58,58,58,58,-238,58,58,58,58,58,-571,-575,-572,-576,58,58,58,58,58,58,-89,58,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'PACKAGE':([2,6,7,19,20,21,22,23,65,91,163,171,376,377,],[-1,-367,18,-366,-370,-94,-95,-96,-113,-382,-383,-98,-97,-114,]),'IDENT':([15,18,21,22,23,29,30,31,32,34,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,65,66,67,68,70,71,73,74,77,81,82,87,88,90,91,96,97,98,101,102,103,104,106,107,110,111,112,114,116,117,120,122,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,165,167,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,246,247,248,252,254,255,256,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,293,294,295,296,298,299,301,302,303,304,306,308,309,318,323,326,327,329,330,331,332,333,334,335,336,337,338,339,342,343,349,351,352,354,361,376,377,380,381,382,383,386,387,388,389,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,431,432,436,442,444,451,452,456,458,459,460,461,465,466,469,471,472,475,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,498,502,505,506,510,511,512,515,516,517,518,519,520,529,530,540,541,542,543,545,546,549,552,554,555,556,562,563,565,566,568,571,572,573,575,576,577,579,580,581,587,588,589,590,591,592,593,595,597,598,599,600,601,607,608,615,616,621,626,627,628,629,630,632,633,634,636,637,638,639,640,641,642,643,644,645,646,647,648,649,651,653,654,655,656,657,667,673,694,698,712,713,721,728,734,736,745,746,749,750,752,754,755,756,757,758,760,761,762,763,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,822,823,824,825,826,827,831,832,838,847,848,850,851,852,853,854,864,865,866,867,868,869,870,883,884,885,886,887,896,898,899,900,903,905,916,926,936,938,940,949,961,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1012,1013,1014,1015,1020,1022,1023,1025,1026,1028,1038,1040,1041,1042,1043,1065,1072,1076,1077,1079,1080,1081,1085,1086,1087,1088,1096,1097,1101,1105,1111,1121,1123,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1156,1157,1159,1160,1162,1184,1190,1197,1222,1224,1225,1226,1227,1230,1233,1237,1244,1246,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[61,64,-94,-95,-96,-384,-385,-12,-13,71,-397,75,76,-914,80,86,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,91,-113,98,99,100,-913,-393,-395,-396,113,119,-159,146,-411,163,-382,177,163,-391,243,-392,-1,-394,-593,-1,-21,86,-1,266,269,279,-158,86,282,296,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,304,311,316,321,324,334,-450,-618,-619,341,-452,-453,-620,-621,-622,-623,-624,-625,-626,-383,346,348,356,-98,-159,397,419,419,422,424,428,430,441,119,-390,-591,-17,464,-652,-592,-601,-1,476,-612,-19,-20,491,-26,-52,-1,119,-682,296,296,-689,-690,-691,-709,520,522,524,526,527,-555,296,533,535,537,538,-558,552,559,-462,-463,581,592,-454,-466,-468,-470,-554,341,601,341,341,341,341,607,-464,611,620,622,626,119,-97,-114,397,659,661,663,665,620,620,672,620,397,397,397,397,397,397,397,397,397,397,397,693,397,397,397,699,701,703,705,707,709,711,714,620,735,737,744,747,-590,-15,-16,-51,-398,-651,-653,-597,-599,-600,146,-611,-613,-18,-23,-24,-25,-27,-28,-29,-30,763,766,768,770,771,775,785,-56,-666,789,792,794,-683,296,-684,296,-692,796,798,800,801,620,-556,-467,-469,-559,296,-569,296,620,527,526,524,-159,-425,-433,581,620,839,620,-426,-434,-645,-427,-435,-436,-428,842,852,855,858,861,867,-451,870,581,341,341,341,341,341,-455,884,888,735,892,842,861,900,858,902,906,909,620,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,913,915,918,620,620,611,711,925,929,934,119,939,941,942,620,957,965,620,973,974,-14,-1,977,-595,-596,-598,-1,620,984,986,988,989,-48,-50,341,-53,-54,-55,-57,-58,-59,-60,1002,1005,1006,1007,1008,1010,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,296,-567,-568,620,620,611,1022,-454,-466,711,-463,1029,1031,620,1043,1043,1043,1046,1048,1050,1052,1058,1060,1062,1063,-459,-465,-460,-456,-457,620,1075,1078,1081,1050,1052,1048,1082,1085,1090,620,1100,397,620,620,1112,269,620,620,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,1136,1137,1138,1139,-564,-565,620,620,888,-451,929,1160,941,1164,1043,1172,1173,1174,1175,-461,-458,1185,1186,620,1189,-451,842,861,900,1191,620,620,1197,620,1204,620,1211,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,620,-459,-465,620,-460,620,620,1246,842,-571,-575,-572,-576,620,620,620,620,620,-451,-89,397,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'PERIOD':([15,24,40,58,59,61,62,64,65,69,78,80,84,86,91,93,94,95,96,115,118,119,128,131,146,150,151,153,155,156,157,158,159,160,161,163,168,169,177,179,190,191,196,197,199,200,202,206,207,208,209,210,211,212,213,214,215,216,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,265,266,269,275,280,296,304,308,329,334,346,348,350,351,353,354,356,357,362,365,371,372,373,374,375,380,381,382,383,387,388,391,392,397,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,419,422,424,428,430,434,436,439,441,449,491,496,497,498,507,508,520,529,548,549,550,551,552,553,554,555,559,560,566,571,575,581,601,607,611,612,613,614,620,622,626,627,629,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,652,653,654,659,661,663,666,669,672,674,693,699,701,703,705,707,709,710,711,714,717,719,721,722,724,726,729,731,732,735,736,737,739,741,743,744,747,748,758,763,775,785,792,794,820,821,824,838,842,852,855,858,861,867,868,870,883,884,885,889,890,891,892,900,902,903,905,906,911,913,915,916,918,926,930,931,934,935,936,938,939,940,942,943,944,945,946,947,948,949,951,952,953,954,955,956,958,959,964,965,967,968,969,970,971,972,974,977,978,1002,1010,1014,1015,1021,1035,1043,1046,1048,1050,1052,1065,1072,1074,1075,1078,1079,1082,1085,1086,1090,1093,1095,1096,1097,1100,1101,1104,1105,1106,1108,1109,1112,1115,1116,1117,1120,1121,1155,1156,1159,1160,1162,1164,1166,1167,1183,1184,1186,1188,1192,1193,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1227,1230,1233,1236,1237,1243,1244,1245,1247,1248,1249,1250,1259,1284,1286,1321,],[60,60,60,-119,90,92,60,-1,97,60,114,117,114,125,-382,165,167,-369,60,-629,-630,-638,-412,-120,327,-618,-619,342,-620,-621,-622,-623,-624,-625,-626,-383,349,60,386,60,60,60,60,60,60,60,431,-1,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,114,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-1,450,-142,451,-635,-636,502,114,-637,327,327,60,-454,327,-383,-368,617,60,-141,60,633,-1,-1,114,655,-132,-133,656,-124,60,60,60,60,60,60,60,60,386,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,386,386,386,386,386,715,60,114,728,742,327,-631,-632,-666,-634,-633,327,60,-128,60,451,822,823,826,-1,-1,831,114,60,60,-645,327,327,-455,-383,-129,-143,886,386,-206,896,-1,-1,60,60,60,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,60,60,-130,60,60,386,386,386,-144,-171,-208,-215,502,-207,386,386,386,386,386,-145,-165,-209,-223,-1,60,-224,-225,-226,-228,961,-162,-1,60,-1,-212,-213,-139,-166,-210,-216,60,327,327,327,502,502,60,60,-454,60,1037,327,1054,1055,1056,327,-459,-460,-456,-457,60,-136,-140,-168,-196,327,386,60,60,386,114,1088,386,60,386,60,-169,-172,-198,-205,60,60,-197,60,-199,-138,-170,-217,-229,-235,-237,60,-218,-230,-219,-231,-220,-232,-222,-234,60,-1,-153,961,-202,-203,-137,60,-200,1123,114,327,502,60,60,886,-118,327,1176,1177,1178,1179,-461,-458,-176,-167,-211,60,386,1190,-1,386,-180,-214,60,60,386,60,-184,60,-236,-239,-227,-161,-149,-152,-151,-188,60,60,-459,60,-460,60,831,-116,-117,-175,60,-201,-174,-179,-204,-178,896,-183,-182,-238,-221,-233,-160,-148,-147,-150,-187,-186,60,60,60,-115,60,-192,60,-173,-177,-181,-146,-185,60,-191,-190,-189,]),'BOOLEAN':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,145,-411,-382,206,-391,-392,-394,-593,-21,-1,277,-158,295,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,303,338,-383,357,-98,-159,206,206,206,206,206,206,206,438,455,-390,-591,-17,-592,-601,-1,-19,-20,490,-26,-52,-1,455,-682,295,295,-689,-690,-691,-709,519,-555,295,-558,554,590,-468,-470,-554,599,206,627,455,-97,-114,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,277,206,206,206,206,206,206,206,206,206,455,-590,-15,-16,-51,-398,-597,-599,-600,145,-18,-23,-24,-25,-27,-28,-29,-30,762,338,787,-56,277,277,-683,295,-684,295,-692,206,-556,-467,-469,-559,295,-569,295,206,-159,-425,-433,590,206,206,-426,-434,-427,-435,-436,-428,854,866,590,899,206,206,206,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,206,206,206,206,455,206,206,-14,-595,-596,-598,206,-48,-50,-53,-54,-55,-57,-58,-59,-60,1004,277,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,295,-567,-568,206,206,206,1042,1042,1042,206,206,1086,206,206,206,206,206,206,277,206,206,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,206,206,1042,206,899,206,206,627,206,206,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,206,206,206,206,-571,-575,-572,-576,206,206,206,206,206,-89,206,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'VOID':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,179,190,191,196,197,199,200,237,239,242,248,252,254,258,259,261,262,263,283,298,306,308,331,332,333,335,351,354,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,510,512,529,530,540,541,542,545,549,562,563,566,571,572,573,576,577,579,580,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,749,754,755,756,758,773,774,776,804,805,806,807,808,809,810,811,812,814,816,817,820,821,838,885,903,905,916,926,936,938,940,949,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1079,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,152,-411,-382,231,-391,-392,-394,-593,-21,-1,-158,-1,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,152,339,-383,231,-98,231,231,231,231,231,231,231,-390,-591,-17,-592,-601,-1,-19,-20,152,-26,-52,-682,-555,-558,231,-468,-470,-554,600,231,231,-97,-114,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,-590,-15,-16,-51,-398,-597,-599,-600,152,-18,-23,-24,-25,-27,-28,-29,-30,152,339,-683,-684,231,-556,-467,-469,-559,-569,231,-425,-433,231,231,-426,-434,-427,-435,-436,-428,231,231,231,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,231,231,231,231,231,231,-14,-595,-596,-598,231,-48,-50,-53,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,-567,-568,231,231,231,231,231,231,231,231,231,231,231,231,231,231,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,231,231,231,231,231,231,231,231,-31,-39,-32,-40,-33,-41,-42,-34,231,231,231,231,231,231,231,231,231,231,]),'LSS':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,76,79,80,85,86,87,88,91,98,100,102,104,106,110,112,115,118,119,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,146,163,168,171,177,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,232,235,237,239,242,248,252,254,258,259,261,262,263,265,266,269,272,275,276,279,280,282,283,296,298,304,306,308,331,332,333,334,349,352,356,359,364,366,368,369,371,372,373,374,375,376,377,384,385,386,389,390,397,412,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,440,441,445,446,447,448,451,452,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,491,496,497,498,507,508,510,512,520,530,540,541,542,545,552,559,561,562,563,572,573,575,576,577,579,580,581,592,601,607,611,612,613,616,620,622,626,633,652,655,656,659,660,661,662,663,664,665,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,731,732,735,737,739,741,743,744,747,748,749,754,755,756,763,773,774,775,776,785,789,792,794,804,805,806,807,808,809,810,811,812,814,816,817,822,823,826,852,867,870,884,886,887,889,891,892,896,900,901,902,906,907,908,909,910,912,913,914,915,917,918,919,920,921,922,923,927,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,957,958,959,965,967,968,969,970,971,974,976,977,979,991,992,993,994,995,996,997,998,999,1000,1002,1010,1012,1013,1022,1029,1035,1043,1074,1075,1078,1081,1082,1083,1084,1085,1089,1090,1091,1093,1095,1098,1099,1100,1104,1106,1108,1109,1112,1115,1116,1117,1120,1128,1129,1130,1131,1132,1133,1134,1135,1160,1164,1166,1167,1183,1186,1188,1190,1191,1192,1193,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1236,1243,1245,1246,1247,1248,1249,1250,1284,1286,1321,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,103,-395,-396,103,116,116,116,116,103,-411,-382,103,103,-392,-394,-593,-21,-1,-629,-630,-638,-1,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,103,116,-383,-332,-98,116,-271,-274,-276,-278,-280,-282,404,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,116,116,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-390,-591,-17,-592,-601,-1,-19,-20,103,-26,-52,116,116,116,-628,-551,116,116,116,116,-682,116,-555,116,-558,116,-468,-470,-554,116,116,116,116,-240,-241,116,-252,-253,-332,-132,-133,-331,-124,-97,-114,-336,-338,116,116,-644,116,116,-318,116,-319,-321,116,-323,116,-335,-337,-326,116,-327,116,116,116,-639,-640,116,116,116,-641,116,-643,116,116,-590,-15,-16,-51,-398,-597,-599,-600,103,-18,-23,-24,-25,-27,-28,-29,-30,103,116,-631,-632,-666,-634,-633,-683,-684,116,-556,-467,-469,-559,-569,116,116,116,-425,-433,-426,-434,-645,-427,-435,-436,-428,116,116,116,116,-383,-129,-143,116,116,-206,116,116,-130,116,116,116,-310,116,-311,116,-312,116,-144,-171,-208,-215,-275,-277,-279,-281,-283,404,404,-288,-289,-290,-291,-292,116,-295,-296,-297,-207,-299,116,-300,116,-304,116,-305,116,-306,116,-145,-165,-209,-223,-1,-224,-225,-226,-228,963,-162,-1,-1,-212,-213,-139,-166,-210,-216,-14,-595,-596,-598,116,-48,-50,116,-53,116,116,116,116,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,-567,-568,116,116,116,116,116,116,116,116,116,-136,-168,-196,116,116,-339,116,116,-352,-354,116,-255,116,116,-341,116,-349,116,-351,-242,-250,-251,-254,116,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,116,-222,-234,-1,-153,963,-202,-203,-137,-200,116,116,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,116,116,-564,-565,116,116,-118,116,-176,-167,-211,116,116,-346,-348,116,-343,116,-345,-180,-214,-272,-273,116,-184,-236,-239,-227,-161,-149,-152,-151,-188,-31,-39,-32,-40,-33,-41,-42,-34,116,116,-116,-117,-175,-201,-174,116,116,-179,-204,-178,116,-183,-182,-238,-221,-233,-160,-148,-147,-150,-187,-186,116,-115,-192,-173,116,-177,-181,-146,-185,-191,-190,-189,]),'BYTE':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,155,-411,-382,155,-391,-392,-394,-593,-21,-1,155,-158,155,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,155,155,-383,155,-98,-159,155,155,155,155,155,155,155,155,155,-390,-591,-17,-592,-601,-1,-19,-20,155,-26,-52,-1,155,-682,155,155,-689,-690,-691,-709,155,-555,155,-558,155,155,-468,-470,-554,155,155,155,155,-97,-114,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-590,-15,-16,-51,-398,-597,-599,-600,155,-18,-23,-24,-25,-27,-28,-29,-30,155,155,155,-56,155,155,-683,155,-684,155,-692,155,-556,-467,-469,-559,155,-569,155,155,-159,-425,-433,155,155,155,-426,-434,-427,-435,-436,-428,155,155,155,155,155,155,155,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,155,155,155,155,155,155,155,-14,-595,-596,-598,155,-48,-50,-53,-54,-55,-57,-58,-59,-60,155,155,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,155,-567,-568,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,155,155,155,155,155,155,155,155,155,155,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,155,155,155,155,-571,-575,-572,-576,155,155,155,155,155,-89,155,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'SHORT':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,156,-411,-382,156,-391,-392,-394,-593,-21,-1,156,-158,156,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,156,156,-383,156,-98,-159,156,156,156,156,156,156,156,156,156,-390,-591,-17,-592,-601,-1,-19,-20,156,-26,-52,-1,156,-682,156,156,-689,-690,-691,-709,156,-555,156,-558,156,156,-468,-470,-554,156,156,156,156,-97,-114,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-590,-15,-16,-51,-398,-597,-599,-600,156,-18,-23,-24,-25,-27,-28,-29,-30,156,156,156,-56,156,156,-683,156,-684,156,-692,156,-556,-467,-469,-559,156,-569,156,156,-159,-425,-433,156,156,156,-426,-434,-427,-435,-436,-428,156,156,156,156,156,156,156,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,156,156,156,156,156,156,156,-14,-595,-596,-598,156,-48,-50,-53,-54,-55,-57,-58,-59,-60,156,156,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,156,-567,-568,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,156,156,156,156,156,156,156,156,156,156,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,156,156,156,156,-571,-575,-572,-576,156,156,156,156,156,-89,156,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'INT':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,157,-411,-382,157,-391,-392,-394,-593,-21,-1,157,-158,157,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,157,157,-383,157,-98,-159,157,157,157,157,157,157,157,157,157,-390,-591,-17,-592,-601,-1,-19,-20,157,-26,-52,-1,157,-682,157,157,-689,-690,-691,-709,157,-555,157,-558,157,157,-468,-470,-554,157,157,157,157,-97,-114,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-590,-15,-16,-51,-398,-597,-599,-600,157,-18,-23,-24,-25,-27,-28,-29,-30,157,157,157,-56,157,157,-683,157,-684,157,-692,157,-556,-467,-469,-559,157,-569,157,157,-159,-425,-433,157,157,157,-426,-434,-427,-435,-436,-428,157,157,157,157,157,157,157,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,157,157,157,157,157,157,157,-14,-595,-596,-598,157,-48,-50,-53,-54,-55,-57,-58,-59,-60,157,157,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,157,-567,-568,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,157,157,157,157,157,157,157,157,157,157,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,157,157,157,157,-571,-575,-572,-576,157,157,157,157,157,-89,157,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'LONG':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,158,-411,-382,158,-391,-392,-394,-593,-21,-1,158,-158,158,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,158,158,-383,158,-98,-159,158,158,158,158,158,158,158,158,158,-390,-591,-17,-592,-601,-1,-19,-20,158,-26,-52,-1,158,-682,158,158,-689,-690,-691,-709,158,-555,158,-558,158,158,-468,-470,-554,158,158,158,158,-97,-114,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-590,-15,-16,-51,-398,-597,-599,-600,158,-18,-23,-24,-25,-27,-28,-29,-30,158,158,158,-56,158,158,-683,158,-684,158,-692,158,-556,-467,-469,-559,158,-569,158,158,-159,-425,-433,158,158,158,-426,-434,-427,-435,-436,-428,158,158,158,158,158,158,158,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,158,158,158,158,158,158,158,-14,-595,-596,-598,158,-48,-50,-53,-54,-55,-57,-58,-59,-60,158,158,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,158,-567,-568,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,158,158,158,158,158,158,158,158,158,158,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,158,158,158,158,-571,-575,-572,-576,158,158,158,158,158,-89,158,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'CHAR':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,159,-411,-382,159,-391,-392,-394,-593,-21,-1,159,-158,159,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,159,159,-383,159,-98,-159,159,159,159,159,159,159,159,159,159,-390,-591,-17,-592,-601,-1,-19,-20,159,-26,-52,-1,159,-682,159,159,-689,-690,-691,-709,159,-555,159,-558,159,159,-468,-470,-554,159,159,159,159,-97,-114,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-590,-15,-16,-51,-398,-597,-599,-600,159,-18,-23,-24,-25,-27,-28,-29,-30,159,159,159,-56,159,159,-683,159,-684,159,-692,159,-556,-467,-469,-559,159,-569,159,159,-159,-425,-433,159,159,159,-426,-434,-427,-435,-436,-428,159,159,159,159,159,159,159,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,159,159,159,159,159,159,159,-14,-595,-596,-598,159,-48,-50,-53,-54,-55,-57,-58,-59,-60,159,159,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,159,-567,-568,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,159,159,159,159,159,159,159,159,159,159,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,159,159,159,159,-571,-575,-572,-576,159,159,159,159,159,-89,159,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'FLOAT':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,160,-411,-382,160,-391,-392,-394,-593,-21,-1,160,-158,160,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,160,160,-383,160,-98,-159,160,160,160,160,160,160,160,160,160,-390,-591,-17,-592,-601,-1,-19,-20,160,-26,-52,-1,160,-682,160,160,-689,-690,-691,-709,160,-555,160,-558,160,160,-468,-470,-554,160,160,160,160,-97,-114,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-590,-15,-16,-51,-398,-597,-599,-600,160,-18,-23,-24,-25,-27,-28,-29,-30,160,160,160,-56,160,160,-683,160,-684,160,-692,160,-556,-467,-469,-559,160,-569,160,160,-159,-425,-433,160,160,160,-426,-434,-427,-435,-436,-428,160,160,160,160,160,160,160,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,160,160,160,160,160,160,160,-14,-595,-596,-598,160,-48,-50,-53,-54,-55,-57,-58,-59,-60,160,160,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,160,-567,-568,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,160,160,160,160,160,160,160,160,160,160,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,160,160,160,160,-571,-575,-572,-576,160,160,160,160,160,-89,160,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'DOUBLE':([21,22,23,29,30,31,32,37,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,65,70,71,73,74,82,87,88,91,96,98,102,104,106,110,112,116,120,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,148,163,169,171,176,179,190,191,196,197,199,200,217,236,237,239,242,248,252,254,258,259,261,262,263,264,273,283,285,286,287,288,289,291,292,298,299,306,308,326,331,332,333,335,351,354,361,376,377,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,456,458,459,460,461,469,471,472,475,479,480,481,482,483,484,485,486,487,493,494,495,505,506,510,511,512,515,516,529,530,540,541,542,543,545,546,549,556,562,563,565,566,571,572,573,576,577,579,580,587,591,595,628,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,694,721,736,749,754,755,756,758,773,774,776,777,778,779,780,781,782,783,788,804,805,806,807,808,809,810,811,812,814,815,816,817,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,979,991,992,993,994,995,996,997,998,999,1000,1012,1013,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1155,1159,1162,1184,1222,1224,1225,1226,1227,1230,1233,1237,1244,1258,1259,1262,1265,1268,1269,1270,1274,1278,1282,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-914,-1,-915,-916,-917,-918,-919,-920,-921,-922,-923,-924,-925,-926,-927,-119,-113,-913,-393,-395,-396,-159,161,-411,-382,161,-391,-392,-394,-593,-21,-1,161,-158,161,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-919,161,161,-383,161,-98,-159,161,161,161,161,161,161,161,161,161,-390,-591,-17,-592,-601,-1,-19,-20,161,-26,-52,-1,161,-682,161,161,-689,-690,-691,-709,161,-555,161,-558,161,161,-468,-470,-554,161,161,161,161,-97,-114,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-590,-15,-16,-51,-398,-597,-599,-600,161,-18,-23,-24,-25,-27,-28,-29,-30,161,161,161,-56,161,161,-683,161,-684,161,-692,161,-556,-467,-469,-559,161,-569,161,161,-159,-425,-433,161,161,161,-426,-434,-427,-435,-436,-428,161,161,161,161,161,161,161,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,161,161,161,161,161,161,161,-14,-595,-596,-598,161,-48,-50,-53,-54,-55,-57,-58,-59,-60,161,161,-557,-421,-429,-422,-430,-423,-431,-432,-424,-566,161,-567,-568,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-594,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,161,161,161,161,161,161,161,161,161,161,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,161,161,161,161,-571,-575,-572,-576,161,161,161,161,161,-89,161,-92,-90,-91,-570,-574,-581,-585,-589,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'RPAREN':([21,22,23,65,91,96,115,118,119,128,131,150,151,155,156,157,158,159,160,161,163,168,170,171,172,173,174,175,176,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,326,354,355,356,357,358,359,360,362,363,364,365,366,368,369,371,372,373,374,375,376,377,378,379,384,385,388,390,395,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,454,455,496,497,498,507,508,510,512,565,567,575,582,584,585,586,595,611,612,613,622,623,625,626,627,629,631,635,650,652,658,659,660,661,662,663,664,666,669,670,671,672,674,676,678,679,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,736,739,741,743,744,747,748,758,789,803,820,821,824,825,827,833,842,843,844,846,849,855,856,857,858,859,860,861,862,863,871,885,889,891,892,895,897,898,899,900,901,902,904,905,906,907,908,909,910,911,912,913,914,915,917,918,919,920,921,922,923,924,926,928,930,931,932,933,934,935,937,939,940,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,964,966,967,969,970,971,972,974,982,1014,1015,1016,1018,1035,1039,1044,1045,1047,1049,1051,1053,1057,1058,1059,1060,1061,1062,1063,1064,1073,1074,1075,1078,1079,1081,1082,1083,1084,1085,1086,1089,1090,1091,1092,1093,1095,1096,1098,1099,1101,1103,1104,1105,1106,1108,1109,1114,1115,1116,1117,1119,1120,1121,1140,1141,1142,1143,1146,1148,1155,1156,1157,1159,1160,1162,1166,1167,1170,1171,1172,1173,1174,1175,1180,1181,1182,1183,1184,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1213,1214,1215,1216,1227,1228,1230,1231,1233,1234,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1271,1275,1279,1284,1285,1286,1321,],[-94,-95,-96,-113,-382,171,-629,-630,-638,-412,-120,-618,-619,-620,-621,-622,-623,-624,-625,-626,-383,-332,376,-98,377,-1,-103,-104,-105,-271,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,583,624,630,632,649,651,-240,652,-616,-628,-241,-551,-553,-252,-253,-332,-132,-133,-331,-124,-97,-114,-99,-101,-336,-338,669,-644,-109,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-615,-617,-631,-632,-666,-634,-633,-683,-684,834,-447,-645,845,-503,-506,-505,872,-383,-129,-143,-206,893,894,632,649,-616,903,-356,916,-130,-102,-313,-310,-314,-311,-315,-312,-144,-171,931,-1,-208,-215,-275,-107,-108,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,967,-212,-213,-139,-166,-210,-216,981,-552,1011,1017,1019,-630,-644,-640,1032,-528,-544,-524,-510,-509,-525,-541,-521,-526,-542,-522,-527,-543,-523,1066,1074,-136,-168,-196,-247,-249,-615,-617,-638,-339,-340,-355,624,-353,-352,-354,-552,-255,-662,-663,-665,-341,-342,-349,-350,-351,-242,-250,-251,-254,-100,1093,-642,-169,-172,-193,-195,-198,-205,-106,-197,1104,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,1115,1116,-153,-202,-203,-137,1120,-200,1127,1147,1149,1150,1152,-118,-508,-504,-508,-537,-540,-538,-539,-513,-517,-514,-518,-515,-519,-520,-516,1183,-176,-167,-211,1188,-552,-347,-346,-348,632,649,-343,-344,-345,1192,-180,-214,1195,-272,-273,624,1198,-184,1200,-236,-239,-227,1205,-149,-152,-151,1208,-188,1210,1217,1218,1219,1220,1221,1223,1229,-634,-642,1232,-638,1235,-116,-117,-536,-507,-525,-526,-527,-528,-533,-534,-535,-175,1243,-201,1245,-174,-248,-664,-179,-204,1247,-178,-194,632,-183,1248,-182,-238,-221,-233,-148,-147,-150,-187,1250,-186,1252,1253,1254,1255,1272,1273,1276,1277,1280,1281,-115,-529,-532,-530,-531,1284,-192,1286,-173,-552,-177,-181,-146,-185,1312,1315,1318,-191,1321,-190,-189,]),'QUES':([21,22,23,65,82,91,115,116,118,119,120,128,131,163,168,171,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,273,275,276,280,283,359,364,368,369,371,372,373,374,375,376,377,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,788,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,963,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-94,-95,-96,-113,-159,-382,-629,274,-630,-638,-158,-412,-120,-383,-332,-98,391,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,503,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-97,-114,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,274,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,274,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'COMMA':([21,22,23,58,65,84,85,86,91,107,115,118,119,128,131,163,168,171,173,174,175,176,178,179,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,245,249,253,265,266,268,269,270,271,272,274,275,276,280,282,283,311,313,314,316,321,324,359,364,368,369,371,372,373,374,375,376,377,378,379,384,385,390,393,395,396,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,462,463,464,473,474,476,496,497,498,499,500,501,503,504,507,508,510,512,522,524,526,527,533,535,537,538,558,559,560,561,564,567,570,575,584,585,586,611,612,613,622,626,635,652,658,659,660,661,662,663,664,666,669,671,672,674,676,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,751,759,766,768,770,771,789,790,791,792,793,794,796,798,800,801,828,829,830,835,836,837,838,839,840,841,842,843,844,846,849,855,856,857,858,859,860,861,862,863,889,891,892,895,897,901,902,904,906,907,908,910,911,912,913,914,915,917,918,919,920,921,922,923,924,928,930,931,932,933,934,935,937,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,975,976,977,978,980,981,984,986,988,989,1005,1006,1007,1008,1009,1010,1029,1030,1031,1033,1035,1036,1039,1045,1047,1049,1051,1053,1057,1058,1059,1060,1061,1062,1063,1064,1074,1075,1078,1082,1083,1084,1085,1089,1090,1091,1093,1095,1098,1099,1102,1104,1106,1108,1109,1115,1116,1117,1120,1122,1124,1125,1126,1127,1136,1137,1138,1139,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1180,1181,1182,1183,1186,1188,1189,1191,1192,1193,1195,1196,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1211,1212,1236,1238,1239,1240,1241,1243,1245,1247,1248,1249,1250,1251,1283,1284,1286,1321,],[-94,-95,-96,-119,-113,122,122,122,-382,250,-629,-630,-638,-412,-120,-383,-332,-98,-1,-103,-104,-105,-271,394,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-1,467,-1,-635,-636,-1,-1,-672,-673,-628,-677,-551,-553,-637,122,-682,568,568,-446,568,568,568,-240,-241,-252,-253,-332,-132,-133,-331,-124,-97,-114,657,-101,-336,-338,-644,677,-109,-1,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,750,-400,-650,757,-603,-610,-631,-632,-666,788,-671,788,-675,-676,-634,-633,-683,-684,568,568,568,568,568,568,568,568,-1,-1,-551,-553,832,-447,832,-645,847,848,850,-383,-129,-143,-206,-1,-356,-130,-102,-313,-310,-314,-311,-315,-312,-144,-171,-1,-208,-215,-275,-107,-108,938,-112,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-649,-607,568,568,568,568,-552,-674,-678,-679,-680,-681,568,568,568,568,1028,-548,1028,-445,-448,-449,1034,-439,-440,-444,-528,-544,-524,1038,1038,-525,-541,-521,-526,-542,-522,-527,-543,-523,-136,-168,-196,1080,-249,-339,-340,-355,-353,-352,-354,-255,-662,-663,-665,-341,-342,-349,-350,-351,-242,-250,-251,-254,-100,-642,-169,-172,1097,-195,-198,-205,-106,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-399,-654,-655,-657,-602,-608,568,568,568,568,568,568,568,568,-669,-670,-552,-437,-438,1165,-118,-1,-508,-508,-537,-540,-538,-539,-513,-517,-514,-518,-515,-519,-520,-516,-176,-167,-211,-347,-346,-348,-1,-343,-344,-345,-180,-214,-272,-273,-111,-184,-236,-239,-227,-149,-152,-151,-188,-658,-661,-656,-605,-609,568,568,568,568,-546,-547,-116,-117,1237,-123,-536,-507,-525,-526,-527,-528,-533,-534,-535,-175,-201,-174,-248,-664,-179,-204,-178,-194,-1,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-660,-606,-115,-529,-532,-530,-531,-192,-173,-177,-181,-146,-185,-659,-122,-191,-190,-189,]),'RBRACE':([21,22,23,29,30,31,32,37,44,58,65,71,73,74,87,88,91,98,102,104,106,107,110,112,115,118,119,127,128,129,130,131,132,133,134,135,136,137,138,139,163,168,171,174,175,176,178,179,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,237,239,242,248,249,250,251,252,253,254,258,259,261,262,263,264,265,266,272,275,276,280,283,284,285,286,287,288,289,291,298,299,306,308,319,331,332,333,359,364,368,369,371,372,373,374,375,376,377,384,385,390,393,394,395,396,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,456,458,459,460,461,467,468,469,470,471,472,473,474,475,476,479,480,481,482,483,484,485,486,494,495,496,497,498,507,508,510,512,513,514,515,516,530,540,541,542,543,544,545,546,562,563,572,573,575,576,577,579,580,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,749,753,754,755,756,759,773,774,776,777,778,779,780,781,782,789,804,805,806,807,808,809,810,811,812,813,814,815,816,817,836,837,838,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,937,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,979,980,981,991,992,993,994,995,996,997,998,999,1000,1012,1013,1033,1034,1035,1036,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1102,1104,1106,1108,1109,1115,1116,1117,1120,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1144,1145,1151,1153,1165,1166,1167,1168,1169,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1212,1222,1224,1225,1226,1236,1243,1245,1247,1248,1249,1250,1258,1262,1265,1268,1269,1270,1274,1278,1282,1283,1284,1286,1289,1292,1295,1298,1300,1301,1304,1305,1307,1308,1310,1311,1313,1314,1316,1317,1319,1320,1321,1323,1324,1326,1327,1329,1330,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,],[-94,-95,-96,-384,-385,-12,-13,-397,-1,-119,-113,-393,-395,-396,131,-411,-382,-391,-392,-394,-593,131,-21,-1,-629,-630,-638,131,-412,-409,-410,-120,-413,-414,-415,-416,-417,-418,-419,-420,-383,-332,-98,-103,-104,-105,-271,131,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-390,-591,-17,-592,131,131,131,-601,-1,-1,-19,-20,131,-26,-52,-1,-635,-636,-628,-551,-553,-637,-682,131,131,-688,-689,-690,-691,-709,-555,131,-558,131,131,-468,-470,-554,-240,-241,-252,-253,-332,-132,-133,-331,-124,-97,-114,-336,-338,-644,131,131,-109,-1,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-590,-15,-16,-51,-398,131,131,-597,131,-599,-600,-604,-603,-614,-610,-18,-23,-24,-25,-27,-28,-29,-30,131,-56,-631,-632,-666,-634,-633,-683,-684,-686,-685,-687,-692,-556,-467,-469,-559,131,131,-569,131,-425,-433,-426,-434,-645,-427,-435,-436,-428,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,131,-107,-108,-110,-112,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-14,131,-595,-596,-598,-607,-48,-50,-53,-54,-55,-57,-58,-59,-60,-552,-557,-421,-429,-422,-430,-423,-431,-432,-424,131,-566,131,-567,-568,-448,-449,131,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-106,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-594,-602,-608,-47,-49,-35,-43,-36,-44,-37,-45,-46,-38,-564,-565,131,131,-118,-1,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-111,-184,-236,-239,-227,-149,-152,-151,-188,-605,-609,-31,-39,-32,-40,-33,-41,-42,-34,-738,-739,-573,-577,131,-116,-117,-121,-123,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-606,-571,-575,-572,-576,-115,-192,-173,-177,-181,-146,-185,-89,-92,-90,-91,-570,-574,-581,-585,-589,-122,-191,-190,-73,-76,-74,-75,-85,-81,-88,-84,-86,-82,-87,-83,-580,-579,-584,-583,-587,-588,-189,-69,-65,-72,-68,-70,-66,-71,-67,-77,-80,-78,-79,-578,-582,-586,-61,-64,-62,-63,]),'LBRACK':([21,22,23,65,82,91,115,118,119,120,128,131,150,151,155,156,157,158,159,160,161,163,168,171,177,206,207,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,230,232,265,266,278,280,350,353,356,357,362,371,372,373,375,376,377,397,419,422,424,428,430,434,437,438,439,440,441,449,454,455,496,497,498,507,508,548,551,552,554,555,611,612,613,620,622,626,627,629,652,659,661,663,666,669,672,674,699,701,703,705,707,709,710,711,714,719,720,737,739,741,743,744,747,748,889,890,891,892,902,906,915,918,930,931,934,935,939,942,943,944,947,948,957,967,969,970,971,974,1074,1075,1078,1082,1085,1086,1090,1093,1095,1100,1104,1106,1108,1115,1116,1117,1120,1183,1186,1188,1192,1193,1195,1197,1198,1200,1201,1205,1206,1207,1208,1210,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-94,-95,-96,-113,-159,-382,-629,-630,-638,-158,-412,-120,-618,-619,-620,-621,-622,-623,-624,-625,-626,-383,351,-98,387,-1,436,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-1,-142,-635,-636,-616,-637,618,-141,387,-1,-1,351,-132,-133,436,-97,-114,387,387,387,387,387,387,618,721,721,721,721,721,618,-615,-617,-631,-632,-666,-634,-633,-128,351,387,-1,-1,-383,-129,-143,387,-206,387,-1,-1,-130,387,387,387,-144,-171,-208,-215,-207,387,387,387,387,387,-145,-165,-209,-1,949,-638,-212,-213,-139,-166,-210,-216,-136,-140,-168,-196,387,387,387,387,-169,-172,-198,-205,-197,-199,-138,-170,721,-237,721,-153,-202,-203,-137,-200,-176,-167,-211,387,387,-1,387,-180,-214,387,-184,-236,-239,-149,-152,-151,-188,-175,-201,-174,-179,-204,-178,387,-183,-182,-238,-148,-147,-150,-187,-186,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'IF':([29,30,37,58,71,73,74,98,102,104,106,127,128,131,237,239,248,252,285,286,287,288,289,291,299,308,456,461,469,471,472,511,515,516,543,546,754,755,756,815,979,1011,1144,1145,1151,1153,1222,1224,1225,1226,1269,1270,1274,1278,1282,1313,1314,1316,1317,1319,1320,1338,1339,1340,],[-384,-385,-397,-119,-393,-395,-396,-391,-392,-394,-593,297,-412,-120,-390,-591,-592,-601,297,297,-689,-690,-691,-709,297,297,-590,-398,-597,-599,-600,297,297,-692,297,297,-595,-596,-598,297,-594,297,-738,-739,-573,-577,-571,-575,-572,-576,-570,-574,-581,-585,-589,-580,-579,-584,-583,-587,-588,-578,-582,-586,]),'ADD':([58,91,96,115,118,119,128,131,168,169,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,351,354,359,364,368,369,371,372,373,374,375,380,381,382,383,384,385,387,388,390,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,433,435,436,446,448,496,497,498,507,508,510,512,529,549,566,571,575,611,612,613,622,630,634,636,637,638,639,640,641,642,643,644,645,646,647,649,652,653,654,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,721,722,724,726,729,736,739,741,743,744,747,748,758,789,820,821,838,885,889,891,892,901,902,905,906,907,908,910,914,915,917,918,919,920,921,922,923,926,928,930,931,934,935,936,938,939,940,942,943,944,945,946,947,948,949,951,952,953,954,955,956,958,959,964,967,969,970,971,972,974,1014,1015,1035,1074,1075,1078,1079,1082,1083,1084,1089,1090,1091,1093,1095,1096,1097,1098,1099,1101,1104,1105,1106,1108,1109,1115,1116,1117,1120,1121,1155,1159,1162,1166,1167,1183,1184,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1227,1230,1233,1236,1237,1243,1244,1245,1247,1248,1249,1250,1259,1284,1286,1321,],[-119,-382,190,-629,-630,-638,-412,-120,-332,190,-271,190,-274,-276,-278,-280,-282,-284,-287,413,-298,190,190,-303,-316,-317,-320,190,190,-325,190,190,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,190,190,-240,-241,-252,-253,-332,-132,-133,-331,-124,190,190,190,190,-336,-338,190,190,-644,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,190,-641,-643,-631,-632,-666,-634,-633,-683,-684,190,190,190,190,-645,-383,-129,-143,-206,190,190,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,190,-130,190,190,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,413,413,413,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,190,-224,-225,-226,-228,190,-212,-213,-139,-166,-210,-216,190,-552,190,190,190,190,-136,-168,-196,-339,-340,190,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,190,-642,-169,-172,-198,-205,190,190,-197,190,-199,-138,-170,-217,-229,-235,-237,190,-218,-230,-219,-231,-220,-232,-222,-234,190,-153,-202,-203,-137,190,-200,190,190,-118,-176,-167,-211,190,-347,-346,-348,-343,-344,-345,-180,-214,190,190,-272,-273,190,-184,190,-236,-239,-227,-149,-152,-151,-188,190,190,190,190,-116,-117,-175,190,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,190,190,190,-115,190,-192,190,-173,-177,-181,-146,-185,190,-191,-190,-189,]),'SUB':([58,91,96,115,118,119,128,131,168,169,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,351,354,359,364,368,369,371,372,373,374,375,380,381,382,383,384,385,387,388,390,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,418,420,421,422,423,424,425,426,427,428,429,430,433,435,436,446,448,496,497,498,507,508,510,512,529,549,566,571,575,611,612,613,622,630,634,636,637,638,639,640,641,642,643,644,645,646,647,649,652,653,654,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,721,722,724,726,729,736,739,741,743,744,747,748,758,789,820,821,838,885,889,891,892,901,902,905,906,907,908,910,914,915,917,918,919,920,921,922,923,926,928,930,931,934,935,936,938,939,940,942,943,944,945,946,947,948,949,951,952,953,954,955,956,958,959,964,967,969,970,971,972,974,1014,1015,1035,1074,1075,1078,1079,1082,1083,1084,1089,1090,1091,1093,1095,1096,1097,1098,1099,1101,1104,1105,1106,1108,1109,1115,1116,1117,1120,1121,1155,1159,1162,1166,1167,1183,1184,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1227,1230,1233,1236,1237,1243,1244,1245,1247,1248,1249,1250,1259,1284,1286,1321,],[-119,-382,191,-629,-630,-638,-412,-120,-332,191,-271,191,-274,-276,-278,-280,-282,-284,-287,414,-298,191,191,-303,-316,-317,-320,191,191,-325,191,191,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,191,191,-240,-241,-252,-253,-332,-132,-133,-331,-124,191,191,191,191,-336,-338,191,191,-644,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,191,-641,-643,-631,-632,-666,-634,-633,-683,-684,191,191,191,191,-645,-383,-129,-143,-206,191,191,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,191,-130,191,191,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,414,414,414,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,191,-224,-225,-226,-228,191,-212,-213,-139,-166,-210,-216,191,-552,191,191,191,191,-136,-168,-196,-339,-340,191,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,191,-642,-169,-172,-198,-205,191,191,-197,191,-199,-138,-170,-217,-229,-235,-237,191,-218,-230,-219,-231,-220,-232,-222,-234,191,-153,-202,-203,-137,191,-200,191,191,-118,-176,-167,-211,191,-347,-346,-348,-343,-344,-345,-180,-214,191,191,-272,-273,191,-184,191,-236,-239,-227,-149,-152,-151,-188,191,191,191,191,-116,-117,-175,191,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,191,191,191,-115,191,-192,191,-173,-177,-181,-146,-185,191,-191,-190,-189,]),'DEC':([58,91,96,128,131,168,169,177,179,190,191,196,197,198,199,200,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,351,354,356,371,372,373,374,375,380,381,382,383,384,385,387,388,391,392,397,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,419,422,424,425,426,428,430,436,529,549,566,571,575,611,612,613,620,622,626,630,634,636,637,638,639,640,641,642,643,644,645,646,647,649,652,653,654,659,661,663,666,669,672,674,699,701,703,705,707,709,710,711,714,717,719,721,722,724,726,729,736,739,741,743,744,747,748,758,820,821,838,885,889,891,892,902,905,906,915,918,926,930,931,934,935,936,938,939,940,942,943,944,945,946,947,948,949,951,952,953,954,955,956,958,959,964,967,969,970,971,972,974,1014,1015,1035,1074,1075,1078,1079,1082,1085,1090,1093,1095,1096,1097,1100,1101,1104,1105,1106,1108,1109,1115,1116,1117,1120,1121,1155,1159,1162,1166,1167,1183,1184,1186,1188,1192,1193,1195,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1227,1230,1233,1236,1237,1243,1244,1245,1247,1248,1249,1250,1259,1284,1286,1321,],[-119,-382,197,-412,-120,-332,197,385,197,197,197,197,197,426,197,197,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,197,197,385,-332,-132,-133,-331,-124,197,197,197,197,-336,-338,197,197,197,197,385,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,385,385,385,-335,-337,385,385,197,197,197,197,197,-645,-383,-129,-143,385,-206,385,197,197,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,197,-130,197,197,385,385,385,-144,-171,-208,-215,-207,385,385,385,385,385,-145,-165,-209,-223,-1,197,-224,-225,-226,-228,197,-212,-213,-139,-166,-210,-216,197,197,197,197,197,-136,-168,-196,385,197,385,385,385,197,-169,-172,-198,-205,197,197,-197,197,-199,-138,-170,-217,-229,-235,-237,197,-218,-230,-219,-231,-220,-232,-222,-234,197,-153,-202,-203,-137,197,-200,197,197,-118,-176,-167,-211,197,385,385,385,-180,-214,197,197,385,197,-184,197,-236,-239,-227,-149,-152,-151,-188,197,197,197,197,-116,-117,-175,197,-201,-174,-179,-204,-178,385,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,197,197,197,-115,197,-192,197,-173,-177,-181,-146,-185,197,-191,-190,-189,]),'LNOT':([58,96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,]),'NOT':([58,96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,]),'LPAREN':([58,65,91,96,146,163,169,177,179,190,191,196,197,199,200,297,304,308,311,316,321,324,334,341,351,354,356,380,381,382,383,387,388,391,392,397,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,419,422,424,428,430,436,441,443,476,498,529,533,535,537,538,548,549,550,552,566,571,611,620,626,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,659,661,663,665,701,703,705,707,709,711,721,731,732,733,735,736,737,744,758,766,768,770,771,818,819,820,821,838,885,888,902,903,905,906,909,915,916,918,926,929,936,938,940,941,949,960,962,964,965,968,972,973,984,986,988,989,1005,1006,1007,1008,1014,1015,1021,1022,1024,1027,1075,1079,1081,1082,1085,1090,1096,1097,1100,1101,1105,1112,1113,1118,1121,1136,1137,1138,1139,1154,1155,1158,1159,1161,1162,1184,1185,1197,1204,1227,1230,1233,1237,1244,1246,1259,],[-119,96,-382,169,326,-383,354,388,169,169,169,169,169,169,169,529,326,549,565,565,565,565,595,565,354,354,388,169,169,169,169,354,354,354,169,388,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,388,388,388,388,388,354,-1,736,758,-666,354,565,565,565,565,820,354,821,388,354,354,885,388,388,169,905,354,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,169,905,354,354,388,388,388,926,388,388,388,388,388,940,354,-156,-162,964,-1,354,-1,972,354,565,565,565,565,1014,1015,354,354,354,354,1079,388,905,354,388,926,388,905,388,354,1096,1101,169,354,1105,354,-157,-163,354,-1,-155,354,1121,565,565,565,565,1140,1141,1142,1143,354,354,1155,926,1159,1162,1184,354,926,388,388,388,354,354,388,354,354,-161,-164,-154,354,1213,1214,1215,1216,1227,354,1230,354,1233,354,354,1244,388,-160,354,354,354,354,354,926,169,]),'THIS':([58,96,131,149,150,151,153,154,155,156,157,158,159,160,161,169,179,190,191,196,197,199,200,308,318,323,329,330,343,349,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,498,529,547,549,566,571,575,581,588,589,590,592,607,626,627,629,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,655,721,736,758,820,821,822,824,825,827,838,851,852,853,854,868,869,870,883,884,885,898,899,900,903,905,916,926,936,938,940,949,964,972,1014,1015,1037,1054,1055,1056,1065,1072,1079,1081,1085,1086,1096,1097,1101,1105,1121,1155,1156,1157,1159,1160,1162,1176,1177,1178,1179,1184,1197,1227,1230,1233,1237,1244,1246,1259,],[-119,211,-120,-450,-618,-619,-452,-453,-620,-621,-622,-623,-624,-625,-626,211,211,211,211,211,211,211,211,548,-462,-463,-454,-466,-464,612,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,-666,211,818,211,211,211,-645,843,856,859,862,-451,-455,843,862,859,211,211,211,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,211,211,211,211,612,211,211,211,211,211,612,-454,-466,-463,211,1047,1049,1051,1053,-459,-465,-460,-456,-457,211,1051,1053,1049,211,211,211,211,211,211,211,211,211,211,211,211,1170,1180,1181,1182,-461,-458,211,-451,843,862,211,211,211,211,211,211,-459,-465,211,-460,211,1238,1239,1240,1241,211,843,211,211,211,211,211,-451,211,]),'NEW':([58,96,169,179,190,191,196,197,199,200,308,349,351,354,380,381,382,383,386,387,388,389,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,431,436,445,447,453,498,529,549,566,571,630,632,633,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,655,656,673,721,736,738,740,758,820,821,822,823,826,838,885,896,903,905,916,926,927,936,938,940,949,964,972,1014,1015,1079,1094,1096,1097,1101,1105,1121,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[-119,217,217,217,217,217,217,217,217,217,217,616,217,217,217,217,217,217,616,217,217,674,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,616,217,739,741,748,-666,217,217,217,217,217,217,616,217,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,217,217,217,217,616,616,935,217,217,969,970,217,217,217,616,616,616,217,217,616,217,217,217,217,1095,217,217,217,217,217,217,217,217,217,1193,217,217,217,217,217,217,217,217,217,616,217,217,217,217,217,217,]),'BOOL_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,]),'NULL_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,]),'DECIMAL_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,]),'HEX_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,]),'OCTAL_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,]),'BINARY_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,]),'FLOAT_DEC_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,]),'FLOAT_HEX_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,]),'STRING_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,]),'CHAR_LIT':([58,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,]),'SUPER':([58,96,169,179,190,191,196,197,199,200,274,308,349,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,498,503,529,547,549,566,571,630,632,634,636,637,638,639,640,641,642,643,644,645,646,647,649,651,653,654,655,721,736,758,820,821,822,823,826,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1020,1023,1026,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[-119,233,233,233,233,233,233,233,233,233,506,550,614,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,-666,506,233,819,233,233,233,233,233,233,-259,-260,-261,-262,-263,-264,-265,-266,-267,-268,-269,-270,233,233,233,233,614,233,233,233,233,233,1021,1024,1027,233,233,233,233,233,233,233,233,233,233,233,233,233,233,1154,1158,1161,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,]),'MUL':([90,91,92,115,118,119,128,131,165,168,177,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,356,359,364,368,369,371,372,373,374,375,384,385,390,397,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,620,622,626,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1085,1089,1090,1091,1093,1095,1098,1099,1100,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[162,-382,164,-629,-630,-638,-412,-120,347,-332,381,-271,-274,-276,-278,-280,-282,-284,-287,-294,415,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,381,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,381,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,381,-206,381,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,415,381,415,381,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,381,-343,-344,-345,-180,-214,-272,-273,381,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,381,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'COLON_SEP':([91,115,118,119,128,131,168,177,187,202,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,232,233,234,235,265,266,280,356,358,363,365,366,371,372,373,374,375,390,397,419,422,424,428,430,433,435,446,448,496,497,498,507,508,548,550,551,552,553,575,611,612,613,614,620,622,626,652,659,661,663,665,666,669,672,674,699,701,703,705,707,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,824,825,827,889,891,892,900,902,906,909,915,918,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1021,1022,1035,1074,1075,1078,1081,1082,1085,1090,1093,1095,1100,1104,1106,1108,1109,1115,1116,1117,1120,1156,1157,1160,1166,1167,1183,1186,1188,1192,1193,1195,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1246,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,352,389,412,432,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,445,447,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,452,453,-627,-635,-636,-637,389,412,453,445,447,352,-132,-133,432,-124,-644,389,389,389,389,389,389,-639,-640,-641,-643,-631,-632,-666,-634,-633,-128,452,352,389,432,-645,-383,-129,-143,887,389,-206,389,-130,389,389,389,927,-144,-171,-208,-215,-207,389,389,389,389,389,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-630,-644,-640,-136,-168,-196,-638,389,389,927,389,389,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,887,927,-118,-176,-167,-211,927,389,389,389,-180,-214,389,-184,-236,-239,-227,-149,-152,-151,-188,-634,-642,-638,-116,-117,-175,-201,-174,-179,-204,-178,389,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,927,-177,-181,-146,-185,-191,-190,-189,]),'QUO':([91,115,118,119,128,131,168,177,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,356,359,364,368,369,371,372,373,374,375,384,385,390,397,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,620,622,626,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1085,1089,1090,1091,1093,1095,1098,1099,1100,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,382,-271,-274,-276,-278,-280,-282,-284,-287,-294,416,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,382,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,382,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,382,-206,382,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,416,382,416,382,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,382,-343,-344,-345,-180,-214,-272,-273,382,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,382,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'REM':([91,115,118,119,128,131,168,177,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,356,359,364,368,369,371,372,373,374,375,384,385,390,397,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,620,622,626,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1085,1089,1090,1091,1093,1095,1098,1099,1100,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,383,-271,-274,-276,-278,-280,-282,-284,-287,-294,417,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,383,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,383,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,383,-206,383,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,417,383,417,383,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,383,-343,-344,-345,-180,-214,-272,-273,383,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,383,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'SHL':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,-284,409,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,409,409,409,409,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'SHR':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,-284,410,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,410,410,410,410,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'SHR_UN':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,-284,411,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,411,411,411,411,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'GTR':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,244,245,265,266,267,268,269,270,271,272,274,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,462,463,464,496,497,498,499,500,501,503,504,507,508,510,512,575,611,612,613,622,635,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,751,789,790,791,792,793,794,889,891,892,901,902,904,906,907,908,910,911,912,913,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,963,967,969,970,971,974,975,976,977,978,1009,1010,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1122,1124,1125,1166,1167,1183,1186,1188,1191,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1211,1236,1243,1245,1247,1248,1249,1250,1251,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,405,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,461,-1,-635,-636,498,-1,-1,-672,-673,-628,-677,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-401,-400,-650,-631,-632,-666,-667,-671,-668,-675,-676,-634,-633,-683,-684,-645,-383,-129,-143,-206,-356,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,405,405,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-649,-552,-674,-678,-679,-680,-681,-136,-168,-196,-339,-340,-355,-353,-352,-354,-255,-662,-663,-665,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,1113,-153,-202,-203,-137,-200,-399,-654,-655,-657,-669,-670,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-658,-661,-656,-116,-117,-175,-201,-174,-664,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-660,-115,-192,-173,-177,-181,-146,-185,-659,-191,-190,-189,]),'LEQ':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,406,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,406,406,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'GEQ':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,407,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,407,407,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'INSTANCEOF':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,408,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,408,408,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'EQL':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,402,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,402,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'NEQ':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,403,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,403,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'AND':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,356,358,359,363,364,365,366,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,626,631,635,650,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,824,825,827,889,891,892,900,901,902,904,906,907,908,909,910,911,912,913,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,976,977,978,1035,1074,1075,1078,1081,1082,1083,1084,1085,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1122,1124,1125,1156,1157,1160,1166,1167,1183,1186,1188,1191,1192,1193,1195,1197,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1211,1236,1243,1245,1246,1247,1248,1249,1250,1251,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,401,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,648,648,-240,-628,-241,-551,-553,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,648,648,-356,648,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,401,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-630,-644,-640,-136,-168,-196,-638,-339,-340,-355,-353,-352,-354,-552,-255,-662,-663,-665,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,648,648,648,-118,-176,-167,-211,-552,-347,-346,-348,648,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,648,648,648,-634,-642,-638,-116,-117,-175,-201,-174,-664,-179,-204,-178,648,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,648,-115,-192,-173,-552,-177,-181,-146,-185,648,-191,-190,-189,]),'XOR':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,400,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,400,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'OR':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,399,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,399,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'LAND':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,398,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,398,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'LOR':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,392,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'ASSIGN':([91,131,177,311,314,316,321,324,356,370,371,372,373,522,524,526,527,533,535,537,538,567,575,611,620,626,711,744,766,768,770,771,796,798,800,801,839,891,925,930,944,984,986,988,989,1005,1006,1007,1008,1031,1075,1085,1136,1137,1138,1139,1197,],[-382,-120,380,566,571,566,566,566,636,636,-256,-257,-258,566,566,566,566,566,566,566,566,-447,-645,-383,636,636,-165,-166,566,566,566,566,566,566,566,566,566,-168,380,-169,-170,566,566,566,566,566,566,566,566,566,-167,636,566,566,566,566,636,]),'MUL_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,637,637,-256,-257,-258,-383,637,637,-165,-166,-168,-169,-170,-167,637,637,]),'QUO_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,638,638,-256,-257,-258,-383,638,638,-165,-166,-168,-169,-170,-167,638,638,]),'REM_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,639,639,-256,-257,-258,-383,639,639,-165,-166,-168,-169,-170,-167,639,639,]),'ADD_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,640,640,-256,-257,-258,-383,640,640,-165,-166,-168,-169,-170,-167,640,640,]),'SUB_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,641,641,-256,-257,-258,-383,641,641,-165,-166,-168,-169,-170,-167,641,641,]),'SHL_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,642,642,-256,-257,-258,-383,642,642,-165,-166,-168,-169,-170,-167,642,642,]),'SHR_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,643,643,-256,-257,-258,-383,643,643,-165,-166,-168,-169,-170,-167,643,643,]),'SHR_UN_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,644,644,-256,-257,-258,-383,644,644,-165,-166,-168,-169,-170,-167,644,644,]),'AND_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,645,645,-256,-257,-258,-383,645,645,-165,-166,-168,-169,-170,-167,645,645,]),'XOR_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,646,646,-256,-257,-258,-383,646,646,-165,-166,-168,-169,-170,-167,646,646,]),'OR_ASSIGN':([91,356,370,371,372,373,611,620,626,711,744,891,930,944,1075,1085,1197,],[-382,647,647,-256,-257,-258,-383,647,647,-165,-166,-168,-169,-170,-167,647,647,]),'RBRACK':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,618,619,622,652,659,660,661,662,663,664,666,668,669,672,674,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,716,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,950,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1107,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,890,891,-206,-130,-313,-310,-314,-311,-315,-312,-144,930,-171,-208,-215,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,944,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,1108,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,1201,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'COLON':([91,115,118,119,128,131,168,178,180,181,182,183,184,185,186,188,189,192,193,194,195,198,201,202,203,204,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,226,227,228,229,232,235,265,266,272,275,276,280,283,359,364,368,369,371,372,373,374,375,384,385,390,418,420,421,422,423,424,425,426,427,428,429,430,433,435,446,448,496,497,498,507,508,510,512,575,611,612,613,622,652,659,660,661,662,663,664,666,669,672,674,675,676,682,683,684,685,686,687,688,689,690,691,692,693,695,696,697,699,700,701,702,703,704,705,706,707,708,709,710,711,714,717,719,722,724,726,729,739,741,743,744,747,748,789,889,891,892,901,902,906,907,908,910,914,915,917,918,919,920,921,922,923,928,930,931,934,935,939,942,943,944,945,946,947,948,951,952,953,954,955,956,958,959,967,969,970,971,974,1035,1074,1075,1078,1082,1083,1084,1089,1090,1091,1093,1095,1098,1099,1104,1106,1108,1109,1115,1116,1117,1120,1166,1167,1183,1186,1188,1192,1193,1195,1198,1200,1201,1202,1203,1205,1206,1207,1208,1210,1236,1243,1245,1247,1248,1249,1250,1284,1286,1321,],[-382,-629,-630,-638,-412,-120,-332,-271,-274,-276,-278,-280,-282,-284,-287,-294,-298,-303,-316,-317,-320,-325,-330,-331,-333,-334,-124,-125,-126,-127,-128,-131,-132,-133,-134,-135,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-142,-627,-635,-636,-628,-551,-553,-637,-682,-240,-241,-252,-253,-332,-132,-133,-331,-124,-336,-338,-644,-318,-319,-321,-322,-323,-324,-335,-337,-326,-328,-327,-329,-639,-640,-641,-643,-631,-632,-666,-634,-633,-683,-684,-645,-383,-129,-143,-206,-130,-313,-310,-314,-311,-315,-312,-144,-171,-208,-215,936,-275,-277,-279,-281,-283,-285,-286,-288,-289,-290,-291,-292,-293,-295,-296,-297,-207,-299,-301,-300,-302,-304,-307,-305,-308,-306,-309,-145,-165,-209,-223,-1,-224,-225,-226,-228,-212,-213,-139,-166,-210,-216,-552,-136,-168,-196,-339,-340,-353,-352,-354,-255,-341,-342,-349,-350,-351,-242,-250,-251,-254,-642,-169,-172,-198,-205,-197,-199,-138,-170,-217,-229,-235,-237,-218,-230,-219,-231,-220,-232,-222,-234,-153,-202,-203,-137,-200,-118,-176,-167,-211,-347,-346,-348,-343,-344,-345,-180,-214,-272,-273,-184,-236,-239,-227,-149,-152,-151,-188,-116,-117,-175,-201,-174,-179,-204,-178,-183,-182,-238,-221,-233,-148,-147,-150,-187,-186,-115,-192,-173,-177,-181,-146,-185,-191,-190,-189,]),'THROWS':([142,300,312,317,322,328,340,583,596,602,603,604,605,834,845,872,874,875,876,877,878,1032,1066,],[309,309,309,309,309,309,309,-563,309,309,309,309,309,-502,-561,-562,309,309,309,309,309,-501,-560,]),'ARROW':([356,367,620,624,626,893,894,906,918,1082,1085,1090,1100,1197,],[-243,653,-243,-245,-243,-244,-246,-243,-243,-243,-243,-243,-243,-243,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'CompilationUnit':([2,],[3,]),'ImportDeclarationS':([2,5,],[4,16,]),'PackageDeclaration':([2,],[5,]),'empty':([2,4,5,16,44,64,84,85,86,103,107,112,127,168,173,206,230,245,253,254,264,268,269,282,357,362,371,396,441,551,554,555,558,559,626,627,629,671,719,735,737,750,757,965,1036,1085,1086,1197,],[6,10,17,10,88,95,123,123,123,247,256,262,88,353,379,353,353,463,474,88,495,500,500,123,353,353,353,681,732,353,353,353,829,829,897,353,353,933,948,732,732,247,256,732,1169,897,353,897,]),'PackageModifierS':([2,],[7,]),'TypeDeclarationS':([4,16,],[8,63,]),'ImportDeclaration':([4,16,],[9,9,]),'SingleTypeImportDeclaration':([4,16,],[11,11,]),'TypeImportOnDemandDeclaration':([4,16,],[12,12,]),'SingleStaticImportDeclaration':([4,16,],[13,13,]),'StaticImportOnDemandDeclaration':([4,16,],[14,14,]),'PackageModifier':([7,],[19,]),'Annotation':([7,8,33,42,43,63,81,87,96,111,114,116,117,122,125,127,141,148,169,179,190,191,196,197,199,200,217,236,246,255,261,273,285,286,292,299,308,309,326,327,335,342,351,354,361,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,437,438,439,440,441,442,444,475,487,493,494,502,505,506,511,515,529,543,546,549,565,566,571,587,593,595,608,616,628,630,632,633,634,648,649,651,653,654,694,720,721,728,734,736,752,758,783,788,815,820,821,823,831,838,847,848,850,885,896,903,905,916,926,936,938,940,947,949,957,961,963,964,972,1014,1015,1025,1028,1038,1079,1087,1088,1096,1097,1101,1105,1111,1121,1123,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[20,45,45,82,82,45,120,45,176,82,82,82,82,82,82,45,45,82,82,176,82,82,82,82,82,82,82,120,466,478,45,120,45,45,45,45,556,82,556,82,120,82,82,556,120,176,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,120,45,45,82,45,82,82,82,45,45,82,45,45,82,556,82,82,120,120,556,120,82,120,82,82,82,82,82,82,82,82,82,120,120,82,82,120,82,82,82,45,82,45,82,82,82,82,82,45,45,45,82,82,82,556,82,82,82,176,82,82,82,82,82,82,82,82,82,82,120,82,45,82,120,82,82,82,556,82,120,82,82,82,82,82,82,82,82,82,82,82,82,176,]),'NormalAnnotation':([7,8,33,42,43,63,81,87,96,111,114,116,117,122,125,127,141,148,169,179,190,191,196,197,199,200,217,236,246,255,261,273,285,286,292,299,308,309,326,327,335,342,351,354,361,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,437,438,439,440,441,442,444,475,487,493,494,502,505,506,511,515,529,543,546,549,565,566,571,587,593,595,608,616,628,630,632,633,634,648,649,651,653,654,694,720,721,728,734,736,752,758,783,788,815,820,821,823,831,838,847,848,850,885,896,903,905,916,926,936,938,940,947,949,957,961,963,964,972,1014,1015,1025,1028,1038,1079,1087,1088,1096,1097,1101,1105,1111,1121,1123,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MarkerAnnotation':([7,8,33,42,43,63,81,87,96,111,114,116,117,122,125,127,141,148,169,179,190,191,196,197,199,200,217,236,246,255,261,273,285,286,292,299,308,309,326,327,335,342,351,354,361,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,437,438,439,440,441,442,444,475,487,493,494,502,505,506,511,515,529,543,546,549,565,566,571,587,593,595,608,616,628,630,632,633,634,648,649,651,653,654,694,720,721,728,734,736,752,758,783,788,815,820,821,823,831,838,847,848,850,885,896,903,905,916,926,936,938,940,947,949,957,961,963,964,972,1014,1015,1025,1028,1038,1079,1087,1088,1096,1097,1101,1105,1111,1121,1123,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SingleElementAnnotation':([7,8,33,42,43,63,81,87,96,111,114,116,117,122,125,127,141,148,169,179,190,191,196,197,199,200,217,236,246,255,261,273,285,286,292,299,308,309,326,327,335,342,351,354,361,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,437,438,439,440,441,442,444,475,487,493,494,502,505,506,511,515,529,543,546,549,565,566,571,587,593,595,608,616,628,630,632,633,634,648,649,651,653,654,694,720,721,728,734,736,752,758,783,788,815,820,821,823,831,838,847,848,850,885,896,903,905,916,926,936,938,940,947,949,957,961,963,964,972,1014,1015,1025,1028,1038,1079,1087,1088,1096,1097,1101,1105,1111,1121,1123,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'TypeDeclaration':([8,63,],[25,25,]),'ClassDeclaration':([8,63,87,127,261,285,286,299,308,475,494,511,515,543,546,815,],[27,27,138,288,485,288,288,288,288,138,781,288,288,288,288,288,]),'InterfaceDeclaration':([8,63,87,261,475,494,],[28,28,139,486,139,782,]),'NormalClassDeclaration':([8,63,87,127,261,285,286,299,308,475,494,511,515,543,546,815,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'EnumDeclaration':([8,63,87,127,261,285,286,299,308,475,494,511,515,543,546,815,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'NormalInterfaceDeclaration':([8,63,87,261,475,494,],[31,31,31,31,31,31,]),'AnnotationTypeDeclaration':([8,63,87,261,475,494,],[32,32,32,32,32,32,]),'CommonModifierS':([8,63,87,127,261,285,286,299,308,475,494,511,515,543,546,815,],[33,33,141,292,487,292,292,292,292,141,783,292,292,292,292,292,]),'SuperClass':([8,63,87,127,261,285,286,299,308,475,494,511,515,543,546,815,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'Superinterfaces':([8,35,63,75,87,99,127,261,285,286,299,308,475,494,511,515,543,546,815,],[36,72,36,105,36,238,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ClassBody':([8,35,36,63,72,87,127,261,285,286,299,308,475,476,494,511,515,543,546,815,967,981,1115,1116,1127,1205,],[37,73,74,37,104,37,37,37,37,37,37,37,37,759,37,37,37,37,37,37,1117,1126,1206,1207,1212,1249,]),'CommonModifier':([8,33,63,87,127,141,261,285,286,292,299,308,326,354,475,487,494,511,515,543,546,565,595,783,815,847,848,850,905,1038,1101,],[41,70,41,41,41,70,41,41,41,70,41,41,591,591,41,70,41,41,41,41,41,591,591,70,41,591,591,591,591,591,591,]),'lbrace':([8,35,36,63,72,75,76,87,96,99,100,105,108,109,113,127,140,142,144,145,146,147,153,177,179,205,206,218,219,238,240,241,243,257,261,269,275,276,277,285,286,294,295,296,299,300,302,303,304,305,307,308,311,316,321,324,334,337,338,355,356,357,365,366,380,397,419,422,424,428,430,437,438,439,440,441,457,475,476,489,490,491,492,494,511,515,518,519,520,522,524,526,527,531,533,535,537,538,543,546,552,554,555,566,571,581,589,590,592,598,599,601,620,626,627,629,653,659,661,663,665,693,701,703,705,707,709,717,718,722,723,724,725,726,727,729,730,761,762,763,764,766,768,770,771,775,785,786,787,789,792,794,796,798,800,801,815,838,839,842,852,853,854,855,858,861,865,866,867,898,899,900,902,906,909,915,918,938,957,967,981,984,986,988,989,1002,1003,1004,1005,1006,1007,1008,1010,1022,1031,1041,1042,1043,1058,1060,1062,1063,1081,1082,1085,1086,1090,1100,1109,1110,1115,1116,1127,1136,1137,1138,1139,1172,1173,1174,1175,1197,1205,1217,1218,1219,1220,1237,1246,1252,1253,1254,1255,1259,],[44,44,44,44,44,107,112,127,179,107,112,107,112,112,264,44,299,308,319,319,319,299,319,319,179,319,319,319,319,107,112,112,264,112,44,319,319,319,319,44,44,319,319,319,44,308,319,319,319,299,308,44,319,319,319,319,319,319,319,319,319,319,319,319,179,319,319,319,319,319,319,319,319,319,319,319,112,127,44,319,319,319,299,44,44,44,319,319,319,319,319,319,319,308,319,319,319,319,44,44,319,319,319,838,838,319,319,319,319,319,319,319,319,319,319,319,299,319,319,319,319,319,319,319,319,319,319,319,838,319,838,319,838,319,838,319,838,319,319,319,299,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,44,838,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,179,319,44,44,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,838,44,44,44,319,319,319,319,319,319,319,319,319,44,319,319,319,319,838,319,319,319,319,319,179,]),'ExpressionName':([15,24,40,62,69,96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[59,65,65,93,65,168,371,168,168,168,168,168,168,168,551,371,371,168,168,168,168,371,371,371,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,371,371,371,371,371,168,168,371,168,168,371,371,371,371,371,371,371,371,371,168,371,168,371,168,168,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,168,]),'ClassType':([42,43,96,111,116,122,169,179,190,191,196,197,199,200,217,308,309,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,505,506,529,549,566,571,630,632,634,648,649,651,653,654,721,736,752,758,788,820,821,838,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1028,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[78,84,218,84,275,84,365,218,218,218,218,218,218,218,439,218,560,218,365,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,275,218,218,218,218,218,218,218,218,218,275,275,218,218,218,218,218,218,218,911,218,218,218,218,218,218,978,218,275,218,218,218,218,218,365,218,218,218,218,218,218,275,218,218,218,218,560,218,218,218,365,218,218,218,218,218,218,218,218,218,218,218,218,]),'TypeVariable':([42,43,96,111,114,116,117,122,125,169,179,190,191,196,197,199,200,217,308,309,351,354,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,502,505,506,529,549,566,571,630,632,633,634,648,649,651,653,654,721,728,736,752,758,788,820,821,823,831,838,885,896,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1028,1079,1088,1096,1097,1101,1105,1121,1123,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[79,85,219,85,265,276,280,85,280,366,219,219,219,219,219,219,219,440,219,561,219,366,219,219,219,219,280,219,219,219,219,219,219,219,219,219,219,219,219,219,219,276,219,219,219,219,219,219,219,219,219,280,276,276,219,219,219,219,219,219,280,219,912,219,219,219,219,219,280,219,976,219,276,219,219,280,280,219,219,280,219,366,219,219,219,219,219,219,276,219,219,219,219,561,219,280,219,219,366,219,219,280,219,219,219,219,280,219,219,219,219,219,219,]),'AnnotationS':([42,43,96,111,114,116,117,122,125,148,169,179,190,191,196,197,199,200,217,308,309,326,327,342,351,354,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,437,438,439,440,441,442,493,502,505,506,529,549,565,566,571,595,616,630,632,633,634,648,649,651,653,654,721,728,736,752,758,788,820,821,823,831,838,885,896,903,905,916,926,936,938,940,947,949,957,961,963,964,972,1014,1015,1028,1079,1088,1096,1097,1101,1105,1121,1123,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[81,81,236,81,81,273,81,81,81,335,361,236,236,236,236,236,236,236,444,236,81,587,593,608,236,628,236,236,236,236,81,236,236,236,236,236,236,236,236,236,236,236,236,236,236,694,236,236,236,236,236,236,236,236,236,720,720,720,720,720,734,335,81,694,694,236,236,587,236,236,587,734,236,236,81,236,81,236,236,236,236,236,81,236,81,236,273,236,236,1025,81,236,236,1025,236,1087,236,236,236,236,236,720,236,720,1111,273,236,236,236,236,81,236,81,236,236,628,236,236,81,236,236,236,236,1025,236,236,236,236,236,236,]),'InterfaceTypeList':([43,111,122,],[83,260,281,]),'ClassBodyDeclarationS':([44,127,254,],[87,87,475,]),'PERIODIDENTS':([64,],[94,]),'TypeParameters':([71,76,87,98,100,141,261,475,487,],[102,108,148,237,240,148,493,148,493,]),'EnumBody':([75,99,105,238,],[106,239,248,456,]),'ExtendsInterfaces':([76,100,108,240,],[109,241,257,457,]),'InterfaceBody':([76,100,108,109,240,241,257,457,],[110,242,258,259,458,459,479,749,]),'TypeArguments':([79,80,85,86,146,177,217,219,265,266,269,276,279,280,282,296,304,308,334,349,352,356,366,386,389,397,412,419,422,424,428,430,431,432,440,441,445,447,451,452,491,520,552,559,561,581,592,601,607,616,620,626,633,655,656,659,661,663,665,693,701,703,705,707,709,731,763,775,785,789,792,794,822,823,826,852,867,870,884,886,887,896,900,902,906,909,912,913,915,918,927,957,968,976,977,1002,1010,1022,1029,1043,1081,1082,1085,1090,1100,1160,1164,1190,1191,1197,1211,1246,],[115,118,115,118,329,118,442,115,496,497,118,115,507,508,507,329,329,547,329,615,621,118,115,667,673,118,698,118,118,118,118,118,712,713,115,118,738,740,745,746,329,329,824,118,115,329,868,329,883,442,118,824,667,615,712,118,118,118,507,118,118,118,118,118,118,962,329,329,329,507,118,118,1020,1023,1026,329,329,1065,1072,1076,1077,667,329,118,118,507,115,118,118,118,1094,507,962,115,118,329,118,1156,507,329,1156,118,824,118,118,1065,118,667,507,824,507,1156,]),'COMMAInterfaceTypeS':([84,85,86,282,],[121,124,126,509,]),'rbrace':([87,107,127,179,249,250,251,261,284,285,299,308,319,393,394,467,468,470,494,543,544,546,677,753,813,815,838,1033,1034,1165,],[128,252,283,395,469,471,472,480,510,512,283,545,575,678,679,754,755,756,776,814,816,817,937,979,1012,1013,1035,1166,1167,1236,]),'ClassBodyDeclaration':([87,475,],[129,129,]),'ClassMemberDeclaration':([87,475,],[132,132,]),'Block':([87,140,147,305,475,492,653,764,],[133,298,333,333,133,333,922,333,]),'StaticInitializer':([87,475,],[134,134,]),'ConstructorDeclaration':([87,475,],[135,135,]),'FieldDeclaration':([87,475,],[136,136,]),'MethodDeclaration':([87,475,],[137,137,]),'ConstructorDeclarator':([87,141,475,],[142,300,142,]),'UnannType':([87,127,141,148,261,285,286,292,299,308,326,335,354,475,487,493,494,511,515,543,546,565,587,591,595,628,783,815,847,848,850,905,1038,1087,1101,],[143,293,301,336,488,293,293,517,293,293,588,597,588,143,760,336,784,293,293,293,293,588,851,864,588,851,1001,293,1040,1040,1040,588,1040,851,588,]),'NumericType':([87,96,116,127,141,148,169,179,190,191,196,197,199,200,217,236,261,273,285,286,292,299,308,326,335,351,354,361,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,475,487,493,494,505,506,511,515,529,543,546,549,565,566,571,587,591,595,628,630,632,634,649,651,653,654,694,721,736,758,783,788,815,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[144,230,278,294,302,337,362,230,230,230,230,230,230,230,278,454,489,454,294,294,518,294,555,589,598,230,629,454,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,278,230,230,230,230,230,230,230,230,230,454,144,761,337,786,278,278,294,294,230,294,294,230,589,230,230,853,865,589,898,230,230,230,230,230,230,230,454,230,230,230,1003,278,294,230,230,230,1041,1041,1041,230,230,629,230,230,230,230,230,230,278,230,230,230,230,1041,230,898,230,230,629,230,230,230,230,230,230,230,230,230,230,230,230,]),'MethodHeader':([87,141,261,475,487,],[147,305,492,147,764,]),'UnannReferenceType':([87,127,141,148,261,285,286,292,299,308,326,335,354,475,487,493,494,511,515,543,546,565,587,591,595,628,783,815,847,848,850,905,1038,1087,1101,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'IntegralType':([87,96,116,127,141,148,169,179,190,191,196,197,199,200,217,236,261,273,285,286,292,299,308,326,335,351,354,361,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,475,487,493,494,505,506,511,515,529,543,546,549,565,566,571,587,591,595,628,630,632,634,649,651,653,654,694,721,736,758,783,788,815,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'FloatingPointType':([87,96,116,127,141,148,169,179,190,191,196,197,199,200,217,236,261,273,285,286,292,299,308,326,335,351,354,361,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,444,475,487,493,494,505,506,511,515,529,543,546,549,565,566,571,587,591,595,628,630,632,634,649,651,653,654,694,721,736,758,783,788,815,820,821,838,847,848,850,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1038,1079,1087,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'UnannClassType':([87,127,141,148,261,285,286,292,299,308,326,335,354,475,487,493,494,511,515,543,546,565,587,591,595,628,783,815,847,848,850,905,1038,1087,1101,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'UnannArrayType':([87,127,141,148,261,285,286,292,299,308,326,335,354,475,487,493,494,511,515,543,546,565,587,591,595,628,783,815,847,848,850,905,1038,1087,1101,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'ElementValuePairList':([96,],[170,]),'ElementValue':([96,179,380,938,1259,],[172,396,658,1102,1302,]),'ElementValuePair':([96,657,],[173,924,]),'ConditionalExpression':([96,169,179,351,354,380,387,388,391,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[174,368,174,368,368,174,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,1098,174,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,174,]),'ElementValueArrayInitializer':([96,179,380,938,1259,],[175,175,175,175,175,]),'ConditionalOrExpression':([96,169,179,351,354,380,387,388,391,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'ConditionalAndExpression':([96,169,179,351,354,380,387,388,391,392,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[180,180,180,180,180,180,180,180,180,676,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'InclusiveOrExpression':([96,169,179,351,354,380,387,388,391,392,398,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[181,181,181,181,181,181,181,181,181,181,682,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'ExclusiveOrExpression':([96,169,179,351,354,380,387,388,391,392,398,399,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[182,182,182,182,182,182,182,182,182,182,182,683,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'AndExpression':([96,169,179,351,354,380,387,388,391,392,398,399,400,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[183,183,183,183,183,183,183,183,183,183,183,183,684,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'EqualityExpression':([96,169,179,351,354,380,387,388,391,392,398,399,400,401,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[184,184,184,184,184,184,184,184,184,184,184,184,184,685,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),'RelationalExpression':([96,169,179,351,354,380,387,388,391,392,398,399,400,401,402,403,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,686,687,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'ShiftExpression':([96,169,179,351,354,380,387,388,391,392,398,399,400,401,402,403,404,405,406,407,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,688,689,690,691,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,]),'ReferenceType':([96,116,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,505,506,529,549,566,571,630,632,634,649,651,653,654,721,736,758,788,820,821,838,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[187,270,358,187,187,187,187,187,187,187,187,187,358,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,692,187,187,187,187,187,187,187,187,187,791,793,187,187,187,187,187,187,187,187,187,187,187,187,187,187,270,187,187,187,187,187,358,187,187,187,187,187,187,270,187,187,187,187,187,187,187,358,187,187,187,187,187,187,187,187,187,187,187,187,]),'AdditiveExpression':([96,169,179,351,354,380,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,695,696,697,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'MultiplicativeExpression':([96,169,179,351,354,380,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,700,702,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'UnaryExpression':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,634,649,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[192,192,192,418,420,421,423,427,429,192,192,192,660,662,664,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,704,706,708,192,192,192,192,192,901,192,914,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,]),'PreIncrementExpression':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,634,649,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,]),'PreDecrementExpression':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,634,649,653,654,721,736,758,820,821,838,885,905,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,]),'UnaryExpressionNotPlusMinus':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,907,195,195,917,195,195,195,195,195,195,195,195,195,1083,195,1089,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,]),'PostfixExpression':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,]),'CastExpression':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,]),'Primary':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[202,374,202,202,202,202,202,202,202,553,374,374,202,202,202,202,374,374,374,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,374,374,374,374,374,202,202,374,202,202,374,374,374,374,374,374,374,374,374,202,374,202,374,202,202,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,202,]),'PostIncrementExpression':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,]),'PostDecrementExpression':([96,169,179,190,191,196,197,199,200,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'PrimitiveType':([96,116,169,179,190,191,196,197,199,200,217,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,505,506,529,549,566,571,630,632,634,649,651,653,654,721,736,758,788,820,821,838,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[205,205,355,205,205,205,205,205,205,205,437,205,205,355,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,355,205,205,205,205,205,205,205,205,205,205,205,205,205,205,355,205,205,205,205,205,205,205,205,205,205,205,205,]),'PrimaryNoNewArray':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[207,375,207,207,207,207,207,207,207,207,375,375,207,207,207,207,375,375,375,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,375,375,375,375,375,207,207,375,207,207,375,375,375,375,375,375,375,375,375,207,375,207,375,207,207,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,207,]),'ArrayCreationExpression':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,]),'Literal':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'ClassLiteral':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,]),'ClassInstanceCreationExpression':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'FieldAccess':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[213,372,213,213,213,213,213,213,213,213,372,372,213,213,213,213,372,372,372,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,372,372,372,372,372,213,213,372,213,213,372,372,372,372,372,372,372,372,372,213,372,213,372,213,213,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,213,]),'ArrayAccess':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[214,373,214,214,214,214,214,214,214,214,373,373,214,214,214,214,373,373,373,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,373,373,373,373,373,214,214,373,214,214,373,373,373,373,373,373,373,373,373,214,373,214,373,214,214,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,214,]),'MethodInvocation':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'MethodReference':([96,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,436,529,549,566,571,630,632,634,649,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,]),'UnqualifiedClassInstanceCreationExpression':([96,169,179,190,191,196,197,199,200,308,349,351,354,380,381,382,383,386,387,388,391,392,398,399,400,401,402,403,404,405,406,407,409,410,411,413,414,415,416,417,431,436,529,549,566,571,630,632,633,634,649,651,653,654,655,656,721,736,758,820,821,822,823,826,838,885,896,903,905,916,926,936,938,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1190,1227,1230,1233,1237,1244,1259,],[232,232,232,232,232,232,232,232,232,232,613,232,232,232,232,232,232,666,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,710,232,232,232,232,232,232,232,666,232,232,232,232,232,613,710,232,232,232,232,232,613,666,710,232,232,666,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,666,232,232,232,232,232,232,]),'ArrayType':([96,116,169,179,190,191,196,197,199,200,308,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,505,506,529,549,566,571,630,632,634,649,651,653,654,721,736,758,788,820,821,838,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[234,272,363,234,234,234,234,234,234,234,234,234,363,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,272,234,234,234,234,234,234,234,234,234,272,272,234,234,234,234,234,234,234,234,234,234,234,234,234,234,272,234,234,234,234,234,363,234,234,234,234,234,234,272,234,234,234,234,234,234,234,363,234,234,234,234,234,234,234,234,234,234,234,234,]),'ExceptionType':([96,116,169,179,190,191,196,197,199,200,308,309,351,354,380,381,382,383,387,388,391,392,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,436,505,506,529,549,566,571,630,632,634,649,651,653,654,721,736,758,788,820,821,838,885,903,905,916,926,936,938,940,949,963,964,972,1014,1015,1028,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,1259,],[235,235,235,235,235,235,235,235,235,235,235,558,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,1163,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,]),'TypeParameterList':([103,],[244,]),'TypeParameter':([103,750,],[245,975,]),'TypeParameterModifierS':([103,750,],[246,246,]),'EnumConstantList':([107,],[249,]),'EnumBodyDeclarations':([107,249,250,467,],[251,468,470,753,]),'EnumConstant':([107,757,],[253,980,]),'EnumConstantModifierS':([107,757,],[255,255,]),'InterfaceMemberDeclarationS':([112,],[261,]),'AnnotationTypeBody':([113,243,],[263,460,]),'TypeArgumentList':([116,963,],[267,267,]),'TypeArgument':([116,788,963,],[268,1009,268,]),'Wildcard':([116,788,963,],[271,271,271,]),'BlockStatements':([127,285,286,299,308,511,515,543,546,815,],[284,513,514,284,544,513,513,813,513,513,]),'BlockStatement':([127,285,286,299,308,511,515,543,546,815,],[286,286,286,286,286,286,286,286,286,286,]),'LocalVariableDeclarationStatement':([127,285,286,299,308,511,515,543,546,815,],[287,287,287,287,287,287,287,287,287,287,]),'Statement':([127,285,286,299,308,511,515,543,546,815,1011,],[289,289,289,289,289,289,289,289,289,289,1144,]),'LocalVariableDeclaration':([127,285,286,299,308,511,515,543,546,815,],[290,290,290,290,290,290,290,290,290,290,]),'IfThenStatement':([127,285,286,299,308,511,515,543,546,815,1011,],[291,291,291,291,291,291,291,291,291,291,291,]),'ConstructorBody':([142,300,307,531,],[306,530,542,804,]),'Throws':([142,300,312,317,322,328,340,596,602,603,604,605,874,875,876,877,878,],[307,531,569,574,578,594,606,873,879,880,881,882,1067,1068,1069,1070,1071,]),'VariableDeclaratorList':([143,144,145,146,293,294,295,296,301,302,303,304,488,489,490,491,517,518,519,520,552,554,555,760,761,762,763,784,785,786,787,1001,1002,1003,1004,],[310,315,320,325,521,523,525,528,532,534,536,539,765,767,769,772,795,797,799,802,528,525,523,983,985,987,990,765,772,767,769,983,990,985,987,]),'MethodDeclarator':([143,144,145,146,152,301,302,303,304,334,336,337,338,339,488,489,490,491,597,598,599,600,601,760,761,762,763,775,],[312,317,322,328,340,312,317,322,328,596,602,603,604,605,312,317,322,328,874,875,876,877,878,312,317,322,328,596,]),'VariableDeclarator':([143,144,145,146,293,294,295,296,301,302,303,304,488,489,490,491,517,518,519,520,552,554,555,568,760,761,762,763,784,785,786,787,832,1001,1002,1003,1004,],[313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,840,313,313,313,313,313,313,313,313,1030,313,313,313,313,]),'VariableDeclaratorId':([143,144,145,146,293,294,295,296,301,302,303,304,488,489,490,491,517,518,519,520,552,554,555,568,581,588,589,590,626,627,629,760,761,762,763,784,785,786,787,832,864,865,866,867,1001,1002,1003,1004,1040,1041,1042,1043,1085,1086,1197,],[314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,844,857,860,863,844,863,860,314,314,314,314,314,314,314,314,314,1057,1059,1061,1064,314,314,314,314,857,860,863,844,844,863,844,]),'Dims':([144,145,146,153,177,205,206,218,219,269,275,276,277,294,295,296,302,303,304,311,316,321,324,334,337,338,355,356,357,365,366,397,419,422,424,428,430,437,438,439,440,441,489,490,491,518,519,520,522,524,526,527,533,535,537,538,552,554,555,581,589,590,592,598,599,601,620,626,627,629,659,661,663,665,693,701,703,705,707,709,717,722,724,726,729,761,762,763,766,768,770,771,775,785,786,787,789,792,794,796,798,800,801,839,842,852,853,854,855,858,861,865,866,867,898,899,900,902,906,909,915,918,957,984,986,988,989,1002,1003,1004,1005,1006,1007,1008,1010,1022,1031,1041,1042,1043,1058,1060,1062,1063,1081,1082,1085,1086,1090,1100,1109,1136,1137,1138,1139,1172,1173,1174,1175,1197,1217,1218,1219,1220,1246,1252,1253,1254,1255,],[318,323,330,343,390,433,435,446,448,390,446,448,435,318,323,330,318,323,330,567,567,567,567,330,318,323,433,390,435,446,448,390,390,390,390,390,390,718,723,725,727,730,318,323,330,318,323,330,567,567,567,567,567,567,567,567,825,827,318,330,318,323,869,318,323,330,390,825,827,318,390,390,390,928,390,390,390,390,390,390,945,951,953,955,958,318,323,330,567,567,567,567,330,330,318,323,928,390,390,567,567,567,567,567,567,330,318,323,567,567,567,318,323,330,318,323,330,390,390,928,390,390,1110,567,567,567,567,330,318,323,567,567,567,567,390,1157,567,318,323,330,567,567,567,567,1157,390,825,827,390,390,1202,567,567,567,567,567,567,567,567,825,1256,1260,1263,1266,1157,1287,1290,1293,1296,]),'MethodBody':([147,305,492,764,],[331,540,773,991,]),'LBRACKRBRACKS':([168,206,230,357,362,371,551,554,555,627,629,1086,],[350,434,449,434,449,350,350,434,449,434,449,434,]),'LambdaExpression':([169,351,354,387,388,391,436,529,549,566,571,632,634,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,],[359,359,359,359,359,359,359,359,359,359,359,908,359,919,359,359,359,359,359,359,359,359,359,1084,359,1091,359,1099,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,]),'Expression':([169,351,354,387,388,391,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,],[360,619,360,668,671,675,716,803,360,836,836,910,921,923,950,671,671,671,671,836,671,360,671,671,1107,671,671,671,671,671,671,1196,360,671,671,671,671,671,671,671,671,671,836,671,]),'AssignmentExpression':([169,351,354,387,388,391,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,],[364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,]),'LambdaParameters':([169,351,354,387,388,391,436,529,549,566,571,632,634,651,653,654,721,736,758,820,821,838,885,903,905,916,926,936,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,],[367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,]),'Assignment':([169,351,354,387,388,391,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,],[369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,]),'LeftHandSide':([169,351,354,387,388,391,436,529,549,566,571,634,653,654,721,736,758,820,821,838,885,905,926,940,949,964,972,1014,1015,1079,1096,1097,1101,1105,1121,1155,1159,1162,1184,1227,1230,1233,1237,1244,],[370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,]),'COMMAElementValuePairS':([173,],[378,]),'ElementValueList':([179,],[393,]),'ClassOrInterfaceTypeToInstantiate':([217,442,616,],[443,733,443,]),'COMMMATypeParameterS':([245,],[462,]),'TypeParameterModifier':([246,],[465,]),'COMMAEnumConstantS':([253,],[473,]),'EnumConstantModifier':([255,],[477,]),'InterfaceMemberDeclaration':([261,],[481,]),'ConstantDeclaration':([261,494,],[483,780,]),'InterfaceMethodDeclaration':([261,],[484,]),'AnnotationTypeMemberDeclarationS':([264,],[494,]),'COMMATypeArgumentS':([268,269,],[499,501,]),'WildcardBounds':([274,503,],[504,790,]),'ExplicitConstructorInvocation':([308,],[543,]),'ExceptionTypeList':([309,],[557,]),'COMMAVariableDeclaratorS':([311,313,316,321,324,522,524,526,527,533,535,537,538,766,768,770,771,796,798,800,801,984,986,988,989,1005,1006,1007,1008,1136,1137,1138,1139,],[564,570,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,]),'FormalParameterList':([326,354,565,595,905,1101,],[582,623,833,871,623,623,]),'ReceiverParameter':([326,354,565,595,905,1101,],[584,584,584,584,584,584,]),'FormalParameters':([326,354,565,595,905,1101,],[585,585,585,585,585,585,]),'FormalParameter':([326,354,565,595,847,848,850,905,1038,1101,],[586,586,586,586,1039,1044,1045,586,1171,586,]),'InferredFormalParameterList':([354,905,1101,],[625,625,625,]),'AdditionalBoundS':([356,358,626,976,977,978,1085,1197,1211,],[631,650,631,1122,1124,1125,631,631,1251,]),'AssignmentOperator':([356,370,620,626,1085,1197,],[634,654,634,634,634,634,]),'AdditionalBound':([356,358,626,631,650,976,977,978,1085,1122,1124,1125,1197,1211,1251,],[635,635,635,904,904,635,635,635,635,904,904,904,635,635,904,]),'ArgumentList':([388,736,758,820,821,885,926,940,964,972,1014,1015,1079,1096,1105,1121,1155,1159,1162,1184,1227,1230,1233,1244,],[670,966,982,1016,1018,1073,1092,1103,1114,1119,1146,1148,1187,1194,1199,1209,1228,1231,1234,1242,1271,1275,1279,1285,]),'COMMAElementValueS':([396,],[680,]),'DimExprs':([437,438,439,440,441,957,],[717,722,724,726,729,1109,]),'DimExpr':([437,438,439,440,441,947,957,],[719,719,719,719,719,1106,719,]),'PERIODAnnotationSIDENTS':([441,735,737,965,],[731,731,968,968,]),'TypeBound':([464,],[751,]),'AnnotationTypeMemberDeclaration':([494,],[777,]),'AnnotationTypeElementDeclaration':([494,],[779,]),'COMMAExceptionTypeS':([558,559,],[828,830,]),'VariableInitializer':([566,571,838,1237,],[835,841,1036,1283,]),'ArrayInitializer':([566,571,718,723,725,727,730,838,1110,1237,],[837,837,946,952,954,956,959,837,1203,837,]),'COMMAFormalParameterS':([584,586,],[846,849,]),'COMMAIDENTS':([626,1085,1197,],[895,895,895,]),'LambdaBody':([653,],[920,]),'COMMAExpressionS':([671,],[932,]),'DimExprS':([719,],[947,]),'TypeArgumentsOrDiamond':([731,968,],[960,1118,]),'VariableInitializerList':([838,],[1033,]),'COMMAVariableInitializerS':([1036,],[1168,]),'DefaultValue':([1217,1218,1219,1220,1252,1253,1254,1255,1256,1260,1263,1266,1287,1290,1293,1296,],[1257,1261,1264,1267,1288,1291,1294,1297,1299,1303,1306,1309,1322,1325,1328,1331,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','parser_hack.py',17),
  ('Literal -> BOOL_LIT','Literal',1,'p_literal','parser_hack.py',25),
  ('Literal -> NULL_LIT','Literal',1,'p_literal','parser_hack.py',26),
  ('Literal -> DECIMAL_LIT','Literal',1,'p_literal','parser_hack.py',27),
  ('Literal -> HEX_LIT','Literal',1,'p_literal','parser_hack.py',28),
  ('Literal -> OCTAL_LIT','Literal',1,'p_literal','parser_hack.py',29),
  ('Literal -> BINARY_LIT','Literal',1,'p_literal','parser_hack.py',30),
  ('Literal -> FLOAT_DEC_LIT','Literal',1,'p_literal','parser_hack.py',31),
  ('Literal -> FLOAT_HEX_LIT','Literal',1,'p_literal','parser_hack.py',32),
  ('Literal -> STRING_LIT','Literal',1,'p_literal','parser_hack.py',33),
  ('Literal -> CHAR_LIT','Literal',1,'p_literal','parser_hack.py',34),
  ('InterfaceDeclaration -> NormalInterfaceDeclaration','InterfaceDeclaration',1,'p_InterfaceDeclaration','parser_hack.py',44),
  ('InterfaceDeclaration -> AnnotationTypeDeclaration','InterfaceDeclaration',1,'p_InterfaceDeclaration','parser_hack.py',45),
  ('NormalInterfaceDeclaration -> CommonModifierS INTERFACE IDENT TypeParameters ExtendsInterfaces InterfaceBody','NormalInterfaceDeclaration',6,'p_NormalInterfaceDeclaration','parser_hack.py',49),
  ('NormalInterfaceDeclaration -> CommonModifierS INTERFACE IDENT TypeParameters InterfaceBody','NormalInterfaceDeclaration',5,'p_NormalInterfaceDeclaration','parser_hack.py',50),
  ('NormalInterfaceDeclaration -> CommonModifierS INTERFACE IDENT ExtendsInterfaces InterfaceBody','NormalInterfaceDeclaration',5,'p_NormalInterfaceDeclaration','parser_hack.py',51),
  ('NormalInterfaceDeclaration -> CommonModifierS INTERFACE IDENT InterfaceBody','NormalInterfaceDeclaration',4,'p_NormalInterfaceDeclaration','parser_hack.py',52),
  ('NormalInterfaceDeclaration -> INTERFACE IDENT TypeParameters ExtendsInterfaces InterfaceBody','NormalInterfaceDeclaration',5,'p_NormalInterfaceDeclaration','parser_hack.py',53),
  ('NormalInterfaceDeclaration -> INTERFACE IDENT TypeParameters InterfaceBody','NormalInterfaceDeclaration',4,'p_NormalInterfaceDeclaration','parser_hack.py',54),
  ('NormalInterfaceDeclaration -> INTERFACE IDENT ExtendsInterfaces InterfaceBody','NormalInterfaceDeclaration',4,'p_NormalInterfaceDeclaration','parser_hack.py',55),
  ('NormalInterfaceDeclaration -> INTERFACE IDENT InterfaceBody','NormalInterfaceDeclaration',3,'p_NormalInterfaceDeclaration','parser_hack.py',56),
  ('ExtendsInterfaces -> EXTENDS InterfaceTypeList','ExtendsInterfaces',2,'p_ExtendsInterfaces','parser_hack.py',91),
  ('InterfaceBody -> lbrace InterfaceMemberDeclarationS rbrace','InterfaceBody',3,'p_InterfaceBody','parser_hack.py',96),
  ('InterfaceMemberDeclarationS -> InterfaceMemberDeclarationS InterfaceMemberDeclaration','InterfaceMemberDeclarationS',2,'p_InterfaceMemberDeclarationS','parser_hack.py',101),
  ('InterfaceMemberDeclarationS -> InterfaceMemberDeclarationS SEMICOLON','InterfaceMemberDeclarationS',2,'p_InterfaceMemberDeclarationS','parser_hack.py',102),
  ('InterfaceMemberDeclarationS -> empty','InterfaceMemberDeclarationS',1,'p_InterfaceMemberDeclarationS','parser_hack.py',103),
  ('InterfaceMemberDeclaration -> ConstantDeclaration','InterfaceMemberDeclaration',1,'p_InterfaceMemberDeclaration','parser_hack.py',108),
  ('InterfaceMemberDeclaration -> InterfaceMethodDeclaration','InterfaceMemberDeclaration',1,'p_InterfaceMemberDeclaration','parser_hack.py',109),
  ('InterfaceMemberDeclaration -> ClassDeclaration','InterfaceMemberDeclaration',1,'p_InterfaceMemberDeclaration','parser_hack.py',110),
  ('InterfaceMemberDeclaration -> InterfaceDeclaration','InterfaceMemberDeclaration',1,'p_InterfaceMemberDeclaration','parser_hack.py',111),
  ('ConstantDeclaration -> CommonModifierS UnannType VariableDeclaratorList SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',115),
  ('ConstantDeclaration -> CommonModifierS NumericType VariableDeclaratorList SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',116),
  ('ConstantDeclaration -> CommonModifierS BOOLEAN VariableDeclaratorList SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',117),
  ('ConstantDeclaration -> CommonModifierS IDENT VariableDeclaratorList SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',118),
  ('ConstantDeclaration -> UnannType VariableDeclaratorList SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',119),
  ('ConstantDeclaration -> NumericType VariableDeclaratorList SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',120),
  ('ConstantDeclaration -> BOOLEAN VariableDeclaratorList SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',121),
  ('ConstantDeclaration -> IDENT VariableDeclaratorList SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',122),
  ('ConstantDeclaration -> CommonModifierS UnannType IDENT SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',123),
  ('ConstantDeclaration -> CommonModifierS NumericType IDENT SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',124),
  ('ConstantDeclaration -> CommonModifierS BOOLEAN IDENT SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',125),
  ('ConstantDeclaration -> CommonModifierS IDENT IDENT SEMICOLON','ConstantDeclaration',4,'p_ConstantDeclaration','parser_hack.py',126),
  ('ConstantDeclaration -> UnannType IDENT SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',127),
  ('ConstantDeclaration -> NumericType IDENT SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',128),
  ('ConstantDeclaration -> BOOLEAN IDENT SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',129),
  ('ConstantDeclaration -> IDENT IDENT SEMICOLON','ConstantDeclaration',3,'p_ConstantDeclaration','parser_hack.py',130),
  ('InterfaceMethodDeclaration -> CommonModifierS MethodHeader MethodBody','InterfaceMethodDeclaration',3,'p_InterfaceMethodDeclaration','parser_hack.py',146),
  ('InterfaceMethodDeclaration -> MethodHeader MethodBody','InterfaceMethodDeclaration',2,'p_InterfaceMethodDeclaration','parser_hack.py',147),
  ('InterfaceMethodDeclaration -> CommonModifierS MethodHeader SEMICOLON','InterfaceMethodDeclaration',3,'p_InterfaceMethodDeclaration','parser_hack.py',148),
  ('InterfaceMethodDeclaration -> MethodHeader SEMICOLON','InterfaceMethodDeclaration',2,'p_InterfaceMethodDeclaration','parser_hack.py',149),
  ('AnnotationTypeDeclaration -> CommonModifierS ATRATE INTERFACE IDENT AnnotationTypeBody','AnnotationTypeDeclaration',5,'p_AnnotationTypeDeclaration','parser_hack.py',167),
  ('AnnotationTypeDeclaration -> ATRATE INTERFACE IDENT AnnotationTypeBody','AnnotationTypeDeclaration',4,'p_AnnotationTypeDeclaration','parser_hack.py',168),
  ('AnnotationTypeBody -> lbrace AnnotationTypeMemberDeclarationS rbrace','AnnotationTypeBody',3,'p_AnnotationTypeBody','parser_hack.py',177),
  ('AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclarationS AnnotationTypeMemberDeclaration','AnnotationTypeMemberDeclarationS',2,'p_AnnotationTypeMemberDeclarationS','parser_hack.py',181),
  ('AnnotationTypeMemberDeclarationS -> AnnotationTypeMemberDeclarationS SEMICOLON','AnnotationTypeMemberDeclarationS',2,'p_AnnotationTypeMemberDeclarationS','parser_hack.py',182),
  ('AnnotationTypeMemberDeclarationS -> empty','AnnotationTypeMemberDeclarationS',1,'p_AnnotationTypeMemberDeclarationS','parser_hack.py',183),
  ('AnnotationTypeMemberDeclaration -> AnnotationTypeElementDeclaration','AnnotationTypeMemberDeclaration',1,'p_AnnotationTypeMemberDeclaration','parser_hack.py',187),
  ('AnnotationTypeMemberDeclaration -> ConstantDeclaration','AnnotationTypeMemberDeclaration',1,'p_AnnotationTypeMemberDeclaration','parser_hack.py',188),
  ('AnnotationTypeMemberDeclaration -> ClassDeclaration','AnnotationTypeMemberDeclaration',1,'p_AnnotationTypeMemberDeclaration','parser_hack.py',189),
  ('AnnotationTypeMemberDeclaration -> InterfaceDeclaration','AnnotationTypeMemberDeclaration',1,'p_AnnotationTypeMemberDeclaration','parser_hack.py',190),
  ('AnnotationTypeElementDeclaration -> CommonModifierS UnannType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',8,'p_AnnotationTypeElementDeclaration','parser_hack.py',194),
  ('AnnotationTypeElementDeclaration -> CommonModifierS NumericType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',8,'p_AnnotationTypeElementDeclaration','parser_hack.py',195),
  ('AnnotationTypeElementDeclaration -> CommonModifierS BOOLEAN IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',8,'p_AnnotationTypeElementDeclaration','parser_hack.py',196),
  ('AnnotationTypeElementDeclaration -> CommonModifierS IDENT IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',8,'p_AnnotationTypeElementDeclaration','parser_hack.py',197),
  ('AnnotationTypeElementDeclaration -> CommonModifierS UnannType IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',198),
  ('AnnotationTypeElementDeclaration -> CommonModifierS NumericType IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',199),
  ('AnnotationTypeElementDeclaration -> CommonModifierS BOOLEAN IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',200),
  ('AnnotationTypeElementDeclaration -> CommonModifierS IDENT IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',201),
  ('AnnotationTypeElementDeclaration -> CommonModifierS UnannType IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',202),
  ('AnnotationTypeElementDeclaration -> CommonModifierS NumericType IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',203),
  ('AnnotationTypeElementDeclaration -> CommonModifierS BOOLEAN IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',204),
  ('AnnotationTypeElementDeclaration -> CommonModifierS IDENT IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',205),
  ('AnnotationTypeElementDeclaration -> CommonModifierS UnannType IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',206),
  ('AnnotationTypeElementDeclaration -> CommonModifierS NumericType IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',207),
  ('AnnotationTypeElementDeclaration -> CommonModifierS BOOLEAN IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',208),
  ('AnnotationTypeElementDeclaration -> CommonModifierS IDENT IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',209),
  ('AnnotationTypeElementDeclaration -> UnannType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',210),
  ('AnnotationTypeElementDeclaration -> NumericType IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',211),
  ('AnnotationTypeElementDeclaration -> BOOLEAN IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',212),
  ('AnnotationTypeElementDeclaration -> IDENT IDENT LPAREN RPAREN Dims DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',7,'p_AnnotationTypeElementDeclaration','parser_hack.py',213),
  ('AnnotationTypeElementDeclaration -> UnannType IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',214),
  ('AnnotationTypeElementDeclaration -> NumericType IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',215),
  ('AnnotationTypeElementDeclaration -> BOOLEAN IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',216),
  ('AnnotationTypeElementDeclaration -> IDENT IDENT LPAREN RPAREN DefaultValue SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',217),
  ('AnnotationTypeElementDeclaration -> UnannType IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',218),
  ('AnnotationTypeElementDeclaration -> NumericType IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',219),
  ('AnnotationTypeElementDeclaration -> BOOLEAN IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',220),
  ('AnnotationTypeElementDeclaration -> IDENT IDENT LPAREN RPAREN Dims SEMICOLON','AnnotationTypeElementDeclaration',6,'p_AnnotationTypeElementDeclaration','parser_hack.py',221),
  ('AnnotationTypeElementDeclaration -> UnannType IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',5,'p_AnnotationTypeElementDeclaration','parser_hack.py',222),
  ('AnnotationTypeElementDeclaration -> NumericType IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',5,'p_AnnotationTypeElementDeclaration','parser_hack.py',223),
  ('AnnotationTypeElementDeclaration -> BOOLEAN IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',5,'p_AnnotationTypeElementDeclaration','parser_hack.py',224),
  ('AnnotationTypeElementDeclaration -> IDENT IDENT LPAREN RPAREN SEMICOLON','AnnotationTypeElementDeclaration',5,'p_AnnotationTypeElementDeclaration','parser_hack.py',225),
  ('DefaultValue -> DEFAULT ElementValue','DefaultValue',2,'p_DefaultValue','parser_hack.py',251),
  ('Annotation -> NormalAnnotation','Annotation',1,'p_Annotation','parser_hack.py',255),
  ('Annotation -> MarkerAnnotation','Annotation',1,'p_Annotation','parser_hack.py',256),
  ('Annotation -> SingleElementAnnotation','Annotation',1,'p_Annotation','parser_hack.py',257),
  ('NormalAnnotation -> ATRATE ExpressionName LPAREN ElementValuePairList RPAREN','NormalAnnotation',5,'p_NormalAnnotation','parser_hack.py',261),
  ('NormalAnnotation -> ATRATE ExpressionName LPAREN RPAREN','NormalAnnotation',4,'p_NormalAnnotation','parser_hack.py',262),
  ('ElementValuePairList -> ElementValuePair COMMAElementValuePairS','ElementValuePairList',2,'p_ElementValuePairList','parser_hack.py',273),
  ('COMMAElementValuePairS -> COMMAElementValuePairS COMMA ElementValuePair','COMMAElementValuePairS',3,'p_COMMAElementValuePairS','parser_hack.py',277),
  ('COMMAElementValuePairS -> empty','COMMAElementValuePairS',1,'p_COMMAElementValuePairS','parser_hack.py',278),
  ('ElementValuePair -> IDENT ASSIGN ElementValue','ElementValuePair',3,'p_ElementValuePair','parser_hack.py',282),
  ('ElementValue -> ConditionalExpression','ElementValue',1,'p_ElementValue','parser_hack.py',286),
  ('ElementValue -> ElementValueArrayInitializer','ElementValue',1,'p_ElementValue','parser_hack.py',287),
  ('ElementValue -> Annotation','ElementValue',1,'p_ElementValue','parser_hack.py',288),
  ('ElementValueArrayInitializer -> lbrace ElementValueList COMMA rbrace','ElementValueArrayInitializer',4,'p_ElementValueArrayInitializer','parser_hack.py',292),
  ('ElementValueArrayInitializer -> lbrace ElementValueList rbrace','ElementValueArrayInitializer',3,'p_ElementValueArrayInitializer','parser_hack.py',293),
  ('ElementValueArrayInitializer -> lbrace COMMA rbrace','ElementValueArrayInitializer',3,'p_ElementValueArrayInitializer','parser_hack.py',294),
  ('ElementValueArrayInitializer -> lbrace rbrace','ElementValueArrayInitializer',2,'p_ElementValueArrayInitializer','parser_hack.py',295),
  ('ElementValueList -> ElementValue COMMAElementValueS','ElementValueList',2,'p_ElementValueList','parser_hack.py',310),
  ('COMMAElementValueS -> COMMAElementValueS COMMA ElementValue','COMMAElementValueS',3,'p_COMMAElementValueS','parser_hack.py',314),
  ('COMMAElementValueS -> empty','COMMAElementValueS',1,'p_COMMAElementValueS','parser_hack.py',315),
  ('MarkerAnnotation -> ATRATE ExpressionName','MarkerAnnotation',2,'p_MarkerAnnotation','parser_hack.py',319),
  ('SingleElementAnnotation -> ATRATE ExpressionName LPAREN ElementValue RPAREN','SingleElementAnnotation',5,'p_SingleElementAnnotation','parser_hack.py',323),
  ('ArrayInitializer -> lbrace VariableInitializerList COMMA rbrace','ArrayInitializer',4,'p_ArrayInitializer','parser_hack.py',333),
  ('ArrayInitializer -> lbrace VariableInitializerList rbrace','ArrayInitializer',3,'p_ArrayInitializer','parser_hack.py',334),
  ('ArrayInitializer -> lbrace COMMA rbrace','ArrayInitializer',3,'p_ArrayInitializer','parser_hack.py',335),
  ('ArrayInitializer -> lbrace rbrace','ArrayInitializer',2,'p_ArrayInitializer','parser_hack.py',336),
  ('lbrace -> LBRACE','lbrace',1,'p_lbrace','parser_hack.py',340),
  ('rbrace -> RBRACE','rbrace',1,'p_rbrace','parser_hack.py',344),
  ('VariableInitializerList -> VariableInitializer COMMAVariableInitializerS','VariableInitializerList',2,'p_VariableInitializerList','parser_hack.py',353),
  ('COMMAVariableInitializerS -> COMMAVariableInitializerS COMMA VariableInitializer','COMMAVariableInitializerS',3,'p_COMMAVariableInitializerS','parser_hack.py',357),
  ('COMMAVariableInitializerS -> empty','COMMAVariableInitializerS',1,'p_COMMAVariableInitializerS','parser_hack.py',358),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','parser_hack.py',369),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','parser_hack.py',370),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',374),
  ('PrimaryNoNewArray -> ClassLiteral','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',375),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',376),
  ('PrimaryNoNewArray -> ExpressionName PERIOD THIS','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser_hack.py',377),
  ('PrimaryNoNewArray -> LPAREN Expression RPAREN','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser_hack.py',378),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',379),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',380),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',381),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',382),
  ('PrimaryNoNewArray -> MethodReference','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser_hack.py',383),
  ('ClassLiteral -> ExpressionName LBRACKRBRACKS PERIOD CLASS','ClassLiteral',4,'p_ClassLiteral','parser_hack.py',387),
  ('ClassLiteral -> NumericType LBRACKRBRACKS PERIOD CLASS','ClassLiteral',4,'p_ClassLiteral','parser_hack.py',388),
  ('ClassLiteral -> BOOLEAN LBRACKRBRACKS PERIOD CLASS','ClassLiteral',4,'p_ClassLiteral','parser_hack.py',389),
  ('ClassLiteral -> VOID PERIOD CLASS','ClassLiteral',3,'p_ClassLiteral','parser_hack.py',390),
  ('LBRACKRBRACKS -> LBRACKRBRACKS LBRACK RBRACK','LBRACKRBRACKS',3,'p_LBRACKRBRACKS','parser_hack.py',394),
  ('LBRACKRBRACKS -> empty','LBRACKRBRACKS',1,'p_LBRACKRBRACKS','parser_hack.py',395),
  ('ClassInstanceCreationExpression -> UnqualifiedClassInstanceCreationExpression','ClassInstanceCreationExpression',1,'p_ClassInstanceCreationExpression','parser_hack.py',399),
  ('ClassInstanceCreationExpression -> ExpressionName PERIOD UnqualifiedClassInstanceCreationExpression','ClassInstanceCreationExpression',3,'p_ClassInstanceCreationExpression','parser_hack.py',400),
  ('ClassInstanceCreationExpression -> IDENT PERIOD UnqualifiedClassInstanceCreationExpression','ClassInstanceCreationExpression',3,'p_ClassInstanceCreationExpression','parser_hack.py',401),
  ('ClassInstanceCreationExpression -> Primary PERIOD UnqualifiedClassInstanceCreationExpression','ClassInstanceCreationExpression',3,'p_ClassInstanceCreationExpression','parser_hack.py',402),
  ('UnqualifiedClassInstanceCreationExpression -> NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN ClassBody','UnqualifiedClassInstanceCreationExpression',7,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',406),
  ('UnqualifiedClassInstanceCreationExpression -> NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN RPAREN ClassBody','UnqualifiedClassInstanceCreationExpression',6,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',407),
  ('UnqualifiedClassInstanceCreationExpression -> NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN','UnqualifiedClassInstanceCreationExpression',6,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',408),
  ('UnqualifiedClassInstanceCreationExpression -> NEW TypeArguments ClassOrInterfaceTypeToInstantiate LPAREN RPAREN','UnqualifiedClassInstanceCreationExpression',5,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',409),
  ('UnqualifiedClassInstanceCreationExpression -> NEW ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN ClassBody','UnqualifiedClassInstanceCreationExpression',6,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',410),
  ('UnqualifiedClassInstanceCreationExpression -> NEW ClassOrInterfaceTypeToInstantiate LPAREN RPAREN ClassBody','UnqualifiedClassInstanceCreationExpression',5,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',411),
  ('UnqualifiedClassInstanceCreationExpression -> NEW ClassOrInterfaceTypeToInstantiate LPAREN ArgumentList RPAREN','UnqualifiedClassInstanceCreationExpression',5,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',412),
  ('UnqualifiedClassInstanceCreationExpression -> NEW ClassOrInterfaceTypeToInstantiate LPAREN RPAREN','UnqualifiedClassInstanceCreationExpression',4,'p_UnqualifiedClassInstanceCreationExpression','parser_hack.py',413),
  ('ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS TypeArgumentsOrDiamond','ClassOrInterfaceTypeToInstantiate',4,'p_ClassOrInterfaceTypeToInstantiate','parser_hack.py',432),
  ('ClassOrInterfaceTypeToInstantiate -> AnnotationS IDENT PERIODAnnotationSIDENTS','ClassOrInterfaceTypeToInstantiate',3,'p_ClassOrInterfaceTypeToInstantiate','parser_hack.py',433),
  ('ClassOrInterfaceTypeToInstantiate -> IDENT PERIODAnnotationSIDENTS','ClassOrInterfaceTypeToInstantiate',2,'p_ClassOrInterfaceTypeToInstantiate','parser_hack.py',434),
  ('ClassOrInterfaceTypeToInstantiate -> IDENT PERIODAnnotationSIDENTS TypeArgumentsOrDiamond','ClassOrInterfaceTypeToInstantiate',3,'p_ClassOrInterfaceTypeToInstantiate','parser_hack.py',435),
  ('AnnotationS -> AnnotationS Annotation','AnnotationS',2,'p_AnnotationS','parser_hack.py',439),
  ('AnnotationS -> Annotation','AnnotationS',1,'p_AnnotationS','parser_hack.py',440),
  ('PERIODAnnotationSIDENTS -> PERIODAnnotationSIDENTS PERIOD AnnotationS IDENT','PERIODAnnotationSIDENTS',4,'p_PERIODAnnotationSIDENTS','parser_hack.py',449),
  ('PERIODAnnotationSIDENTS -> PERIODAnnotationSIDENTS PERIOD IDENT','PERIODAnnotationSIDENTS',3,'p_PERIODAnnotationSIDENTS','parser_hack.py',450),
  ('PERIODAnnotationSIDENTS -> empty','PERIODAnnotationSIDENTS',1,'p_PERIODAnnotationSIDENTS','parser_hack.py',451),
  ('TypeArgumentsOrDiamond -> TypeArguments','TypeArgumentsOrDiamond',1,'p_TypeArgumentsOrDiamond','parser_hack.py',458),
  ('TypeArgumentsOrDiamond -> LSS GTR','TypeArgumentsOrDiamond',2,'p_TypeArgumentsOrDiamond','parser_hack.py',459),
  ('FieldAccess -> Primary PERIOD IDENT','FieldAccess',3,'p_FieldAccess','parser_hack.py',463),
  ('FieldAccess -> SUPER PERIOD IDENT','FieldAccess',3,'p_FieldAccess','parser_hack.py',464),
  ('FieldAccess -> ExpressionName PERIOD SUPER PERIOD IDENT','FieldAccess',5,'p_FieldAccess','parser_hack.py',465),
  ('ArrayAccess -> ExpressionName LBRACK Expression RBRACK','ArrayAccess',4,'p_ArrayAccess','parser_hack.py',470),
  ('ArrayAccess -> IDENT LBRACK Expression RBRACK','ArrayAccess',4,'p_ArrayAccess','parser_hack.py',471),
  ('ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK','ArrayAccess',4,'p_ArrayAccess','parser_hack.py',472),
  ('MethodInvocation -> IDENT LPAREN RPAREN','MethodInvocation',3,'p_MethodInvocation','parser_hack.py',476),
  ('MethodInvocation -> IDENT LPAREN ArgumentList RPAREN','MethodInvocation',4,'p_MethodInvocation','parser_hack.py',477),
  ('MethodInvocation -> ExpressionName PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN','MethodInvocation',7,'p_MethodInvocation','parser_hack.py',478),
  ('MethodInvocation -> ExpressionName PERIOD TypeArguments IDENT LPAREN RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',479),
  ('MethodInvocation -> ExpressionName PERIOD IDENT LPAREN ArgumentList RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',480),
  ('MethodInvocation -> ExpressionName PERIOD IDENT LPAREN RPAREN','MethodInvocation',5,'p_MethodInvocation','parser_hack.py',481),
  ('MethodInvocation -> IDENT PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN','MethodInvocation',7,'p_MethodInvocation','parser_hack.py',482),
  ('MethodInvocation -> IDENT PERIOD TypeArguments IDENT LPAREN RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',483),
  ('MethodInvocation -> IDENT PERIOD IDENT LPAREN ArgumentList RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',484),
  ('MethodInvocation -> IDENT PERIOD IDENT LPAREN RPAREN','MethodInvocation',5,'p_MethodInvocation','parser_hack.py',485),
  ('MethodInvocation -> Primary PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN','MethodInvocation',7,'p_MethodInvocation','parser_hack.py',486),
  ('MethodInvocation -> Primary PERIOD TypeArguments IDENT LPAREN RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',487),
  ('MethodInvocation -> Primary PERIOD IDENT LPAREN ArgumentList RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',488),
  ('MethodInvocation -> Primary PERIOD IDENT LPAREN RPAREN','MethodInvocation',5,'p_MethodInvocation','parser_hack.py',489),
  ('MethodInvocation -> SUPER PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN','MethodInvocation',7,'p_MethodInvocation','parser_hack.py',490),
  ('MethodInvocation -> SUPER PERIOD TypeArguments IDENT LPAREN RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',491),
  ('MethodInvocation -> SUPER PERIOD IDENT LPAREN ArgumentList RPAREN','MethodInvocation',6,'p_MethodInvocation','parser_hack.py',492),
  ('MethodInvocation -> SUPER PERIOD IDENT LPAREN RPAREN','MethodInvocation',5,'p_MethodInvocation','parser_hack.py',493),
  ('MethodInvocation -> ExpressionName PERIOD SUPER PERIOD TypeArguments IDENT LPAREN ArgumentList RPAREN','MethodInvocation',9,'p_MethodInvocation','parser_hack.py',494),
  ('MethodInvocation -> ExpressionName PERIOD SUPER PERIOD TypeArguments IDENT LPAREN RPAREN','MethodInvocation',8,'p_MethodInvocation','parser_hack.py',495),
  ('MethodInvocation -> ExpressionName PERIOD SUPER PERIOD IDENT LPAREN ArgumentList RPAREN','MethodInvocation',8,'p_MethodInvocation','parser_hack.py',496),
  ('MethodInvocation -> ExpressionName PERIOD SUPER PERIOD IDENT LPAREN RPAREN','MethodInvocation',7,'p_MethodInvocation','parser_hack.py',497),
  ('ArgumentList -> Expression COMMAExpressionS','ArgumentList',2,'p_ArgumentList','parser_hack.py',502),
  ('COMMAExpressionS -> COMMAExpressionS COMMA Expression','COMMAExpressionS',3,'p_COMMAExpressionS','parser_hack.py',506),
  ('COMMAExpressionS -> empty','COMMAExpressionS',1,'p_COMMAExpressionS','parser_hack.py',507),
  ('MethodReference -> ExpressionName COLON_SEP TypeArguments IDENT','MethodReference',4,'p_MethodReference','parser_hack.py',511),
  ('MethodReference -> ReferenceType COLON_SEP TypeArguments IDENT','MethodReference',4,'p_MethodReference','parser_hack.py',512),
  ('MethodReference -> IDENT COLON_SEP TypeArguments IDENT','MethodReference',4,'p_MethodReference','parser_hack.py',513),
  ('MethodReference -> Primary COLON_SEP TypeArguments IDENT','MethodReference',4,'p_MethodReference','parser_hack.py',514),
  ('MethodReference -> SUPER COLON_SEP TypeArguments IDENT','MethodReference',4,'p_MethodReference','parser_hack.py',515),
  ('MethodReference -> ExpressionName PERIOD SUPER COLON_SEP TypeArguments IDENT','MethodReference',6,'p_MethodReference','parser_hack.py',516),
  ('MethodReference -> ClassType COLON_SEP TypeArguments NEW','MethodReference',4,'p_MethodReference','parser_hack.py',517),
  ('MethodReference -> TypeVariable COLON_SEP TypeArguments NEW','MethodReference',4,'p_MethodReference','parser_hack.py',518),
  ('MethodReference -> IDENT PERIOD IDENT COLON_SEP TypeArguments NEW','MethodReference',6,'p_MethodReference','parser_hack.py',519),
  ('MethodReference -> IDENT COLON_SEP TypeArguments NEW','MethodReference',4,'p_MethodReference','parser_hack.py',520),
  ('MethodReference -> ExpressionName COLON_SEP IDENT','MethodReference',3,'p_MethodReference','parser_hack.py',521),
  ('MethodReference -> ReferenceType COLON_SEP IDENT','MethodReference',3,'p_MethodReference','parser_hack.py',522),
  ('MethodReference -> IDENT COLON_SEP IDENT','MethodReference',3,'p_MethodReference','parser_hack.py',523),
  ('MethodReference -> Primary COLON_SEP IDENT','MethodReference',3,'p_MethodReference','parser_hack.py',524),
  ('MethodReference -> SUPER COLON_SEP IDENT','MethodReference',3,'p_MethodReference','parser_hack.py',525),
  ('MethodReference -> ExpressionName PERIOD SUPER COLON_SEP IDENT','MethodReference',5,'p_MethodReference','parser_hack.py',526),
  ('MethodReference -> ClassType COLON_SEP NEW','MethodReference',3,'p_MethodReference','parser_hack.py',527),
  ('MethodReference -> TypeVariable COLON_SEP NEW','MethodReference',3,'p_MethodReference','parser_hack.py',528),
  ('MethodReference -> IDENT PERIOD IDENT COLON_SEP NEW','MethodReference',5,'p_MethodReference','parser_hack.py',529),
  ('MethodReference -> IDENT COLON_SEP NEW','MethodReference',3,'p_MethodReference','parser_hack.py',530),
  ('MethodReference -> ArrayType COLON_SEP NEW','MethodReference',3,'p_MethodReference','parser_hack.py',531),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',535),
  ('ArrayCreationExpression -> NEW BOOLEAN DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',536),
  ('ArrayCreationExpression -> NEW ClassType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',537),
  ('ArrayCreationExpression -> NEW TypeVariable DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',538),
  ('ArrayCreationExpression -> NEW IDENT PERIOD IDENT DimExprs Dims','ArrayCreationExpression',6,'p_ArrayCreationExpression','parser_hack.py',539),
  ('ArrayCreationExpression -> NEW IDENT DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',540),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser_hack.py',541),
  ('ArrayCreationExpression -> NEW BOOLEAN DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser_hack.py',542),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser_hack.py',543),
  ('ArrayCreationExpression -> NEW TypeVariable DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser_hack.py',544),
  ('ArrayCreationExpression -> NEW IDENT PERIOD IDENT DimExprs','ArrayCreationExpression',5,'p_ArrayCreationExpression','parser_hack.py',545),
  ('ArrayCreationExpression -> NEW IDENT DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser_hack.py',546),
  ('ArrayCreationExpression -> NEW PrimitiveType Dims ArrayInitializer','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',547),
  ('ArrayCreationExpression -> NEW BOOLEAN Dims ArrayInitializer','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',548),
  ('ArrayCreationExpression -> NEW ClassType Dims ArrayInitializer','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',549),
  ('ArrayCreationExpression -> NEW TypeVariable Dims ArrayInitializer','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',550),
  ('ArrayCreationExpression -> NEW IDENT PERIOD IDENT Dims ArrayInitializer','ArrayCreationExpression',6,'p_ArrayCreationExpression','parser_hack.py',551),
  ('ArrayCreationExpression -> NEW IDENT Dims ArrayInitializer','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser_hack.py',552),
  ('DimExprs -> DimExpr DimExprS','DimExprs',2,'p_DimExprs','parser_hack.py',558),
  ('DimExprS -> DimExprS DimExpr','DimExprS',2,'p_DimExprS','parser_hack.py',562),
  ('DimExprS -> empty','DimExprS',1,'p_DimExprS','parser_hack.py',563),
  ('DimExpr -> AnnotationS LBRACK Expression RBRACK','DimExpr',4,'p_DimExpr','parser_hack.py',567),
  ('DimExpr -> LBRACK Expression RBRACK','DimExpr',3,'p_DimExpr','parser_hack.py',568),
  ('Expression -> LambdaExpression','Expression',1,'p_Expression','parser_hack.py',572),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','parser_hack.py',573),
  ('LambdaExpression -> LambdaParameters ARROW LambdaBody','LambdaExpression',3,'p_LambdaExpression','parser_hack.py',577),
  ('LambdaParameters -> IDENT','LambdaParameters',1,'p_LambdaParameters','parser_hack.py',582),
  ('LambdaParameters -> LPAREN FormalParameterList RPAREN','LambdaParameters',3,'p_LambdaParameters','parser_hack.py',583),
  ('LambdaParameters -> LPAREN RPAREN','LambdaParameters',2,'p_LambdaParameters','parser_hack.py',584),
  ('LambdaParameters -> LPAREN InferredFormalParameterList RPAREN','LambdaParameters',3,'p_LambdaParameters','parser_hack.py',585),
  ('InferredFormalParameterList -> IDENT COMMAIDENTS','InferredFormalParameterList',2,'p_InferredFormalParameterList','parser_hack.py',595),
  ('COMMAIDENTS -> COMMAIDENTS COMMA IDENT','COMMAIDENTS',3,'p_COMMAIDENTS','parser_hack.py',599),
  ('COMMAIDENTS -> empty','COMMAIDENTS',1,'p_COMMAIDENTS','parser_hack.py',600),
  ('LambdaBody -> Expression','LambdaBody',1,'p_LambdaBody','parser_hack.py',604),
  ('LambdaBody -> Block','LambdaBody',1,'p_LambdaBody','parser_hack.py',605),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','parser_hack.py',609),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','parser_hack.py',610),
  ('Assignment -> LeftHandSide AssignmentOperator Expression','Assignment',3,'p_Assignment','parser_hack.py',614),
  ('Assignment -> IDENT AssignmentOperator Expression','Assignment',3,'p_Assignment','parser_hack.py',615),
  ('LeftHandSide -> ExpressionName','LeftHandSide',1,'p_LeftHandSide','parser_hack.py',619),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','parser_hack.py',620),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','parser_hack.py',621),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',625),
  ('AssignmentOperator -> MUL_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',626),
  ('AssignmentOperator -> QUO_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',627),
  ('AssignmentOperator -> REM_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',628),
  ('AssignmentOperator -> ADD_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',629),
  ('AssignmentOperator -> SUB_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',630),
  ('AssignmentOperator -> SHL_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',631),
  ('AssignmentOperator -> SHR_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',632),
  ('AssignmentOperator -> SHR_UN_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',633),
  ('AssignmentOperator -> AND_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',634),
  ('AssignmentOperator -> XOR_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',635),
  ('AssignmentOperator -> OR_ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser_hack.py',636),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','parser_hack.py',640),
  ('ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','parser_hack.py',641),
  ('ConditionalExpression -> ConditionalOrExpression QUES Expression COLON LambdaExpression','ConditionalExpression',5,'p_ConditionalExpression','parser_hack.py',642),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','parser_hack.py',646),
  ('ConditionalOrExpression -> ConditionalOrExpression LOR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','parser_hack.py',647),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','parser_hack.py',651),
  ('ConditionalAndExpression -> ConditionalAndExpression LAND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','parser_hack.py',652),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','parser_hack.py',656),
  ('InclusiveOrExpression -> InclusiveOrExpression OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','parser_hack.py',657),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','parser_hack.py',661),
  ('ExclusiveOrExpression -> ExclusiveOrExpression XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','parser_hack.py',662),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','parser_hack.py',666),
  ('AndExpression -> AndExpression AND EqualityExpression','AndExpression',3,'p_AndExpression','parser_hack.py',667),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','parser_hack.py',671),
  ('EqualityExpression -> EqualityExpression EQL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser_hack.py',672),
  ('EqualityExpression -> EqualityExpression NEQ RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser_hack.py',673),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','parser_hack.py',678),
  ('RelationalExpression -> RelationalExpression LSS ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser_hack.py',679),
  ('RelationalExpression -> RelationalExpression GTR ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser_hack.py',680),
  ('RelationalExpression -> RelationalExpression LEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser_hack.py',681),
  ('RelationalExpression -> RelationalExpression GEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser_hack.py',682),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','parser_hack.py',683),
  ('RelationalExpression -> RelationalExpression INSTANCEOF IDENT','RelationalExpression',3,'p_RelationalExpression','parser_hack.py',684),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','parser_hack.py',688),
  ('ShiftExpression -> ShiftExpression SHL AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser_hack.py',689),
  ('ShiftExpression -> ShiftExpression SHR AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser_hack.py',690),
  ('ShiftExpression -> ShiftExpression SHR_UN AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser_hack.py',691),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','parser_hack.py',695),
  ('AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser_hack.py',696),
  ('AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser_hack.py',697),
  ('AdditiveExpression -> AdditiveExpression ADD IDENT','AdditiveExpression',3,'p_AdditiveExpression','parser_hack.py',698),
  ('AdditiveExpression -> AdditiveExpression SUB IDENT','AdditiveExpression',3,'p_AdditiveExpression','parser_hack.py',699),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','parser_hack.py',703),
  ('MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',704),
  ('MultiplicativeExpression -> MultiplicativeExpression QUO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',705),
  ('MultiplicativeExpression -> MultiplicativeExpression REM UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',706),
  ('MultiplicativeExpression -> MultiplicativeExpression MUL IDENT','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',707),
  ('MultiplicativeExpression -> MultiplicativeExpression QUO IDENT','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',708),
  ('MultiplicativeExpression -> MultiplicativeExpression REM IDENT','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',709),
  ('MultiplicativeExpression -> IDENT MUL UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',710),
  ('MultiplicativeExpression -> IDENT QUO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',711),
  ('MultiplicativeExpression -> IDENT REM UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',712),
  ('MultiplicativeExpression -> IDENT MUL IDENT','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',713),
  ('MultiplicativeExpression -> IDENT QUO IDENT','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',714),
  ('MultiplicativeExpression -> IDENT REM IDENT','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser_hack.py',715),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','parser_hack.py',719),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','parser_hack.py',720),
  ('UnaryExpression -> ADD UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser_hack.py',721),
  ('UnaryExpression -> SUB UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser_hack.py',722),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','parser_hack.py',723),
  ('PreIncrementExpression -> INC UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','parser_hack.py',727),
  ('PreIncrementExpression -> INC IDENT','PreIncrementExpression',2,'p_PreIncrementExpression','parser_hack.py',728),
  ('PreDecrementExpression -> DEC UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','parser_hack.py',732),
  ('PreDecrementExpression -> DEC IDENT','PreDecrementExpression',2,'p_PreDecrementExpression','parser_hack.py',733),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser_hack.py',738),
  ('UnaryExpressionNotPlusMinus -> LNOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser_hack.py',739),
  ('UnaryExpressionNotPlusMinus -> NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser_hack.py',740),
  ('UnaryExpressionNotPlusMinus -> LNOT IDENT','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser_hack.py',741),
  ('UnaryExpressionNotPlusMinus -> NOT IDENT','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser_hack.py',742),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser_hack.py',743),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','parser_hack.py',747),
  ('PostfixExpression -> ExpressionName','PostfixExpression',1,'p_PostfixExpression','parser_hack.py',748),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','parser_hack.py',749),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','parser_hack.py',750),
  ('PostIncrementExpression -> PostfixExpression INC','PostIncrementExpression',2,'p_PostIncrementExpression','parser_hack.py',754),
  ('PostIncrementExpression -> IDENT INC','PostIncrementExpression',2,'p_PostIncrementExpression','parser_hack.py',755),
  ('PostDecrementExpression -> PostfixExpression DEC','PostDecrementExpression',2,'p_PostDecrementExpression','parser_hack.py',759),
  ('PostDecrementExpression -> IDENT DEC','PostDecrementExpression',2,'p_PostDecrementExpression','parser_hack.py',760),
  ('CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression','CastExpression',4,'p_CastExpression','parser_hack.py',764),
  ('CastExpression -> LPAREN PrimitiveType RPAREN IDENT','CastExpression',4,'p_CastExpression','parser_hack.py',765),
  ('CastExpression -> LPAREN BOOLEAN RPAREN UnaryExpression','CastExpression',4,'p_CastExpression','parser_hack.py',766),
  ('CastExpression -> LPAREN BOOLEAN RPAREN IDENT','CastExpression',4,'p_CastExpression','parser_hack.py',767),
  ('CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','parser_hack.py',768),
  ('CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN IDENT','CastExpression',5,'p_CastExpression','parser_hack.py',769),
  ('CastExpression -> LPAREN ReferenceType AdditionalBoundS RPAREN LambdaExpression','CastExpression',5,'p_CastExpression','parser_hack.py',770),
  ('CastExpression -> LPAREN IDENT AdditionalBoundS RPAREN UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','parser_hack.py',771),
  ('CastExpression -> LPAREN IDENT AdditionalBoundS RPAREN IDENT','CastExpression',5,'p_CastExpression','parser_hack.py',772),
  ('CastExpression -> LPAREN IDENT AdditionalBoundS RPAREN LambdaExpression','CastExpression',5,'p_CastExpression','parser_hack.py',773),
  ('CastExpression -> LPAREN ReferenceType RPAREN UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','parser_hack.py',774),
  ('CastExpression -> LPAREN ReferenceType RPAREN IDENT','CastExpression',4,'p_CastExpression','parser_hack.py',775),
  ('CastExpression -> LPAREN ReferenceType RPAREN LambdaExpression','CastExpression',4,'p_CastExpression','parser_hack.py',776),
  ('CastExpression -> LPAREN IDENT RPAREN UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','parser_hack.py',777),
  ('CastExpression -> LPAREN IDENT RPAREN IDENT','CastExpression',4,'p_CastExpression','parser_hack.py',778),
  ('CastExpression -> LPAREN IDENT RPAREN LambdaExpression','CastExpression',4,'p_CastExpression','parser_hack.py',779),
  ('AdditionalBoundS -> AdditionalBoundS AdditionalBound','AdditionalBoundS',2,'p_AdditionalBoundS','parser_hack.py',783),
  ('AdditionalBoundS -> AdditionalBound','AdditionalBoundS',1,'p_AdditionalBoundS','parser_hack.py',784),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','parser_hack.py',788),
  ('CompilationUnit -> ImportDeclarationS TypeDeclarationS','CompilationUnit',2,'p_CompilationUnit','parser_hack.py',798),
  ('CompilationUnit -> PackageDeclaration ImportDeclarationS TypeDeclarationS','CompilationUnit',3,'p_CompilationUnit','parser_hack.py',799),
  ('ImportDeclarationS -> ImportDeclarationS ImportDeclaration','ImportDeclarationS',2,'p_ImportDeclarationS','parser_hack.py',808),
  ('ImportDeclarationS -> empty','ImportDeclarationS',1,'p_ImportDeclarationS','parser_hack.py',809),
  ('TypeDeclarationS -> TypeDeclarationS TypeDeclaration','TypeDeclarationS',2,'p_TypeDeclarationS','parser_hack.py',813),
  ('TypeDeclarationS -> TypeDeclarationS SEMICOLON','TypeDeclarationS',2,'p_TypeDeclarationS','parser_hack.py',814),
  ('TypeDeclarationS -> empty','TypeDeclarationS',1,'p_TypeDeclarationS','parser_hack.py',815),
  ('PackageDeclaration -> PackageModifierS PACKAGE IDENT PERIODIDENTS SEMICOLON','PackageDeclaration',5,'p_PackageDeclaration','parser_hack.py',819),
  ('PackageModifierS -> PackageModifierS PackageModifier','PackageModifierS',2,'p_PackageModifierS','parser_hack.py',823),
  ('PackageModifierS -> empty','PackageModifierS',1,'p_PackageModifierS','parser_hack.py',824),
  ('PERIODIDENTS -> PERIODIDENTS PERIOD IDENT','PERIODIDENTS',3,'p_PERIODIDENTS','parser_hack.py',828),
  ('PERIODIDENTS -> empty','PERIODIDENTS',1,'p_PERIODIDENTS','parser_hack.py',829),
  ('PackageModifier -> Annotation','PackageModifier',1,'p_PackageModifier','parser_hack.py',833),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser_hack.py',837),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser_hack.py',838),
  ('ImportDeclaration -> SingleStaticImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser_hack.py',839),
  ('ImportDeclaration -> StaticImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser_hack.py',840),
  ('SingleTypeImportDeclaration -> IMPORT ExpressionName SEMICOLON','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','parser_hack.py',844),
  ('TypeImportOnDemandDeclaration -> IMPORT ExpressionName PERIOD MUL SEMICOLON','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','parser_hack.py',848),
  ('TypeImportOnDemandDeclaration -> IMPORT IDENT PERIOD MUL SEMICOLON','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','parser_hack.py',849),
  ('SingleStaticImportDeclaration -> IMPORT STATIC ExpressionName PERIOD IDENT SEMICOLON','SingleStaticImportDeclaration',6,'p_SingleStaticImportDeclaration','parser_hack.py',853),
  ('StaticImportOnDemandDeclaration -> IMPORT STATIC ExpressionName PERIOD MUL SEMICOLON','StaticImportOnDemandDeclaration',6,'p_StaticImportOnDemandDeclaration','parser_hack.py',857),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','parser_hack.py',861),
  ('TypeDeclaration -> InterfaceDeclaration','TypeDeclaration',1,'p_TypeDeclaration','parser_hack.py',862),
  ('ExpressionName -> PERIOD IDENT','ExpressionName',2,'p_ExpressionName','parser_hack.py',888),
  ('ExpressionName -> ExpressionName PERIOD IDENT','ExpressionName',3,'p_ExpressionName','parser_hack.py',889),
  ('ClassDeclaration -> NormalClassDeclaration','ClassDeclaration',1,'p_ClassDeclaration','parser_hack.py',912),
  ('ClassDeclaration -> EnumDeclaration','ClassDeclaration',1,'p_ClassDeclaration','parser_hack.py',913),
  ('SuperClass -> EXTENDS ClassType','SuperClass',2,'p_SuperClass','parser_hack.py',922),
  ('SuperClass -> EXTENDS TypeVariable','SuperClass',2,'p_SuperClass','parser_hack.py',923),
  ('SuperClass -> EXTENDS IDENT PERIOD IDENT','SuperClass',4,'p_SuperClass','parser_hack.py',924),
  ('SuperClass -> EXTENDS IDENT','SuperClass',2,'p_SuperClass','parser_hack.py',925),
  ('NormalClassDeclaration -> CommonModifierS CLASS IDENT TypeParameters','NormalClassDeclaration',4,'p_NormalClassDeclaration','parser_hack.py',948),
  ('NormalClassDeclaration -> CommonModifierS CLASS IDENT','NormalClassDeclaration',3,'p_NormalClassDeclaration','parser_hack.py',949),
  ('NormalClassDeclaration -> CLASS IDENT TypeParameters','NormalClassDeclaration',3,'p_NormalClassDeclaration','parser_hack.py',950),
  ('NormalClassDeclaration -> CLASS IDENT','NormalClassDeclaration',2,'p_NormalClassDeclaration','parser_hack.py',951),
  ('NormalClassDeclaration -> SuperClass Superinterfaces ClassBody','NormalClassDeclaration',3,'p_NormalClassDeclaration','parser_hack.py',952),
  ('NormalClassDeclaration -> SuperClass ClassBody','NormalClassDeclaration',2,'p_NormalClassDeclaration','parser_hack.py',953),
  ('NormalClassDeclaration -> Superinterfaces ClassBody','NormalClassDeclaration',2,'p_NormalClassDeclaration','parser_hack.py',954),
  ('NormalClassDeclaration -> ClassBody','NormalClassDeclaration',1,'p_NormalClassDeclaration','parser_hack.py',955),
  ('TypeParameters -> LSS TypeParameterList GTR','TypeParameters',3,'p_TypeParameters','parser_hack.py',984),
  ('COMMMATypeParameterS -> COMMMATypeParameterS COMMA TypeParameter','COMMMATypeParameterS',3,'p_COMMMATypeParameterS','parser_hack.py',989),
  ('COMMMATypeParameterS -> empty','COMMMATypeParameterS',1,'p_COMMMATypeParameterS','parser_hack.py',990),
  ('TypeParameterList -> TypeParameter COMMMATypeParameterS','TypeParameterList',2,'p_TypeParameterList','parser_hack.py',995),
  ('Superinterfaces -> IMPLEMENTS InterfaceTypeList','Superinterfaces',2,'p_Superinterfaces','parser_hack.py',1005),
  ('COMMAInterfaceTypeS -> COMMA InterfaceTypeList','COMMAInterfaceTypeS',2,'p_COMMAInterfaceTypeS','parser_hack.py',1010),
  ('COMMAInterfaceTypeS -> empty','COMMAInterfaceTypeS',1,'p_COMMAInterfaceTypeS','parser_hack.py',1011),
  ('InterfaceTypeList -> ClassType COMMAInterfaceTypeS','InterfaceTypeList',2,'p_InterfaceTypeList','parser_hack.py',1016),
  ('InterfaceTypeList -> TypeVariable COMMAInterfaceTypeS','InterfaceTypeList',2,'p_InterfaceTypeList','parser_hack.py',1017),
  ('InterfaceTypeList -> IDENT PERIOD IDENT COMMAInterfaceTypeS','InterfaceTypeList',4,'p_InterfaceTypeList','parser_hack.py',1018),
  ('InterfaceTypeList -> IDENT COMMAInterfaceTypeS','InterfaceTypeList',2,'p_InterfaceTypeList','parser_hack.py',1019),
  ('ClassBodyDeclarationS -> ClassBodyDeclarationS ClassBodyDeclaration','ClassBodyDeclarationS',2,'p_ClassBodyDeclarationS','parser_hack.py',1024),
  ('ClassBodyDeclarationS -> ClassBodyDeclarationS SEMICOLON','ClassBodyDeclarationS',2,'p_ClassBodyDeclarationS','parser_hack.py',1025),
  ('ClassBodyDeclarationS -> empty','ClassBodyDeclarationS',1,'p_ClassBodyDeclarationS','parser_hack.py',1026),
  ('ClassBody -> lbrace ClassBodyDeclarationS rbrace','ClassBody',3,'p_ClassBody','parser_hack.py',1031),
  ('ClassBodyDeclaration -> ClassMemberDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser_hack.py',1036),
  ('ClassBodyDeclaration -> Block','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser_hack.py',1037),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser_hack.py',1038),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser_hack.py',1039),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser_hack.py',1044),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser_hack.py',1045),
  ('ClassMemberDeclaration -> ClassDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser_hack.py',1046),
  ('ClassMemberDeclaration -> InterfaceDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser_hack.py',1047),
  ('FieldDeclaration -> CommonModifierS UnannType VariableDeclaratorList SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1058),
  ('FieldDeclaration -> CommonModifierS NumericType VariableDeclaratorList SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1059),
  ('FieldDeclaration -> CommonModifierS BOOLEAN VariableDeclaratorList SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1060),
  ('FieldDeclaration -> CommonModifierS IDENT VariableDeclaratorList SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1061),
  ('FieldDeclaration -> UnannType VariableDeclaratorList SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1062),
  ('FieldDeclaration -> NumericType VariableDeclaratorList SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1063),
  ('FieldDeclaration -> BOOLEAN VariableDeclaratorList SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1064),
  ('FieldDeclaration -> IDENT VariableDeclaratorList SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1065),
  ('FieldDeclaration -> CommonModifierS UnannType IDENT SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1066),
  ('FieldDeclaration -> CommonModifierS NumericType IDENT SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1067),
  ('FieldDeclaration -> CommonModifierS BOOLEAN IDENT SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1068),
  ('FieldDeclaration -> CommonModifierS IDENT IDENT SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser_hack.py',1069),
  ('FieldDeclaration -> UnannType IDENT SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1070),
  ('FieldDeclaration -> NumericType IDENT SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1071),
  ('FieldDeclaration -> BOOLEAN IDENT SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1072),
  ('FieldDeclaration -> IDENT IDENT SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser_hack.py',1073),
  ('COMMAVariableDeclaratorS -> COMMAVariableDeclaratorS COMMA VariableDeclarator','COMMAVariableDeclaratorS',3,'p_COMMAVariableDeclaratorS','parser_hack.py',1089),
  ('COMMAVariableDeclaratorS -> COMMAVariableDeclaratorS COMMA IDENT','COMMAVariableDeclaratorS',3,'p_COMMAVariableDeclaratorS','parser_hack.py',1090),
  ('COMMAVariableDeclaratorS -> COMMA IDENT','COMMAVariableDeclaratorS',2,'p_COMMAVariableDeclaratorS','parser_hack.py',1091),
  ('COMMAVariableDeclaratorS -> COMMA VariableDeclarator','COMMAVariableDeclaratorS',2,'p_COMMAVariableDeclaratorS','parser_hack.py',1092),
  ('VariableDeclaratorList -> VariableDeclarator COMMAVariableDeclaratorS','VariableDeclaratorList',2,'p_VariableDeclaratorList','parser_hack.py',1097),
  ('VariableDeclaratorList -> IDENT COMMAVariableDeclaratorS','VariableDeclaratorList',2,'p_VariableDeclaratorList','parser_hack.py',1098),
  ('VariableDeclaratorList -> VariableDeclarator','VariableDeclaratorList',1,'p_VariableDeclaratorList','parser_hack.py',1099),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','parser_hack.py',1110),
  ('VariableDeclarator -> IDENT ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','parser_hack.py',1111),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','parser_hack.py',1112),
  ('VariableDeclaratorId -> IDENT Dims','VariableDeclaratorId',2,'p_VariableDeclaratorId','parser_hack.py',1123),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','parser_hack.py',1127),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','parser_hack.py',1128),
  ('UnannType -> UnannReferenceType','UnannType',1,'p_UnannType','parser_hack.py',1133),
  ('UnannType -> IDENT PERIOD IDENT','UnannType',3,'p_UnannType','parser_hack.py',1134),
  ('UnannReferenceType -> UnannClassType','UnannReferenceType',1,'p_UnannReferenceType','parser_hack.py',1144),
  ('UnannReferenceType -> UnannArrayType','UnannReferenceType',1,'p_UnannReferenceType','parser_hack.py',1145),
  ('UnannClassType -> IDENT TypeArguments','UnannClassType',2,'p_UnannClassType','parser_hack.py',1163),
  ('UnannClassType -> UnannClassType PERIOD IDENT','UnannClassType',3,'p_UnannClassType','parser_hack.py',1164),
  ('UnannClassType -> UnannClassType PERIOD IDENT TypeArguments','UnannClassType',4,'p_UnannClassType','parser_hack.py',1165),
  ('UnannClassType -> UnannClassType PERIOD AnnotationS IDENT','UnannClassType',4,'p_UnannClassType','parser_hack.py',1166),
  ('UnannClassType -> UnannClassType PERIOD AnnotationS IDENT TypeArguments','UnannClassType',5,'p_UnannClassType','parser_hack.py',1167),
  ('UnannClassType -> IDENT PERIOD IDENT TypeArguments','UnannClassType',4,'p_UnannClassType','parser_hack.py',1168),
  ('UnannClassType -> IDENT PERIOD AnnotationS IDENT','UnannClassType',4,'p_UnannClassType','parser_hack.py',1169),
  ('UnannClassType -> IDENT PERIOD AnnotationS IDENT TypeArguments','UnannClassType',5,'p_UnannClassType','parser_hack.py',1170),
  ('UnannArrayType -> NumericType Dims','UnannArrayType',2,'p_UnannArrayType','parser_hack.py',1185),
  ('UnannArrayType -> BOOLEAN Dims','UnannArrayType',2,'p_UnannArrayType','parser_hack.py',1186),
  ('UnannArrayType -> UnannClassType Dims','UnannArrayType',2,'p_UnannArrayType','parser_hack.py',1187),
  ('UnannArrayType -> IDENT PERIOD IDENT Dims','UnannArrayType',4,'p_UnannArrayType','parser_hack.py',1188),
  ('UnannArrayType -> IDENT Dims','UnannArrayType',2,'p_UnannArrayType','parser_hack.py',1189),
  ('MethodDeclaration -> CommonModifierS MethodHeader MethodBody','MethodDeclaration',3,'p_MethodDeclaration','parser_hack.py',1200),
  ('MethodDeclaration -> MethodHeader MethodBody','MethodDeclaration',2,'p_MethodDeclaration','parser_hack.py',1201),
  ('MethodDeclaration -> CommonModifierS MethodHeader SEMICOLON','MethodDeclaration',3,'p_MethodDeclaration','parser_hack.py',1202),
  ('MethodDeclaration -> MethodHeader SEMICOLON','MethodDeclaration',2,'p_MethodDeclaration','parser_hack.py',1203),
  ('MethodHeader -> TypeParameters AnnotationS UnannType MethodDeclarator Throws','MethodHeader',5,'p_MethodHeader','parser_hack.py',1229),
  ('MethodHeader -> TypeParameters UnannType MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser_hack.py',1230),
  ('MethodHeader -> TypeParameters AnnotationS NumericType MethodDeclarator Throws','MethodHeader',5,'p_MethodHeader','parser_hack.py',1231),
  ('MethodHeader -> TypeParameters NumericType MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser_hack.py',1232),
  ('MethodHeader -> TypeParameters AnnotationS BOOLEAN MethodDeclarator Throws','MethodHeader',5,'p_MethodHeader','parser_hack.py',1233),
  ('MethodHeader -> TypeParameters BOOLEAN MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser_hack.py',1234),
  ('MethodHeader -> TypeParameters AnnotationS VOID MethodDeclarator Throws','MethodHeader',5,'p_MethodHeader','parser_hack.py',1235),
  ('MethodHeader -> TypeParameters VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser_hack.py',1236),
  ('MethodHeader -> TypeParameters AnnotationS IDENT MethodDeclarator Throws','MethodHeader',5,'p_MethodHeader','parser_hack.py',1237),
  ('MethodHeader -> TypeParameters IDENT MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser_hack.py',1238),
  ('MethodHeader -> TypeParameters AnnotationS UnannType MethodDeclarator','MethodHeader',4,'p_MethodHeader','parser_hack.py',1239),
  ('MethodHeader -> TypeParameters UnannType MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser_hack.py',1240),
  ('MethodHeader -> TypeParameters AnnotationS NumericType MethodDeclarator','MethodHeader',4,'p_MethodHeader','parser_hack.py',1241),
  ('MethodHeader -> TypeParameters NumericType MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser_hack.py',1242),
  ('MethodHeader -> TypeParameters AnnotationS BOOLEAN MethodDeclarator','MethodHeader',4,'p_MethodHeader','parser_hack.py',1243),
  ('MethodHeader -> TypeParameters BOOLEAN MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser_hack.py',1244),
  ('MethodHeader -> TypeParameters AnnotationS VOID MethodDeclarator','MethodHeader',4,'p_MethodHeader','parser_hack.py',1245),
  ('MethodHeader -> TypeParameters VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser_hack.py',1246),
  ('MethodHeader -> TypeParameters AnnotationS IDENT MethodDeclarator','MethodHeader',4,'p_MethodHeader','parser_hack.py',1247),
  ('MethodHeader -> TypeParameters IDENT MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser_hack.py',1248),
  ('MethodHeader -> BOOLEAN MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser_hack.py',1249),
  ('MethodHeader -> BOOLEAN MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser_hack.py',1250),
  ('MethodHeader -> IDENT MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser_hack.py',1251),
  ('MethodHeader -> IDENT MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser_hack.py',1252),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser_hack.py',1253),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser_hack.py',1254),
  ('MethodHeader -> UnannType MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser_hack.py',1255),
  ('MethodHeader -> UnannType MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser_hack.py',1256),
  ('MethodHeader -> NumericType MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser_hack.py',1257),
  ('MethodHeader -> NumericType MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser_hack.py',1258),
  ('MethodDeclarator -> IDENT LPAREN FormalParameterList RPAREN','MethodDeclarator',4,'p_MethodDeclarator','parser_hack.py',1280),
  ('MethodDeclarator -> IDENT LPAREN RPAREN','MethodDeclarator',3,'p_MethodDeclarator','parser_hack.py',1281),
  ('FormalParameterList -> ReceiverParameter','FormalParameterList',1,'p_FormalParameterList','parser_hack.py',1287),
  ('FormalParameterList -> FormalParameters COMMA FormalParameter','FormalParameterList',3,'p_FormalParameterList','parser_hack.py',1288),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParameterList','parser_hack.py',1289),
  ('FormalParameterList -> FormalParameters','FormalParameterList',1,'p_FormalParameterList','parser_hack.py',1290),
  ('COMMAFormalParameterS -> COMMAFormalParameterS COMMA FormalParameter','COMMAFormalParameterS',3,'p_COMMAFormalParameterS','parser_hack.py',1295),
  ('COMMAFormalParameterS -> COMMA FormalParameter','COMMAFormalParameterS',2,'p_COMMAFormalParameterS','parser_hack.py',1296),
  ('FormalParameters -> FormalParameter COMMAFormalParameterS','FormalParameters',2,'p_FormalParameters','parser_hack.py',1321),
  ('FormalParameters -> ReceiverParameter COMMAFormalParameterS','FormalParameters',2,'p_FormalParameters','parser_hack.py',1322),
  ('FormalParameters -> FormalParameter COMMA FormalParameter','FormalParameters',3,'p_FormalParameters','parser_hack.py',1323),
  ('FormalParameters -> ReceiverParameter COMMA FormalParameter','FormalParameters',3,'p_FormalParameters','parser_hack.py',1324),
  ('FormalParameter -> CommonModifier UnannType VariableDeclaratorId','FormalParameter',3,'p_FormalParameter','parser_hack.py',1330),
  ('FormalParameter -> CommonModifier NumericType VariableDeclaratorId','FormalParameter',3,'p_FormalParameter','parser_hack.py',1331),
  ('FormalParameter -> CommonModifier BOOLEAN VariableDeclaratorId','FormalParameter',3,'p_FormalParameter','parser_hack.py',1332),
  ('FormalParameter -> CommonModifier IDENT VariableDeclaratorId','FormalParameter',3,'p_FormalParameter','parser_hack.py',1333),
  ('FormalParameter -> CommonModifier UnannType IDENT','FormalParameter',3,'p_FormalParameter','parser_hack.py',1334),
  ('FormalParameter -> CommonModifier NumericType IDENT','FormalParameter',3,'p_FormalParameter','parser_hack.py',1335),
  ('FormalParameter -> CommonModifier BOOLEAN IDENT','FormalParameter',3,'p_FormalParameter','parser_hack.py',1336),
  ('FormalParameter -> CommonModifier IDENT IDENT','FormalParameter',3,'p_FormalParameter','parser_hack.py',1337),
  ('FormalParameter -> UnannType VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser_hack.py',1338),
  ('FormalParameter -> NumericType VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser_hack.py',1339),
  ('FormalParameter -> BOOLEAN VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser_hack.py',1340),
  ('FormalParameter -> IDENT VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser_hack.py',1341),
  ('FormalParameter -> UnannType IDENT','FormalParameter',2,'p_FormalParameter','parser_hack.py',1342),
  ('FormalParameter -> NumericType IDENT','FormalParameter',2,'p_FormalParameter','parser_hack.py',1343),
  ('FormalParameter -> BOOLEAN IDENT','FormalParameter',2,'p_FormalParameter','parser_hack.py',1344),
  ('FormalParameter -> IDENT IDENT','FormalParameter',2,'p_FormalParameter','parser_hack.py',1345),
  ('ReceiverParameter -> AnnotationS UnannType IDENT PERIOD THIS','ReceiverParameter',5,'p_ReceiverParameter','parser_hack.py',1394),
  ('ReceiverParameter -> AnnotationS NumericType IDENT PERIOD THIS','ReceiverParameter',5,'p_ReceiverParameter','parser_hack.py',1395),
  ('ReceiverParameter -> AnnotationS BOOLEAN IDENT PERIOD THIS','ReceiverParameter',5,'p_ReceiverParameter','parser_hack.py',1396),
  ('ReceiverParameter -> AnnotationS IDENT IDENT PERIOD THIS','ReceiverParameter',5,'p_ReceiverParameter','parser_hack.py',1397),
  ('ReceiverParameter -> UnannType IDENT PERIOD THIS','ReceiverParameter',4,'p_ReceiverParameter','parser_hack.py',1398),
  ('ReceiverParameter -> NumericType IDENT PERIOD THIS','ReceiverParameter',4,'p_ReceiverParameter','parser_hack.py',1399),
  ('ReceiverParameter -> BOOLEAN IDENT PERIOD THIS','ReceiverParameter',4,'p_ReceiverParameter','parser_hack.py',1400),
  ('ReceiverParameter -> IDENT IDENT PERIOD THIS','ReceiverParameter',4,'p_ReceiverParameter','parser_hack.py',1401),
  ('ReceiverParameter -> AnnotationS UnannType THIS','ReceiverParameter',3,'p_ReceiverParameter','parser_hack.py',1402),
  ('ReceiverParameter -> AnnotationS NumericType THIS','ReceiverParameter',3,'p_ReceiverParameter','parser_hack.py',1403),
  ('ReceiverParameter -> AnnotationS BOOLEAN THIS','ReceiverParameter',3,'p_ReceiverParameter','parser_hack.py',1404),
  ('ReceiverParameter -> AnnotationS IDENT THIS','ReceiverParameter',3,'p_ReceiverParameter','parser_hack.py',1405),
  ('ReceiverParameter -> UnannType THIS','ReceiverParameter',2,'p_ReceiverParameter','parser_hack.py',1406),
  ('ReceiverParameter -> NumericType THIS','ReceiverParameter',2,'p_ReceiverParameter','parser_hack.py',1407),
  ('ReceiverParameter -> BOOLEAN THIS','ReceiverParameter',2,'p_ReceiverParameter','parser_hack.py',1408),
  ('ReceiverParameter -> IDENT THIS','ReceiverParameter',2,'p_ReceiverParameter','parser_hack.py',1409),
  ('Throws -> THROWS ExceptionTypeList','Throws',2,'p_Throws','parser_hack.py',1415),
  ('COMMAExceptionTypeS -> COMMAExceptionTypeS COMMA ExceptionType','COMMAExceptionTypeS',3,'p_COMMAExceptionTypeS','parser_hack.py',1420),
  ('COMMAExceptionTypeS -> COMMAExceptionTypeS COMMA IDENT','COMMAExceptionTypeS',3,'p_COMMAExceptionTypeS','parser_hack.py',1421),
  ('COMMAExceptionTypeS -> empty','COMMAExceptionTypeS',1,'p_COMMAExceptionTypeS','parser_hack.py',1422),
  ('ExceptionTypeList -> ExceptionType COMMAExceptionTypeS','ExceptionTypeList',2,'p_ExceptionTypeList','parser_hack.py',1428),
  ('ExceptionTypeList -> IDENT COMMAExceptionTypeS','ExceptionTypeList',2,'p_ExceptionTypeList','parser_hack.py',1429),
  ('ExceptionType -> ClassType','ExceptionType',1,'p_ExceptionType','parser_hack.py',1435),
  ('ExceptionType -> IDENT PERIOD IDENT','ExceptionType',3,'p_ExceptionType','parser_hack.py',1436),
  ('ExceptionType -> TypeVariable','ExceptionType',1,'p_ExceptionType','parser_hack.py',1437),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','parser_hack.py',1442),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','parser_hack.py',1452),
  ('ConstructorDeclaration -> CommonModifierS ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser_hack.py',1463),
  ('ConstructorDeclaration -> CommonModifierS ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','parser_hack.py',1464),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','parser_hack.py',1465),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser_hack.py',1466),
  ('ConstructorDeclarator -> TypeParameters IDENT LPAREN FormalParameterList RPAREN','ConstructorDeclarator',5,'p_ConstructorDeclarator','parser_hack.py',1481),
  ('ConstructorDeclarator -> IDENT LPAREN FormalParameterList RPAREN','ConstructorDeclarator',4,'p_ConstructorDeclarator','parser_hack.py',1482),
  ('ConstructorDeclarator -> TypeParameters IDENT LPAREN RPAREN','ConstructorDeclarator',4,'p_ConstructorDeclarator','parser_hack.py',1483),
  ('ConstructorDeclarator -> IDENT LPAREN RPAREN','ConstructorDeclarator',3,'p_ConstructorDeclarator','parser_hack.py',1484),
  ('ConstructorBody -> lbrace ExplicitConstructorInvocation BlockStatements rbrace','ConstructorBody',4,'p_ConstructorBody','parser_hack.py',1494),
  ('ConstructorBody -> lbrace ExplicitConstructorInvocation SEMICOLON rbrace','ConstructorBody',4,'p_ConstructorBody','parser_hack.py',1495),
  ('ConstructorBody -> lbrace ExplicitConstructorInvocation rbrace','ConstructorBody',3,'p_ConstructorBody','parser_hack.py',1496),
  ('ConstructorBody -> lbrace BlockStatements rbrace','ConstructorBody',3,'p_ConstructorBody','parser_hack.py',1497),
  ('ConstructorBody -> lbrace SEMICOLON rbrace','ConstructorBody',3,'p_ConstructorBody','parser_hack.py',1498),
  ('ConstructorBody -> lbrace rbrace','ConstructorBody',2,'p_ConstructorBody','parser_hack.py',1499),
  ('ExplicitConstructorInvocation -> TypeArguments THIS LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',6,'p_ExplicitConstructorInvocation','parser_hack.py',1522),
  ('ExplicitConstructorInvocation -> TypeArguments THIS LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser_hack.py',1523),
  ('ExplicitConstructorInvocation -> THIS LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser_hack.py',1524),
  ('ExplicitConstructorInvocation -> THIS LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser_hack.py',1525),
  ('ExplicitConstructorInvocation -> TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',6,'p_ExplicitConstructorInvocation','parser_hack.py',1526),
  ('ExplicitConstructorInvocation -> TypeArguments SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser_hack.py',1527),
  ('ExplicitConstructorInvocation -> SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser_hack.py',1528),
  ('ExplicitConstructorInvocation -> SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser_hack.py',1529),
  ('ExplicitConstructorInvocation -> ExpressionName PERIOD TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',8,'p_ExplicitConstructorInvocation','parser_hack.py',1530),
  ('ExplicitConstructorInvocation -> ExpressionName PERIOD SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',7,'p_ExplicitConstructorInvocation','parser_hack.py',1531),
  ('ExplicitConstructorInvocation -> ExpressionName PERIOD TypeArguments SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',7,'p_ExplicitConstructorInvocation','parser_hack.py',1532),
  ('ExplicitConstructorInvocation -> ExpressionName PERIOD SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',6,'p_ExplicitConstructorInvocation','parser_hack.py',1533),
  ('ExplicitConstructorInvocation -> IDENT PERIOD TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',8,'p_ExplicitConstructorInvocation','parser_hack.py',1534),
  ('ExplicitConstructorInvocation -> IDENT PERIOD SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',7,'p_ExplicitConstructorInvocation','parser_hack.py',1535),
  ('ExplicitConstructorInvocation -> IDENT PERIOD TypeArguments SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',7,'p_ExplicitConstructorInvocation','parser_hack.py',1536),
  ('ExplicitConstructorInvocation -> IDENT PERIOD SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',6,'p_ExplicitConstructorInvocation','parser_hack.py',1537),
  ('ExplicitConstructorInvocation -> Primary PERIOD TypeArguments SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',8,'p_ExplicitConstructorInvocation','parser_hack.py',1538),
  ('ExplicitConstructorInvocation -> Primary PERIOD TypeArguments SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',7,'p_ExplicitConstructorInvocation','parser_hack.py',1539),
  ('ExplicitConstructorInvocation -> Primary PERIOD SUPER LPAREN ArgumentList RPAREN SEMICOLON','ExplicitConstructorInvocation',7,'p_ExplicitConstructorInvocation','parser_hack.py',1540),
  ('ExplicitConstructorInvocation -> Primary PERIOD SUPER LPAREN RPAREN SEMICOLON','ExplicitConstructorInvocation',6,'p_ExplicitConstructorInvocation','parser_hack.py',1541),
  ('EnumDeclaration -> CommonModifierS ENUM IDENT Superinterfaces EnumBody','EnumDeclaration',5,'p_EnumDeclaration','parser_hack.py',1560),
  ('EnumDeclaration -> CommonModifierS ENUM IDENT EnumBody','EnumDeclaration',4,'p_EnumDeclaration','parser_hack.py',1561),
  ('EnumDeclaration -> ENUM IDENT Superinterfaces EnumBody','EnumDeclaration',4,'p_EnumDeclaration','parser_hack.py',1562),
  ('EnumDeclaration -> ENUM IDENT EnumBody','EnumDeclaration',3,'p_EnumDeclaration','parser_hack.py',1563),
  ('EnumBody -> lbrace EnumConstantList COMMA EnumBodyDeclarations rbrace','EnumBody',5,'p_EnumBody','parser_hack.py',1587),
  ('EnumBody -> lbrace EnumConstantList COMMA rbrace','EnumBody',4,'p_EnumBody','parser_hack.py',1588),
  ('EnumBody -> lbrace EnumConstantList EnumBodyDeclarations rbrace','EnumBody',4,'p_EnumBody','parser_hack.py',1589),
  ('EnumBody -> lbrace EnumConstantList rbrace','EnumBody',3,'p_EnumBody','parser_hack.py',1590),
  ('EnumBody -> lbrace COMMA EnumBodyDeclarations rbrace','EnumBody',4,'p_EnumBody','parser_hack.py',1591),
  ('EnumBody -> lbrace COMMA rbrace','EnumBody',3,'p_EnumBody','parser_hack.py',1592),
  ('EnumBody -> lbrace EnumBodyDeclarations rbrace','EnumBody',3,'p_EnumBody','parser_hack.py',1593),
  ('EnumBody -> lbrace rbrace','EnumBody',2,'p_EnumBody','parser_hack.py',1594),
  ('COMMAEnumConstantS -> COMMAEnumConstantS COMMA EnumConstant','COMMAEnumConstantS',3,'p_COMMAEnumConstantS','parser_hack.py',1599),
  ('COMMAEnumConstantS -> empty','COMMAEnumConstantS',1,'p_COMMAEnumConstantS','parser_hack.py',1600),
  ('EnumConstantList -> EnumConstant COMMAEnumConstantS','EnumConstantList',2,'p_EnumConstantList','parser_hack.py',1606),
  ('EnumConstant -> EnumConstantModifierS IDENT LPAREN RPAREN ClassBody','EnumConstant',5,'p_EnumConstant','parser_hack.py',1612),
  ('EnumConstant -> EnumConstantModifierS IDENT LPAREN ArgumentList RPAREN ClassBody','EnumConstant',6,'p_EnumConstant','parser_hack.py',1613),
  ('EnumConstant -> EnumConstantModifierS IDENT ClassBody','EnumConstant',3,'p_EnumConstant','parser_hack.py',1614),
  ('EnumConstant -> EnumConstantModifierS IDENT LPAREN RPAREN','EnumConstant',4,'p_EnumConstant','parser_hack.py',1615),
  ('EnumConstant -> EnumConstantModifierS IDENT LPAREN ArgumentList RPAREN','EnumConstant',5,'p_EnumConstant','parser_hack.py',1616),
  ('EnumConstant -> EnumConstantModifierS IDENT','EnumConstant',2,'p_EnumConstant','parser_hack.py',1617),
  ('EnumConstantModifierS -> EnumConstantModifierS EnumConstantModifier','EnumConstantModifierS',2,'p_EnumConstantModifierS','parser_hack.py',1623),
  ('EnumConstantModifierS -> empty','EnumConstantModifierS',1,'p_EnumConstantModifierS','parser_hack.py',1624),
  ('EnumConstantModifier -> Annotation','EnumConstantModifier',1,'p_EnumConstantModifier','parser_hack.py',1644),
  ('EnumBodyDeclarations -> SEMICOLON ClassBodyDeclarationS','EnumBodyDeclarations',2,'p_EnumBodyDeclarations','parser_hack.py',1650),
  ('PrimitiveType -> AnnotationS NumericType','PrimitiveType',2,'p_PrimitiveType','parser_hack.py',1670),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','parser_hack.py',1671),
  ('PrimitiveType -> AnnotationS BOOLEAN','PrimitiveType',2,'p_PrimitiveType','parser_hack.py',1672),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','parser_hack.py',1683),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','parser_hack.py',1684),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','parser_hack.py',1690),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','parser_hack.py',1691),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','parser_hack.py',1692),
  ('IntegralType -> LONG','IntegralType',1,'p_IntegralType','parser_hack.py',1693),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','parser_hack.py',1694),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','parser_hack.py',1700),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','parser_hack.py',1701),
  ('ReferenceType -> ExceptionType','ReferenceType',1,'p_ReferenceType','parser_hack.py',1707),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','parser_hack.py',1708),
  ('ClassType -> TypeVariable TypeArguments','ClassType',2,'p_ClassType','parser_hack.py',1725),
  ('ClassType -> IDENT TypeArguments','ClassType',2,'p_ClassType','parser_hack.py',1726),
  ('ClassType -> ClassType PERIOD TypeVariable TypeArguments','ClassType',4,'p_ClassType','parser_hack.py',1727),
  ('ClassType -> ClassType PERIOD IDENT TypeArguments','ClassType',4,'p_ClassType','parser_hack.py',1728),
  ('ClassType -> IDENT PERIOD TypeVariable TypeArguments','ClassType',4,'p_ClassType','parser_hack.py',1729),
  ('ClassType -> IDENT PERIOD IDENT TypeArguments','ClassType',4,'p_ClassType','parser_hack.py',1730),
  ('ClassType -> ClassType PERIOD TypeVariable','ClassType',3,'p_ClassType','parser_hack.py',1731),
  ('ClassType -> ClassType PERIOD IDENT','ClassType',3,'p_ClassType','parser_hack.py',1732),
  ('ClassType -> IDENT PERIOD TypeVariable','ClassType',3,'p_ClassType','parser_hack.py',1733),
  ('TypeVariable -> AnnotationS IDENT','TypeVariable',2,'p_TypeVariable','parser_hack.py',1750),
  ('ArrayType -> PrimitiveType Dims','ArrayType',2,'p_ArrayType','parser_hack.py',1756),
  ('ArrayType -> BOOLEAN Dims','ArrayType',2,'p_ArrayType','parser_hack.py',1757),
  ('ArrayType -> ClassType Dims','ArrayType',2,'p_ArrayType','parser_hack.py',1758),
  ('ArrayType -> IDENT PERIOD IDENT Dims','ArrayType',4,'p_ArrayType','parser_hack.py',1759),
  ('ArrayType -> TypeVariable Dims','ArrayType',2,'p_ArrayType','parser_hack.py',1760),
  ('ArrayType -> IDENT Dims','ArrayType',2,'p_ArrayType','parser_hack.py',1761),
  ('Dims -> lbrace rbrace','Dims',2,'p_Dims','parser_hack.py',1767),
  ('AnnotationSLBRACERBRACES -> AnnotationSLBRACERBRACES AnnotationS lbrace rbrace','AnnotationSLBRACERBRACES',4,'p_AnnotationSLBRACERBRACES','parser_hack.py',1771),
  ('AnnotationSLBRACERBRACES -> AnnotationSLBRACERBRACES lbrace rbrace','AnnotationSLBRACERBRACES',3,'p_AnnotationSLBRACERBRACES','parser_hack.py',1772),
  ('AnnotationSLBRACERBRACES -> empty','AnnotationSLBRACERBRACES',1,'p_AnnotationSLBRACERBRACES','parser_hack.py',1773),
  ('TypeParameter -> TypeParameterModifierS IDENT TypeBound','TypeParameter',3,'p_TypeParameter','parser_hack.py',1779),
  ('TypeParameter -> TypeParameterModifierS IDENT','TypeParameter',2,'p_TypeParameter','parser_hack.py',1780),
  ('TypeParameterModifierS -> TypeParameterModifierS TypeParameterModifier','TypeParameterModifierS',2,'p_TypeParameterModifierS','parser_hack.py',1784),
  ('TypeParameterModifierS -> empty','TypeParameterModifierS',1,'p_TypeParameterModifierS','parser_hack.py',1785),
  ('TypeParameterModifier -> Annotation','TypeParameterModifier',1,'p_TypeParameterModifier','parser_hack.py',1797),
  ('TypeBound -> EXTENDS TypeVariable','TypeBound',2,'p_TypeBound','parser_hack.py',1803),
  ('TypeBound -> EXTENDS IDENT','TypeBound',2,'p_TypeBound','parser_hack.py',1804),
  ('TypeBound -> EXTENDS ClassType AdditionalBoundS','TypeBound',3,'p_TypeBound','parser_hack.py',1805),
  ('TypeBound -> EXTENDS ClassType','TypeBound',2,'p_TypeBound','parser_hack.py',1806),
  ('TypeBound -> EXTENDS TypeVariable AdditionalBoundS','TypeBound',3,'p_TypeBound','parser_hack.py',1807),
  ('TypeBound -> EXTENDS IDENT PERIOD IDENT AdditionalBoundS','TypeBound',5,'p_TypeBound','parser_hack.py',1808),
  ('TypeBound -> EXTENDS IDENT PERIOD IDENT','TypeBound',4,'p_TypeBound','parser_hack.py',1809),
  ('TypeBound -> EXTENDS IDENT AdditionalBoundS','TypeBound',3,'p_TypeBound','parser_hack.py',1810),
  ('AdditionalBound -> AND ClassType','AdditionalBound',2,'p_AdditionalBound','parser_hack.py',1821),
  ('AdditionalBound -> AND TypeVariable','AdditionalBound',2,'p_AdditionalBound','parser_hack.py',1822),
  ('AdditionalBound -> AND IDENT PERIOD IDENT','AdditionalBound',4,'p_AdditionalBound','parser_hack.py',1823),
  ('AdditionalBound -> AND IDENT','AdditionalBound',2,'p_AdditionalBound','parser_hack.py',1824),
  ('TypeArguments -> LSS TypeArgumentList GTR','TypeArguments',3,'p_TypeArguments','parser_hack.py',1830),
  ('TypeArgumentList -> TypeArgument COMMATypeArgumentS','TypeArgumentList',2,'p_TypeArgumentList','parser_hack.py',1836),
  ('TypeArgumentList -> IDENT COMMATypeArgumentS','TypeArgumentList',2,'p_TypeArgumentList','parser_hack.py',1837),
  ('COMMATypeArgumentS -> COMMATypeArgumentS COMMA TypeArgument','COMMATypeArgumentS',3,'p_COMMATypeArgumentS','parser_hack.py',1841),
  ('COMMATypeArgumentS -> COMMATypeArgumentS COMMA IDENT','COMMATypeArgumentS',3,'p_COMMATypeArgumentS','parser_hack.py',1842),
  ('COMMATypeArgumentS -> empty','COMMATypeArgumentS',1,'p_COMMATypeArgumentS','parser_hack.py',1843),
  ('TypeArgument -> ReferenceType','TypeArgument',1,'p_TypeArgument','parser_hack.py',1849),
  ('TypeArgument -> Wildcard','TypeArgument',1,'p_TypeArgument','parser_hack.py',1850),
  ('Wildcard -> AnnotationS QUES WildcardBounds','Wildcard',3,'p_Wildcard','parser_hack.py',1856),
  ('Wildcard -> AnnotationS QUES','Wildcard',2,'p_Wildcard','parser_hack.py',1857),
  ('Wildcard -> QUES WildcardBounds','Wildcard',2,'p_Wildcard','parser_hack.py',1858),
  ('Wildcard -> QUES','Wildcard',1,'p_Wildcard','parser_hack.py',1859),
  ('WildcardBounds -> EXTENDS ReferenceType','WildcardBounds',2,'p_WildcardBounds','parser_hack.py',1870),
  ('WildcardBounds -> EXTENDS IDENT','WildcardBounds',2,'p_WildcardBounds','parser_hack.py',1871),
  ('WildcardBounds -> SUPER ReferenceType','WildcardBounds',2,'p_WildcardBounds','parser_hack.py',1872),
  ('WildcardBounds -> SUPER IDENT','WildcardBounds',2,'p_WildcardBounds','parser_hack.py',1873),
  ('Block -> lbrace rbrace','Block',2,'p_Block','parser_hack.py',1885),
  ('Block -> lbrace BlockStatements rbrace','Block',3,'p_Block','parser_hack.py',1886),
  ('Block -> lbrace SEMICOLON rbrace','Block',3,'p_Block','parser_hack.py',1887),
  ('BlockStatements -> BlockStatement BlockStatements','BlockStatements',2,'p_BlockStatements','parser_hack.py',1897),
  ('BlockStatements -> SEMICOLON BlockStatements','BlockStatements',2,'p_BlockStatements','parser_hack.py',1898),
  ('BlockStatements -> BlockStatement SEMICOLON','BlockStatements',2,'p_BlockStatements','parser_hack.py',1899),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','parser_hack.py',1900),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','parser_hack.py',1912),
  ('BlockStatement -> ClassDeclaration','BlockStatement',1,'p_BlockStatement','parser_hack.py',1913),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','parser_hack.py',1914),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','parser_hack.py',1919),
  ('LocalVariableDeclaration -> CommonModifierS UnannType VariableDeclaratorList','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1924),
  ('LocalVariableDeclaration -> CommonModifierS NumericType VariableDeclaratorList','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1925),
  ('LocalVariableDeclaration -> CommonModifierS BOOLEAN VariableDeclaratorList','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1926),
  ('LocalVariableDeclaration -> CommonModifierS IDENT VariableDeclaratorList','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1927),
  ('LocalVariableDeclaration -> UnannType VariableDeclaratorList','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1928),
  ('LocalVariableDeclaration -> NumericType VariableDeclaratorList','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1929),
  ('LocalVariableDeclaration -> BOOLEAN VariableDeclaratorList','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1930),
  ('LocalVariableDeclaration -> IDENT VariableDeclaratorList','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1931),
  ('LocalVariableDeclaration -> CommonModifierS UnannType IDENT','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1932),
  ('LocalVariableDeclaration -> CommonModifierS NumericType IDENT','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1933),
  ('LocalVariableDeclaration -> CommonModifierS BOOLEAN IDENT','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1934),
  ('LocalVariableDeclaration -> CommonModifierS IDENT IDENT','LocalVariableDeclaration',3,'p_LocalVariableDeclaration','parser_hack.py',1935),
  ('LocalVariableDeclaration -> UnannType IDENT','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1936),
  ('LocalVariableDeclaration -> NumericType IDENT','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1937),
  ('LocalVariableDeclaration -> BOOLEAN IDENT','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1938),
  ('LocalVariableDeclaration -> IDENT IDENT','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser_hack.py',1939),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','parser_hack.py',1948),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','parser_hack.py',1953),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser_hack.py',1954),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser_hack.py',1955),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser_hack.py',1956),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser_hack.py',1957),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1962),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1963),
  ('StatementWithoutTrailingSubstatement -> AssertStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1964),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1965),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1966),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1967),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1968),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1969),
  ('StatementWithoutTrailingSubstatement -> SynchronizedStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1970),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1971),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser_hack.py',1972),
  ('LabeledStatement -> IDENT COLON Statement','LabeledStatement',3,'p_LabeledStatement','parser_hack.py',1982),
  ('LabeledStatement -> IDENT COLON SEMICOLON','LabeledStatement',3,'p_LabeledStatement','parser_hack.py',1983),
  ('LabeledStatementNoShortIf -> IDENT COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','parser_hack.py',1988),
  ('LabeledStatementNoShortIf -> IDENT COLON SEMICOLON','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','parser_hack.py',1989),
  ('ExpressionStatement -> StatementExpression SEMICOLON','ExpressionStatement',2,'p_ExpressionStatement','parser_hack.py',1994),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','parser_hack.py',1999),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','parser_hack.py',2000),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','parser_hack.py',2001),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','parser_hack.py',2002),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','parser_hack.py',2003),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','parser_hack.py',2004),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','parser_hack.py',2005),
  ('IfThenStatement -> IF LPAREN Expression RPAREN Statement','IfThenStatement',5,'p_IfThenStatement','parser_hack.py',2010),
  ('IfThenStatement -> IF LPAREN Expression RPAREN SEMICOLON','IfThenStatement',5,'p_IfThenStatement','parser_hack.py',2011),
  ('IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE Statement','IfThenElseStatement',7,'p_IfThenElseStatement','parser_hack.py',2016),
  ('IfThenElseStatement -> IF LPAREN Expression RPAREN SEMICOLON ELSE Statement','IfThenElseStatement',7,'p_IfThenElseStatement','parser_hack.py',2017),
  ('IfThenElseStatement -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE SEMICOLON','IfThenElseStatement',7,'p_IfThenElseStatement','parser_hack.py',2018),
  ('IfThenElseStatement -> IF LPAREN Expression RPAREN SEMICOLON ELSE SEMICOLON','IfThenElseStatement',7,'p_IfThenElseStatement','parser_hack.py',2019),
  ('IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE StatementNoShortIf','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser_hack.py',2024),
  ('IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN SEMICOLON ELSE StatementNoShortIf','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser_hack.py',2025),
  ('IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN StatementNoShortIf ELSE SEMICOLON','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser_hack.py',2026),
  ('IfThenElseStatementNoShortIf -> IF LPAREN Expression RPAREN SEMICOLON ELSE SEMICOLON','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser_hack.py',2027),
  ('AssertStatement -> ASSERT Expression SEMICOLON','AssertStatement',3,'p_AssertStatement','parser_hack.py',2032),
  ('AssertStatement -> ASSERT Expression COLON Expression SEMICOLON','AssertStatement',5,'p_AssertStatement','parser_hack.py',2033),
  ('SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock','SwitchStatement',5,'p_SwitchStatement','parser_hack.py',2038),
  ('SwitchBlock -> lbrace SwitchBlockStatementGroupS SwitchLabelS rbrace','SwitchBlock',4,'p_SwitchBlock','parser_hack.py',2043),
  ('SwitchBlockStatementGroupS -> SwitchBlockStatementGroupS SwitchBlockStatementGroup','SwitchBlockStatementGroupS',2,'p_SwitchBlockStatementGroupS','parser_hack.py',2047),
  ('SwitchBlockStatementGroupS -> empty','SwitchBlockStatementGroupS',1,'p_SwitchBlockStatementGroupS','parser_hack.py',2048),
  ('SwitchBlockStatementGroup -> SwitchLabels BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser_hack.py',2057),
  ('SwitchBlockStatementGroup -> SwitchLabels SEMICOLON','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser_hack.py',2058),
  ('SwitchLabels -> SwitchLabel SwitchLabelS','SwitchLabels',2,'p_SwitchLabels','parser_hack.py',2063),
  ('SwitchLabelS -> SwitchLabelS SwitchLabel','SwitchLabelS',2,'p_SwitchLabelS','parser_hack.py',2067),
  ('SwitchLabelS -> empty','SwitchLabelS',1,'p_SwitchLabelS','parser_hack.py',2068),
  ('SwitchLabel -> CASE ConstantExpression COLON','SwitchLabel',3,'p_SwitchLabel','parser_hack.py',2072),
  ('SwitchLabel -> CASE IDENT COLON','SwitchLabel',3,'p_SwitchLabel','parser_hack.py',2073),
  ('SwitchLabel -> DEFAULT COLON','SwitchLabel',2,'p_SwitchLabel','parser_hack.py',2074),
  ('WhileStatement -> WHILE LPAREN Expression RPAREN Statement','WhileStatement',5,'p_WhileStatement','parser_hack.py',2083),
  ('WhileStatement -> WHILE LPAREN Expression RPAREN SEMICOLON','WhileStatement',5,'p_WhileStatement','parser_hack.py',2084),
  ('WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN StatementNoShortIf','WhileStatementNoShortIf',5,'p_WhileStatementNoShortIf','parser_hack.py',2089),
  ('WhileStatementNoShortIf -> WHILE LPAREN Expression RPAREN SEMICOLON','WhileStatementNoShortIf',5,'p_WhileStatementNoShortIf','parser_hack.py',2090),
  ('DoStatement -> DO Statement WHILE LPAREN Expression RPAREN SEMICOLON','DoStatement',7,'p_DoStatement','parser_hack.py',2095),
  ('DoStatement -> DO SEMICOLON WHILE LPAREN Expression RPAREN SEMICOLON','DoStatement',7,'p_DoStatement','parser_hack.py',2096),
  ('ForStatement -> BasicForStatement','ForStatement',1,'p_ForStatement','parser_hack.py',2101),
  ('ForStatement -> EnhancedForStatement','ForStatement',1,'p_ForStatement','parser_hack.py',2102),
  ('ForStatementNoShortIf -> BasicForStatementNoShortIf','ForStatementNoShortIf',1,'p_ForStatementNoShortIf','parser_hack.py',2107),
  ('ForStatementNoShortIf -> EnhancedForStatementNoShortIf','ForStatementNoShortIf',1,'p_ForStatementNoShortIf','parser_hack.py',2108),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN Statement','BasicForStatement',9,'p_BasicForStatement','parser_hack.py',2113),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN Statement','BasicForStatement',8,'p_BasicForStatement','parser_hack.py',2114),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN Statement','BasicForStatement',8,'p_BasicForStatement','parser_hack.py',2115),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON SEMICOLON RPAREN Statement','BasicForStatement',7,'p_BasicForStatement','parser_hack.py',2116),
  ('BasicForStatement -> FOR LPAREN SEMICOLON Expression SEMICOLON ForUpdate RPAREN Statement','BasicForStatement',8,'p_BasicForStatement','parser_hack.py',2117),
  ('BasicForStatement -> FOR LPAREN SEMICOLON Expression SEMICOLON RPAREN Statement','BasicForStatement',7,'p_BasicForStatement','parser_hack.py',2118),
  ('BasicForStatement -> FOR LPAREN SEMICOLON SEMICOLON ForUpdate RPAREN Statement','BasicForStatement',7,'p_BasicForStatement','parser_hack.py',2119),
  ('BasicForStatement -> FOR LPAREN SEMICOLON SEMICOLON RPAREN Statement','BasicForStatement',6,'p_BasicForStatement','parser_hack.py',2120),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatement',9,'p_BasicForStatement','parser_hack.py',2121),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN SEMICOLON','BasicForStatement',8,'p_BasicForStatement','parser_hack.py',2122),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatement',8,'p_BasicForStatement','parser_hack.py',2123),
  ('BasicForStatement -> FOR LPAREN ForInit SEMICOLON SEMICOLON RPAREN SEMICOLON','BasicForStatement',7,'p_BasicForStatement','parser_hack.py',2124),
  ('BasicForStatement -> FOR LPAREN SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatement',8,'p_BasicForStatement','parser_hack.py',2125),
  ('BasicForStatement -> FOR LPAREN SEMICOLON Expression SEMICOLON RPAREN SEMICOLON','BasicForStatement',7,'p_BasicForStatement','parser_hack.py',2126),
  ('BasicForStatement -> FOR LPAREN SEMICOLON SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatement',7,'p_BasicForStatement','parser_hack.py',2127),
  ('BasicForStatement -> FOR LPAREN SEMICOLON SEMICOLON RPAREN SEMICOLON','BasicForStatement',6,'p_BasicForStatement','parser_hack.py',2128),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN StatementNoShortIf','BasicForStatementNoShortIf',9,'p_BasicForStatementNoShortIf','parser_hack.py',2148),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN StatementNoShortIf','BasicForStatementNoShortIf',8,'p_BasicForStatementNoShortIf','parser_hack.py',2149),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN StatementNoShortIf','BasicForStatementNoShortIf',8,'p_BasicForStatementNoShortIf','parser_hack.py',2150),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON SEMICOLON RPAREN StatementNoShortIf','BasicForStatementNoShortIf',7,'p_BasicForStatementNoShortIf','parser_hack.py',2151),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON Expression SEMICOLON ForUpdate RPAREN StatementNoShortIf','BasicForStatementNoShortIf',8,'p_BasicForStatementNoShortIf','parser_hack.py',2152),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON Expression SEMICOLON RPAREN StatementNoShortIf','BasicForStatementNoShortIf',7,'p_BasicForStatementNoShortIf','parser_hack.py',2153),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON SEMICOLON ForUpdate RPAREN StatementNoShortIf','BasicForStatementNoShortIf',7,'p_BasicForStatementNoShortIf','parser_hack.py',2154),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON SEMICOLON RPAREN StatementNoShortIf','BasicForStatementNoShortIf',6,'p_BasicForStatementNoShortIf','parser_hack.py',2155),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatementNoShortIf',9,'p_BasicForStatementNoShortIf','parser_hack.py',2156),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON Expression SEMICOLON RPAREN SEMICOLON','BasicForStatementNoShortIf',8,'p_BasicForStatementNoShortIf','parser_hack.py',2157),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatementNoShortIf',8,'p_BasicForStatementNoShortIf','parser_hack.py',2158),
  ('BasicForStatementNoShortIf -> FOR LPAREN ForInit SEMICOLON SEMICOLON RPAREN SEMICOLON','BasicForStatementNoShortIf',7,'p_BasicForStatementNoShortIf','parser_hack.py',2159),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON Expression SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatementNoShortIf',8,'p_BasicForStatementNoShortIf','parser_hack.py',2160),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON Expression SEMICOLON RPAREN SEMICOLON','BasicForStatementNoShortIf',7,'p_BasicForStatementNoShortIf','parser_hack.py',2161),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON SEMICOLON ForUpdate RPAREN SEMICOLON','BasicForStatementNoShortIf',7,'p_BasicForStatementNoShortIf','parser_hack.py',2162),
  ('BasicForStatementNoShortIf -> FOR LPAREN SEMICOLON SEMICOLON RPAREN SEMICOLON','BasicForStatementNoShortIf',6,'p_BasicForStatementNoShortIf','parser_hack.py',2163),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','parser_hack.py',2169),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','parser_hack.py',2170),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','parser_hack.py',2175),
  ('StatementExpressionList -> StatementExpression COMMAStatementExpressionS','StatementExpressionList',2,'p_StatementExpressionList','parser_hack.py',2180),
  ('COMMAStatementExpressionS -> COMMAStatementExpressionS COMMA StatementExpression','COMMAStatementExpressionS',3,'p_COMMAStatementExpressionS','parser_hack.py',2186),
  ('COMMAStatementExpressionS -> empty','COMMAStatementExpressionS',1,'p_COMMAStatementExpressionS','parser_hack.py',2187),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS UnannType VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2193),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS NumericType VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2194),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2195),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS IDENT VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2196),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS UnannType IDENT COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2197),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS NumericType IDENT COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2198),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS BOOLEAN IDENT COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2199),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS IDENT IDENT COLON Expression RPAREN Statement','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2200),
  ('EnhancedForStatement -> FOR LPAREN UnannType VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2201),
  ('EnhancedForStatement -> FOR LPAREN NumericType VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2202),
  ('EnhancedForStatement -> FOR LPAREN BOOLEAN VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2203),
  ('EnhancedForStatement -> FOR LPAREN IDENT VariableDeclaratorId COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2204),
  ('EnhancedForStatement -> FOR LPAREN UnannType IDENT COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2205),
  ('EnhancedForStatement -> FOR LPAREN NumericType IDENT COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2206),
  ('EnhancedForStatement -> FOR LPAREN BOOLEAN IDENT COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2207),
  ('EnhancedForStatement -> FOR LPAREN IDENT IDENT COLON Expression RPAREN Statement','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2208),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS UnannType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2209),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS NumericType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2210),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2211),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS IDENT VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2212),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS UnannType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2213),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS NumericType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2214),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS BOOLEAN IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2215),
  ('EnhancedForStatement -> FOR LPAREN CommonModifierS IDENT IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',9,'p_EnhancedForStatement','parser_hack.py',2216),
  ('EnhancedForStatement -> FOR LPAREN UnannType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2217),
  ('EnhancedForStatement -> FOR LPAREN NumericType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2218),
  ('EnhancedForStatement -> FOR LPAREN BOOLEAN VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2219),
  ('EnhancedForStatement -> FOR LPAREN IDENT VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2220),
  ('EnhancedForStatement -> FOR LPAREN UnannType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2221),
  ('EnhancedForStatement -> FOR LPAREN NumericType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2222),
  ('EnhancedForStatement -> FOR LPAREN BOOLEAN IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2223),
  ('EnhancedForStatement -> FOR LPAREN IDENT IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatement',8,'p_EnhancedForStatement','parser_hack.py',2224),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2229),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS NumericType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2230),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2231),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2232),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS UnannType IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2233),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS NumericType IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2234),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS BOOLEAN IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2235),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS IDENT IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2236),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN UnannType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2237),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN NumericType VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2238),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN BOOLEAN VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2239),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN IDENT VariableDeclaratorId COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2240),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN UnannType IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2241),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN NumericType IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2242),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN BOOLEAN IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2243),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN IDENT IDENT COLON Expression RPAREN StatementNoShortIf','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2244),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS UnannType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2245),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS NumericType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2246),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS BOOLEAN VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2247),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS IDENT VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2248),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS UnannType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2249),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS NumericType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2250),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS BOOLEAN IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2251),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN CommonModifierS IDENT IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',9,'p_EnhancedForStatementNoShortIf','parser_hack.py',2252),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN UnannType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2253),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN NumericType VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2254),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN BOOLEAN VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2255),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN IDENT VariableDeclaratorId COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2256),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN UnannType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2257),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN NumericType IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2258),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN BOOLEAN IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2259),
  ('EnhancedForStatementNoShortIf -> FOR LPAREN IDENT IDENT COLON Expression RPAREN SEMICOLON','EnhancedForStatementNoShortIf',8,'p_EnhancedForStatementNoShortIf','parser_hack.py',2260),
  ('BreakStatement -> BREAK SEMICOLON','BreakStatement',2,'p_BreakStatement','parser_hack.py',2265),
  ('BreakStatement -> BREAK IDENT SEMICOLON','BreakStatement',3,'p_BreakStatement','parser_hack.py',2266),
  ('ContinueStatement -> CONTINUE IDENT SEMICOLON','ContinueStatement',3,'p_ContinueStatement','parser_hack.py',2275),
  ('ContinueStatement -> CONTINUE SEMICOLON','ContinueStatement',2,'p_ContinueStatement','parser_hack.py',2276),
  ('ReturnStatement -> RETURN Expression SEMICOLON','ReturnStatement',3,'p_ReturnStatement','parser_hack.py',2281),
  ('ReturnStatement -> RETURN SEMICOLON','ReturnStatement',2,'p_ReturnStatement','parser_hack.py',2282),
  ('ThrowStatement -> THROW Expression SEMICOLON','ThrowStatement',3,'p_ThrowStatement','parser_hack.py',2291),
  ('SynchronizedStatement -> SYNCHRONIZED LPAREN Expression RPAREN Block','SynchronizedStatement',5,'p_SynchronizedStatement','parser_hack.py',2296),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','parser_hack.py',2301),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','parser_hack.py',2302),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','parser_hack.py',2303),
  ('TryStatement -> TryWithResourcesStatement','TryStatement',1,'p_TryStatement','parser_hack.py',2304),
  ('Catches -> CatchClause CatchClauseS','Catches',2,'p_Catches','parser_hack.py',2313),
  ('CatchClauseS -> CatchClauseS CatchClause','CatchClauseS',2,'p_CatchClauseS','parser_hack.py',2317),
  ('CatchClauseS -> empty','CatchClauseS',1,'p_CatchClauseS','parser_hack.py',2318),
  ('CatchClause -> CATCH LPAREN CatchFormalParameter RPAREN Block','CatchClause',5,'p_CatchClause','parser_hack.py',2322),
  ('CatchFormalParameter -> CommonModifierS CatchType VariableDeclaratorId','CatchFormalParameter',3,'p_CatchFormalParameter','parser_hack.py',2327),
  ('CatchFormalParameter -> CommonModifierS CatchType IDENT','CatchFormalParameter',3,'p_CatchFormalParameter','parser_hack.py',2328),
  ('CatchFormalParameter -> CatchType VariableDeclaratorId','CatchFormalParameter',2,'p_CatchFormalParameter','parser_hack.py',2329),
  ('CatchFormalParameter -> CatchType IDENT','CatchFormalParameter',2,'p_CatchFormalParameter','parser_hack.py',2330),
  ('CatchType -> UnannClassType ORClassTypeS','CatchType',2,'p_CatchType','parser_hack.py',2335),
  ('CatchType -> IDENT PERIOD IDENT ORClassTypeS','CatchType',4,'p_CatchType','parser_hack.py',2336),
  ('CatchType -> IDENT ORClassTypeS','CatchType',2,'p_CatchType','parser_hack.py',2337),
  ('ORClassTypeS -> ORClassTypeS OR ClassType','ORClassTypeS',3,'p_ORClassTypeS','parser_hack.py',2342),
  ('ORClassTypeS -> ORClassTypeS OR TypeVariable','ORClassTypeS',3,'p_ORClassTypeS','parser_hack.py',2343),
  ('ORClassTypeS -> ORClassTypeS OR IDENT PERIOD IDENT','ORClassTypeS',5,'p_ORClassTypeS','parser_hack.py',2344),
  ('ORClassTypeS -> ORClassTypeS OR IDENT','ORClassTypeS',3,'p_ORClassTypeS','parser_hack.py',2345),
  ('ORClassTypeS -> empty','ORClassTypeS',1,'p_ORClassTypeS','parser_hack.py',2346),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','parser_hack.py',2351),
  ('TryWithResourcesStatement -> TRY ResourceSpecification Block Catches Finally','TryWithResourcesStatement',5,'p_TryWithResourcesStatement','parser_hack.py',2356),
  ('TryWithResourcesStatement -> TRY ResourceSpecification Block Finally','TryWithResourcesStatement',4,'p_TryWithResourcesStatement','parser_hack.py',2357),
  ('TryWithResourcesStatement -> TRY ResourceSpecification Block Catches','TryWithResourcesStatement',4,'p_TryWithResourcesStatement','parser_hack.py',2358),
  ('TryWithResourcesStatement -> TRY ResourceSpecification Block','TryWithResourcesStatement',3,'p_TryWithResourcesStatement','parser_hack.py',2359),
  ('ResourceSpecification -> LPAREN ResourceList SEMICOLON RPAREN','ResourceSpecification',4,'p_ResourceSpecification','parser_hack.py',2374),
  ('ResourceSpecification -> LPAREN ResourceList RPAREN','ResourceSpecification',3,'p_ResourceSpecification','parser_hack.py',2375),
  ('ResourceList -> Resource SEMICOLONResourceS','ResourceList',2,'p_ResourceList','parser_hack.py',2380),
  ('ResourceList -> Resource','ResourceList',1,'p_ResourceList','parser_hack.py',2381),
  ('SEMICOLONResourceS -> SEMICOLONResourceS SEMICOLON Resource','SEMICOLONResourceS',3,'p_SEMICOLONResourceS','parser_hack.py',2387),
  ('SEMICOLONResourceS -> SEMICOLON Resource','SEMICOLONResourceS',2,'p_SEMICOLONResourceS','parser_hack.py',2388),
  ('CommonModifierS -> CommonModifierS CommonModifier','CommonModifierS',2,'p_CommonModifierS','parser_hack.py',2395),
  ('CommonModifierS -> CommonModifier','CommonModifierS',1,'p_CommonModifierS','parser_hack.py',2396),
  ('CommonModifier -> Annotation','CommonModifier',1,'p_CommonModifier','parser_hack.py',2402),
  ('CommonModifier -> PUBLIC','CommonModifier',1,'p_CommonModifier','parser_hack.py',2403),
  ('CommonModifier -> PROTECTED','CommonModifier',1,'p_CommonModifier','parser_hack.py',2404),
  ('CommonModifier -> PRIVATE','CommonModifier',1,'p_CommonModifier','parser_hack.py',2405),
  ('CommonModifier -> STATIC','CommonModifier',1,'p_CommonModifier','parser_hack.py',2406),
  ('CommonModifier -> FINAL','CommonModifier',1,'p_CommonModifier','parser_hack.py',2407),
  ('CommonModifier -> TRANSIENT','CommonModifier',1,'p_CommonModifier','parser_hack.py',2408),
  ('CommonModifier -> VOLATILE','CommonModifier',1,'p_CommonModifier','parser_hack.py',2409),
  ('CommonModifier -> ABSTRACT','CommonModifier',1,'p_CommonModifier','parser_hack.py',2410),
  ('CommonModifier -> SYNCHRONIZED','CommonModifier',1,'p_CommonModifier','parser_hack.py',2411),
  ('CommonModifier -> NATIVE','CommonModifier',1,'p_CommonModifier','parser_hack.py',2412),
  ('CommonModifier -> STRICTFP','CommonModifier',1,'p_CommonModifier','parser_hack.py',2413),
  ('CommonModifier -> DEFAULT','CommonModifier',1,'p_CommonModifier','parser_hack.py',2414),
  ('Resource -> CommonModifierS UnannType VariableDeclaratorId ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2421),
  ('Resource -> CommonModifierS NumericType VariableDeclaratorId ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2422),
  ('Resource -> CommonModifierS BOOLEAN VariableDeclaratorId ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2423),
  ('Resource -> CommonModifierS IDENT VariableDeclaratorId ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2424),
  ('Resource -> CommonModifierS UnannType IDENT ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2425),
  ('Resource -> CommonModifierS NumericType IDENT ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2426),
  ('Resource -> CommonModifierS BOOLEAN IDENT ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2427),
  ('Resource -> CommonModifierS IDENT IDENT ASSIGN Expression','Resource',5,'p_Resource','parser_hack.py',2428),
  ('Resource -> UnannType VariableDeclaratorId ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2429),
  ('Resource -> NumericType VariableDeclaratorId ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2430),
  ('Resource -> BOOLEAN VariableDeclaratorId ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2431),
  ('Resource -> IDENT VariableDeclaratorId ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2432),
  ('Resource -> UnannType IDENT ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2433),
  ('Resource -> NumericType IDENT ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2434),
  ('Resource -> BOOLEAN IDENT ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2435),
  ('Resource -> IDENT IDENT ASSIGN Expression','Resource',4,'p_Resource','parser_hack.py',2436),
  ('start -> INC CompilationUnit','start',2,'p_StartCompilationUnit','parser_hack.py',2440),
]
